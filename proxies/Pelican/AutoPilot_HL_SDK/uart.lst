   1              		.file	"uart.c"
   9              	.Ltext0:
  10              		.global	data_requested
  11              		.bss
  14              	data_requested:
  15 0000 00       		.space	1
  16              		.global	chksum_to_check
  19              	chksum_to_check:
  20 0001 00       		.space	1
  21              		.global	chksum_trigger
  22              		.data
  25              	chksum_trigger:
  26 0000 01       		.byte	1
  27              		.global	transmission_running
  28              		.bss
  31              	transmission_running:
  32 0002 00       		.space	1
  33              		.global	transmission1_running
  36              	transmission1_running:
  37 0003 00       		.space	1
  38              		.global	trigger_transmission
  41              	trigger_transmission:
  42 0004 00       		.space	1
  43              		.global	baudrate1_change
  46              	baudrate1_change:
  47 0005 00       		.space	1
  48              		.global	UART_syncstate
  51              	UART_syncstate:
  52 0006 00       		.space	1
  53              		.global	UART1_syncstate
  56              	UART1_syncstate:
  57 0007 00       		.space	1
  58              		.global	UART_rxcount
  59              		.align	2
  62              	UART_rxcount:
  63 0008 00000000 		.space	4
  64              		.global	UART1_rxcount
  65              		.align	2
  68              	UART1_rxcount:
  69 000c 00000000 		.space	4
  70              		.global	UART_CalibDoneFlag
  73              	UART_CalibDoneFlag:
  74 0010 00       		.space	1
  75              	rb_busy:
  76 0011 00       		.space	1
  77              	GPS_ACK_received:
  78 0012 00       		.space	1
  79              		.global	GPS_CFG_PRT
  80              		.section	.rodata
  83              	GPS_CFG_PRT:
  84 0000 06       		.byte	6
  85 0001 00       		.byte	0
  86 0002 14       		.byte	20
  87 0003 00       		.byte	0
  88 0004 01       		.byte	1
  89 0005 00       		.byte	0
  90 0006 00       		.byte	0
  91 0007 00       		.byte	0
  92 0008 D0       		.byte	-48
  93 0009 08       		.byte	8
  94 000a 08       		.byte	8
  95 000b 00       		.byte	0
  96 000c 00       		.byte	0
  97 000d E1       		.byte	-31
  98 000e 00       		.byte	0
  99 000f 00       		.byte	0
 100 0010 07       		.byte	7
 101 0011 00       		.byte	0
 102 0012 01       		.byte	1
 103 0013 00       		.byte	0
 104 0014 00       		.byte	0
 105 0015 00       		.byte	0
 106 0016 00       		.byte	0
 107 0017 00       		.byte	0
 108 0018 E4       		.byte	-28
 109 0019 2D       		.byte	45
 110              		.global	GPS_CFG_ANT
 113              	GPS_CFG_ANT:
 114 001a 06       		.byte	6
 115 001b 13       		.byte	19
 116 001c 04       		.byte	4
 117 001d 00       		.byte	0
 118 001e 0B       		.byte	11
 119 001f 00       		.byte	0
 120 0020 0F       		.byte	15
 121 0021 38       		.byte	56
 122 0022 6F       		.byte	111
 123 0023 4F       		.byte	79
 124              		.global	GPS_CFG_MSG
 127              	GPS_CFG_MSG:
 128 0024 06       		.byte	6
 129 0025 01       		.byte	1
 130 0026 06       		.byte	6
 131 0027 00       		.byte	0
 132 0028 01       		.byte	1
 133 0029 01       		.byte	1
 134 002a 00       		.byte	0
 135 002b 00       		.byte	0
 136 002c 00       		.byte	0
 137 002d 00       		.byte	0
 138 002e 0F       		.byte	15
 139 002f 80       		.byte	-128
 140 0030 06       		.byte	6
 141 0031 01       		.byte	1
 142 0032 06       		.byte	6
 143 0033 00       		.byte	0
 144 0034 01       		.byte	1
 145 0035 02       		.byte	2
 146 0036 00       		.byte	0
 147 0037 01       		.byte	1
 148 0038 00       		.byte	0
 149 0039 00       		.byte	0
 150 003a 11       		.byte	17
 151 003b 88       		.byte	-120
 152 003c 06       		.byte	6
 153 003d 01       		.byte	1
 154 003e 06       		.byte	6
 155 003f 00       		.byte	0
 156 0040 01       		.byte	1
 157 0041 03       		.byte	3
 158 0042 00       		.byte	0
 159 0043 01       		.byte	1
 160 0044 00       		.byte	0
 161 0045 00       		.byte	0
 162 0046 12       		.byte	18
 163 0047 8D       		.byte	-115
 164 0048 06       		.byte	6
 165 0049 01       		.byte	1
 166 004a 06       		.byte	6
 167 004b 00       		.byte	0
 168 004c 01       		.byte	1
 169 004d 04       		.byte	4
 170 004e 00       		.byte	0
 171 004f 00       		.byte	0
 172 0050 00       		.byte	0
 173 0051 00       		.byte	0
 174 0052 12       		.byte	18
 175 0053 8F       		.byte	-113
 176 0054 06       		.byte	6
 177 0055 01       		.byte	1
 178 0056 06       		.byte	6
 179 0057 00       		.byte	0
 180 0058 01       		.byte	1
 181 0059 06       		.byte	6
 182 005a 00       		.byte	0
 183 005b 01       		.byte	1
 184 005c 00       		.byte	0
 185 005d 00       		.byte	0
 186 005e 15       		.byte	21
 187 005f 9C       		.byte	-100
 188 0060 06       		.byte	6
 189 0061 01       		.byte	1
 190 0062 06       		.byte	6
 191 0063 00       		.byte	0
 192 0064 01       		.byte	1
 193 0065 11       		.byte	17
 194 0066 00       		.byte	0
 195 0067 00       		.byte	0
 196 0068 00       		.byte	0
 197 0069 00       		.byte	0
 198 006a 1F       		.byte	31
 199 006b D0       		.byte	-48
 200 006c 06       		.byte	6
 201 006d 01       		.byte	1
 202 006e 06       		.byte	6
 203 006f 00       		.byte	0
 204 0070 01       		.byte	1
 205 0071 12       		.byte	18
 206 0072 00       		.byte	0
 207 0073 01       		.byte	1
 208 0074 00       		.byte	0
 209 0075 00       		.byte	0
 210 0076 21       		.byte	33
 211 0077 D8       		.byte	-40
 212 0078 06       		.byte	6
 213 0079 01       		.byte	1
 214 007a 06       		.byte	6
 215 007b 00       		.byte	0
 216 007c 01       		.byte	1
 217 007d 20       		.byte	32
 218 007e 00       		.byte	0
 219 007f 00       		.byte	0
 220 0080 00       		.byte	0
 221 0081 00       		.byte	0
 222 0082 2E       		.byte	46
 223 0083 1B       		.byte	27
 224 0084 06       		.byte	6
 225 0085 01       		.byte	1
 226 0086 06       		.byte	6
 227 0087 00       		.byte	0
 228 0088 01       		.byte	1
 229 0089 21       		.byte	33
 230 008a 00       		.byte	0
 231 008b 00       		.byte	0
 232 008c 00       		.byte	0
 233 008d 00       		.byte	0
 234 008e 2F       		.byte	47
 235 008f 20       		.byte	32
 236 0090 06       		.byte	6
 237 0091 01       		.byte	1
 238 0092 06       		.byte	6
 239 0093 00       		.byte	0
 240 0094 01       		.byte	1
 241 0095 22       		.byte	34
 242 0096 00       		.byte	0
 243 0097 00       		.byte	0
 244 0098 00       		.byte	0
 245 0099 00       		.byte	0
 246 009a 30       		.byte	48
 247 009b 25       		.byte	37
 248 009c 06       		.byte	6
 249 009d 01       		.byte	1
 250 009e 06       		.byte	6
 251 009f 00       		.byte	0
 252 00a0 01       		.byte	1
 253 00a1 30       		.byte	48
 254 00a2 00       		.byte	0
 255 00a3 00       		.byte	0
 256 00a4 00       		.byte	0
 257 00a5 00       		.byte	0
 258 00a6 3E       		.byte	62
 259 00a7 6B       		.byte	107
 260              		.global	GPS_CFG_NAV2
 263              	GPS_CFG_NAV2:
 264 00a8 06       		.byte	6
 265 00a9 1A       		.byte	26
 266 00aa 28       		.byte	40
 267 00ab 00       		.byte	0
 268 00ac 05       		.byte	5
 269 00ad 00       		.byte	0
 270 00ae 00       		.byte	0
 271 00af 00       		.byte	0
 272 00b0 04       		.byte	4
 273 00b1 03       		.byte	3
 274 00b2 10       		.byte	16
 275 00b3 02       		.byte	2
 276 00b4 50       		.byte	80
 277 00b5 C3       		.byte	-61
 278 00b6 00       		.byte	0
 279 00b7 00       		.byte	0
 280 00b8 0F       		.byte	15
 281 00b9 0A       		.byte	10
 282 00ba 0A       		.byte	10
 283 00bb 3C       		.byte	60
 284 00bc 00       		.byte	0
 285 00bd 01       		.byte	1
 286 00be 00       		.byte	0
 287 00bf 00       		.byte	0
 288 00c0 FA       		.byte	-6
 289 00c1 00       		.byte	0
 290 00c2 FA       		.byte	-6
 291 00c3 00       		.byte	0
 292 00c4 64       		.byte	100
 293 00c5 00       		.byte	0
 294 00c6 2C       		.byte	44
 295 00c7 01       		.byte	1
 296 00c8 00       		.byte	0
 297 00c9 00       		.byte	0
 298 00ca 00       		.byte	0
 299 00cb 00       		.byte	0
 300 00cc 00       		.byte	0
 301 00cd 00       		.byte	0
 302 00ce 00       		.byte	0
 303 00cf 00       		.byte	0
 304 00d0 00       		.byte	0
 305 00d1 00       		.byte	0
 306 00d2 00       		.byte	0
 307 00d3 00       		.byte	0
 308 00d4 5E       		.byte	94
 309 00d5 30       		.byte	48
 310              		.global	GPS_CFG_RATE
 313              	GPS_CFG_RATE:
 314 00d6 06       		.byte	6
 315 00d7 08       		.byte	8
 316 00d8 06       		.byte	6
 317 00d9 00       		.byte	0
 318 00da C8       		.byte	-56
 319 00db 00       		.byte	0
 320 00dc 01       		.byte	1
 321 00dd 00       		.byte	0
 322 00de 00       		.byte	0
 323 00df 00       		.byte	0
 324 00e0 DD       		.byte	-35
 325 00e1 68       		.byte	104
 326              		.global	GPS_CFG_SBAS
 329              	GPS_CFG_SBAS:
 330 00e2 06       		.byte	6
 331 00e3 16       		.byte	22
 332 00e4 08       		.byte	8
 333 00e5 00       		.byte	0
 334 00e6 03       		.byte	3
 335 00e7 07       		.byte	7
 336 00e8 01       		.byte	1
 337 00e9 00       		.byte	0
 338 00ea 00       		.byte	0
 339 00eb 00       		.byte	0
 340 00ec 00       		.byte	0
 341 00ed 00       		.byte	0
 342 00ee 2F       		.byte	47
 343 00ef D9       		.byte	-39
 344              		.global	GPS_CFG_CFG
 347              	GPS_CFG_CFG:
 348 00f0 06       		.byte	6
 349 00f1 09       		.byte	9
 350 00f2 0D       		.byte	13
 351 00f3 00       		.byte	0
 352 00f4 00       		.byte	0
 353 00f5 00       		.byte	0
 354 00f6 00       		.byte	0
 355 00f7 00       		.byte	0
 356 00f8 FF       		.byte	-1
 357 00f9 FF       		.byte	-1
 358 00fa 00       		.byte	0
 359 00fb 00       		.byte	0
 360 00fc 00       		.byte	0
 361 00fd 00       		.byte	0
 362 00fe 00       		.byte	0
 363 00ff 00       		.byte	0
 364 0100 07       		.byte	7
 365 0101 21       		.byte	33
 366 0102 AF       		.byte	-81
 367              		.global	startstring
 368              		.data
 371              	startstring:
 372 0001 3E       		.byte	62
 373 0002 2A       		.byte	42
 374 0003 3E       		.byte	62
 375              		.global	stopstring
 378              	stopstring:
 379 0004 3C       		.byte	60
 380 0005 23       		.byte	35
 381 0006 3C       		.byte	60
 382              		.text
 383              		.align	2
 384              		.global	check_chksum
 386              	check_chksum:
 387              	.LFB2:
 388              		.file 1 "uart.c"
   1:uart.c        **** #include "LPC214x.h"
   2:uart.c        **** #include "system.h"
   3:uart.c        **** #include "main.h"
   4:uart.c        **** #include "uart.h"
   5:uart.c        **** #include "irq.h"
   6:uart.c        **** #include "hardware.h"
   7:uart.c        **** #include "gpsmath.h"
   8:uart.c        **** #include "SSP.h"
   9:uart.c        **** 
  10:uart.c        **** // COMPUTER VISION GROUP application; Charlie De Vivero 30-06-2010
  11:uart.c        **** #include "sdk.h"
  12:uart.c        **** // *** //
  13:uart.c        **** 
  14:uart.c        **** unsigned char packets;
  15:uart.c        **** unsigned char DataOutputsPerSecond;
  16:uart.c        **** unsigned int uart_cnt;
  17:uart.c        **** 
  18:uart.c        **** unsigned char data_requested=0;
  19:uart.c        **** extern int ZeroDepth;
  20:uart.c        **** 
  21:uart.c        **** unsigned short current_chksum;
  22:uart.c        **** unsigned char chksum_to_check=0;
  23:uart.c        **** unsigned char chksum_trigger=1;
  24:uart.c        **** 
  25:uart.c        **** unsigned char transmission_running=0;
  26:uart.c        **** unsigned char transmission1_running=0;
  27:uart.c        **** unsigned char trigger_transmission=0;
  28:uart.c        **** 
  29:uart.c        **** volatile unsigned char baudrate1_change=0;
  30:uart.c        **** 
  31:uart.c        **** unsigned char send_buffer[16];
  32:uart.c        **** unsigned char *tx_buff;
  33:uart.c        **** unsigned char UART_syncstate=0;
  34:uart.c        **** unsigned char UART1_syncstate=0;
  35:uart.c        **** unsigned int UART_rxcount=0;
  36:uart.c        **** unsigned char *UART_rxptr;
  37:uart.c        **** unsigned int UART1_rxcount=0;
  38:uart.c        **** unsigned char *UART1_rxptr;
  39:uart.c        **** 
  40:uart.c        **** unsigned char UART_CalibDoneFlag = 0;
  41:uart.c        **** 
  42:uart.c        **** static volatile unsigned char rb_busy=0;
  43:uart.c        **** 
  44:uart.c        **** static volatile unsigned char GPS_ACK_received=0;
  45:uart.c        **** 
  46:uart.c        **** //configuration commands for GPS
  47:uart.c        **** const unsigned char GPS_CFG_PRT[26] =
  48:uart.c        **** 		{	0x06, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0xd0, 0x08, 0x08, 0x00, 0x00,
  49:uart.c        **** 			0xe1, 0x00, 0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x2d };
  50:uart.c        **** const unsigned char GPS_CFG_ANT[10] =
  51:uart.c        **** 		{	0x06, 0x13, 0x04, 0x00, 0x0b, 0x00, 0x0f, 0x38, 0x6f, 0x4f };
  52:uart.c        **** const unsigned char GPS_CFG_MSG[11][12] =
  53:uart.c        **** 		{	{0x06, 0x01, 0x06, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80},
  54:uart.c        **** 			{0x06, 0x01, 0x06, 0x00, 0x01, 0x02, 0x00, 0x01, 0x00, 0x00, 0x11, 0x88},
  55:uart.c        **** 			{0x06, 0x01, 0x06, 0x00, 0x01, 0x03, 0x00, 0x01, 0x00, 0x00, 0x12, 0x8d},
  56:uart.c        **** 			{0x06, 0x01, 0x06, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x12, 0x8f},
  57:uart.c        **** 			{0x06, 0x01, 0x06, 0x00, 0x01, 0x06, 0x00, 0x01, 0x00, 0x00, 0x15, 0x9c},
  58:uart.c        **** 			{0x06, 0x01, 0x06, 0x00, 0x01, 0x11, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xd0},
  59:uart.c        **** 			{0x06, 0x01, 0x06, 0x00, 0x01, 0x12, 0x00, 0x01, 0x00, 0x00, 0x21, 0xd8},
  60:uart.c        **** 			{0x06, 0x01, 0x06, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x1b},
  61:uart.c        **** 			{0x06, 0x01, 0x06, 0x00, 0x01, 0x21, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x20},
  62:uart.c        **** 			{0x06, 0x01, 0x06, 0x00, 0x01, 0x22, 0x00, 0x00, 0x00, 0x00, 0x30, 0x25},
  63:uart.c        **** 			{0x06, 0x01, 0x06, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x6b} };
  64:uart.c        **** const unsigned char GPS_CFG_NAV2[46] =
  65:uart.c        **** 		{	0x06, 0x1a, 0x28, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x03, 0x10, 0x02,
  66:uart.c        **** 			0x50, 0xc3, 0x00, 0x00, 0x0f, 0x0a, 0x0a, 0x3c, 0x00, 0x01, 0x00, 0x00,
  67:uart.c        **** 			0xfa, 0x00, 0xfa, 0x00, 0x64, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x00, 0x00,
  68:uart.c        **** 			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x30 };
  69:uart.c        **** const unsigned char GPS_CFG_RATE[12] =
  70:uart.c        **** 		{	0x06, 0x08, 0x06, 0x00, 0xc8, 0x00, 0x01, 0x00, 0x00, 0x00, 0xdd, 0x68 };
  71:uart.c        **** const unsigned char GPS_CFG_SBAS[14] =
  72:uart.c        **** 		{	0x06, 0x16, 0x08, 0x00, 0x03, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
  73:uart.c        **** 			0x2f, 0xd9 };
  74:uart.c        **** const unsigned char GPS_CFG_CFG[19] =
  75:uart.c        **** 		{	0x06, 0x09, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
  76:uart.c        **** 			0x00, 0x00, 0x00, 0x00, 0x07, 0x21, 0xaf };
  77:uart.c        **** 
  78:uart.c        **** /*
  79:uart.c        **** 
  80:uart.c        **** //globals for NMEA parser
  81:uart.c        **** 	double latitudeDeg;
  82:uart.c        **** 	double longitudeDeg;
  83:uart.c        **** 	char gprmc_string[5]="GPRMC";
  84:uart.c        **** 	static unsigned char gpsState=GPS_IDLE;
  85:uart.c        **** 	static unsigned char gpsCnt=0;
  86:uart.c        **** 	static unsigned char gpsFieldStart=1;
  87:uart.c        **** 	static unsigned char gpsFieldCnt=0;
  88:uart.c        **** 	static unsigned char gpsInitString[5];
  89:uart.c        **** 	static unsigned char gpsValue[20];
  90:uart.c        **** //<- globals
  91:uart.c        **** */
  92:uart.c        **** unsigned char startstring[]={'>','*','>'};
  93:uart.c        **** unsigned char stopstring[]={'<','#','<'};
  94:uart.c        **** 
  95:uart.c        **** void parse_POSLLH(unsigned char, unsigned char);
  96:uart.c        **** void parse_POSUTM(unsigned char, unsigned char);
  97:uart.c        **** void parse_VELNED(unsigned char, unsigned char);
  98:uart.c        **** void parse_STATUS(unsigned char, unsigned char);
  99:uart.c        **** void parse_NAVSOL(unsigned char, unsigned char);
 100:uart.c        **** 
 101:uart.c        **** void check_chksum(void)
 102:uart.c        **** {
 389              	frame = 0
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391              		mov	ip, sp
 392              	.LCFI0:
 393 0000 0DC0A0E1 		stmfd	sp!, {fp, ip, lr, pc}
 394              	.LCFI1:
 395 0004 00D82DE9 		sub	fp, ip, #4
 396              	.LCFI2:
 397 0008 04B04CE2 		.loc 1 109 0
 398              		ldr	r2, .L3
 103:uart.c        **** //	unsigned short local_chksum;
 104:uart.c        **** 	/*if(chksum_to_check==PD_FLIGHTPARAMS)
 105:uart.c        **** 	{
 106:uart.c        **** 
 107:uart.c        **** 	}
 108:uart.c        **** */
 109:uart.c        **** 	chksum_to_check=0;
 399              	0
 400 000c 1C209FE5 		strb	r3, [r2, #0]
 401 0010 0030A0E3 		.loc 1 110 0
 402 0014 0030C2E5 		ldr	r2, .L3+4
 110:uart.c        **** 	chksum_trigger=0;
 403              		r3, #0
 404 0018 14209FE5 		strb	r3, [r2, #0]
 405 001c 0030A0E3 		.loc 1 111 0
 406 0020 0030C2E5 		sub	sp, fp, #12
 111:uart.c        **** }
 407              	fd	sp, {fp, sp, lr}
 408 0024 0CD04BE2 		bx	lr
 409 0028 00689DE8 	.L4:
 410 002c 1EFF2FE1 		.align	2
 411              	.L3:
 412              		.word	chksum_to_check
 413              		.word	chksum_trigger
 414 0030 00000000 	.LFE2:
 416              		.bss
 417              		.align	2
 418              	sacc.1578:
 419 0013 00       		.space	4
 420              		.align	2
 421 0014 00000000 	heading.1577:
 422              		.space	4
 423              		.align	2
 424 0018 00000000 	VN.1576:
 425              		.space	4
 426              		.align	2
 427 001c 00000000 	VE.1575:
 428              		.space	4
 429              	cnt.1574:
 430 0020 00000000 		.space	1
 431              		.text
 432 0024 00       		.align	2
 433              		.global	parse_VELNED
 435              	parse_VELNED:
 436              	.LFB3:
 437              		.loc 1 114 0
 438              		@ Function supports interworking.
 112:uart.c        **** 
 113:uart.c        **** inline void parse_VELNED(unsigned char c, unsigned char reset)
 114:uart.c        **** {
 439              	= 8
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441              		mov	ip, sp
 442              	.LCFI3:
 443 0038 0DC0A0E1 		stmfd	sp!, {fp, ip, lr, pc}
 444              	.LCFI4:
 445 003c 00D82DE9 		sub	fp, ip, #4
 446              	.LCFI5:
 447 0040 04B04CE2 		sub	sp, sp, #8
 448              	.LCFI6:
 449 0044 08D04DE2 		mov	r3, r0
 450              		mov	r2, r1
 451 0048 0030A0E1 		strb	r3, [fp, #-16]
 452 004c 0120A0E1 		mov	r3, r2
 453 0050 10304BE5 		strb	r3, [fp, #-20]
 454 0054 0230A0E1 		.loc 1 119 0
 455 0058 14304BE5 		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 115:uart.c        **** 	static unsigned char cnt=0;
 116:uart.c        **** 	static int VE, VN, heading;
 117:uart.c        **** 	static unsigned int sacc;
 118:uart.c        **** 
 119:uart.c        **** 	if(reset) cnt=0;
 456              	.L6
 457 005c 14305BE5 		ldr	r3, .L42
 458 0060 000053E3 		mov	r2, #0
 459 0064 0300000A 		strb	r2, [r3, #0]
 460 0068 90339FE5 		b	.L41
 461 006c 0020A0E3 	.L6:
 462 0070 0020C3E5 		.loc 1 122 0
 463 0074 DE0000EA 		ldr	r3, .L42
 464              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 120:uart.c        **** 	else
 121:uart.c        **** 	{
 122:uart.c        **** 		if(cnt==0) VN=c;
 465              	#0
 466 0078 80339FE5 		bne	.L9
 467 007c 0030D3E5 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 468 0080 000053E3 		ldr	r3, .L42+4
 469 0084 0300001A 		str	r2, [r3, #0]
 470 0088 10205BE5 		b	.L11
 471 008c 70339FE5 	.L9:
 472 0090 002083E5 		.loc 1 123 0
 473 0094 D00000EA 		ldr	r3, .L42
 474              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 123:uart.c        **** 		else if(cnt==1) VN+=c<<8;
 475              	1
 476 0098 60339FE5 		bne	.L12
 477 009c 0030D3E5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 478 00a0 010053E3 		mov	r2, r3, asl #8
 479 00a4 0700001A 		ldr	r3, .L42+4
 480 00a8 10305BE5 		ldr	r3, [r3, #0]
 481 00ac 0324A0E1 		add	r2, r2, r3
 482 00b0 4C339FE5 		ldr	r3, .L42+4
 483 00b4 003093E5 		str	r2, [r3, #0]
 484 00b8 032082E0 		b	.L11
 485 00bc 40339FE5 	.L12:
 486 00c0 002083E5 		.loc 1 124 0
 487 00c4 C40000EA 		ldr	r3, .L42
 488              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 124:uart.c        **** 		else if(cnt==2) VN+=c<<16;
 489              	ne	.L14
 490 00c8 30339FE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 491 00cc 0030D3E5 		mov	r2, r3, asl #16
 492 00d0 020053E3 		ldr	r3, .L42+4
 493 00d4 0700001A 		ldr	r3, [r3, #0]
 494 00d8 10305BE5 		add	r2, r2, r3
 495 00dc 0328A0E1 		ldr	r3, .L42+4
 496 00e0 1C339FE5 		str	r2, [r3, #0]
 497 00e4 003093E5 		b	.L11
 498 00e8 032082E0 	.L14:
 499 00ec 10339FE5 		.loc 1 125 0
 500 00f0 002083E5 		ldr	r3, .L42
 501 00f4 B80000EA 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 502              		cmp	r3, #3
 125:uart.c        **** 		else if(cnt==3) VN+=c<<24;
 503              	b	r3, [fp, #-16]	@ zero_extendqisi2
 504 00f8 00339FE5 		mov	r2, r3, asl #24
 505 00fc 0030D3E5 		ldr	r3, .L42+4
 506 0100 030053E3 		ldr	r3, [r3, #0]
 507 0104 0700001A 		add	r2, r2, r3
 508 0108 10305BE5 		ldr	r3, .L42+4
 509 010c 032CA0E1 		str	r2, [r3, #0]
 510 0110 EC329FE5 		b	.L11
 511 0114 003093E5 	.L16:
 512 0118 032082E0 		.loc 1 126 0
 513 011c E0329FE5 		ldr	r3, .L42
 514 0120 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 515 0124 AC0000EA 		cmp	r3, #4
 516              		bne	.L18
 126:uart.c        **** 		else if(cnt==4) VE=c;
 517              	 #-16]	@ zero_extendqisi2
 518 0128 D0329FE5 		ldr	r3, .L42+8
 519 012c 0030D3E5 		str	r2, [r3, #0]
 520 0130 040053E3 		b	.L11
 521 0134 0300001A 	.L18:
 522 0138 10205BE5 		.loc 1 127 0
 523 013c C4329FE5 		ldr	r3, .L42
 524 0140 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 525 0144 A40000EA 		cmp	r3, #5
 526              		bne	.L20
 127:uart.c        **** 		else if(cnt==5) VE+=c<<8;
 527              	[fp, #-16]	@ zero_extendqisi2
 528 0148 B0329FE5 		mov	r2, r3, asl #8
 529 014c 0030D3E5 		ldr	r3, .L42+8
 530 0150 050053E3 		ldr	r3, [r3, #0]
 531 0154 0700001A 		add	r2, r2, r3
 532 0158 10305BE5 		ldr	r3, .L42+8
 533 015c 0324A0E1 		str	r2, [r3, #0]
 534 0160 A0329FE5 		b	.L11
 535 0164 003093E5 	.L20:
 536 0168 032082E0 		.loc 1 128 0
 537 016c 94329FE5 		ldr	r3, .L42
 538 0170 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 539 0174 980000EA 		cmp	r3, #6
 540              		bne	.L22
 128:uart.c        **** 		else if(cnt==6) VE+=c<<16;
 541              	 #-16]	@ zero_extendqisi2
 542 0178 80329FE5 		mov	r2, r3, asl #16
 543 017c 0030D3E5 		ldr	r3, .L42+8
 544 0180 060053E3 		ldr	r3, [r3, #0]
 545 0184 0700001A 		add	r2, r2, r3
 546 0188 10305BE5 		ldr	r3, .L42+8
 547 018c 0328A0E1 		str	r2, [r3, #0]
 548 0190 70329FE5 		b	.L11
 549 0194 003093E5 	.L22:
 550 0198 032082E0 		.loc 1 129 0
 551 019c 64329FE5 		ldr	r3, .L42
 552 01a0 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 553 01a4 8C0000EA 		cmp	r3, #7
 554              		bne	.L24
 129:uart.c        **** 		else if(cnt==7) VE+=c<<24;
 555              	 #-16]	@ zero_extendqisi2
 556 01a8 50329FE5 		mov	r2, r3, asl #24
 557 01ac 0030D3E5 		ldr	r3, .L42+8
 558 01b0 070053E3 		ldr	r3, [r3, #0]
 559 01b4 0700001A 		add	r2, r2, r3
 560 01b8 10305BE5 		ldr	r3, .L42+8
 561 01bc 032CA0E1 		str	r2, [r3, #0]
 562 01c0 40329FE5 		b	.L11
 563 01c4 003093E5 	.L24:
 564 01c8 032082E0 		.loc 1 130 0
 565 01cc 34329FE5 		ldr	r3, .L42
 566 01d0 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 567 01d4 800000EA 		cmp	r3, #20
 568              		bne	.L26
 130:uart.c        **** 		else if(cnt==20) heading=c;
 569              	 #-16]	@ zero_extendqisi2
 570 01d8 20329FE5 		ldr	r3, .L42+12
 571 01dc 0030D3E5 		str	r2, [r3, #0]
 572 01e0 140053E3 		b	.L11
 573 01e4 0300001A 	.L26:
 574 01e8 10205BE5 		.loc 1 131 0
 575 01ec 18329FE5 		ldr	r3, .L42
 576 01f0 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 577 01f4 780000EA 		cmp	r3, #21
 578              		bne	.L28
 131:uart.c        **** 		else if(cnt==21) heading+=c<<8;
 579              	[fp, #-16]	@ zero_extendqisi2
 580 01f8 00329FE5 		mov	r2, r3, asl #8
 581 01fc 0030D3E5 		ldr	r3, .L42+12
 582 0200 150053E3 		ldr	r3, [r3, #0]
 583 0204 0700001A 		add	r2, r2, r3
 584 0208 10305BE5 		ldr	r3, .L42+12
 585 020c 0324A0E1 		str	r2, [r3, #0]
 586 0210 F4319FE5 		b	.L11
 587 0214 003093E5 	.L28:
 588 0218 032082E0 		.loc 1 132 0
 589 021c E8319FE5 		ldr	r3, .L42
 590 0220 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 591 0224 6C0000EA 		cmp	r3, #22
 592              		bne	.L30
 132:uart.c        **** 		else if(cnt==22) heading+=c<<16;
 593              	 #-16]	@ zero_extendqisi2
 594 0228 D0319FE5 		mov	r2, r3, asl #16
 595 022c 0030D3E5 		ldr	r3, .L42+12
 596 0230 160053E3 		ldr	r3, [r3, #0]
 597 0234 0700001A 		add	r2, r2, r3
 598 0238 10305BE5 		ldr	r3, .L42+12
 599 023c 0328A0E1 		str	r2, [r3, #0]
 600 0240 C4319FE5 		b	.L11
 601 0244 003093E5 	.L30:
 602 0248 032082E0 		.loc 1 133 0
 603 024c B8319FE5 		ldr	r3, .L42
 604 0250 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 605 0254 600000EA 		cmp	r3, #23
 606              		bne	.L32
 133:uart.c        **** 		else if(cnt==23) heading+=c<<24;
 607              	 #-16]	@ zero_extendqisi2
 608 0258 A0319FE5 		mov	r2, r3, asl #24
 609 025c 0030D3E5 		ldr	r3, .L42+12
 610 0260 170053E3 		ldr	r3, [r3, #0]
 611 0264 0700001A 		add	r2, r2, r3
 612 0268 10305BE5 		ldr	r3, .L42+12
 613 026c 032CA0E1 		str	r2, [r3, #0]
 614 0270 94319FE5 		b	.L11
 615 0274 003093E5 	.L32:
 616 0278 032082E0 		.loc 1 134 0
 617 027c 88319FE5 		ldr	r3, .L42
 618 0280 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 619 0284 540000EA 		cmp	r3, #24
 620              		bne	.L34
 134:uart.c        **** 		else if(cnt==24) sacc=c;
 621              	 #-16]	@ zero_extendqisi2
 622 0288 70319FE5 		ldr	r3, .L42+16
 623 028c 0030D3E5 		str	r2, [r3, #0]
 624 0290 180053E3 		b	.L11
 625 0294 0300001A 	.L34:
 626 0298 10205BE5 		.loc 1 135 0
 627 029c 6C319FE5 		ldr	r3, .L42
 628 02a0 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 629 02a4 4C0000EA 		cmp	r3, #25
 630              		bne	.L36
 135:uart.c        **** 		else if(cnt==25) sacc+=c<<8;
 631              	[fp, #-16]	@ zero_extendqisi2
 632 02a8 50319FE5 		mov	r3, r3, asl #8
 633 02ac 0030D3E5 		mov	r2, r3
 634 02b0 190053E3 		ldr	r3, .L42+16
 635 02b4 0800001A 		ldr	r3, [r3, #0]
 636 02b8 10305BE5 		add	r2, r2, r3
 637 02bc 0334A0E1 		ldr	r3, .L42+16
 638 02c0 0320A0E1 		str	r2, [r3, #0]
 639 02c4 44319FE5 		b	.L11
 640 02c8 003093E5 	.L36:
 641 02cc 032082E0 		.loc 1 136 0
 642 02d0 38319FE5 		ldr	r3, .L42
 643 02d4 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 644 02d8 3F0000EA 		cmp	r3, #26
 645              		bne	.L38
 136:uart.c        **** 		else if(cnt==26) sacc+=c<<16;
 646              	#-16]	@ zero_extendqisi2
 647 02dc 1C319FE5 		mov	r3, r3, asl #16
 648 02e0 0030D3E5 		mov	r2, r3
 649 02e4 1A0053E3 		ldr	r3, .L42+16
 650 02e8 0800001A 		ldr	r3, [r3, #0]
 651 02ec 10305BE5 		add	r2, r2, r3
 652 02f0 0338A0E1 		ldr	r3, .L42+16
 653 02f4 0320A0E1 		str	r2, [r3, #0]
 654 02f8 10319FE5 		b	.L11
 655 02fc 003093E5 	.L38:
 656 0300 032082E0 		.loc 1 137 0
 657 0304 04319FE5 		ldr	r3, .L42
 658 0308 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 659 030c 320000EA 		cmp	r3, #27
 660              		bne	.L11
 137:uart.c        **** 		else if(cnt==27)
 661              	ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 662 0310 E8309FE5 		mov	r3, r3, asl #24
 663 0314 0030D3E5 		mov	r2, r3
 664 0318 1B0053E3 		ldr	r3, .L42+16
 665 031c 2E00001A 		ldr	r3, [r3, #0]
 138:uart.c        **** 		{
 139:uart.c        **** 			sacc+=c<<24;
 666              	r2, r2, r3
 667 0320 10305BE5 		ldr	r3, .L42+16
 668 0324 033CA0E1 		str	r2, [r3, #0]
 669 0328 0320A0E1 		.loc 1 140 0
 670 032c DC309FE5 		ldr	r3, .L42+8
 671 0330 003093E5 		ldr	r2, [r3, #0]
 672 0334 032082E0 		mov	r3, r2
 673 0338 D0309FE5 		mov	r3, r3, asl #2
 674 033c 002083E5 		add	r3, r3, r2
 140:uart.c        **** 			GPS_Data.speed_x=VE*10;	//convert to mm/s
 675              	r3, asl #1
 676 0340 C0309FE5 		mov	r2, r3
 677 0344 002093E5 		ldr	r3, .L42+20
 678 0348 0230A0E1 		str	r2, [r3, #12]
 679 034c 0331A0E1 		.loc 1 141 0
 680 0350 023083E0 		ldr	r3, .L42+4
 681 0354 8330A0E1 		ldr	r2, [r3, #0]
 682 0358 0320A0E1 		mov	r3, r2
 683 035c B0309FE5 		mov	r3, r3, asl #2
 684 0360 0C2083E5 		add	r3, r3, r2
 141:uart.c        **** 			GPS_Data.speed_y=VN*10; //convert to mm/s
 685              	3, asl #1
 686 0364 98309FE5 		mov	r2, r3
 687 0368 002093E5 		ldr	r3, .L42+20
 688 036c 0230A0E1 		str	r2, [r3, #16]
 689 0370 0331A0E1 		.loc 1 142 0
 690 0374 023083E0 		ldr	r3, .L42+12
 691 0378 8330A0E1 		ldr	r1, [r3, #0]
 692 037c 0320A0E1 		ldr	r3, .L42+24
 693 0380 8C309FE5 		smull	r2, r3, r1, r3
 694 0384 102083E5 		mov	r2, r3, asr #5
 142:uart.c        **** 			GPS_Data.heading=heading/100;	//convert to deg * 1000
 695              	1, asr #31
 696 0388 7C309FE5 		rsb	r2, r3, r2
 697 038c 001093E5 		ldr	r3, .L42+20
 698 0390 80309FE5 		str	r2, [r3, #20]
 699 0394 9123C3E0 		.loc 1 143 0
 700 0398 C322A0E1 		ldr	r3, .L42+16
 701 039c C13FA0E1 		ldr	r2, [r3, #0]
 702 03a0 022063E0 		mov	r3, r2
 703 03a4 68309FE5 		mov	r3, r3, asl #2
 704 03a8 142083E5 		add	r3, r3, r2
 143:uart.c        **** 			GPS_Data.speed_accuracy=sacc*10;	//convert to mm/s
 705              	3, asl #1
 706 03ac 5C309FE5 		mov	r2, r3
 707 03b0 002093E5 		ldr	r3, .L42+20
 708 03b4 0230A0E1 		str	r2, [r3, #32]
 709 03b8 0331A0E1 		.loc 1 144 0
 710 03bc 023083E0 		ldr	r2, .L42+28
 711 03c0 8330A0E1 		mov	r3, #1
 712 03c4 0320A0E1 		str	r3, [r2, #0]
 713 03c8 44309FE5 	.L11:
 714 03cc 202083E5 		.loc 1 146 0
 144:uart.c        **** 			gpsDataOkTrigger=1;
 715              	L42
 716 03d0 44209FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 717 03d4 0130A0E3 		add	r3, r3, #1
 718 03d8 003082E5 		and	r3, r3, #255
 719              		ldr	r2, .L42
 145:uart.c        **** 		}
 146:uart.c        **** 		cnt++;
 720              		r3, [r2, #0]
 721 03dc 1C309FE5 	.L41:
 722 03e0 0030D3E5 		.loc 1 148 0
 723 03e4 013083E2 		sub	sp, fp, #12
 724 03e8 FF3003E2 		ldmfd	sp, {fp, sp, lr}
 725 03ec 0C209FE5 		bx	lr
 726 03f0 0030C2E5 	.L43:
 727              		.align	2
 147:uart.c        **** 	}
 148:uart.c        **** }
 728              	word	cnt.1574
 729 03f4 0CD04BE2 		.word	VN.1576
 730 03f8 00689DE8 		.word	VE.1575
 731 03fc 1EFF2FE1 		.word	heading.1577
 732              		.word	sacc.1578
 733              		.word	GPS_Data
 734              		.word	1374389535
 735 0400 24000000 		.word	gpsDataOkTrigger
 736 0404 1C000000 	.LFE3:
 738 040c 18000000 		.bss
 739 0410 14000000 		.align	2
 740 0414 00000000 	vacc.1719:
 741 0418 1F85EB51 		.space	4
 742 041c 00000000 		.align	2
 743              	hacc.1718:
 744              		.space	4
 745              		.align	2
 746 0025 000000   	height.1717:
 747              		.space	4
 748 0028 00000000 		.align	2
 749              	lon.1716:
 750              		.space	4
 751 002c 00000000 		.align	2
 752              	lat.1715:
 753              		.space	4
 754 0030 00000000 	cnt.1714:
 755              		.space	1
 756              		.text
 757 0034 00000000 		.align	2
 758              		.global	parse_POSLLH
 760 0038 00000000 	parse_POSLLH:
 761              	.LFB4:
 762 003c 00       		.loc 1 150 0
 763              		@ Function supports interworking.
 764              		@ args = 0, pretend = 0, frame = 8
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766              		mov	ip, sp
 767              	.LCFI7:
 768              		stmfd	sp!, {fp, ip, lr, pc}
 149:uart.c        **** inline void parse_POSLLH(unsigned char c, unsigned char reset)
 150:uart.c        **** {
 769              	sp, #8
 770              	.LCFI10:
 771              		mov	r3, r0
 772              		mov	r2, r1
 773 0420 0DC0A0E1 		strb	r3, [fp, #-16]
 774              		mov	r3, r2
 775 0424 00D82DE9 		strb	r3, [fp, #-20]
 776              		.loc 1 155 0
 777 0428 04B04CE2 		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 778              		cmp	r3, #0
 779 042c 08D04DE2 		beq	.L45
 780              		ldr	r3, .L89
 781 0430 0030A0E1 		mov	r2, #0
 782 0434 0120A0E1 		strb	r2, [r3, #0]
 783 0438 10304BE5 		b	.L88
 784 043c 0230A0E1 	.L45:
 785 0440 14304BE5 		.loc 1 158 0
 151:uart.c        **** 	static unsigned char cnt=0;
 152:uart.c        **** 	static int lat, lon, height;
 153:uart.c        **** 	static unsigned int hacc, vacc;
 154:uart.c        **** 
 155:uart.c        **** 	if(reset) cnt=0;
 786              	rb	r3, [r3, #0]	@ zero_extendqisi2
 787 0444 14305BE5 		cmp	r3, #0
 788 0448 000053E3 		bne	.L48
 789 044c 0300000A 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 790 0450 00349FE5 		ldr	r3, .L89+4
 791 0454 0020A0E3 		str	r2, [r3, #0]
 792 0458 0020C3E5 		b	.L50
 793 045c FA0000EA 	.L48:
 794              		.loc 1 159 0
 156:uart.c        **** 	else
 157:uart.c        **** 	{
 158:uart.c        **** 		if(cnt==0) lon=c;
 795              	.L89
 796 0460 F0339FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 797 0464 0030D3E5 		cmp	r3, #1
 798 0468 000053E3 		bne	.L51
 799 046c 0300001A 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 800 0470 10205BE5 		mov	r2, r3, asl #8
 801 0474 E0339FE5 		ldr	r3, .L89+4
 802 0478 002083E5 		ldr	r3, [r3, #0]
 803 047c EC0000EA 		add	r2, r2, r3
 804              		ldr	r3, .L89+4
 159:uart.c        **** 		else if(cnt==1) lon+=c<<8;
 805              	r3, #0]
 806 0480 D0339FE5 		b	.L50
 807 0484 0030D3E5 	.L51:
 808 0488 010053E3 		.loc 1 160 0
 809 048c 0700001A 		ldr	r3, .L89
 810 0490 10305BE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 811 0494 0324A0E1 		cmp	r3, #2
 812 0498 BC339FE5 		bne	.L53
 813 049c 003093E5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 814 04a0 032082E0 		mov	r2, r3, asl #16
 815 04a4 B0339FE5 		ldr	r3, .L89+4
 816 04a8 002083E5 		ldr	r3, [r3, #0]
 817 04ac E00000EA 		add	r2, r2, r3
 818              		ldr	r3, .L89+4
 160:uart.c        **** 		else if(cnt==2) lon+=c<<16;
 819              	#0]
 820 04b0 A0339FE5 		b	.L50
 821 04b4 0030D3E5 	.L53:
 822 04b8 020053E3 		.loc 1 161 0
 823 04bc 0700001A 		ldr	r3, .L89
 824 04c0 10305BE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 825 04c4 0328A0E1 		cmp	r3, #3
 826 04c8 8C339FE5 		bne	.L55
 827 04cc 003093E5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 828 04d0 032082E0 		mov	r2, r3, asl #24
 829 04d4 80339FE5 		ldr	r3, .L89+4
 830 04d8 002083E5 		ldr	r3, [r3, #0]
 831 04dc D40000EA 		add	r2, r2, r3
 832              		ldr	r3, .L89+4
 161:uart.c        **** 		else if(cnt==3) lon+=c<<24;
 833              	#0]
 834 04e0 70339FE5 		b	.L50
 835 04e4 0030D3E5 	.L55:
 836 04e8 030053E3 		.loc 1 162 0
 837 04ec 0700001A 		ldr	r3, .L89
 838 04f0 10305BE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 839 04f4 032CA0E1 		cmp	r3, #4
 840 04f8 5C339FE5 		bne	.L57
 841 04fc 003093E5 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 842 0500 032082E0 		ldr	r3, .L89+8
 843 0504 50339FE5 		str	r2, [r3, #0]
 844 0508 002083E5 		b	.L50
 845 050c C80000EA 	.L57:
 846              		.loc 1 163 0
 162:uart.c        **** 		else if(cnt==4) lat=c;
 847              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 848 0510 40339FE5 		cmp	r3, #5
 849 0514 0030D3E5 		bne	.L59
 850 0518 040053E3 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 851 051c 0300001A 		mov	r2, r3, asl #8
 852 0520 10205BE5 		ldr	r3, .L89+8
 853 0524 34339FE5 		ldr	r3, [r3, #0]
 854 0528 002083E5 		add	r2, r2, r3
 855 052c C00000EA 		ldr	r3, .L89+8
 856              		str	r2, [r3, #0]
 163:uart.c        **** 		else if(cnt==5) lat+=c<<8;
 857              	59:
 858 0530 20339FE5 		.loc 1 164 0
 859 0534 0030D3E5 		ldr	r3, .L89
 860 0538 050053E3 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 861 053c 0700001A 		cmp	r3, #6
 862 0540 10305BE5 		bne	.L61
 863 0544 0324A0E1 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 864 0548 10339FE5 		mov	r2, r3, asl #16
 865 054c 003093E5 		ldr	r3, .L89+8
 866 0550 032082E0 		ldr	r3, [r3, #0]
 867 0554 04339FE5 		add	r2, r2, r3
 868 0558 002083E5 		ldr	r3, .L89+8
 869 055c B40000EA 		str	r2, [r3, #0]
 870              		b	.L50
 164:uart.c        **** 		else if(cnt==6) lat+=c<<16;
 871              	165 0
 872 0560 F0329FE5 		ldr	r3, .L89
 873 0564 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 874 0568 060053E3 		cmp	r3, #7
 875 056c 0700001A 		bne	.L63
 876 0570 10305BE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 877 0574 0328A0E1 		mov	r2, r3, asl #24
 878 0578 E0329FE5 		ldr	r3, .L89+8
 879 057c 003093E5 		ldr	r3, [r3, #0]
 880 0580 032082E0 		add	r2, r2, r3
 881 0584 D4329FE5 		ldr	r3, .L89+8
 882 0588 002083E5 		str	r2, [r3, #0]
 883 058c A80000EA 		b	.L50
 884              	.L63:
 165:uart.c        **** 		else if(cnt==7) lat+=c<<24;
 885              		ldr	r3, .L89
 886 0590 C0329FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 887 0594 0030D3E5 		cmp	r3, #12
 888 0598 070053E3 		bne	.L65
 889 059c 0700001A 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 890 05a0 10305BE5 		ldr	r3, .L89+12
 891 05a4 032CA0E1 		str	r2, [r3, #0]
 892 05a8 B0329FE5 		b	.L50
 893 05ac 003093E5 	.L65:
 894 05b0 032082E0 		.loc 1 167 0
 895 05b4 A4329FE5 		ldr	r3, .L89
 896 05b8 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 897 05bc 9C0000EA 		cmp	r3, #13
 898              		bne	.L67
 166:uart.c        **** 		else if(cnt==12) height=c;
 899              	 #-16]	@ zero_extendqisi2
 900 05c0 90329FE5 		mov	r2, r3, asl #8
 901 05c4 0030D3E5 		ldr	r3, .L89+12
 902 05c8 0C0053E3 		ldr	r3, [r3, #0]
 903 05cc 0300001A 		add	r2, r2, r3
 904 05d0 10205BE5 		ldr	r3, .L89+12
 905 05d4 88329FE5 		str	r2, [r3, #0]
 906 05d8 002083E5 		b	.L50
 907 05dc 940000EA 	.L67:
 908              		.loc 1 168 0
 167:uart.c        **** 		else if(cnt==13) height+=c<<8;
 909              	L89
 910 05e0 70329FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 911 05e4 0030D3E5 		cmp	r3, #14
 912 05e8 0D0053E3 		bne	.L69
 913 05ec 0700001A 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 914 05f0 10305BE5 		mov	r2, r3, asl #16
 915 05f4 0324A0E1 		ldr	r3, .L89+12
 916 05f8 64329FE5 		ldr	r3, [r3, #0]
 917 05fc 003093E5 		add	r2, r2, r3
 918 0600 032082E0 		ldr	r3, .L89+12
 919 0604 58329FE5 		str	r2, [r3, #0]
 920 0608 002083E5 		b	.L50
 921 060c 880000EA 	.L69:
 922              		.loc 1 169 0
 168:uart.c        **** 		else if(cnt==14) height+=c<<16;
 923              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 924 0610 40329FE5 		cmp	r3, #15
 925 0614 0030D3E5 		bne	.L71
 926 0618 0E0053E3 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 927 061c 0700001A 		mov	r2, r3, asl #24
 928 0620 10305BE5 		ldr	r3, .L89+12
 929 0624 0328A0E1 		ldr	r3, [r3, #0]
 930 0628 34329FE5 		add	r2, r2, r3
 931 062c 003093E5 		ldr	r3, .L89+12
 932 0630 032082E0 		str	r2, [r3, #0]
 933 0634 28329FE5 		b	.L50
 934 0638 002083E5 	.L71:
 935 063c 7C0000EA 		.loc 1 170 0
 936              		ldr	r3, .L89
 169:uart.c        **** 		else if(cnt==15) height+=c<<24;
 937              	 #0]	@ zero_extendqisi2
 938 0640 10329FE5 		cmp	r3, #16
 939 0644 0030D3E5 		bne	.L73
 940 0648 0F0053E3 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 941 064c 0700001A 		ldr	r3, .L89+16
 942 0650 10305BE5 		str	r2, [r3, #0]
 943 0654 032CA0E1 		b	.L50
 944 0658 04329FE5 	.L73:
 945 065c 003093E5 		.loc 1 171 0
 946 0660 032082E0 		ldr	r3, .L89
 947 0664 F8319FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 948 0668 002083E5 		cmp	r3, #17
 949 066c 700000EA 		bne	.L75
 950              		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 170:uart.c        **** 		else if(cnt==16) hacc=c;
 951              	sl #8
 952 0670 E0319FE5 		mov	r2, r3
 953 0674 0030D3E5 		ldr	r3, .L89+16
 954 0678 100053E3 		ldr	r3, [r3, #0]
 955 067c 0300001A 		add	r2, r2, r3
 956 0680 10205BE5 		ldr	r3, .L89+16
 957 0684 DC319FE5 		str	r2, [r3, #0]
 958 0688 002083E5 		b	.L50
 959 068c 680000EA 	.L75:
 960              		.loc 1 172 0
 171:uart.c        **** 		else if(cnt==17) hacc+=c<<8;
 961              	L89
 962 0690 C0319FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 963 0694 0030D3E5 		cmp	r3, #18
 964 0698 110053E3 		bne	.L77
 965 069c 0800001A 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 966 06a0 10305BE5 		mov	r3, r3, asl #16
 967 06a4 0334A0E1 		mov	r2, r3
 968 06a8 0320A0E1 		ldr	r3, .L89+16
 969 06ac B4319FE5 		ldr	r3, [r3, #0]
 970 06b0 003093E5 		add	r2, r2, r3
 971 06b4 032082E0 		ldr	r3, .L89+16
 972 06b8 A8319FE5 		str	r2, [r3, #0]
 973 06bc 002083E5 		b	.L50
 974 06c0 5B0000EA 	.L77:
 975              		.loc 1 173 0
 172:uart.c        **** 		else if(cnt==18) hacc+=c<<16;
 976              	ldrb	r3, [r3, #0]	@ zero_extendqisi2
 977 06c4 8C319FE5 		cmp	r3, #19
 978 06c8 0030D3E5 		bne	.L79
 979 06cc 120053E3 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 980 06d0 0800001A 		mov	r3, r3, asl #24
 981 06d4 10305BE5 		mov	r2, r3
 982 06d8 0338A0E1 		ldr	r3, .L89+16
 983 06dc 0320A0E1 		ldr	r3, [r3, #0]
 984 06e0 80319FE5 		add	r2, r2, r3
 985 06e4 003093E5 		ldr	r3, .L89+16
 986 06e8 032082E0 		str	r2, [r3, #0]
 987 06ec 74319FE5 		b	.L50
 988 06f0 002083E5 	.L79:
 989 06f4 4E0000EA 		.loc 1 174 0
 990              		ldr	r3, .L89
 173:uart.c        **** 		else if(cnt==19) hacc+=c<<24;
 991              	#0]	@ zero_extendqisi2
 992 06f8 58319FE5 		cmp	r3, #20
 993 06fc 0030D3E5 		bne	.L81
 994 0700 130053E3 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 995 0704 0800001A 		ldr	r3, .L89+20
 996 0708 10305BE5 		str	r2, [r3, #0]
 997 070c 033CA0E1 		b	.L50
 998 0710 0320A0E1 	.L81:
 999 0714 4C319FE5 		.loc 1 175 0
 1000 0718 003093E5 		ldr	r3, .L89
 1001 071c 032082E0 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1002 0720 40319FE5 		cmp	r3, #21
 1003 0724 002083E5 		bne	.L83
 1004 0728 410000EA 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1005              		mov	r3, r3, asl #8
 174:uart.c        **** 		else if(cnt==20) vacc=c;
 1006              	r	r3, .L89+20
 1007 072c 24319FE5 		ldr	r3, [r3, #0]
 1008 0730 0030D3E5 		add	r2, r2, r3
 1009 0734 140053E3 		ldr	r3, .L89+20
 1010 0738 0300001A 		str	r2, [r3, #0]
 1011 073c 10205BE5 		b	.L50
 1012 0740 24319FE5 	.L83:
 1013 0744 002083E5 		.loc 1 176 0
 1014 0748 390000EA 		ldr	r3, .L89
 1015              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 175:uart.c        **** 		else if(cnt==21) vacc+=c<<8;
 1016              	22
 1017 074c 04319FE5 		bne	.L85
 1018 0750 0030D3E5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1019 0754 150053E3 		mov	r3, r3, asl #16
 1020 0758 0800001A 		mov	r2, r3
 1021 075c 10305BE5 		ldr	r3, .L89+20
 1022 0760 0334A0E1 		ldr	r3, [r3, #0]
 1023 0764 0320A0E1 		add	r2, r2, r3
 1024 0768 FC309FE5 		ldr	r3, .L89+20
 1025 076c 003093E5 		str	r2, [r3, #0]
 1026 0770 032082E0 		b	.L50
 1027 0774 F0309FE5 	.L85:
 1028 0778 002083E5 		.loc 1 177 0
 1029 077c 2C0000EA 		ldr	r3, .L89
 1030              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 176:uart.c        **** 		else if(cnt==22) vacc+=c<<16;
 1031              	ne	.L50
 1032 0780 D0309FE5 		.loc 1 179 0
 1033 0784 0030D3E5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1034 0788 160053E3 		mov	r3, r3, asl #24
 1035 078c 0800001A 		mov	r2, r3
 1036 0790 10305BE5 		ldr	r3, .L89+20
 1037 0794 0338A0E1 		ldr	r3, [r3, #0]
 1038 0798 0320A0E1 		add	r2, r2, r3
 1039 079c C8309FE5 		ldr	r3, .L89+20
 1040 07a0 003093E5 		str	r2, [r3, #0]
 1041 07a4 032082E0 		.loc 1 180 0
 1042 07a8 BC309FE5 		ldr	r3, .L89+8
 1043 07ac 002083E5 		ldr	r2, [r3, #0]
 1044 07b0 1F0000EA 		ldr	r3, .L89+24
 1045              		str	r2, [r3, #0]
 177:uart.c        **** 		else if(cnt==23)
 1046              	ldr	r3, .L89+4
 1047 07b4 9C309FE5 		ldr	r2, [r3, #0]
 1048 07b8 0030D3E5 		ldr	r3, .L89+24
 1049 07bc 170053E3 		str	r2, [r3, #4]
 1050 07c0 1B00001A 		.loc 1 182 0
 178:uart.c        **** 		{
 179:uart.c        **** 			vacc+=c<<24;
 1051              	r3, .L89+12
 1052 07c4 10305BE5 		ldr	r2, [r3, #0]
 1053 07c8 033CA0E1 		ldr	r3, .L89+24
 1054 07cc 0320A0E1 		str	r2, [r3, #8]
 1055 07d0 94309FE5 		.loc 1 183 0
 1056 07d4 003093E5 		ldr	r3, .L89+16
 1057 07d8 032082E0 		ldr	r2, [r3, #0]
 1058 07dc 88309FE5 		ldr	r3, .L89+24
 1059 07e0 002083E5 		str	r2, [r3, #24]
 180:uart.c        **** 			GPS_Data.latitude=lat;
 1060              	84 0
 1061 07e4 74309FE5 		ldr	r3, .L89+20
 1062 07e8 002093E5 		ldr	r2, [r3, #0]
 1063 07ec 7C309FE5 		ldr	r3, .L89+24
 1064 07f0 002083E5 		str	r2, [r3, #28]
 181:uart.c        **** 			GPS_Data.longitude=lon;
 1065              	
 1066 07f4 60309FE5 		.loc 1 186 0
 1067 07f8 002093E5 		ldr	r3, .L89
 1068 07fc 6C309FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1069 0800 042083E5 		add	r3, r3, #1
 182:uart.c        **** 			GPS_Data.height=height;
 1070              		r3, r3, #255
 1071 0804 58309FE5 		ldr	r2, .L89
 1072 0808 002093E5 		strb	r3, [r2, #0]
 1073 080c 5C309FE5 	.L88:
 1074 0810 082083E5 		.loc 1 188 0
 183:uart.c        **** 			GPS_Data.horizontal_accuracy=hacc;
 1075              	sp, fp, #12
 1076 0814 4C309FE5 		ldmfd	sp, {fp, sp, lr}
 1077 0818 002093E5 		bx	lr
 1078 081c 4C309FE5 	.L90:
 1079 0820 182083E5 		.align	2
 184:uart.c        **** 			GPS_Data.vertical_accuracy=vacc;
 1080              	
 1081 0824 40309FE5 		.word	cnt.1714
 1082 0828 002093E5 		.word	lon.1716
 1083 082c 3C309FE5 		.word	lat.1715
 1084 0830 1C2083E5 		.word	height.1717
 1085              		.word	hacc.1718
 185:uart.c        **** 		}
 186:uart.c        **** 		cnt++;
 1086              	d	vacc.1719
 1087 0834 1C309FE5 		.word	GPS_Data
 1088 0838 0030D3E5 	.LFE4:
 1090 0840 FF3003E2 		.bss
 1091 0844 0C209FE5 		.align	2
 1092 0848 0030C2E5 	N.1886:
 1093              		.space	4
 187:uart.c        **** 	}
 188:uart.c        **** }
 1094              	2
 1095 084c 0CD04BE2 	E.1885:
 1096 0850 00689DE8 		.space	4
 1097 0854 1EFF2FE1 	cnt.1884:
 1098              		.space	1
 1099              		.text
 1100              		.align	2
 1101 0858 3C000000 		.global	parse_POSUTM
 1103 0860 38000000 	parse_POSUTM:
 1104 0864 30000000 	.LFB5:
 1105 0868 2C000000 		.loc 1 190 0
 1106 086c 28000000 		@ Function supports interworking.
 1107 0870 00000000 		@ args = 0, pretend = 0, frame = 8
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109              		mov	ip, sp
 1110              	.LCFI11:
 1111 003d 000000   		stmfd	sp!, {fp, ip, lr, pc}
 1112              	.LCFI12:
 1113 0040 00000000 		sub	fp, ip, #4
 1114              	.LCFI13:
 1115              		sub	sp, sp, #8
 1116 0044 00000000 	.LCFI14:
 1117              		mov	r3, r0
 1118 0048 00       		mov	r2, r1
 1119              		strb	r3, [fp, #-16]
 1120              		mov	r3, r2
 1121              		strb	r3, [fp, #-20]
 1122              		.loc 1 194 0
 1123              		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 1124              		cmp	r3, #0
 189:uart.c        **** inline void parse_POSUTM(unsigned char c, unsigned char reset)
 190:uart.c        **** {
 1125              	2, #0
 1126              		strb	r2, [r3, #0]
 1127              		b	.L111
 1128              	.L92:
 1129 0874 0DC0A0E1 		.loc 1 197 0
 1130              		ldr	r3, .L112
 1131 0878 00D82DE9 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1132              		cmp	r3, #0
 1133 087c 04B04CE2 		bne	.L95
 1134              		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 1135 0880 08D04DE2 		ldr	r3, .L112+4
 1136              		str	r2, [r3, #0]
 1137 0884 0030A0E1 		b	.L97
 1138 0888 0120A0E1 	.L95:
 1139 088c 10304BE5 		.loc 1 198 0
 1140 0890 0230A0E1 		ldr	r3, .L112
 1141 0894 14304BE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 191:uart.c        **** 	static unsigned char cnt=0;
 192:uart.c        **** 	static int E, N;
 193:uart.c        **** 
 194:uart.c        **** 	if(reset) cnt=0;
 1142              	.L98
 1143 0898 14305BE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1144 089c 000053E3 		mov	r2, r3, asl #8
 1145 08a0 0300000A 		ldr	r3, .L112+4
 1146 08a4 88319FE5 		ldr	r3, [r3, #0]
 1147 08a8 0020A0E3 		add	r2, r2, r3
 1148 08ac 0020C3E5 		ldr	r3, .L112+4
 1149 08b0 5C0000EA 		str	r2, [r3, #0]
 1150              		b	.L97
 195:uart.c        **** 	else
 196:uart.c        **** 	{
 197:uart.c        **** 		if(cnt==0) E=c;
 1151              	oc 1 199 0
 1152 08b4 78319FE5 		ldr	r3, .L112
 1153 08b8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1154 08bc 000053E3 		cmp	r3, #2
 1155 08c0 0300001A 		bne	.L100
 1156 08c4 10205BE5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1157 08c8 68319FE5 		mov	r2, r3, asl #16
 1158 08cc 002083E5 		ldr	r3, .L112+4
 1159 08d0 4E0000EA 		ldr	r3, [r3, #0]
 1160              		add	r2, r2, r3
 198:uart.c        **** 		else if(cnt==1) E+=c<<8;
 1161              	L112+4
 1162 08d4 58319FE5 		str	r2, [r3, #0]
 1163 08d8 0030D3E5 		b	.L97
 1164 08dc 010053E3 	.L100:
 1165 08e0 0700001A 		.loc 1 200 0
 1166 08e4 10305BE5 		ldr	r3, .L112
 1167 08e8 0324A0E1 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1168 08ec 44319FE5 		cmp	r3, #3
 1169 08f0 003093E5 		bne	.L102
 1170 08f4 032082E0 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1171 08f8 38319FE5 		mov	r2, r3, asl #24
 1172 08fc 002083E5 		ldr	r3, .L112+4
 1173 0900 420000EA 		ldr	r3, [r3, #0]
 1174              		add	r2, r2, r3
 199:uart.c        **** 		else if(cnt==2) E+=c<<16;
 1175              	+4
 1176 0904 28319FE5 		str	r2, [r3, #0]
 1177 0908 0030D3E5 		b	.L97
 1178 090c 020053E3 	.L102:
 1179 0910 0700001A 		.loc 1 201 0
 1180 0914 10305BE5 		ldr	r3, .L112
 1181 0918 0328A0E1 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1182 091c 14319FE5 		cmp	r3, #4
 1183 0920 003093E5 		bne	.L104
 1184 0924 032082E0 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 1185 0928 08319FE5 		ldr	r3, .L112+8
 1186 092c 002083E5 		str	r2, [r3, #0]
 1187 0930 360000EA 		b	.L97
 1188              	.L104:
 200:uart.c        **** 		else if(cnt==3) E+=c<<24;
 1189              		ldr	r3, .L112
 1190 0934 F8309FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1191 0938 0030D3E5 		cmp	r3, #5
 1192 093c 030053E3 		bne	.L106
 1193 0940 0700001A 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1194 0944 10305BE5 		mov	r2, r3, asl #8
 1195 0948 032CA0E1 		ldr	r3, .L112+8
 1196 094c E4309FE5 		ldr	r3, [r3, #0]
 1197 0950 003093E5 		add	r2, r2, r3
 1198 0954 032082E0 		ldr	r3, .L112+8
 1199 0958 D8309FE5 		str	r2, [r3, #0]
 1200 095c 002083E5 		b	.L97
 1201 0960 2A0000EA 	.L106:
 1202              		.loc 1 203 0
 201:uart.c        **** 		else if(cnt==4) N=c;
 1203              	
 1204 0964 C8309FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1205 0968 0030D3E5 		cmp	r3, #6
 1206 096c 040053E3 		bne	.L108
 1207 0970 0300001A 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1208 0974 10205BE5 		mov	r2, r3, asl #16
 1209 0978 BC309FE5 		ldr	r3, .L112+8
 1210 097c 002083E5 		ldr	r3, [r3, #0]
 1211 0980 220000EA 		add	r2, r2, r3
 1212              		ldr	r3, .L112+8
 202:uart.c        **** 		else if(cnt==5) N+=c<<8;
 1213              	[r3, #0]
 1214 0984 A8309FE5 		b	.L97
 1215 0988 0030D3E5 	.L108:
 1216 098c 050053E3 		.loc 1 204 0
 1217 0990 0700001A 		ldr	r3, .L112
 1218 0994 10305BE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1219 0998 0324A0E1 		cmp	r3, #7
 1220 099c 98309FE5 		bne	.L97
 1221 09a0 003093E5 		.loc 1 206 0
 1222 09a4 032082E0 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1223 09a8 8C309FE5 		mov	r2, r3, asl #24
 1224 09ac 002083E5 		ldr	r3, .L112+8
 1225 09b0 160000EA 		ldr	r3, [r3, #0]
 1226              		add	r2, r2, r3
 203:uart.c        **** 		else if(cnt==6) N+=c<<16;
 1227              	+8
 1228 09b4 78309FE5 		str	r2, [r3, #0]
 1229 09b8 0030D3E5 	.L97:
 1230 09bc 060053E3 		.loc 1 210 0
 1231 09c0 0700001A 		ldr	r3, .L112
 1232 09c4 10305BE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1233 09c8 0328A0E1 		add	r3, r3, #1
 1234 09cc 68309FE5 		and	r3, r3, #255
 1235 09d0 003093E5 		ldr	r2, .L112
 1236 09d4 032082E0 		strb	r3, [r2, #0]
 1237 09d8 5C309FE5 	.L111:
 1238 09dc 002083E5 		.loc 1 212 0
 1239 09e0 0A0000EA 		sub	sp, fp, #12
 1240              		ldmfd	sp, {fp, sp, lr}
 204:uart.c        **** 		else if(cnt==7)
 1241              		.align	2
 1242 09e4 48309FE5 	.L112:
 1243 09e8 0030D3E5 		.word	cnt.1884
 1244 09ec 070053E3 		.word	E.1885
 1245 09f0 0600001A 		.word	N.1886
 205:uart.c        **** 		{
 206:uart.c        **** 			N+=c<<24;
 1246              	:
 1248 09f8 032CA0E1 		.bss
 1249 09fc 38309FE5 		.align	1
 1250 0a00 003093E5 	week.1955:
 1251 0a04 032082E0 		.space	2
 1252 0a08 2C309FE5 		.align	2
 1253 0a0c 002083E5 	tow.1954:
 1254              		.space	4
 207:uart.c        **** //			GPS_Data.x=E;
 208:uart.c        **** //			GPS_Data.y=N;
 209:uart.c        **** 		}
 210:uart.c        **** 		cnt++;
 1255              	
 1256 0a10 1C309FE5 		.space	1
 1257 0a14 0030D3E5 		.text
 1258 0a18 013083E2 		.align	2
 1259 0a1c FF3003E2 		.global	parse_NAVSOL
 1261 0a24 0030C2E5 	parse_NAVSOL:
 1262              	.LFB6:
 211:uart.c        **** 	}
 212:uart.c        **** }
 1263              	 216 0
 1264 0a28 0CD04BE2 		@ Function supports interworking.
 1265 0a2c 00689DE8 		@ args = 0, pretend = 0, frame = 8
 1266 0a30 1EFF2FE1 		@ frame_needed = 1, uses_anonymous_args = 0
 1267              		mov	ip, sp
 1268              	.LCFI15:
 1269              		stmfd	sp!, {fp, ip, lr, pc}
 1270 0a34 48000000 	.LCFI16:
 1271 0a38 44000000 		sub	fp, ip, #4
 1272 0a3c 40000000 	.LCFI17:
 1273              		sub	sp, sp, #8
 1274              	.LCFI18:
 1275              		mov	r3, r0
 1276 0049 00       		mov	r2, r1
 1277              		strb	r3, [fp, #-16]
 1278 004a 0000     		mov	r3, r2
 1279              		strb	r3, [fp, #-20]
 1280              		.loc 1 221 0
 1281 004c 00000000 		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 1282              		cmp	r3, #0
 1283 0050 00       		beq	.L115
 1284              		ldr	r3, .L133
 1285              		mov	r2, #0
 1286              		strb	r2, [r3, #0]
 1287              		b	.L132
 1288              	.L115:
 1289              		.loc 1 224 0
 213:uart.c        **** 
 214:uart.c        **** //NAVSOL is the only packet where the first 4 bytes need to be parsed. Any other packet discardes t
 215:uart.c        **** inline void parse_NAVSOL(unsigned char c, unsigned char reset)
 216:uart.c        **** {
 1290              	3, #0]	@ zero_extendqisi2
 1291              		cmp	r3, #0
 1292              		bne	.L118
 1293              		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 1294 0a40 0DC0A0E1 		ldr	r3, .L133+4
 1295              		str	r2, [r3, #0]
 1296 0a44 00D82DE9 		b	.L120
 1297              	.L118:
 1298 0a48 04B04CE2 		.loc 1 225 0
 1299              		ldr	r3, .L133
 1300 0a4c 08D04DE2 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1301              		cmp	r3, #1
 1302 0a50 0030A0E1 		bne	.L121
 1303 0a54 0120A0E1 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1304 0a58 10304BE5 		mov	r3, r3, asl #8
 1305 0a5c 0230A0E1 		mov	r2, r3
 1306 0a60 14304BE5 		ldr	r3, .L133+4
 217:uart.c        **** 	static unsigned char cnt=0;
 218:uart.c        **** 	static unsigned int tow;
 219:uart.c        **** 	static unsigned short week;
 220:uart.c        **** 
 221:uart.c        **** 	if(reset) cnt=0;
 1307              	
 1308 0a64 14305BE5 		add	r2, r2, r3
 1309 0a68 000053E3 		ldr	r3, .L133+4
 1310 0a6c 0300000A 		str	r2, [r3, #0]
 1311 0a70 84319FE5 		b	.L120
 1312 0a74 0020A0E3 	.L121:
 1313 0a78 0020C3E5 		.loc 1 226 0
 1314 0a7c 5B0000EA 		ldr	r3, .L133
 1315              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 222:uart.c        **** 	else
 223:uart.c        **** 	{
 224:uart.c        **** 		if(cnt==0) tow=c;
 1316              	 #2
 1317 0a80 74319FE5 		bne	.L123
 1318 0a84 0030D3E5 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1319 0a88 000053E3 		mov	r3, r3, asl #16
 1320 0a8c 0300001A 		mov	r2, r3
 1321 0a90 10205BE5 		ldr	r3, .L133+4
 1322 0a94 64319FE5 		ldr	r3, [r3, #0]
 1323 0a98 002083E5 		add	r2, r2, r3
 1324 0a9c 4D0000EA 		ldr	r3, .L133+4
 1325              		str	r2, [r3, #0]
 225:uart.c        **** 		else if(cnt==1)	tow+=c<<8;
 1326              	L123:
 1327 0aa0 54319FE5 		.loc 1 227 0
 1328 0aa4 0030D3E5 		ldr	r3, .L133
 1329 0aa8 010053E3 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1330 0aac 0800001A 		cmp	r3, #3
 1331 0ab0 10305BE5 		bne	.L125
 1332 0ab4 0334A0E1 		ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1333 0ab8 0320A0E1 		mov	r3, r3, asl #24
 1334 0abc 3C319FE5 		mov	r2, r3
 1335 0ac0 003093E5 		ldr	r3, .L133+4
 1336 0ac4 032082E0 		ldr	r3, [r3, #0]
 1337 0ac8 30319FE5 		add	r2, r2, r3
 1338 0acc 002083E5 		ldr	r3, .L133+4
 1339 0ad0 400000EA 		str	r2, [r3, #0]
 1340              		b	.L120
 226:uart.c        **** 		else if(cnt==2)	tow+=c<<16;
 1341              	228 0
 1342 0ad4 20319FE5 		ldr	r3, .L133
 1343 0ad8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1344 0adc 020053E3 		cmp	r3, #8
 1345 0ae0 0800001A 		bne	.L127
 1346 0ae4 10305BE5 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 1347 0ae8 0338A0E1 		ldr	r3, .L133+8
 1348 0aec 0320A0E1 		strh	r2, [r3, #0]	@ movhi
 1349 0af0 08319FE5 		b	.L120
 1350 0af4 003093E5 	.L127:
 1351 0af8 032082E0 		.loc 1 229 0
 1352 0afc FC309FE5 		ldr	r3, .L133
 1353 0b00 002083E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1354 0b04 330000EA 		cmp	r3, #9
 1355              		bne	.L129
 227:uart.c        **** 		else if(cnt==3) tow+=c<<24;
 1356              	ldrb	r3, [fp, #-16]	@ zero_extendqisi2
 1357 0b08 EC309FE5 		mov	r3, r3, asl #8
 1358 0b0c 0030D3E5 		mov	r3, r3, asl #16
 1359 0b10 030053E3 		mov	r2, r3, lsr #16
 1360 0b14 0800001A 		ldr	r3, .L133+8
 1361 0b18 10305BE5 		ldrh	r3, [r3, #0]
 1362 0b1c 033CA0E1 		add	r3, r2, r3
 1363 0b20 0320A0E1 		mov	r3, r3, asl #16
 1364 0b24 D4309FE5 		mov	r2, r3, lsr #16
 1365 0b28 003093E5 		ldr	r3, .L133+8
 1366 0b2c 032082E0 		strh	r2, [r3, #0]	@ movhi
 1367 0b30 C8309FE5 		.loc 1 232 0
 1368 0b34 002083E5 		ldr	r3, .L133+4
 1369 0b38 260000EA 		ldr	r2, [r3, #0]
 1370              		ldr	r3, .L133+12
 228:uart.c        **** 		else if(cnt==8) week=c;
 1371              	0]
 1372 0b3c B8309FE5 		.loc 1 233 0
 1373 0b40 0030D3E5 		ldr	r3, .L133+8
 1374 0b44 080053E3 		ldrh	r2, [r3, #0]
 1375 0b48 0300001A 		ldr	r3, .L133+12
 1376 0b4c 10205BE5 		strh	r2, [r3, #4]	@ movhi
 1377 0b50 AC309FE5 		b	.L120
 1378 0b54 B020C3E1 	.L129:
 1379 0b58 1E0000EA 		.loc 1 235 0
 1380              		ldr	r3, .L133
 229:uart.c        **** 		else if(cnt==9)
 1381              	[r3, #0]	@ zero_extendqisi2
 1382 0b5c 98309FE5 		cmp	r3, #47
 1383 0b60 0030D3E5 		bne	.L120
 1384 0b64 090053E3 		.loc 1 237 0
 1385 0b68 1300001A 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 230:uart.c        **** 		{
 231:uart.c        **** 			week+=c<<8;
 1386              	r3, .L133+16
 1387 0b6c 10305BE5 		str	r2, [r3, #36]
 1388 0b70 0334A0E1 	.L120:
 1389 0b74 0338A0E1 		.loc 1 239 0
 1390 0b78 2328A0E1 		ldr	r3, .L133
 1391 0b7c 80309FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1392 0b80 B030D3E1 		add	r3, r3, #1
 1393 0b84 033082E0 		and	r3, r3, #255
 1394 0b88 0338A0E1 		ldr	r2, .L133
 1395 0b8c 2328A0E1 		strb	r3, [r2, #0]
 1396 0b90 6C309FE5 	.L132:
 1397 0b94 B020C3E1 		.loc 1 241 0
 232:uart.c        **** 			GPS_Time.time_of_week=tow;
 1398              	 #12
 1399 0b98 60309FE5 		ldmfd	sp, {fp, sp, lr}
 1400 0b9c 002093E5 		bx	lr
 1401 0ba0 60309FE5 	.L134:
 1402 0ba4 002083E5 		.align	2
 233:uart.c        **** 			GPS_Time.week=week;
 1403              	:
 1404 0ba8 54309FE5 		.word	cnt.1953
 1405 0bac B020D3E1 		.word	tow.1954
 1406 0bb0 50309FE5 		.word	week.1955
 1407 0bb4 B420C3E1 		.word	GPS_Time
 1408 0bb8 060000EA 		.word	GPS_Data
 1409              	.LFE6:
 234:uart.c        **** 		}
 235:uart.c        **** 		else if(cnt==47)
 1410              	parse_NAVSOL, .-parse_NAVSOL
 1411 0bbc 38309FE5 		.bss
 1412 0bc0 0030D3E5 	diffs.2019:
 1413 0bc4 2F0053E3 		.space	1
 1414 0bc8 0200001A 	flags.2018:
 236:uart.c        **** 		{
 237:uart.c        **** 			GPS_Data.numSV=c;
 1415              	ce	1
 1416 0bcc 10205BE5 	GPSfix.2017:
 1417 0bd0 34309FE5 		.space	1
 1418 0bd4 242083E5 	cnt.2016:
 1419              		.space	1
 238:uart.c        **** 		}
 239:uart.c        **** 		cnt++;
 1420              	t
 1421 0bd8 1C309FE5 		.align	2
 1422 0bdc 0030D3E5 		.global	parse_STATUS
 1424 0be4 FF3003E2 	parse_STATUS:
 1425 0be8 0C209FE5 	.LFB7:
 1426 0bec 0030C2E5 		.loc 1 244 0
 1427              		@ Function supports interworking.
 240:uart.c        **** 	}
 241:uart.c        **** }
 1428              	= 0, pretend = 0, frame = 8
 1429 0bf0 0CD04BE2 		@ frame_needed = 1, uses_anonymous_args = 0
 1430 0bf4 00689DE8 		mov	ip, sp
 1431 0bf8 1EFF2FE1 	.LCFI19:
 1432              		stmfd	sp!, {fp, ip, lr, pc}
 1433              	.LCFI20:
 1434              		sub	fp, ip, #4
 1435 0bfc 50000000 	.LCFI21:
 1436 0c00 4C000000 		sub	sp, sp, #8
 1437 0c04 4A000000 	.LCFI22:
 1438 0c08 00000000 		mov	r3, r0
 1439 0c0c 00000000 		mov	r2, r1
 1440              		strb	r3, [fp, #-16]
 1441              		mov	r3, r2
 1442              		strb	r3, [fp, #-20]
 1443              		.loc 1 248 0
 1444 0051 00       		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 1445              		cmp	r3, #0
 1446 0052 00       		beq	.L136
 1447              		ldr	r3, .L146
 1448 0053 00       		mov	r2, #0
 1449              		strb	r2, [r3, #0]
 1450 0054 00       		b	.L145
 1451              	.L136:
 1452              		.loc 1 251 0
 1453              		ldr	r3, .L146
 1454              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1455              		cmp	r3, #0
 1456              		bne	.L139
 242:uart.c        **** 
 243:uart.c        **** inline void parse_STATUS(unsigned char c, unsigned char reset)
 244:uart.c        **** {
 1457              	p, #-16]
 1458              		strb	r3, [r2, #0]
 1459              		b	.L141
 1460              	.L139:
 1461 0c10 0DC0A0E1 		.loc 1 252 0
 1462              		ldr	r3, .L146
 1463 0c14 00D82DE9 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1464              		cmp	r3, #1
 1465 0c18 04B04CE2 		bne	.L142
 1466              		ldr	r2, .L146+8
 1467 0c1c 08D04DE2 		ldrb	r3, [fp, #-16]
 1468              		strb	r3, [r2, #0]
 1469 0c20 0030A0E1 		b	.L141
 1470 0c24 0120A0E1 	.L142:
 1471 0c28 10304BE5 		.loc 1 253 0
 1472 0c2c 0230A0E1 		ldr	r3, .L146
 1473 0c30 14304BE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 245:uart.c        **** 	static unsigned char cnt=0;
 246:uart.c        **** 	static unsigned char GPSfix, flags, diffs;
 247:uart.c        **** 
 248:uart.c        **** 	if(reset) cnt=0;
 1474              	.L141
 1475 0c34 14305BE5 		.loc 1 255 0
 1476 0c38 000053E3 		ldr	r2, .L146+12
 1477 0c3c 0300000A 		ldrb	r3, [fp, #-16]
 1478 0c40 BC309FE5 		strb	r3, [r2, #0]
 1479 0c44 0020A0E3 		.loc 1 256 0
 1480 0c48 0020C3E5 		ldr	r3, .L146+4
 1481 0c4c 290000EA 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1482              		mov	r2, r3
 249:uart.c        **** 	else
 250:uart.c        **** 	{
 251:uart.c        **** 		if(cnt==0) GPSfix=c;
 1483              	.L146+8
 1484 0c50 AC309FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1485 0c54 0030D3E5 		mov	r3, r3, asl #8
 1486 0c58 000053E3 		orr	r2, r2, r3
 1487 0c5c 0300001A 		ldr	r3, .L146+12
 1488 0c60 A0209FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1489 0c64 10305BE5 		mov	r3, r3, asl #16
 1490 0c68 0030C2E5 		orr	r2, r2, r3
 1491 0c6c 1B0000EA 		ldr	r3, .L146+16
 1492              		str	r2, [r3, #40]
 252:uart.c        **** 		else if(cnt==1) flags=c;
 1493              	oc 1 258 0
 1494 0c70 8C309FE5 		ldr	r3, .L146
 1495 0c74 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1496 0c78 010053E3 		add	r3, r3, #1
 1497 0c7c 0300001A 		and	r3, r3, #255
 1498 0c80 84209FE5 		ldr	r2, .L146
 1499 0c84 10305BE5 		strb	r3, [r2, #0]
 1500 0c88 0030C2E5 	.L145:
 1501 0c8c 130000EA 		.loc 1 260 0
 1502              		sub	sp, fp, #12
 253:uart.c        **** 		else if(cnt==2)
 1503              	 {fp, sp, lr}
 1504 0c90 6C309FE5 		bx	lr
 1505 0c94 0030D3E5 	.L147:
 1506 0c98 020053E3 		.align	2
 1507 0c9c 0F00001A 	.L146:
 254:uart.c        **** 		{
 255:uart.c        **** 			diffs=c;
 1508              	d	cnt.2016
 1509 0ca0 68209FE5 		.word	GPSfix.2017
 1510 0ca4 10305BE5 		.word	flags.2018
 1511 0ca8 0030C2E5 		.word	diffs.2019
 256:uart.c        **** 			GPS_Data.status=GPSfix|(flags<<8)|(diffs<<16);
 1512              	rd	GPS_Data
 1513 0cac 54309FE5 	.LFE7:
 1515 0cb4 0320A0E1 		.bss
 1516 0cb8 4C309FE5 		.align	1
 1517 0cbc 0030D3E5 	length.2052:
 1518 0cc0 0334A0E1 		.space	2
 1519 0cc4 032082E1 		.align	1
 1520 0cc8 40309FE5 	cnt.2051:
 1521 0ccc 0030D3E5 		.space	2
 1522 0cd0 0338A0E1 	current_packet.2050:
 1523 0cd4 032082E1 		.space	1
 1524 0cd8 34309FE5 	state.2049:
 1525 0cdc 282083E5 		.space	1
 1526              		.text
 257:uart.c        **** 		}
 258:uart.c        **** 		cnt++;
 1527              	bal	uart1ISR
 1529 0ce4 0030D3E5 	uart1ISR:
 1530 0ce8 013083E2 	.LFB8:
 1531 0cec FF3003E2 		.loc 1 263 0
 1532 0cf0 0C209FE5 		@ Function supports interworking.
 1533 0cf4 0030C2E5 		@ args = 0, pretend = 0, frame = 12
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 259:uart.c        **** 	}
 260:uart.c        **** }
 1535              	 sp
 1536 0cf8 0CD04BE2 	.LCFI23:
 1537 0cfc 00689DE8 		stmfd	sp!, {fp, ip, lr, pc}
 1538 0d00 1EFF2FE1 	.LCFI24:
 1539              		sub	fp, ip, #4
 1540              	.LCFI25:
 1541              		sub	sp, sp, #12
 1542 0d04 54000000 	.LCFI26:
 1543 0d08 53000000 		.loc 1 270 0
 1544 0d0c 52000000 		mov	r3, #-536870904
 1545 0d10 51000000 		add	r3, r3, #65536
 1546 0d14 00000000 		ldr	r3, [r3, #0]
 1547              		str	r3, [fp, #-16]
 1548              		.loc 1 272 0
 1549              		ldr	r3, [fp, #-16]
 1550 0055 00       		mov	r3, r3, lsr #1
 1551              		and	r3, r3, #7
 1552 0056 0000     		str	r3, [fp, #-24]
 1553              		ldr	r3, [fp, #-24]
 1554              		cmp	r3, #1
 1555 0058 0000     		beq	.L150
 1556              		ldr	r3, [fp, #-24]
 1557 005a 00       		cmp	r3, #2
 1558              		beq	.L151
 1559 005b 00       		b	.L149
 1560              	.L150:
 1561              		.loc 1 277 0
 1562              		sub	r3, fp, #18
 1563              		mov	r0, #0
 1564              		mov	r1, r3
 1565              		mov	r2, #1
 261:uart.c        **** 
 262:uart.c        **** void uart1ISR(void) __irq
 263:uart.c        **** {
 1566              	p	r3, #0
 1567              		beq	.L152
 1568              		.loc 1 279 0
 1569              		ldr	r2, .L219
 1570 0d18 0DC0A0E1 		mov	r3, #1
 1571              		strb	r3, [r2, #0]
 1572 0d1c 00D82DE9 		.loc 1 280 0
 1573              		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 1574 0d20 04B04CE2 		mov	r0, r3
 1575              		bl	UART1WriteChar
 1576 0d24 0CD04DE2 		b	.L149
 1577              	.L152:
 264:uart.c        ****   static unsigned char state;
 265:uart.c        ****   static unsigned char current_packet;
 266:uart.c        ****   static unsigned short cnt, length;
 267:uart.c        ****   unsigned char t;
 268:uart.c        ****   unsigned char c;
 269:uart.c        ****   IENABLE;
 270:uart.c        ****   unsigned iir = U1IIR;
 1578              	0
 1579 0d28 8E32A0E3 		ldr	r2, .L219
 1580 0d2c 013883E2 		mov	r3, #0
 1581 0d30 003093E5 		strb	r3, [r2, #0]
 1582 0d34 10300BE5 		.loc 1 285 0
 271:uart.c        ****   // Handle UART interrupt
 272:uart.c        ****   switch ((iir >> 1) & 0x7)
 1583              	r3, .L219+4
 1584 0d38 10301BE5 		ldrb	r3, [r3, #0]
 1585 0d3c A330A0E1 		and	r3, r3, #255
 1586 0d40 073003E2 		cmp	r3, #0
 1587 0d44 18300BE5 		beq	.L149
 1588 0d48 18301BE5 		.loc 1 287 0
 1589 0d4c 010053E3 		mov	r0, #57600
 1590 0d50 0300000A 		bl	UART1Initialize
 1591 0d54 18301BE5 		.loc 1 288 0
 1592 0d58 020053E3 		ldr	r3, .L219+4
 1593 0d5c 1D00000A 		mov	r2, #0
 1594 0d60 320100EA 		strb	r2, [r3, #0]
 1595              		.loc 1 291 0
 273:uart.c        ****     {
 274:uart.c        ****       case 1:
 275:uart.c        **** 		  // THRE interrupt
 276:uart.c        **** 
 277:uart.c        **** 		 if (ringbuffer1(RBREAD, &t, 1))
 1596              	1:
 1597 0d64 12304BE2 		.loc 1 293 0
 1598 0d68 0000A0E3 		mov	r3, #-536870912
 1599 0d6c 0310A0E1 		add	r3, r3, #65536
 1600 0d70 0120A0E3 		ldr	r3, [r3, #0]
 1601 0d74 FEFFFFEB 		strb	r3, [fp, #-17]
 1602 0d78 0030A0E1 		.loc 1 302 0
 1603 0d7c 000053E3 		ldr	r3, .L219+8
 1604 0d80 0600000A 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 278:uart.c        **** 		 {
 279:uart.c        **** 		   transmission1_running=1;
 1605              	#14
 1606 0d84 C0249FE5 		ldrls	pc, [pc, r3, asl #2]
 1607 0d88 0130A0E3 		b	.L156
 1608 0d8c 0030C2E5 		.p2align 2
 280:uart.c        **** 		   UART1WriteChar(t);
 1609              	9:
 1610 0d90 12305BE5 		.word	.L157
 1611 0d94 0300A0E1 		.word	.L158
 1612 0d98 FEFFFFEB 		.word	.L159
 1613 0d9c 230100EA 		.word	.L160
 1614              		.word	.L161
 281:uart.c        **** 		 }
 282:uart.c        **** 		 else
 283:uart.c        **** 		 {
 284:uart.c        **** 		   transmission1_running=0;
 1615              		.L162
 1616 0da0 A4249FE5 		.word	.L163
 1617 0da4 0030A0E3 		.word	.L156
 1618 0da8 0030C2E5 		.word	.L156
 285:uart.c        **** 		   if (baudrate1_change)		//baudrate change after first GPS config command
 1619              	rd	.L156
 1620 0dac 9C349FE5 		.word	.L164
 1621 0db0 0030D3E5 		.word	.L165
 1622 0db4 FF3003E2 		.word	.L166
 1623 0db8 000053E3 		.word	.L167
 1624 0dbc 1B01000A 		.word	.L168
 286:uart.c        **** 		   {
 287:uart.c        **** 			   UART1Initialize(57600);
 1625              	
 1626 0dc0 E10CA0E3 		.loc 1 305 0
 1627 0dc4 FEFFFFEB 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 288:uart.c        **** 			   baudrate1_change=0;
 1628              	mp	r3, #181
 1629 0dc8 80349FE5 		bne	.L149
 1630 0dcc 0020A0E3 		.loc 1 307 0
 1631 0dd0 0020C3E5 		ldr	r3, .L219+8
 289:uart.c        **** 		   }
 290:uart.c        **** 		 }
 291:uart.c        ****         break;
 1632              		r2, #1
 1633 0dd4 150100EA 		strb	r2, [r3, #0]
 1634              		.loc 1 309 0
 292:uart.c        ****       case 2:
 293:uart.c        **** 		c=U1RBR;
 1635              	.L149
 1636 0dd8 0E32A0E3 	.L158:
 1637 0ddc 013883E2 		.loc 1 311 0
 1638 0de0 003093E5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1639 0de4 11304BE5 		cmp	r3, #98
 294:uart.c        **** 
 295:uart.c        **** 		//UARTWriteChar(c);
 296:uart.c        **** 
 297:uart.c        **** #ifndef INDOOR_GPS	//run GPS statemachine
 298:uart.c        **** 
 299:uart.c        ****         //parse UBX (U0RBR);
 300:uart.c        **** 
 301:uart.c        **** 	//SSP_trans_cnt++;
 302:uart.c        **** 		switch (state)
 1640              	.L172
 1641 0de8 64349FE5 		.loc 1 313 0
 1642 0dec 0030D3E5 		ldr	r3, .L219+8
 1643 0df0 0E0053E3 		mov	r2, #2
 1644 0df4 03F19F97 		strb	r2, [r3, #0]
 1645 0df8 090100EA 		b	.L149
 1646              	.L172:
 1647              		.loc 1 315 0
 1648 0dfc 380E0000 		ldr	r3, .L219+8
 1649 0e00 540E0000 		mov	r2, #0
 1650 0e04 800E0000 		strb	r2, [r3, #0]
 1651 0e08 C80E0000 		.loc 1 316 0
 1652 0e0c F00E0000 		b	.L149
 1653 0e10 700F0000 	.L159:
 1654 0e14 34100000 		.loc 1 318 0
 1655 0e18 24120000 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1656 0e1c 24120000 		cmp	r3, #1
 1657 0e20 24120000 		bne	.L175
 1658 0e24 1C110000 		.loc 1 320 0
 1659 0e28 54110000 		ldr	r3, .L219+8
 1660 0e2c B8110000 		mov	r2, #3
 1661 0e30 E4110000 		strb	r2, [r3, #0]
 1662 0e34 F4110000 		b	.L149
 1663              	.L175:
 303:uart.c        **** 		{
 304:uart.c        **** 			case 0:
 305:uart.c        **** 				if(c==0xB5)
 1664              	[fp, #-17]	@ zero_extendqisi2
 1665 0e38 11305BE5 		cmp	r3, #5
 1666 0e3c B50053E3 		bne	.L178
 1667 0e40 FA00001A 		.loc 1 324 0
 306:uart.c        **** 				{
 307:uart.c        **** 					state=1;
 1668              		r3, .L219+8
 1669 0e44 08349FE5 		mov	r2, #10
 1670 0e48 0120A0E3 		strb	r2, [r3, #0]
 1671 0e4c 0020C3E5 		b	.L149
 308:uart.c        **** 				}
 309:uart.c        **** 			break;
 1672              	8:
 1673 0e50 F60000EA 		.loc 1 326 0
 1674              		ldr	r3, .L219+8
 310:uart.c        **** 			case 1:
 311:uart.c        **** 				if(c==0x62)
 1675              	v	r2, #0
 1676 0e54 11305BE5 		strb	r2, [r3, #0]
 1677 0e58 620053E3 		.loc 1 327 0
 1678 0e5c 0300001A 		b	.L149
 312:uart.c        **** 				{
 313:uart.c        **** 					state=2;
 1679              	0:
 1680 0e60 EC339FE5 		.loc 1 329 0
 1681 0e64 0220A0E3 		ldr	r2, .L219+12
 1682 0e68 0020C3E5 		ldrb	r3, [fp, #-17]
 1683 0e6c EF0000EA 		strb	r3, [r2, #0]
 1684              		.loc 1 330 0
 314:uart.c        **** 				}
 315:uart.c        **** 				else state=0;
 1685              	2, .L219+16
 1686 0e70 DC339FE5 		mov	r3, #0
 1687 0e74 0020A0E3 		strh	r3, [r2, #0]	@ movhi
 1688 0e78 0020C3E5 		.loc 1 331 0
 316:uart.c        **** 			break;
 1689              		r2, .L219+8
 1690 0e7c EB0000EA 		mov	r3, #4
 1691              		strb	r3, [r2, #0]
 317:uart.c        **** 			case 2:
 318:uart.c        **** 				if(c==0x01)	//NAV message
 1692              	oc 1 332 0
 1693 0e80 11305BE5 		b	.L149
 1694 0e84 010053E3 	.L161:
 1695 0e88 0300001A 		.loc 1 334 0
 319:uart.c        **** 				{
 320:uart.c        **** 				 	state=3;
 1696              		r3, .L219+16
 1697 0e8c C0339FE5 		ldrh	r3, [r3, #0]
 1698 0e90 0320A0E3 		cmp	r3, #0
 1699 0e94 0020C3E5 		bne	.L180
 1700 0e98 E40000EA 		ldrb	r2, [fp, #-17]	@ zero_extendqisi2
 1701              		ldr	r3, .L219+20
 321:uart.c        **** 				}
 322:uart.c        **** 				else if (c==0x05)	//ACK message
 1702              	r2, [r3, #0]	@ movhi
 1703 0e9c 11305BE5 	.L180:
 1704 0ea0 050053E3 		.loc 1 335 0
 1705 0ea4 0300001A 		ldr	r3, .L219+12
 323:uart.c        **** 					{
 324:uart.c        **** 						state=10;
 1706              	b	r3, [r3, #0]	@ zero_extendqisi2
 1707 0ea8 A4339FE5 		cmp	r3, #6
 1708 0eac 0A20A0E3 		bne	.L182
 1709 0eb0 0020C3E5 		mov	r0, #0
 1710 0eb4 DD0000EA 		mov	r1, #1
 1711              		bl	parse_NAVSOL
 325:uart.c        **** 					}
 326:uart.c        **** 				else state=0;
 1712              	
 1713 0eb8 94339FE5 		.loc 1 336 0
 1714 0ebc 0020A0E3 		ldr	r3, .L219+16
 1715 0ec0 0020C3E5 		ldrh	r3, [r3, #0]
 327:uart.c        **** 			break;
 1716              	d	r3, r3, #1
 1717 0ec4 D90000EA 		mov	r3, r3, asl #16
 1718              		mov	r2, r3, lsr #16
 328:uart.c        **** 			case 3:
 329:uart.c        **** 				current_packet=c;
 1719              	r	r3, .L219+16
 1720 0ec8 88239FE5 		strh	r2, [r3, #0]	@ movhi
 1721 0ecc 11305BE5 		ldr	r3, .L219+16
 1722 0ed0 0030C2E5 		ldrh	r3, [r3, #0]
 330:uart.c        **** 				cnt=0;
 1723              		r3, #2
 1724 0ed4 80239FE5 		bne	.L149
 1725 0ed8 0030A0E3 		.loc 1 338 0
 1726 0edc B030C2E1 		ldr	r2, .L219+16
 331:uart.c        **** 				state=4;
 1727              		r3, #0
 1728 0ee0 6C239FE5 		strh	r3, [r2, #0]	@ movhi
 1729 0ee4 0430A0E3 		.loc 1 339 0
 1730 0ee8 0030C2E5 		ldr	r2, .L219+8
 332:uart.c        **** 			break;
 1731              		r3, #5
 1732 0eec CF0000EA 		strb	r3, [r2, #0]
 1733              		.loc 1 341 0
 333:uart.c        **** 			case 4:
 334:uart.c        **** 				if(!cnt) length=c;
 1734              	.L149
 1735 0ef0 64339FE5 	.L162:
 1736 0ef4 B030D3E1 		.loc 1 344 0
 1737 0ef8 000053E3 		ldr	r3, .L219+12
 1738 0efc 0200001A 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1739 0f00 11205BE5 		cmp	r3, #6
 1740 0f04 54339FE5 		bne	.L186
 1741 0f08 B020C3E1 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1742              		mov	r0, r3
 335:uart.c        **** 				if(current_packet==0x06) parse_NAVSOL(0,1);
 1743              	#0
 1744 0f0c 44339FE5 		bl	parse_NAVSOL
 1745 0f10 0030D3E5 	.L186:
 1746 0f14 060053E3 		.loc 1 345 0
 1747 0f18 0200001A 		ldr	r3, .L219+16
 1748 0f1c 0000A0E3 		ldrh	r3, [r3, #0]
 1749 0f20 0110A0E3 		add	r3, r3, #1
 1750 0f24 FEFFFFEB 		mov	r3, r3, asl #16
 1751              		mov	r2, r3, lsr #16
 336:uart.c        **** 				if(++cnt==2)
 1752              	.L219+16
 1753 0f28 2C339FE5 		strh	r2, [r3, #0]	@ movhi
 1754 0f2c B030D3E1 		ldr	r3, .L219+16
 1755 0f30 013083E2 		ldrh	r3, [r3, #0]
 1756 0f34 0338A0E1 		cmp	r3, #4
 1757 0f38 2328A0E1 		bne	.L149
 1758 0f3c 18339FE5 		.loc 1 347 0
 1759 0f40 B020C3E1 		ldr	r2, .L219+16
 1760 0f44 10339FE5 		mov	r3, #0
 1761 0f48 B030D3E1 		strh	r3, [r2, #0]	@ movhi
 1762 0f4c 020053E3 		.loc 1 348 0
 1763 0f50 B600001A 		ldr	r2, .L219+8
 337:uart.c        **** 				{
 338:uart.c        **** 					cnt=0;
 1764              		strb	r3, [r2, #0]
 1765 0f54 00239FE5 		.loc 1 349 0
 1766 0f58 0030A0E3 		ldr	r3, .L219+12
 1767 0f5c B030C2E1 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 339:uart.c        **** 					state=5;
 1768              		r3, #2
 1769 0f60 EC229FE5 		bne	.L190
 1770 0f64 0530A0E3 		mov	r0, #0
 1771 0f68 0030C2E5 		mov	r1, #1
 340:uart.c        **** 				}
 341:uart.c        **** 			break;
 1772              	parse_POSLLH
 1773 0f6c AF0000EA 		b	.L149
 1774              	.L190:
 342:uart.c        **** 			case 5:	//Four bytes ITOW
 343:uart.c        **** 				//NAVSOL is the only packets where the first 4 bytes need to be parsed. Any other packet discar
 344:uart.c        **** 				if(current_packet==0x06) parse_NAVSOL(c,0);
 1775              	oc 1 351 0
 1776 0f70 E0329FE5 		ldr	r3, .L219+12
 1777 0f74 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1778 0f78 060053E3 		cmp	r3, #3
 1779 0f7c 0300001A 		bne	.L192
 1780 0f80 11305BE5 		mov	r0, #0
 1781 0f84 0300A0E1 		mov	r1, #1
 1782 0f88 0010A0E3 		bl	parse_STATUS
 1783 0f8c FEFFFFEB 		b	.L149
 1784              	.L192:
 345:uart.c        **** 				if(++cnt==4)
 1785              	2 0
 1786 0f90 C4329FE5 		ldr	r3, .L219+12
 1787 0f94 B030D3E1 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1788 0f98 013083E2 		cmp	r3, #18
 1789 0f9c 0338A0E1 		bne	.L149
 1790 0fa0 2328A0E1 		mov	r0, #0
 1791 0fa4 B0329FE5 		mov	r1, #1
 1792 0fa8 B020C3E1 		bl	parse_VELNED
 1793 0fac A8329FE5 		.loc 1 354 0
 1794 0fb0 B030D3E1 		b	.L149
 1795 0fb4 040053E3 	.L163:
 1796 0fb8 9C00001A 		.loc 1 356 0
 346:uart.c        **** 				{
 347:uart.c        **** 					cnt=0;
 1797              	19+12
 1798 0fbc 98229FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1799 0fc0 0030A0E3 		cmp	r3, #2
 1800 0fc4 B030C2E1 		bne	.L195
 348:uart.c        **** 					state=6;
 1801              	c 1 358 0
 1802 0fc8 84229FE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1803 0fcc 0630A0E3 		mov	r0, r3
 1804 0fd0 0030C2E5 		mov	r1, #0
 349:uart.c        **** 					if(current_packet==0x02) parse_POSLLH(0,1);
 1805              	parse_POSLLH
 1806 0fd4 7C329FE5 		b	.L197
 1807 0fd8 0030D3E5 	.L195:
 1808 0fdc 020053E3 		.loc 1 364 0
 1809 0fe0 0300001A 		ldr	r3, .L219+12
 1810 0fe4 0000A0E3 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1811 0fe8 0110A0E3 		cmp	r3, #3
 1812 0fec FEFFFFEB 		bne	.L198
 1813 0ff0 8E0000EA 		.loc 1 366 0
 1814              		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 350:uart.c        **** 					//else if(current_packet==0x08) parse_POSUTM(0,1);
 351:uart.c        **** 					else if(current_packet==0x03) parse_STATUS(0,1);
 1815              	3
 1816 0ff4 5C329FE5 		mov	r1, #0
 1817 0ff8 0030D3E5 		bl	parse_STATUS
 1818 0ffc 030053E3 		b	.L197
 1819 1000 0300001A 	.L198:
 1820 1004 0000A0E3 		.loc 1 368 0
 1821 1008 0110A0E3 		ldr	r3, .L219+12
 1822 100c FEFFFFEB 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1823 1010 860000EA 		cmp	r3, #18
 1824              		bne	.L200
 352:uart.c        **** 					else if(current_packet==0x12) parse_VELNED(0,1);
 1825              	0 0
 1826 1014 3C329FE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1827 1018 0030D3E5 		mov	r0, r3
 1828 101c 120053E3 		mov	r1, #0
 1829 1020 8200001A 		bl	parse_VELNED
 1830 1024 0000A0E3 		b	.L197
 1831 1028 0110A0E3 	.L200:
 1832 102c FEFFFFEB 		.loc 1 372 0
 353:uart.c        **** 				}
 354:uart.c        **** 			break;
 1833              	 .L219+12
 1834 1030 7E0000EA 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1835              		cmp	r3, #6
 355:uart.c        **** 			case 6:
 356:uart.c        **** 				if(current_packet==0x02)
 1836              	e	.L202
 1837 1034 1C329FE5 		.loc 1 374 0
 1838 1038 0030D3E5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1839 103c 020053E3 		mov	r0, r3
 1840 1040 0400001A 		mov	r1, #0
 357:uart.c        **** 				{
 358:uart.c        **** 					parse_POSLLH(c,0);
 1841              	arse_NAVSOL
 1842 1044 11305BE5 		b	.L197
 1843 1048 0300A0E1 	.L202:
 1844 104c 0010A0E3 		.loc 1 376 0
 1845 1050 FEFFFFEB 		ldr	r3, .L219+8
 1846 1054 1D0000EA 		mov	r2, #0
 1847              		strb	r2, [r3, #0]
 359:uart.c        **** 				}
 360:uart.c        **** 		/*		else if(current_packet==0x08	//POSUTM currently not used
 361:uart.c        **** 				{
 362:uart.c        **** 					parse_POSUTM(c,0);
 363:uart.c        **** 				}
 364:uart.c        **** 			*/	else if(current_packet==0x03)
 1848              		.loc 1 378 0
 1849 1058 F8319FE5 		ldr	r3, .L219+16
 1850 105c 0030D3E5 		ldrh	r3, [r3, #0]
 1851 1060 030053E3 		add	r3, r3, #1
 1852 1064 0400001A 		mov	r3, r3, asl #16
 365:uart.c        **** 				{
 366:uart.c        **** 					parse_STATUS(c,0);
 1853              	r2, r3, lsr #16
 1854 1068 11305BE5 		ldr	r3, .L219+16
 1855 106c 0300A0E1 		strh	r2, [r3, #0]	@ movhi
 1856 1070 0010A0E3 		ldr	r3, .L219+16
 1857 1074 FEFFFFEB 		ldrh	r3, [r3, #0]
 1858 1078 140000EA 		mov	r2, r3
 1859              		ldr	r3, .L219+20
 367:uart.c        **** 				}
 368:uart.c        **** 				else if(current_packet==0x12)
 1860              	3, [r3, #0]
 1861 107c D4319FE5 		sub	r3, r3, #4
 1862 1080 0030D3E5 		cmp	r2, r3
 1863 1084 120053E3 		blt	.L149
 1864 1088 0400001A 		.loc 1 380 0
 369:uart.c        **** 				{
 370:uart.c        **** 					parse_VELNED(c,0);
 1865              	r3, .L219+8
 1866 108c 11305BE5 		mov	r2, #0
 1867 1090 0300A0E1 		strb	r2, [r3, #0]
 1868 1094 0010A0E3 		.loc 1 382 0
 1869 1098 FEFFFFEB 		b	.L149
 1870 109c 0B0000EA 	.L164:
 1871              		.loc 1 384 0
 371:uart.c        **** 				}
 372:uart.c        **** 				else if(current_packet==0x06)
 1872              	3, [fp, #-17]	@ zero_extendqisi2
 1873 10a0 B0319FE5 		cmp	r3, #1
 1874 10a4 0030D3E5 		bne	.L206
 1875 10a8 060053E3 		.loc 1 386 0
 1876 10ac 0400001A 		ldr	r2, .L219+16
 373:uart.c        **** 				{
 374:uart.c        **** 					parse_NAVSOL(c,0);
 1877              	r3, #0
 1878 10b0 11305BE5 		strh	r3, [r2, #0]	@ movhi
 1879 10b4 0300A0E1 		.loc 1 387 0
 1880 10b8 0010A0E3 		ldr	r2, .L219+8
 1881 10bc FEFFFFEB 		mov	r3, #11
 1882 10c0 020000EA 		strb	r3, [r2, #0]
 1883              		b	.L149
 375:uart.c        **** 				}
 376:uart.c        **** 				else state=0;
 1884              		.loc 1 389 0
 1885 10c4 88319FE5 		ldr	r3, .L219+8
 1886 10c8 0020A0E3 		mov	r2, #0
 1887 10cc 0020C3E5 		strb	r2, [r3, #0]
 1888              		.loc 1 390 0
 377:uart.c        **** 
 378:uart.c        **** 				if(++cnt>=length-4)
 1889              	149
 1890 10d0 84319FE5 	.L165:
 1891 10d4 B030D3E1 		.loc 1 392 0
 1892 10d8 013083E2 		ldr	r3, .L219+16
 1893 10dc 0338A0E1 		ldrh	r3, [r3, #0]
 1894 10e0 2328A0E1 		cmp	r3, #0
 1895 10e4 70319FE5 		bne	.L209
 1896 10e8 B020C3E1 		ldrb	r2, [fp, #-17]	@ zero_extendqisi2
 1897 10ec 68319FE5 		ldr	r3, .L219+20
 1898 10f0 B030D3E1 		strh	r2, [r3, #0]	@ movhi
 1899 10f4 0320A0E1 	.L209:
 1900 10f8 60319FE5 		.loc 1 393 0
 1901 10fc B030D3E1 		ldr	r3, .L219+16
 1902 1100 043043E2 		ldrh	r3, [r3, #0]
 1903 1104 030052E1 		add	r3, r3, #1
 1904 1108 480000BA 		mov	r3, r3, asl #16
 379:uart.c        **** 				{
 380:uart.c        **** 					state=0;
 1905              	 #16
 1906 110c 40319FE5 		ldr	r3, .L219+16
 1907 1110 0020A0E3 		strh	r2, [r3, #0]	@ movhi
 1908 1114 0020C3E5 		ldr	r3, .L219+16
 381:uart.c        **** 				}
 382:uart.c        **** 			break;
 1909              	h	r3, [r3, #0]
 1910 1118 440000EA 		cmp	r3, #2
 1911              		bne	.L149
 383:uart.c        **** 			case 10:
 384:uart.c        **** 				if (c==0x01)
 1912              	oc 1 395 0
 1913 111c 11305BE5 		ldr	r2, .L219+16
 1914 1120 010053E3 		mov	r3, #0
 1915 1124 0600001A 		strh	r3, [r2, #0]	@ movhi
 385:uart.c        **** 				{
 386:uart.c        **** 					cnt=0;
 1916              	c 1 396 0
 1917 1128 2C219FE5 		ldr	r2, .L219+8
 1918 112c 0030A0E3 		mov	r3, #12
 1919 1130 B030C2E1 		strb	r3, [r2, #0]
 387:uart.c        **** 					state=11;
 1920              	c 1 398 0
 1921 1134 18219FE5 		b	.L149
 1922 1138 0B30A0E3 	.L166:
 1923 113c 0030C2E5 		.loc 1 400 0
 1924 1140 3A0000EA 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1925              		cmp	r3, #6
 388:uart.c        **** 				} else
 389:uart.c        **** 					state=0;
 1926              	L213
 1927 1144 08319FE5 		.loc 1 402 0
 1928 1148 0020A0E3 		ldr	r3, .L219+8
 1929 114c 0020C3E5 		mov	r2, #13
 390:uart.c        **** 			break;
 1930              	b	r2, [r3, #0]
 1931 1150 360000EA 		b	.L149
 1932              	.L213:
 391:uart.c        **** 			case 11:
 392:uart.c        **** 				if (!cnt) length=c;
 1933              	oc 1 404 0
 1934 1154 00319FE5 		ldr	r3, .L219+8
 1935 1158 B030D3E1 		mov	r2, #0
 1936 115c 000053E3 		strb	r2, [r3, #0]
 1937 1160 0200001A 		.loc 1 405 0
 1938 1164 11205BE5 		b	.L149
 1939 1168 F0309FE5 	.L167:
 1940 116c B020C3E1 		.loc 1 407 0
 1941              		ldr	r3, .L219+8
 393:uart.c        **** 				if (cnt++==1)
 1942              	#14
 1943 1170 E4309FE5 		strb	r2, [r3, #0]
 1944 1174 B030D3E1 		.loc 1 408 0
 1945 1178 013083E2 		b	.L149
 1946 117c 0338A0E1 	.L168:
 1947 1180 2328A0E1 		.loc 1 410 0
 1948 1184 D0309FE5 		ldr	r3, .L219+24
 1949 1188 B020C3E1 		ldrb	r3, [r3, #0]
 1950 118c C8309FE5 		and	r3, r3, #255
 1951 1190 B030D3E1 		cmp	r3, #0
 1952 1194 020053E3 		bne	.L149
 1953 1198 2400001A 		.loc 1 412 0
 394:uart.c        **** 				{
 395:uart.c        **** 					cnt=0;
 1954              	19+24
 1955 119c B8209FE5 		mov	r3, #1
 1956 11a0 0030A0E3 		strb	r3, [r2, #0]
 1957 11a4 B030C2E1 		.loc 1 413 0
 396:uart.c        **** 					state=12;
 1958              		r2, .L219+8
 1959 11a8 A4209FE5 		mov	r3, #0
 1960 11ac 0C30A0E3 		strb	r3, [r2, #0]
 1961 11b0 0030C2E5 		.loc 1 415 0
 397:uart.c        **** 				}
 398:uart.c        **** 			break;
 1962              	L149
 1963 11b4 1D0000EA 	.L156:
 1964              		.loc 1 417 0
 399:uart.c        **** 			case 12:
 400:uart.c        **** 				if (c==0x06)		//ACK of a CFG-message
 1965              	r	r3, .L219+8
 1966 11b8 11305BE5 		mov	r2, #0
 1967 11bc 060053E3 		strb	r2, [r3, #0]
 1968 11c0 0300001A 	.L149:
 401:uart.c        **** 				{
 402:uart.c        **** 					state=13;
 1969              	c 1 465 0
 1970 11c4 88309FE5 		mov	r3, #0
 1971 11c8 0D20A0E3 		sub	r3, r3, #4048
 1972 11cc 0020C3E5 		mov	r2, #0
 1973 11d0 160000EA 		str	r2, [r3, #0]
 1974              		.loc 1 466 0
 403:uart.c        **** 				} else
 404:uart.c        **** 					state=0;
 1975              	p, fp, #12
 1976 11d4 78309FE5 		ldmfd	sp, {fp, sp, lr}
 1977 11d8 0020A0E3 		bx	lr
 1978 11dc 0020C3E5 	.L220:
 405:uart.c        **** 			break;
 1979              	ign	2
 1980 11e0 120000EA 	.L219:
 1981              		.word	transmission1_running
 406:uart.c        **** 			case 13:
 407:uart.c        **** 				state=14;
 1982              	ord	baudrate1_change
 1983 11e4 68309FE5 		.word	state.2049
 1984 11e8 0E20A0E3 		.word	current_packet.2050
 1985 11ec 0020C3E5 		.word	cnt.2051
 408:uart.c        **** 			break;
 1986              	rd	length.2052
 1987 11f0 0E0000EA 		.word	GPS_ACK_received
 1988              	.LFE8:
 409:uart.c        **** 			case 14:
 410:uart.c        **** 				if (!GPS_ACK_received)
 1989              	ize	uart1ISR, .-uart1ISR
 1990 11f4 68309FE5 		.align	2
 1991 11f8 0030D3E5 		.global	uart0ISR
 1993 1200 000053E3 	uart0ISR:
 1994 1204 0900001A 	.LFB9:
 411:uart.c        **** 				{
 412:uart.c        **** 					GPS_ACK_received=1;
 1995              	1 471 0
 1996 1208 54209FE5 		@ Function supports interworking.
 1997 120c 0130A0E3 		@ args = 0, pretend = 0, frame = 12
 1998 1210 0030C2E5 		@ frame_needed = 1, uses_anonymous_args = 0
 413:uart.c        **** 					state=0;
 1999              		ip, sp
 2000 1214 38209FE5 	.LCFI27:
 2001 1218 0030A0E3 		stmfd	sp!, {fp, ip, lr, pc}
 2002 121c 0030C2E5 	.LCFI28:
 414:uart.c        **** 				}
 415:uart.c        **** 			break;
 2003              		fp, ip, #4
 2004 1220 020000EA 	.LCFI29:
 2005              		sub	sp, sp, #12
 416:uart.c        **** 			default:
 417:uart.c        **** 				state=0;
 2006              	FI30:
 2007 1224 28309FE5 		.loc 1 478 0
 2008 1228 0020A0E3 		mov	r3, #49152
 2009 122c 0020C3E5 		add	r3, r3, #-536870904
 2010              		ldr	r3, [r3, #0]
 418:uart.c        **** 			break;
 419:uart.c        **** 		}
 420:uart.c        **** 
 421:uart.c        **** #else	//run optical tracking statemachine
 422:uart.c        **** 		switch (state)
 423:uart.c        **** 		{
 424:uart.c        **** 			case 0:
 425:uart.c        **** 				if(c=='>') state=1;
 426:uart.c        **** 			break;
 427:uart.c        **** 			case 1:
 428:uart.c        **** 				if(c=='*') state=2;
 429:uart.c        **** 				else state=0;
 430:uart.c        **** 			break;
 431:uart.c        **** 			case 2:
 432:uart.c        **** 				if(c=='>')	//Startstring received
 433:uart.c        **** 				{
 434:uart.c        **** 					UART1_rxcount=sizeof(OF_Data);
 435:uart.c        **** 					UART1_rxptr=(unsigned char *)&OF_Data_e;
 436:uart.c        **** 				 	state=3;
 437:uart.c        **** 				}
 438:uart.c        **** 				else state=0;
 439:uart.c        **** 			break;
 440:uart.c        **** 			case 3:
 441:uart.c        **** 				UART1_rxcount--;
 442:uart.c        **** 				*UART1_rxptr=c;
 443:uart.c        **** 				UART1_rxptr++;
 444:uart.c        **** 				if (UART1_rxcount==0)
 445:uart.c        **** 	        	{
 446:uart.c        **** 	             	state=0;
 447:uart.c        **** 	             	OF_data_updated=0;
 448:uart.c        **** 	        	}
 449:uart.c        **** 			break;
 450:uart.c        **** 			default:
 451:uart.c        **** 			state=0;
 452:uart.c        **** 			break;
 453:uart.c        **** 		}
 454:uart.c        **** #endif
 455:uart.c        **** 
 456:uart.c        ****         break;
 457:uart.c        ****       case 3:
 458:uart.c        ****         // RLS interrupt
 459:uart.c        ****         break;
 460:uart.c        ****       case 6:
 461:uart.c        ****         // CTI interrupt
 462:uart.c        ****         break;
 463:uart.c        ****    }
 464:uart.c        ****   IDISABLE;
 465:uart.c        ****   VICVectAddr = 0;		/* Acknowledge Interrupt */
 2011              	r3, [fp, #-16]
 2012 1230 0030A0E3 		.loc 1 480 0
 2013 1234 FD3E43E2 		ldr	r3, [fp, #-16]
 2014 1238 0020A0E3 		mov	r3, r3, lsr #1
 2015 123c 002083E5 		and	r3, r3, #7
 466:uart.c        **** }
 2016              	r3, [fp, #-24]
 2017 1240 0CD04BE2 		ldr	r3, [fp, #-24]
 2018 1244 00689DE8 		cmp	r3, #1
 2019 1248 1EFF2FE1 		beq	.L223
 2020              		ldr	r3, [fp, #-24]
 2021              		cmp	r3, #2
 2022              		beq	.L224
 2023 124c 00000000 		b	.L222
 2024 1250 00000000 	.L223:
 2025 1254 5B000000 		.loc 1 484 0
 2026 1258 5A000000 		mov	r3, #-536870912
 2027 125c 58000000 		add	r3, r3, #163840
 2028 1260 56000000 		ldr	r3, [r3, #0]
 2029 1264 12000000 		and	r3, r3, #4194304
 2030              		cmp	r3, #0
 2031              		bne	.L225
 2032              		.loc 1 486 0
 2033              		ldr	r2, .L232
 2034              		mov	r3, #0
 2035              		strb	r3, [r2, #0]
 2036              		.loc 1 487 0
 467:uart.c        **** 
 468:uart.c        **** 
 469:uart.c        **** 
 470:uart.c        **** void uart0ISR(void) __irq
 471:uart.c        **** {
 2037              		r0, #0
 2038              		mov	r1, r3
 2039              		mov	r2, #1
 2040              		bl	ringbuffer
 2041 1268 0DC0A0E1 		mov	r3, r0
 2042              		cmp	r3, #0
 2043 126c 00D82DE9 		beq	.L227
 2044              		.loc 1 489 0
 2045 1270 04B04CE2 		ldr	r2, .L232+4
 2046              		mov	r3, #1
 2047 1274 0CD04DE2 		strb	r3, [r2, #0]
 2048              		.loc 1 490 0
 472:uart.c        ****   unsigned char t;
 473:uart.c        ****   unsigned char UART_rxdata;
 474:uart.c        **** 
 475:uart.c        **** 
 476:uart.c        ****   // Read IIR to clear interrupt and find out the cause
 477:uart.c        ****   IENABLE;
 478:uart.c        ****   unsigned iir = U0IIR;
 2049              	p, #-18]	@ zero_extendqisi2
 2050 1278 0339A0E3 		mov	r0, r3
 2051 127c 8E3283E2 		bl	UARTWriteChar
 2052 1280 003093E5 		b	.L222
 2053 1284 10300BE5 	.L227:
 479:uart.c        ****   // Handle UART interrupt
 480:uart.c        ****   switch ((iir >> 1) & 0x7)
 2054              	 1 494 0
 2055 1288 10301BE5 		ldr	r3, .L232+4
 2056 128c A330A0E1 		mov	r2, #0
 2057 1290 073003E2 		strb	r2, [r3, #0]
 2058 1294 18300BE5 		b	.L222
 2059 1298 18301BE5 	.L225:
 2060 129c 010053E3 		.loc 1 499 0
 2061 12a0 0300000A 		ldr	r3, .L232
 2062 12a4 18301BE5 		mov	r2, #1
 2063 12a8 020053E3 		strb	r2, [r3, #0]
 2064 12ac 2000000A 		.loc 1 501 0
 2065 12b0 260000EA 		b	.L222
 2066              	.L224:
 481:uart.c        ****     {
 482:uart.c        ****       case 1:
 483:uart.c        ****         // THRE interrupt
 484:uart.c        **** 		if(!(IOPIN0&(1<<CTS_RADIO)))
 2067              	
 2068 12b4 0E32A0E3 		mov	r3, #-536870912
 2069 12b8 0A3983E2 		add	r3, r3, #49152
 2070 12bc 003093E5 		ldr	r3, [r3, #0]
 2071 12c0 013503E2 		strb	r3, [fp, #-17]
 2072 12c4 000053E3 		.loc 1 509 0
 2073 12c8 1500001A 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 485:uart.c        **** 		{
 486:uart.c        **** 			trigger_transmission=0;
 2074              	0, r3
 2075 12cc 98209FE5 		bl	HLC_Protocol
 2076 12d0 0030A0E3 	.L222:
 2077 12d4 0030C2E5 		.loc 1 574 0
 487:uart.c        **** 			 if (ringbuffer(RBREAD, &t, 1))
 2078              		r3, #0
 2079 12d8 12304BE2 		sub	r3, r3, #4048
 2080 12dc 0000A0E3 		mov	r2, #0
 2081 12e0 0310A0E1 		str	r2, [r3, #0]
 2082 12e4 0120A0E3 		.loc 1 575 0
 2083 12e8 FEFFFFEB 		sub	sp, fp, #12
 2084 12ec 0030A0E1 		ldmfd	sp, {fp, sp, lr}
 2085 12f0 000053E3 		bx	lr
 2086 12f4 0600000A 	.L233:
 488:uart.c        **** 		     {
 489:uart.c        **** 		       transmission_running=1;
 2087              	
 2088 12f8 70209FE5 	.L232:
 2089 12fc 0130A0E3 		.word	trigger_transmission
 2090 1300 0030C2E5 		.word	transmission_running
 490:uart.c        **** 		       UARTWriteChar(t);
 2091              	E9:
 2093 1308 0300A0E1 		.global	__udivsi3
 2094 130c FEFFFFEB 		.align	2
 2095 1310 0E0000EA 		.global	UARTInitialize
 491:uart.c        **** 		     }
 492:uart.c        **** 		     else
 493:uart.c        **** 		     {
 494:uart.c        **** 		       transmission_running=0;
 2097              	itialize:
 2098 1314 54309FE5 	.LFB10:
 2099 1318 0020A0E3 		.loc 1 578 0
 2100 131c 0020C3E5 		@ Function supports interworking.
 2101 1320 0A0000EA 		@ args = 0, pretend = 0, frame = 8
 2102              		@ frame_needed = 1, uses_anonymous_args = 0
 495:uart.c        **** 		     }
 496:uart.c        **** 		}
 497:uart.c        **** 		else
 498:uart.c        **** 		{
 499:uart.c        **** 			trigger_transmission=1;
 2103              	p, sp
 2104 1324 40309FE5 	.LCFI31:
 2105 1328 0120A0E3 		stmfd	sp!, {fp, ip, lr, pc}
 2106 132c 0020C3E5 	.LCFI32:
 500:uart.c        **** 		}
 501:uart.c        **** 		break;
 2107              		fp, ip, #4
 2108 1330 060000EA 	.LCFI33:
 2109              		sub	sp, sp, #8
 502:uart.c        **** 
 503:uart.c        ****       case 2:
 504:uart.c        ****         // RDA interrupt
 505:uart.c        ****         //receive handler
 506:uart.c        ****     	UART_rxdata = U0RBR;
 2110              	FI34:
 2111 1334 0E32A0E3 		str	r0, [fp, #-20]
 2112 1338 033983E2 		.loc 1 579 0
 2113 133c 003093E5 		bl	peripheralClockFrequency
 2114 1340 11304BE5 		mov	r2, r0
 507:uart.c        ****     	//if (HLC_index >= 256) HLC_index = 0;
 508:uart.c        ****     	//HLC_buffer[HLC_index++] = U0RBR;
 509:uart.c        ****     	HLC_Protocol(UART_rxdata);
 2115              	r3, [fp, #-20]
 2116 1344 11305BE5 		mov	r3, r3, asl #4
 2117 1348 0300A0E1 		mov	r0, r2
 2118 134c FEFFFFEB 		mov	r1, r3
 2119              		bl	__udivsi3
 510:uart.c        ****         //UARTWriteChar(UART_rxdata);
 511:uart.c        ****         /*if (UART_syncstate==0)
 512:uart.c        **** 		{
 513:uart.c        **** 			if (UART_rxdata=='>') UART_syncstate++; else UART_syncstate=0;
 514:uart.c        **** 		}
 515:uart.c        **** 		else if (UART_syncstate==1)
 516:uart.c        **** 		{
 517:uart.c        **** 			if (UART_rxdata=='*') UART_syncstate++; else UART_syncstate=0;
 518:uart.c        **** 		}
 519:uart.c        **** 		else if (UART_syncstate==2)
 520:uart.c        **** 		{
 521:uart.c        **** 			if (UART_rxdata=='>') UART_syncstate++; else UART_syncstate=0;
 522:uart.c        **** 		}
 523:uart.c        **** 		else if (UART_syncstate==3)
 524:uart.c        **** 		{
 525:uart.c        **** 			if (UART_rxdata=='d') //data pending (e.g. flight params)
 526:uart.c        **** 			{
 527:uart.c        **** 				UART_syncstate=8;
 528:uart.c        **** 			}
 529:uart.c        ****             else if (UART_rxdata=='c') //calibration data
 530:uart.c        ****             {
 531:uart.c        ****                	UART_syncstate=4;
 532:uart.c        ****             }
 533:uart.c        ****             else if (UART_rxdata=='p') //select packets
 534:uart.c        ****             {
 535:uart.c        ****                 UART_syncstate=6;
 536:uart.c        ****             }
 537:uart.c        ****             else if (UART_rxdata=='r')  //select data_output_rate
 538:uart.c        ****             {
 539:uart.c        ****                	UART_syncstate=7;
 540:uart.c        ****             }
 541:uart.c        ****             else UART_syncstate=0;
 542:uart.c        ****         }
 543:uart.c        ****         else if (UART_syncstate==4)
 544:uart.c        ****         {
 545:uart.c        ****         	UART_syncstate=0;
 546:uart.c        ****         }
 547:uart.c        **** 		else if (UART_syncstate==5)
 548:uart.c        **** 		{
 549:uart.c        **** 			UART_rxcount--;
 550:uart.c        **** 			*UART_rxptr=UART_rxdata;
 551:uart.c        **** 			UART_rxptr++;
 552:uart.c        **** 			if (UART_rxcount==0)
 553:uart.c        ****         	{
 554:uart.c        ****              	UART_syncstate=0;
 555:uart.c        ****         	}
 556:uart.c        **** 		}
 557:uart.c        **** 		else if(UART_syncstate==8)
 558:uart.c        **** 		{
 559:uart.c        **** 			UART_syncstate=0;
 560:uart.c        **** 		}
 561:uart.c        **** 		else UART_syncstate=0;*/
 562:uart.c        **** 
 563:uart.c        ****         break;
 564:uart.c        **** /*      case 3:
 565:uart.c        ****         // RLS interrupt
 566:uart.c        ****     	  printf("RLS Interrupt\n\r");
 567:uart.c        ****         break;
 568:uart.c        ****       case 6:
 569:uart.c        ****         // CTI interrupt
 570:uart.c        ****     	  printf("CTI Interrupt\n\r");
 571:uart.c        ****         break;*/
 572:uart.c        ****   }
 573:uart.c        ****   IDISABLE;
 574:uart.c        ****   VICVectAddr = 0;		// Acknowledge Interrupt
 2120              	r3, r0
 2121 1350 0030A0E3 		str	r3, [fp, #-16]
 2122 1354 FD3E43E2 		.loc 1 582 0
 2123 1358 0020A0E3 		mov	r3, #49152
 2124 135c 002083E5 		add	r3, r3, #-536870900
 575:uart.c        ****  }
 2125              	r2, #131
 2126 1360 0CD04BE2 		str	r2, [r3, #0]
 2127 1364 00689DE8 		.loc 1 583 0
 2128 1368 1EFF2FE1 		mov	r3, #-536870912
 2129              		add	r3, r3, #49152
 2130              		ldr	r2, [fp, #-16]
 2131              		and	r2, r2, #255
 2132 136c 00000000 		str	r2, [r3, #0]
 2133 1370 00000000 		.loc 1 584 0
 2134              		mov	r2, #49152
 2135              		add	r2, r2, #-536870908
 2136              		ldr	r3, [fp, #-16]
 2137              		mov	r3, r3, lsr #8
 2138              		and	r3, r3, #255
 2139              		str	r3, [r2, #0]
 2140              		.loc 1 585 0
 2141              		mov	r2, #49152
 576:uart.c        **** 
 577:uart.c        **** void UARTInitialize(unsigned int baud)
 578:uart.c        **** {
 2142              	6870900
 2143              		mov	r3, #49152
 2144              		add	r3, r3, #-536870900
 2145              		ldr	r3, [r3, #0]
 2146 1374 0DC0A0E1 		bic	r3, r3, #128
 2147              		str	r3, [r2, #0]
 2148 1378 00D82DE9 		.loc 1 586 0
 2149              		mov	r3, #49152
 2150 137c 04B04CE2 		add	r3, r3, #-536870904
 2151              		mov	r2, #1
 2152 1380 08D04DE2 		str	r2, [r3, #0]
 2153              		.loc 1 589 0
 2154 1384 14000BE5 		sub	sp, fp, #12
 579:uart.c        ****   unsigned int divisor = peripheralClockFrequency() / (16 * baud);
 2155              	p, sp, lr}
 2156 1388 FEFFFFEB 		bx	lr
 2157 138c 0020A0E1 	.LFE10:
 2159 1394 0332A0E1 		.align	2
 2160 1398 0200A0E1 		.global	UART1Initialize
 2162 13a0 FEFFFFEB 	UART1Initialize:
 2163 13a4 0030A0E1 	.LFB11:
 2164 13a8 10300BE5 		.loc 1 592 0
 580:uart.c        **** 
 581:uart.c        ****   //UART0
 582:uart.c        ****   U0LCR = 0x83; /* 8 bit, 1 stop bit, no parity, enable DLAB */
 2165              	n supports interworking.
 2166 13ac 0339A0E3 		@ args = 0, pretend = 0, frame = 8
 2167 13b0 CE3283E2 		@ frame_needed = 1, uses_anonymous_args = 0
 2168 13b4 8320A0E3 		mov	ip, sp
 2169 13b8 002083E5 	.LCFI35:
 583:uart.c        ****   U0DLL = divisor & 0xFF;
 2170              	d	sp!, {fp, ip, lr, pc}
 2171 13bc 0E32A0E3 	.LCFI36:
 2172 13c0 033983E2 		sub	fp, ip, #4
 2173 13c4 10201BE5 	.LCFI37:
 2174 13c8 FF2002E2 		sub	sp, sp, #8
 2175 13cc 002083E5 	.LCFI38:
 584:uart.c        ****   U0DLM = (divisor >> 8) & 0xFF;
 2176              	0, [fp, #-20]
 2177 13d0 0329A0E3 		.loc 1 593 0
 2178 13d4 4E2282E2 		bl	peripheralClockFrequency
 2179 13d8 10301BE5 		mov	r2, r0
 2180 13dc 2334A0E1 		ldr	r3, [fp, #-20]
 2181 13e0 FF3003E2 		mov	r3, r3, asl #4
 2182 13e4 003082E5 		mov	r0, r2
 585:uart.c        ****   U0LCR &= ~0x80; /* Disable DLAB */
 2183              	, r3
 2184 13e8 0329A0E3 		bl	__udivsi3
 2185 13ec CE2282E2 		mov	r3, r0
 2186 13f0 0339A0E3 		str	r3, [fp, #-16]
 2187 13f4 CE3283E2 		.loc 1 595 0
 2188 13f8 003093E5 		mov	r3, #-536870900
 2189 13fc 8030C3E3 		add	r3, r3, #65536
 2190 1400 003082E5 		mov	r2, #131
 586:uart.c        ****   U0FCR = 1;
 2191              	 [r3, #0]
 2192 1404 0339A0E3 		.loc 1 596 0
 2193 1408 8E3283E2 		mov	r3, #-536870912
 2194 140c 0120A0E3 		add	r3, r3, #65536
 2195 1410 002083E5 		ldr	r2, [fp, #-16]
 587:uart.c        **** 
 588:uart.c        **** 
 589:uart.c        **** }
 2196              	r2, r2, #255
 2197 1414 0CD04BE2 		str	r2, [r3, #0]
 2198 1418 00689DE8 		.loc 1 597 0
 2199 141c 1EFF2FE1 		mov	r2, #-536870908
 2200              		add	r2, r2, #65536
 2201              		ldr	r3, [fp, #-16]
 2202              		mov	r3, r3, lsr #8
 2203              		and	r3, r3, #255
 2204              		str	r3, [r2, #0]
 2205              		.loc 1 598 0
 2206              		mov	r2, #-536870900
 590:uart.c        **** 
 591:uart.c        **** void UART1Initialize(unsigned int baud)
 592:uart.c        **** {
 2207              	, #65536
 2208              		mov	r3, #-536870900
 2209              		add	r3, r3, #65536
 2210              		ldr	r3, [r3, #0]
 2211 1420 0DC0A0E1 		bic	r3, r3, #128
 2212              		str	r3, [r2, #0]
 2213 1424 00D82DE9 		.loc 1 599 0
 2214              		mov	r3, #-536870904
 2215 1428 04B04CE2 		add	r3, r3, #65536
 2216              		mov	r2, #1
 2217 142c 08D04DE2 		str	r2, [r3, #0]
 2218              		.loc 1 600 0
 2219 1430 14000BE5 		sub	sp, fp, #12
 593:uart.c        ****   unsigned int divisor = peripheralClockFrequency() / (16 * baud);
 2220              	p, sp, lr}
 2221 1434 FEFFFFEB 		bx	lr
 2222 1438 0020A0E1 	.LFE11:
 2224 1440 0332A0E1 		.align	2
 2225 1444 0200A0E1 		.global	UARTWriteChar
 2227 144c FEFFFFEB 	UARTWriteChar:
 2228 1450 0030A0E1 	.LFB12:
 2229 1454 10300BE5 		.loc 1 605 0
 594:uart.c        **** //UART1
 595:uart.c        ****   U1LCR = 0x83; /* 8 bit, 1 stop bit, no parity, enable DLAB */
 2230              	n supports interworking.
 2231 1458 CE32A0E3 		@ args = 0, pretend = 0, frame = 4
 2232 145c 013883E2 		@ frame_needed = 1, uses_anonymous_args = 0
 2233 1460 8320A0E3 		mov	ip, sp
 2234 1464 002083E5 	.LCFI39:
 596:uart.c        ****   U1DLL = divisor & 0xFF;
 2235              	d	sp!, {fp, ip, lr, pc}
 2236 1468 0E32A0E3 	.LCFI40:
 2237 146c 013883E2 		sub	fp, ip, #4
 2238 1470 10201BE5 	.LCFI41:
 2239 1474 FF2002E2 		sub	sp, sp, #4
 2240 1478 002083E5 	.LCFI42:
 597:uart.c        ****   U1DLM = (divisor >> 8) & 0xFF;
 2241              	3, r0
 2242 147c 4E22A0E3 		strb	r3, [fp, #-16]
 2243 1480 012882E2 	.L239:
 2244 1484 10301BE5 		.loc 1 606 0
 2245 1488 2334A0E1 		mov	r3, #-536870912
 2246 148c FF3003E2 		add	r3, r3, #49152
 2247 1490 003082E5 		add	r3, r3, #20
 598:uart.c        ****   U1LCR &= ~0x80; /* Disable DLAB */
 2248              	, [r3, #0]
 2249 1494 CE22A0E3 		and	r3, r3, #32
 2250 1498 012882E2 		cmp	r3, #0
 2251 149c CE32A0E3 		beq	.L239
 2252 14a0 013883E2 		.loc 1 607 0
 2253 14a4 003093E5 		mov	r3, #-536870912
 2254 14a8 8030C3E3 		add	r3, r3, #49152
 2255 14ac 003082E5 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 599:uart.c        ****   U1FCR = 1;
 2256              	 [r3, #0]
 2257 14b0 8E32A0E3 		.loc 1 608 0
 2258 14b4 013883E2 		sub	sp, fp, #12
 2259 14b8 0120A0E3 		ldmfd	sp, {fp, sp, lr}
 2260 14bc 002083E5 		bx	lr
 600:uart.c        **** }
 2261              	2:
 2263 14c4 00689DE8 		.align	2
 2264 14c8 1EFF2FE1 		.global	UART1WriteChar
 2266              	UART1WriteChar:
 2267              	.LFB13:
 2268              		.loc 1 611 0
 2269              		@ Function supports interworking.
 2270              		@ args = 0, pretend = 0, frame = 4
 2271              		@ frame_needed = 1, uses_anonymous_args = 0
 601:uart.c        **** 
 602:uart.c        **** 
 603:uart.c        **** //Write to UART0
 604:uart.c        **** void UARTWriteChar(unsigned char ch)
 605:uart.c        **** {
 2272              	
 2273              	.LCFI43:
 2274              		stmfd	sp!, {fp, ip, lr, pc}
 2275              	.LCFI44:
 2276 14cc 0DC0A0E1 		sub	fp, ip, #4
 2277              	.LCFI45:
 2278 14d0 00D82DE9 		sub	sp, sp, #4
 2279              	.LCFI46:
 2280 14d4 04B04CE2 		mov	r3, r0
 2281              		strb	r3, [fp, #-16]
 2282 14d8 04D04DE2 	.L243:
 2283              		.loc 1 612 0
 2284 14dc 0030A0E1 		mov	r3, #-536870912
 2285 14e0 10304BE5 		add	r3, r3, #65536
 2286              		add	r3, r3, #20
 606:uart.c        ****   while ((U0LSR & 0x20) == 0);
 2287              	#0]
 2288 14e4 0E32A0E3 		and	r3, r3, #32
 2289 14e8 033983E2 		cmp	r3, #0
 2290 14ec 143083E2 		beq	.L243
 2291 14f0 003093E5 		.loc 1 613 0
 2292 14f4 203003E2 		mov	r3, #-536870912
 2293 14f8 000053E3 		add	r3, r3, #65536
 2294 14fc F8FFFF0A 		ldrb	r2, [fp, #-16]	@ zero_extendqisi2
 607:uart.c        ****   U0THR = ch;
 2295              	 [r3, #0]
 2296 1500 0E32A0E3 		.loc 1 614 0
 2297 1504 033983E2 		sub	sp, fp, #12
 2298 1508 10205BE5 		ldmfd	sp, {fp, sp, lr}
 2299 150c 002083E5 		bx	lr
 608:uart.c        **** }
 2300              	3:
 2302 1514 00689DE8 		.align	2
 2303 1518 1EFF2FE1 		.global	UARTReadChar
 2305              	UARTReadChar:
 2306              	.LFB14:
 2307              		.loc 1 617 0
 2308              		@ Function supports interworking.
 2309              		@ args = 0, pretend = 0, frame = 0
 2310              		@ frame_needed = 1, uses_anonymous_args = 0
 609:uart.c        **** //Write to UART1
 610:uart.c        **** void UART1WriteChar(unsigned char ch)
 611:uart.c        **** {
 2311              	
 2312              	.LCFI47:
 2313              		stmfd	sp!, {fp, ip, lr, pc}
 2314              	.LCFI48:
 2315 151c 0DC0A0E1 		sub	fp, ip, #4
 2316              	.LCFI49:
 2317 1520 00D82DE9 	.L247:
 2318              		.loc 1 618 0
 2319 1524 04B04CE2 		mov	r3, #-536870912
 2320              		add	r3, r3, #49152
 2321 1528 04D04DE2 		add	r3, r3, #20
 2322              		ldr	r3, [r3, #0]
 2323 152c 0030A0E1 		and	r3, r3, #1
 2324 1530 10304BE5 		cmp	r3, #0
 2325              		beq	.L247
 612:uart.c        ****   while ((U1LSR & 0x20) == 0);
 2326              		mov	r3, #-536870912
 2327 1534 0E32A0E3 		add	r3, r3, #49152
 2328 1538 013883E2 		ldr	r3, [r3, #0]
 2329 153c 143083E2 		and	r3, r3, #255
 2330 1540 003093E5 		.loc 1 620 0
 2331 1544 203003E2 		mov	r0, r3
 2332 1548 000053E3 		sub	sp, fp, #12
 2333 154c F8FFFF0A 		ldmfd	sp, {fp, sp, lr}
 613:uart.c        ****   U1THR = ch;
 2334              	LFE14:
 2336 1554 013883E2 		.align	2
 2337 1558 10205BE5 		.global	UART1ReadChar
 614:uart.c        **** }
 2339              	ReadChar:
 2340 1560 0CD04BE2 	.LFB15:
 2341 1564 00689DE8 		.loc 1 623 0
 2342 1568 1EFF2FE1 		@ Function supports interworking.
 2343              		@ args = 0, pretend = 0, frame = 0
 2344              		@ frame_needed = 1, uses_anonymous_args = 0
 2345              		mov	ip, sp
 2346              	.LCFI50:
 2347              		stmfd	sp!, {fp, ip, lr, pc}
 2348              	.LCFI51:
 2349              		sub	fp, ip, #4
 615:uart.c        **** 
 616:uart.c        **** unsigned char UARTReadChar(void)
 617:uart.c        **** {
 2350              	251:
 2351              		.loc 1 624 0
 2352              		mov	r3, #-536870912
 2353              		add	r3, r3, #65536
 2354 156c 0DC0A0E1 		add	r3, r3, #20
 2355              		ldr	r3, [r3, #0]
 2356 1570 00D82DE9 		and	r3, r3, #1
 2357              		cmp	r3, #0
 2358 1574 04B04CE2 		beq	.L251
 2359              		.loc 1 625 0
 2360              		mov	r3, #-536870912
 618:uart.c        ****   while ((U0LSR & 0x01) == 0);
 2361              	, #65536
 2362 1578 0E32A0E3 		ldr	r3, [r3, #0]
 2363 157c 033983E2 		and	r3, r3, #255
 2364 1580 143083E2 		.loc 1 626 0
 2365 1584 003093E5 		mov	r0, r3
 2366 1588 013003E2 		sub	sp, fp, #12
 2367 158c 000053E3 		ldmfd	sp, {fp, sp, lr}
 2368 1590 F8FFFF0A 		bx	lr
 619:uart.c        ****   return U0RBR;
 2370 1594 0E32A0E3 		.align	2
 2371 1598 033983E2 		.global	__putchar
 2373 15a0 FF3003E2 	__putchar:
 620:uart.c        **** }
 2374              	6:
 2375 15a4 0300A0E1 		.loc 1 629 0
 2376 15a8 0CD04BE2 		@ Function supports interworking.
 2377 15ac 00689DE8 		@ args = 0, pretend = 0, frame = 4
 2378 15b0 1EFF2FE1 		@ frame_needed = 1, uses_anonymous_args = 0
 2379              		mov	ip, sp
 2380              	.LCFI53:
 2381              		stmfd	sp!, {fp, ip, lr, pc}
 2382              	.LCFI54:
 2383              		sub	fp, ip, #4
 2384              	.LCFI55:
 2385              		sub	sp, sp, #4
 621:uart.c        **** 
 622:uart.c        **** unsigned char UART1ReadChar(void)
 623:uart.c        **** {
 2386              	r	r0, [fp, #-16]
 2387              		.loc 1 630 0
 2388              		ldr	r3, [fp, #-16]
 2389              		cmp	r3, #10
 2390 15b4 0DC0A0E1 		bne	.L255
 2391              		.loc 1 631 0
 2392 15b8 00D82DE9 		mov	r0, #13
 2393              		bl	UARTWriteChar
 2394 15bc 04B04CE2 	.L255:
 2395              		.loc 1 632 0
 2396              		ldr	r3, [fp, #-16]
 624:uart.c        ****   while ((U1LSR & 0x01) == 0);
 2397              	, #255
 2398 15c0 0E32A0E3 		mov	r0, r3
 2399 15c4 013883E2 		bl	UARTWriteChar
 2400 15c8 143083E2 		.loc 1 633 0
 2401 15cc 003093E5 		sub	sp, fp, #12
 2402 15d0 013003E2 		ldmfd	sp, {fp, sp, lr}
 2403 15d4 000053E3 		bx	lr
 2404 15d8 F8FFFF0A 	.LFE16:
 625:uart.c        ****   return U1RBR;
 2405              	_putchar, .-__putchar
 2406 15dc 0E32A0E3 		.align	2
 2407 15e0 013883E2 		.global	UART_send
 2409 15e8 FF3003E2 	UART_send:
 626:uart.c        **** }
 2410              	7:
 2411 15ec 0300A0E1 		.loc 1 636 0
 2412 15f0 0CD04BE2 		@ Function supports interworking.
 2413 15f4 00689DE8 		@ args = 0, pretend = 0, frame = 12
 2414 15f8 1EFF2FE1 		@ frame_needed = 1, uses_anonymous_args = 0
 2415              		mov	ip, sp
 2416              	.LCFI57:
 2417              		stmfd	sp!, {fp, ip, lr, pc}
 2418              	.LCFI58:
 2419              		sub	fp, ip, #4
 2420              	.LCFI59:
 2421              		sub	sp, sp, #12
 627:uart.c        **** 
 628:uart.c        **** void __putchar(int ch)
 629:uart.c        **** {
 2422              	r	r0, [fp, #-20]
 2423              		mov	r3, r1
 2424              		strb	r3, [fp, #-24]
 2425              		.loc 1 637 0
 2426 15fc 0DC0A0E1 		mov	r3, #0
 2427              		strb	r3, [fp, #-13]
 2428 1600 00D82DE9 	.L259:
 2429              		.loc 1 638 0
 2430 1604 04B04CE2 		mov	r3, #-536870912
 2431              		add	r3, r3, #49152
 2432 1608 04D04DE2 		add	r3, r3, #20
 2433              		ldr	r3, [r3, #0]
 2434 160c 10000BE5 		and	r3, r3, #32
 630:uart.c        ****   if (ch == '\n')
 2435              	beq	.L259
 2436 1610 10301BE5 		.loc 1 639 0
 2437 1614 0A0053E3 		b	.L266
 2438 1618 0100001A 	.L262:
 631:uart.c        ****     UARTWriteChar('\r');
 2439              	c 1 641 0
 2440 161c 0D00A0E3 		mov	r2, #-536870912
 2441 1620 FEFFFFEB 		add	r2, r2, #49152
 2442              		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 632:uart.c        ****   UARTWriteChar(ch);
 2443              		r1, r3
 2444 1624 10301BE5 		ldr	r3, [fp, #-20]
 2445 1628 FF3003E2 		add	r3, r1, r3
 2446 162c 0300A0E1 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2447 1630 FEFFFFEB 		str	r3, [r2, #0]
 633:uart.c        **** }
 2448              		r3, [fp, #-13]
 2449 1634 0CD04BE2 		add	r3, r3, #1
 2450 1638 00689DE8 		strb	r3, [fp, #-13]
 2451 163c 1EFF2FE1 		.loc 1 642 0
 2452              		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2453              		cmp	r3, #15
 2454              		bls	.L261
 2455              	.L263:
 2456              		.loc 1 644 0
 2457              		mov	r3, #-536870912
 2458              		add	r3, r3, #49152
 634:uart.c        **** 
 635:uart.c        **** void UART_send(char *buffer, unsigned char length)
 636:uart.c        **** {
 2459              	, #20
 2460              		ldr	r3, [r3, #0]
 2461              		and	r3, r3, #32
 2462              		cmp	r3, #0
 2463 1640 0DC0A0E1 		beq	.L263
 2464              	.L261:
 2465 1644 00D82DE9 	.L266:
 2466              		.loc 1 639 0
 2467 1648 04B04CE2 		ldrb	r3, [fp, #-24]
 2468              		sub	r3, r3, #1
 2469 164c 0CD04DE2 		strb	r3, [fp, #-24]
 2470              		ldrb	r3, [fp, #-24]	@ zero_extendqisi2
 2471 1650 14000BE5 		cmp	r3, #255
 2472 1654 0130A0E1 		bne	.L262
 2473 1658 18304BE5 		.loc 1 647 0
 637:uart.c        ****   unsigned char cnt=0;
 2474              	2
 2475 165c 0030A0E3 		ldmfd	sp, {fp, sp, lr}
 2476 1660 0D304BE5 		bx	lr
 2477              	.LFE17:
 638:uart.c        ****   while (!(U0LSR & 0x20)); //wait until U0THR and U0TSR are both empty
 2478              	ze	UART_send, .-UART_send
 2479 1664 0E32A0E3 		.align	2
 2480 1668 033983E2 		.global	UART1_send
 2482 1670 003093E5 	UART1_send:
 2483 1674 203003E2 	.LFB18:
 2484 1678 000053E3 		.loc 1 650 0
 2485 167c F8FFFF0A 		@ Function supports interworking.
 639:uart.c        ****   while(length--)
 2486              	= 0, pretend = 0, frame = 12
 2487 1680 140000EA 		@ frame_needed = 1, uses_anonymous_args = 0
 2488              		mov	ip, sp
 640:uart.c        ****   {
 641:uart.c        ****     U0THR = buffer[cnt++];
 2489              	FI61:
 2490 1684 0E22A0E3 		stmfd	sp!, {fp, ip, lr, pc}
 2491 1688 032982E2 	.LCFI62:
 2492 168c 0D305BE5 		sub	fp, ip, #4
 2493 1690 0310A0E1 	.LCFI63:
 2494 1694 14301BE5 		sub	sp, sp, #12
 2495 1698 033081E0 	.LCFI64:
 2496 169c 0030D3E5 		str	r0, [fp, #-20]
 2497 16a0 003082E5 		mov	r3, r1
 2498 16a4 0D305BE5 		strb	r3, [fp, #-24]
 2499 16a8 013083E2 		.loc 1 651 0
 2500 16ac 0D304BE5 		mov	r3, #0
 642:uart.c        ****     if(cnt>15)
 2501              	p, #-13]
 2502 16b0 0D305BE5 		.loc 1 652 0
 2503 16b4 0F0053E3 		b	.L268
 2504 16b8 0600009A 	.L269:
 2505              		.loc 1 654 0
 643:uart.c        ****     {
 644:uart.c        ****       while (!(U0LSR & 0x20)); //wait until U0THR is empty
 2506              	r3, #-536870912
 2507 16bc 0E32A0E3 		add	r3, r3, #49152
 2508 16c0 033983E2 		add	r3, r3, #20
 2509 16c4 143083E2 		ldr	r3, [r3, #0]
 2510 16c8 003093E5 		and	r3, r3, #32
 2511 16cc 203003E2 		cmp	r3, #0
 2512 16d0 000053E3 		beq	.L269
 2513 16d4 F8FFFF0A 		.loc 1 655 0
 2514              		mov	r2, #-536870912
 2515              		add	r2, r2, #65536
 2516              		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2517 16d8 18305BE5 		mov	r1, r3
 2518 16dc 013043E2 		ldr	r3, [fp, #-20]
 2519 16e0 18304BE5 		add	r3, r1, r3
 2520 16e4 18305BE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2521 16e8 FF0053E3 		str	r3, [r2, #0]
 2522 16ec E4FFFF1A 		ldrb	r3, [fp, #-13]
 645:uart.c        ****     }
 646:uart.c        ****   }
 647:uart.c        **** }
 2523              	strb	r3, [fp, #-13]
 2524 16f0 0CD04BE2 	.L268:
 2525 16f4 00689DE8 		.loc 1 652 0
 2526 16f8 1EFF2FE1 		ldrb	r3, [fp, #-24]
 2527              		sub	r3, r3, #1
 2528              		strb	r3, [fp, #-24]
 2529              		ldrb	r3, [fp, #-24]	@ zero_extendqisi2
 2530              		cmp	r3, #255
 2531              		bne	.L269
 2532              		.loc 1 657 0
 2533              		sub	sp, fp, #12
 648:uart.c        **** 
 649:uart.c        **** void UART1_send(unsigned char *buffer, unsigned char length)
 650:uart.c        **** {
 2534              	{fp, sp, lr}
 2535              		bx	lr
 2536              	.LFE18:
 2538 16fc 0DC0A0E1 		.align	2
 2539              		.global	UART_send_ringbuffer
 2541              	UART_send_ringbuffer:
 2542 1704 04B04CE2 	.LFB19:
 2543              		.loc 1 661 0
 2544 1708 0CD04DE2 		@ Function supports interworking.
 2545              		@ args = 0, pretend = 0, frame = 4
 2546 170c 14000BE5 		@ frame_needed = 1, uses_anonymous_args = 0
 2547 1710 0130A0E1 		mov	ip, sp
 2548 1714 18304BE5 	.LCFI65:
 651:uart.c        ****   unsigned char cnt=0;
 2549              	, ip, lr, pc}
 2550 1718 0030A0E3 	.LCFI66:
 2551 171c 0D304BE5 		sub	fp, ip, #4
 652:uart.c        ****   while(length--)
 2552              	FI67:
 2553 1720 110000EA 		sub	sp, sp, #4
 2554              	.LCFI68:
 653:uart.c        ****   {
 654:uart.c        ****     while (!(U0LSR & 0x20)); //wait until U0THR is empty
 2555              	oc 1 663 0
 2556 1724 0E32A0E3 		ldr	r3, .L278
 2557 1728 033983E2 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2558 172c 143083E2 		cmp	r3, #0
 2559 1730 003093E5 		bne	.L277
 2560 1734 203003E2 		.loc 1 665 0
 2561 1738 000053E3 		sub	r3, fp, #13
 2562 173c F8FFFF0A 		mov	r0, #0
 655:uart.c        ****     U1THR = buffer[cnt++];
 2563              	 r3
 2564 1740 0E22A0E3 		mov	r2, #1
 2565 1744 012882E2 		bl	ringbuffer
 2566 1748 0D305BE5 		mov	r3, r0
 2567 174c 0310A0E1 		cmp	r3, #0
 2568 1750 14301BE5 		beq	.L277
 2569 1754 033081E0 		.loc 1 667 0
 2570 1758 0030D3E5 		ldr	r2, .L278
 2571 175c 003082E5 		mov	r3, #1
 2572 1760 0D305BE5 		strb	r3, [r2, #0]
 2573 1764 013083E2 		.loc 1 668 0
 2574 1768 0D304BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2575              		mov	r0, r3
 2576              		bl	UARTWriteChar
 2577 176c 18305BE5 	.L277:
 2578 1770 013043E2 		.loc 1 671 0
 2579 1774 18304BE5 		sub	sp, fp, #12
 2580 1778 18305BE5 		ldmfd	sp, {fp, sp, lr}
 2581 177c FF0053E3 		bx	lr
 2582 1780 E7FFFF1A 	.L279:
 656:uart.c        ****   }
 657:uart.c        **** }
 2583              	ord	transmission_running
 2584 1784 0CD04BE2 	.LFE19:
 2586 178c 1EFF2FE1 		.align	2
 2587              		.global	UART1_send_ringbuffer
 2589              	UART1_send_ringbuffer:
 2590              	.LFB20:
 2591              		.loc 1 674 0
 2592              		@ Function supports interworking.
 2593              		@ args = 0, pretend = 0, frame = 4
 658:uart.c        **** 
 659:uart.c        **** 
 660:uart.c        **** void UART_send_ringbuffer(void)
 661:uart.c        **** {
 2594              	eded = 1, uses_anonymous_args = 0
 2595              		mov	ip, sp
 2596              	.LCFI69:
 2597              		stmfd	sp!, {fp, ip, lr, pc}
 2598 1790 0DC0A0E1 	.LCFI70:
 2599              		sub	fp, ip, #4
 2600 1794 00D82DE9 	.LCFI71:
 2601              		sub	sp, sp, #4
 2602 1798 04B04CE2 	.LCFI72:
 2603              		.loc 1 676 0
 2604 179c 04D04DE2 		ldr	r3, .L285
 2605              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 662:uart.c        ****   unsigned char t;
 663:uart.c        ****   if(!transmission_running)
 2606              		bne	.L284
 2607 17a0 4C309FE5 		.loc 1 678 0
 2608 17a4 0030D3E5 		sub	r3, fp, #13
 2609 17a8 000053E3 		mov	r0, #0
 2610 17ac 0D00001A 		mov	r1, r3
 664:uart.c        ****   {
 665:uart.c        ****     if(ringbuffer(RBREAD, &t, 1))
 2611              	r2, #1
 2612 17b0 0D304BE2 		bl	ringbuffer1
 2613 17b4 0000A0E3 		mov	r3, r0
 2614 17b8 0310A0E1 		cmp	r3, #0
 2615 17bc 0120A0E3 		beq	.L284
 2616 17c0 FEFFFFEB 		.loc 1 680 0
 2617 17c4 0030A0E1 		ldr	r2, .L285
 2618 17c8 000053E3 		mov	r3, #1
 2619 17cc 0500000A 		strb	r3, [r2, #0]
 666:uart.c        ****     {
 667:uart.c        ****       transmission_running=1;
 2620              	81 0
 2621 17d0 1C209FE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2622 17d4 0130A0E3 		mov	r0, r3
 2623 17d8 0030C2E5 		bl	UART1WriteChar
 668:uart.c        ****       UARTWriteChar(t);
 2624              	4:
 2625 17dc 0D305BE5 		.loc 1 684 0
 2626 17e0 0300A0E1 		sub	sp, fp, #12
 2627 17e4 FEFFFFEB 		ldmfd	sp, {fp, sp, lr}
 2628              		bx	lr
 669:uart.c        ****     }
 670:uart.c        ****   }
 671:uart.c        **** }
 2629              	:
 2630 17e8 0CD04BE2 		.align	2
 2631 17ec 00689DE8 	.L285:
 2632 17f0 1EFF2FE1 		.word	transmission1_running
 2633              	.LFE20:
 2635              		.align	2
 2636 17f4 00000000 		.global	UART_SendPacket
 2638              	UART_SendPacket:
 2639              	.LFB21:
 2640              		.loc 1 687 0
 2641              		@ Function supports interworking.
 2642              		@ args = 0, pretend = 0, frame = 20
 2643              		@ frame_needed = 1, uses_anonymous_args = 0
 672:uart.c        **** 
 673:uart.c        **** void UART1_send_ringbuffer(void)
 674:uart.c        **** {
 2644              	FI73:
 2645              		stmfd	sp!, {fp, ip, lr, pc}
 2646              	.LCFI74:
 2647              		sub	fp, ip, #4
 2648 17f8 0DC0A0E1 	.LCFI75:
 2649              		sub	sp, sp, #20
 2650 17fc 00D82DE9 	.LCFI76:
 2651              		str	r0, [fp, #-24]
 2652 1800 04B04CE2 		mov	r3, r1
 2653              		strh	r3, [fp, #-28]	@ movhi
 2654 1804 04D04DE2 		mov	r3, r2
 2655              		strb	r3, [fp, #-32]
 675:uart.c        ****   unsigned char t;
 676:uart.c        ****   if(!transmission1_running)
 2656              	0
 2657 1808 4C309FE5 		mov	r0, #1
 2658 180c 0030D3E5 		ldr	r1, .L289
 2659 1810 000053E3 		mov	r2, #3
 2660 1814 0D00001A 		bl	ringbuffer
 677:uart.c        ****   {
 678:uart.c        ****     if(ringbuffer1(RBREAD, &t, 1))
 2661              	r3, r0
 2662 1818 0D304BE2 		str	r3, [fp, #-16]
 2663 181c 0000A0E3 		.loc 1 691 0
 2664 1820 0310A0E1 		sub	r3, fp, #28
 2665 1824 0120A0E3 		mov	r0, #1
 2666 1828 FEFFFFEB 		mov	r1, r3
 2667 182c 0030A0E1 		mov	r2, #2
 2668 1830 000053E3 		bl	ringbuffer
 2669 1834 0500000A 		mov	r3, r0
 679:uart.c        ****     {
 680:uart.c        ****       transmission1_running=1;
 2670              	[fp, #-16]
 2671 1838 1C209FE5 		.loc 1 692 0
 2672 183c 0130A0E3 		sub	r3, fp, #32
 2673 1840 0030C2E5 		mov	r0, #1
 681:uart.c        ****       UART1WriteChar(t);
 2674              		r1, r3
 2675 1844 0D305BE5 		mov	r2, #1
 2676 1848 0300A0E1 		bl	ringbuffer
 2677 184c FEFFFFEB 		mov	r3, r0
 2678              		str	r3, [fp, #-16]
 682:uart.c        ****     }
 683:uart.c        ****   }
 684:uart.c        **** }
 2679              	 1 693 0
 2680 1850 0CD04BE2 		ldr	r2, [fp, #-24]
 2681 1854 00689DE8 		ldrh	r3, [fp, #-28]
 2682 1858 1EFF2FE1 		mov	r0, #1
 2683              		mov	r1, r2
 2684              		mov	r2, r3
 2685              		bl	ringbuffer
 2686 185c 00000000 		mov	r3, r0
 2687              		str	r3, [fp, #-16]
 2688              		.loc 1 694 0
 2689              		ldrh	r3, [fp, #-28]
 2690              		ldr	r0, [fp, #-24]
 2691              		mov	r1, r3
 2692              		bl	crc16
 2693              		mov	r3, r0
 685:uart.c        **** 
 686:uart.c        **** void UART_SendPacket(void *data, unsigned short count, unsigned char packetdescriptor)
 687:uart.c        **** {
 2694              	#-18]	@ movhi
 2695              		.loc 1 695 0
 2696              		sub	r3, fp, #18
 2697              		mov	r0, #1
 2698 1860 0DC0A0E1 		mov	r1, r3
 2699              		mov	r2, #2
 2700 1864 00D82DE9 		bl	ringbuffer
 2701              		mov	r3, r0
 2702 1868 04B04CE2 		str	r3, [fp, #-16]
 2703              		.loc 1 696 0
 2704 186c 14D04DE2 		mov	r0, #1
 2705              		ldr	r1, .L289+4
 2706 1870 18000BE5 		mov	r2, #3
 2707 1874 0130A0E1 		bl	ringbuffer
 2708 1878 BC314BE1 		mov	r3, r0
 2709 187c 0230A0E1 		str	r3, [fp, #-16]
 2710 1880 20304BE5 		.loc 1 697 0
 688:uart.c        ****   unsigned short crc;
 689:uart.c        ****   int state;
 690:uart.c        ****       state=ringbuffer(RBWRITE, startstring, 3);
 2711              	gbuffer
 2712 1884 0100A0E3 		.loc 1 698 0
 2713 1888 C0109FE5 		sub	sp, fp, #12
 2714 188c 0320A0E3 		ldmfd	sp, {fp, sp, lr}
 2715 1890 FEFFFFEB 		bx	lr
 2716 1894 0030A0E1 	.L290:
 2717 1898 10300BE5 		.align	2
 691:uart.c        ****       state=ringbuffer(RBWRITE, (unsigned char *) &count, 2);
 2718              		.word	startstring
 2719 189c 1C304BE2 		.word	stopstring
 2720 18a0 0100A0E3 	.LFE21:
 2722 18a8 0220A0E3 		.align	2
 2723 18ac FEFFFFEB 		.global	UART_SendPacket_raw
 2725 18b4 10300BE5 	UART_SendPacket_raw:
 692:uart.c        ****       state=ringbuffer(RBWRITE, &packetdescriptor, 1);
 2726              		.loc 1 700 0
 2727 18b8 20304BE2 		@ Function supports interworking.
 2728 18bc 0100A0E3 		@ args = 0, pretend = 0, frame = 8
 2729 18c0 0310A0E1 		@ frame_needed = 1, uses_anonymous_args = 0
 2730 18c4 0120A0E3 		mov	ip, sp
 2731 18c8 FEFFFFEB 	.LCFI77:
 2732 18cc 0030A0E1 		stmfd	sp!, {fp, ip, lr, pc}
 2733 18d0 10300BE5 	.LCFI78:
 693:uart.c        ****       state=ringbuffer(RBWRITE, data, count);
 2734              	 ip, #4
 2735 18d4 18201BE5 	.LCFI79:
 2736 18d8 BC315BE1 		sub	sp, sp, #8
 2737 18dc 0100A0E3 	.LCFI80:
 2738 18e0 0210A0E1 		str	r0, [fp, #-16]
 2739 18e4 0320A0E1 		mov	r3, r1
 2740 18e8 FEFFFFEB 		strh	r3, [fp, #-20]	@ movhi
 2741 18ec 0030A0E1 		.loc 1 701 0
 2742 18f0 10300BE5 		ldr	r3, [fp, #-16]
 694:uart.c        ****                 crc=crc16(data,count);
 2743              	 [fp, #-20]
 2744 18f4 BC315BE1 		mov	r0, #1
 2745 18f8 18001BE5 		mov	r1, r3
 2746 18fc 0310A0E1 		bl	ringbuffer
 2747 1900 FEFFFFEB 		.loc 1 702 0
 2748 1904 0030A0E1 		bl	UART_send_ringbuffer
 2749 1908 B2314BE1 		.loc 1 703 0
 695:uart.c        ****       state=ringbuffer(RBWRITE, (unsigned char *) &crc, 2);
 2750              	, fp, #12
 2751 190c 12304BE2 		ldmfd	sp, {fp, sp, lr}
 2752 1910 0100A0E3 		bx	lr
 2753 1914 0310A0E1 	.LFE22:
 2755 191c FEFFFFEB 		.align	2
 2756 1920 0030A0E1 		.global	mdv_output
 696:uart.c        ****       state=ringbuffer(RBWRITE, stopstring, 3);
 2758              	ut:
 2759 1928 0100A0E3 	.LFB23:
 2760 192c 20109FE5 		.loc 1 706 0
 2761 1930 0320A0E3 		@ Function supports interworking.
 2762 1934 FEFFFFEB 		@ args = 0, pretend = 0, frame = 4
 2763 1938 0030A0E1 		@ frame_needed = 1, uses_anonymous_args = 0
 2764 193c 10300BE5 		mov	ip, sp
 697:uart.c        ****       UART_send_ringbuffer();
 2765              	:
 2766 1940 FEFFFFEB 		stmfd	sp!, {fp, ip, lr, pc}
 698:uart.c        **** }
 2767              	CFI82:
 2768 1944 0CD04BE2 		sub	fp, ip, #4
 2769 1948 00689DE8 	.LCFI83:
 2770 194c 1EFF2FE1 		sub	sp, sp, #4
 2771              	.LCFI84:
 2772              		str	r0, [fp, #-16]
 2773              		.loc 1 707 0
 2774 1950 00000000 		ldr	r2, .L295
 2775 1954 00000000 		mov	r3, #60
 2776              		strb	r3, [r2, #0]
 2777              		.loc 1 708 0
 2778              		ldr	r2, .L295
 2779              		mov	r3, #42
 2780              		strb	r3, [r2, #1]
 2781              		.loc 1 709 0
 2782              		ldr	r2, .L295
 699:uart.c        **** 
 700:uart.c        **** void UART_SendPacket_raw(void *data, unsigned short count) {
 2783              	rb	r3, [r2, #2]
 2784              		.loc 1 710 0
 2785              		ldr	r3, [fp, #-16]
 2786              		mov	r3, r3, lsr #8
 2787 1958 0DC0A0E1 		and	r3, r3, #255
 2788              		ldr	r2, .L295
 2789 195c 00D82DE9 		strb	r3, [r2, #3]
 2790              		.loc 1 711 0
 2791 1960 04B04CE2 		ldr	r3, [fp, #-16]
 2792              		and	r3, r3, #255
 2793 1964 08D04DE2 		ldr	r2, .L295
 2794              		strb	r3, [r2, #4]
 2795 1968 10000BE5 		.loc 1 712 0
 2796 196c 0130A0E1 		ldr	r2, .L295
 2797 1970 B4314BE1 		mov	r3, #60
 701:uart.c        **** 	ringbuffer(RBWRITE, data, count);
 2798              	#5]
 2799 1974 10301BE5 		.loc 1 713 0
 2800 1978 B4215BE1 		ldr	r2, .L295
 2801 197c 0100A0E3 		mov	r3, #35
 2802 1980 0310A0E1 		strb	r3, [r2, #6]
 2803 1984 FEFFFFEB 		.loc 1 714 0
 702:uart.c        **** 	UART_send_ringbuffer();
 2804              	2, .L295
 2805 1988 FEFFFFEB 		mov	r3, #62
 703:uart.c        **** }
 2806              	trb	r3, [r2, #7]
 2807 198c 0CD04BE2 		.loc 1 715 0
 2808 1990 00689DE8 		mov	r0, #1
 2809 1994 1EFF2FE1 		ldr	r1, .L295
 2810              		mov	r2, #8
 2811              		bl	ringbuffer
 2812              		.loc 1 716 0
 2813              		bl	UART_send_ringbuffer
 2814              		.loc 1 717 0
 2815              		sub	sp, fp, #12
 2816              		ldmfd	sp, {fp, sp, lr}
 704:uart.c        **** 
 705:uart.c        **** void mdv_output(unsigned int value) //output for Measurement Distribution Visualizer
 706:uart.c        **** {
 2817              	6:
 2818              		.align	2
 2819              	.L295:
 2820              		.word	send_buffer
 2821 1998 0DC0A0E1 	.LFE23:
 2823 199c 00D82DE9 		.align	2
 2824              		.global	crc_update
 2826              	crc_update:
 2827 19a4 04D04DE2 	.LFB24:
 2828              		.loc 1 720 0
 2829 19a8 10000BE5 		@ Function supports interworking.
 707:uart.c        ****     send_buffer[0]='<';
 2830              	pretend = 0, frame = 8
 2831 19ac 84209FE5 		@ frame_needed = 1, uses_anonymous_args = 0
 2832 19b0 3C30A0E3 		mov	ip, sp
 2833 19b4 0030C2E5 	.LCFI85:
 708:uart.c        ****     send_buffer[1]='*';
 2834              	fd	sp!, {fp, ip, lr, pc}
 2835 19b8 78209FE5 	.LCFI86:
 2836 19bc 2A30A0E3 		sub	fp, ip, #4
 2837 19c0 0130C2E5 	.LCFI87:
 709:uart.c        ****     send_buffer[2]='>';
 2838              		sp, sp, #8
 2839 19c4 6C209FE5 	.LCFI88:
 2840 19c8 3E30A0E3 		mov	r3, r0
 2841 19cc 0230C2E5 		mov	r2, r1
 710:uart.c        ****     send_buffer[3]=(value>>8)&0xFF;
 2842              	h	r3, [fp, #-16]	@ movhi
 2843 19d0 10301BE5 		mov	r3, r2
 2844 19d4 2334A0E1 		strb	r3, [fp, #-20]
 2845 19d8 FF3003E2 		.loc 1 721 0
 2846 19dc 54209FE5 		ldrh	r3, [fp, #-16]	@ movhi
 2847 19e0 0330C2E5 		and	r3, r3, #255
 711:uart.c        ****     send_buffer[4]=value&0xFF;
 2848              	3, r3, #255
 2849 19e4 10301BE5 		ldrb	r2, [fp, #-20]	@ zero_extendqisi2
 2850 19e8 FF3003E2 		mov	r1, r3
 2851 19ec 44209FE5 		mov	r3, r2
 2852 19f0 0430C2E5 		eor	r3, r1, r3
 712:uart.c        ****     send_buffer[5]='<';
 2853              	r3, r3, #255
 2854 19f4 3C209FE5 		strb	r3, [fp, #-20]
 2855 19f8 3C30A0E3 		.loc 1 722 0
 2856 19fc 0530C2E5 		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 713:uart.c        ****     send_buffer[6]='#';
 2857              		r3, r3, asl #4
 2858 1a00 30209FE5 		and	r3, r3, #255
 2859 1a04 2330A0E3 		ldrb	r2, [fp, #-20]	@ zero_extendqisi2
 2860 1a08 0630C2E5 		mov	r1, r3
 714:uart.c        ****     send_buffer[7]='>';
 2861              		r3, r2
 2862 1a0c 24209FE5 		eor	r3, r1, r3
 2863 1a10 3E30A0E3 		and	r3, r3, #255
 2864 1a14 0730C2E5 		strb	r3, [fp, #-20]
 715:uart.c        ****     ringbuffer(RBWRITE, send_buffer, 8);
 2865              	c 1 724 0
 2866 1a18 0100A0E3 		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 2867 1a1c 14109FE5 		mov	r3, r3, asl #8
 2868 1a20 0820A0E3 		mov	r3, r3, asl #16
 2869 1a24 FEFFFFEB 		mov	r2, r3, lsr #16
 716:uart.c        ****     UART_send_ringbuffer();
 2870              		r3, [fp, #-16]
 2871 1a28 FEFFFFEB 		mov	r3, r3, lsr #8
 717:uart.c        **** }
 2872              	ov	r3, r3, asl #16
 2873 1a2c 0CD04BE2 		mov	r3, r3, lsr #16
 2874 1a30 00689DE8 		mov	r3, r3, asl #16
 2875 1a34 1EFF2FE1 		mov	r3, r3, lsr #16
 2876              		and	r3, r3, #255
 2877              		orr	r3, r2, r3
 2878              		mov	r3, r3, asl #16
 2879 1a38 00000000 		mov	r2, r3, lsr #16
 2880              		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 2881              		mov	r3, r3, lsr #4
 2882              		and	r3, r3, #255
 2883              		eor	r3, r2, r3
 2884              		mov	r3, r3, asl #16
 2885              		mov	r2, r3, lsr #16
 2886              		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 718:uart.c        **** 
 719:uart.c        **** unsigned short crc_update (unsigned short crc, unsigned char data)
 720:uart.c        ****      {
 2887              	l #3
 2888              		mov	r3, r3, asl #16
 2889              		mov	r3, r3, lsr #16
 2890              		eor	r3, r2, r3
 2891 1a3c 0DC0A0E1 		mov	r3, r3, asl #16
 2892              		mov	r3, r3, lsr #16
 2893 1a40 00D82DE9 		mov	r3, r3, asl #16
 2894              		mov	r3, r3, lsr #16
 2895 1a44 04B04CE2 		.loc 1 726 0
 2896              		mov	r0, r3
 2897 1a48 08D04DE2 		sub	sp, fp, #12
 2898              		ldmfd	sp, {fp, sp, lr}
 2899 1a4c 0030A0E1 		bx	lr
 2900 1a50 0120A0E1 	.LFE24:
 2902 1a58 0230A0E1 		.align	2
 2903 1a5c 14304BE5 		.global	crc16
 721:uart.c        ****          data ^= (crc & 0xff);
 2904              	nction
 2905 1a60 B0315BE1 	crc16:
 2906 1a64 FF3003E2 	.LFB25:
 2907 1a68 FF3003E2 		.loc 1 729 0
 2908 1a6c 14205BE5 		@ Function supports interworking.
 2909 1a70 0310A0E1 		@ args = 0, pretend = 0, frame = 20
 2910 1a74 0230A0E1 		@ frame_needed = 1, uses_anonymous_args = 0
 2911 1a78 033021E0 		mov	ip, sp
 2912 1a7c FF3003E2 	.LCFI89:
 2913 1a80 14304BE5 		stmfd	sp!, {fp, ip, lr, pc}
 722:uart.c        ****          data ^= data << 4;
 2914              	sub	fp, ip, #4
 2915 1a84 14305BE5 	.LCFI91:
 2916 1a88 0332A0E1 		sub	sp, sp, #20
 2917 1a8c FF3003E2 	.LCFI92:
 2918 1a90 14205BE5 		str	r0, [fp, #-28]
 2919 1a94 0310A0E1 		mov	r3, r1
 2920 1a98 0230A0E1 		strh	r3, [fp, #-32]	@ movhi
 2921 1a9c 033021E0 		.loc 1 730 0
 2922 1aa0 FF3003E2 		mov	r3, #255
 2923 1aa4 14304BE5 		strh	r3, [fp, #-22]	@ movhi
 723:uart.c        **** 
 724:uart.c        ****          return ((((unsigned short )data << 8) | ((crc>>8)&0xff)) ^ (unsigned char )(data >> 4)
 2924              	1 0
 2925 1aa8 14305BE5 		ldr	r3, [fp, #-28]
 2926 1aac 0334A0E1 		str	r3, [fp, #-20]
 2927 1ab0 0338A0E1 		.loc 1 734 0
 2928 1ab4 2328A0E1 		mov	r3, #0
 2929 1ab8 B0315BE1 		str	r3, [fp, #-16]
 2930 1abc 2334A0E1 		b	.L300
 2931 1ac0 0338A0E1 	.L301:
 2932 1ac4 2338A0E1 		.loc 1 736 0
 2933 1ac8 0338A0E1 		ldrh	r2, [fp, #-22]
 2934 1acc 2338A0E1 		ldr	r3, [fp, #-20]
 2935 1ad0 FF3003E2 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2936 1ad4 033082E1 		mov	r0, r2
 2937 1ad8 0338A0E1 		mov	r1, r3
 2938 1adc 2328A0E1 		bl	crc_update
 2939 1ae0 14305BE5 		mov	r3, r0
 2940 1ae4 2332A0E1 		strh	r3, [fp, #-22]	@ movhi
 2941 1ae8 FF3003E2 		.loc 1 737 0
 2942 1aec 033022E0 		ldr	r3, [fp, #-20]
 2943 1af0 0338A0E1 		add	r3, r3, #1
 2944 1af4 2328A0E1 		str	r3, [fp, #-20]
 2945 1af8 14305BE5 		.loc 1 734 0
 2946 1afc 8331A0E1 		ldr	r3, [fp, #-16]
 2947 1b00 0338A0E1 		add	r3, r3, #1
 2948 1b04 2338A0E1 		str	r3, [fp, #-16]
 2949 1b08 033022E0 	.L300:
 2950 1b0c 0338A0E1 		ldrh	r2, [fp, #-32]
 2951 1b10 2338A0E1 		ldr	r3, [fp, #-16]
 2952 1b14 0338A0E1 		cmp	r2, r3
 2953 1b18 2338A0E1 		bgt	.L301
 725:uart.c        ****                  ^ ((unsigned short )data << 3));
 726:uart.c        ****      }
 2954              	-22]
 2955 1b1c 0300A0E1 		.loc 1 740 0
 2956 1b20 0CD04BE2 		mov	r0, r3
 2957 1b24 00689DE8 		sub	sp, fp, #12
 2958 1b28 1EFF2FE1 		ldmfd	sp, {fp, sp, lr}
 2959              		bx	lr
 2960              	.LFE25:
 2962              		.bss
 2963              		.align	2
 2964              	content.2463:
 2965              		.space	4
 727:uart.c        **** 
 728:uart.c        ****  unsigned short crc16(void* data, unsigned short cnt)
 729:uart.c        ****  {
 2966              	ite_pointer.2462:
 2967              		.space	4
 2968              		.align	2
 2969              	read_pointer.2461:
 2970 1b2c 0DC0A0E1 		.space	4
 2971              	buffer.2460:
 2972 1b30 00D82DE9 		.space	384
 2973              		.text
 2974 1b34 04B04CE2 		.align	2
 2975              		.global	ringbuffer
 2977              	ringbuffer:
 2978 1b3c 1C000BE5 	.LFB26:
 2979 1b40 0130A0E1 		.loc 1 744 0
 2980 1b44 B0324BE1 		@ Function supports interworking.
 730:uart.c        ****    unsigned short crc=0xff;
 2981              	etend = 0, frame = 24
 2982 1b48 FF30A0E3 		@ frame_needed = 1, uses_anonymous_args = 0
 2983 1b4c B6314BE1 		mov	ip, sp
 731:uart.c        ****    unsigned char * ptr=(unsigned char *) data;
 2984              	FI93:
 2985 1b50 1C301BE5 		stmfd	sp!, {fp, ip, lr, pc}
 2986 1b54 14300BE5 	.LCFI94:
 732:uart.c        ****    int i;
 733:uart.c        **** 
 734:uart.c        ****    for (i=0;i<cnt;i++)
 2987              	b	fp, ip, #4
 2988 1b58 0030A0E3 	.LCFI95:
 2989 1b5c 10300BE5 		sub	sp, sp, #24
 2990 1b60 0D0000EA 	.LCFI96:
 2991              		mov	r3, r0
 735:uart.c        ****      {
 736:uart.c        ****        crc=crc_update(crc,*ptr);
 2992              	r1, [fp, #-28]
 2993 1b64 B6215BE1 		str	r2, [fp, #-32]
 2994 1b68 14301BE5 		strb	r3, [fp, #-24]
 2995 1b6c 0030D3E5 		.loc 1 749 0
 2996 1b70 0200A0E1 		mov	r3, #0
 2997 1b74 0310A0E1 		str	r3, [fp, #-20]
 2998 1b78 FEFFFFEB 		.loc 1 750 0
 2999 1b7c 0030A0E1 		mov	r3, #0
 3000 1b80 B6314BE1 		str	r3, [fp, #-16]
 737:uart.c        ****        ptr++;
 3001              	52 0
 3002 1b84 14301BE5 		ldrb	r3, [fp, #-24]	@ zero_extendqisi2
 3003 1b88 013083E2 		cmp	r3, #1
 3004 1b8c 14300BE5 		bne	.L305
 3005              		.loc 1 754 0
 3006 1b90 10301BE5 		ldr	r3, .L327
 3007 1b94 013083E2 		ldr	r3, [r3, #0]
 3008 1b98 10300BE5 		rsb	r2, r3, #384
 3009              		ldr	r3, [fp, #-32]
 3010 1b9c B0225BE1 		cmp	r2, r3
 3011 1ba0 10301BE5 		bls	.L313
 3012 1ba4 030052E1 		.loc 1 756 0
 3013 1ba8 EDFFFFCA 		b	.L309
 738:uart.c        ****      }
 739:uart.c        ****    return crc;
 3014              	1 758 0
 3015 1bac B6315BE1 		ldr	r3, .L327+4
 740:uart.c        ****  }
 3016              	dr	r1, [r3, #0]
 3017 1bb0 0300A0E1 		ldr	r2, [fp, #-20]
 3018 1bb4 0CD04BE2 		ldr	r3, [fp, #-28]
 3019 1bb8 00689DE8 		add	r3, r2, r3
 3020 1bbc 1EFF2FE1 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3021              		ldr	r2, .L327+8
 3022              		strb	r3, [r2, r1]
 3023              		add	r2, r1, #1
 3024              		ldr	r3, .L327+4
 3025              		str	r2, [r3, #0]
 3026 005c 00000000 		ldr	r3, [fp, #-20]
 3027              		add	r3, r3, #1
 3028              		str	r3, [fp, #-20]
 3029 0060 00000000 	.L309:
 3030              		.loc 1 756 0
 3031              		ldr	r2, [fp, #-20]
 3032 0064 00000000 		ldr	r3, [fp, #-32]
 3033              		cmp	r2, r3
 3034 0068 00000000 		bcc	.L310
 3034      00000000 
 3034      00000000 
 3034      00000000 
 3034      00000000 
 3035              		.loc 1 760 0
 3036              		ldr	r3, .L327
 3037              		ldr	r2, [r3, #0]
 3038              		ldr	r3, [fp, #-32]
 3039              		add	r2, r2, r3
 3040              		ldr	r3, .L327
 741:uart.c        **** 
 742:uart.c        **** // no longer a ringbuffer! - now it's a FIFO
 743:uart.c        **** int ringbuffer(unsigned char rw, unsigned char *data, unsigned int count)	//returns 1 when write/re
 744:uart.c        **** {
 3041              	 761 0
 3042              		mov	r3, #1
 3043              		str	r3, [fp, #-36]
 3044              		b	.L312
 3045 1bc0 0DC0A0E1 	.L305:
 3046              		.loc 1 764 0
 3047 1bc4 00D82DE9 		ldrb	r3, [fp, #-24]	@ zero_extendqisi2
 3048              		cmp	r3, #0
 3049 1bc8 04B04CE2 		bne	.L314
 3050              		.loc 1 766 0
 3051 1bcc 18D04DE2 		ldr	r3, .L327
 3052              		ldr	r2, [r3, #0]
 3053 1bd0 0030A0E1 		ldr	r3, [fp, #-32]
 3054 1bd4 1C100BE5 		cmp	r2, r3
 3055 1bd8 20200BE5 		bcc	.L313
 3056 1bdc 18304BE5 		.loc 1 768 0
 745:uart.c        ****     static volatile unsigned char buffer[RINGBUFFERSIZE];
 746:uart.c        **** //	static volatile unsigned int pfirst=0, plast=0;	//Pointers to first and last to read byte
 747:uart.c        **** 	static volatile unsigned int read_pointer, write_pointer;
 748:uart.c        **** 	static volatile unsigned int content=0;
 749:uart.c        **** 	unsigned int p=0;
 3057              		.loc 1 770 0
 3058 1be0 0030A0E3 		ldr	r2, [fp, #-16]
 3059 1be4 14300BE5 		ldr	r3, [fp, #-28]
 750:uart.c        ****     unsigned int p2=0;
 3060              	d	r2, r2, r3
 3061 1be8 0030A0E3 		ldr	r3, .L327+12
 3062 1bec 10300BE5 		ldr	r1, [r3, #0]
 751:uart.c        **** 
 752:uart.c        **** 	if(rw==RBWRITE)
 3063              	r	r3, .L327+8
 3064 1bf0 18305BE5 		ldrb	r3, [r3, r1]
 3065 1bf4 010053E3 		and	r3, r3, #255
 3066 1bf8 2100001A 		strb	r3, [r2, #0]
 753:uart.c        **** 	{
 754:uart.c        **** 		if(count<RINGBUFFERSIZE-content)	//enough space in buffer?
 3067              		r3, [fp, #-16]
 3068 1bfc 98319FE5 		add	r3, r3, #1
 3069 1c00 003093E5 		str	r3, [fp, #-16]
 3070 1c04 062D63E2 		add	r2, r1, #1
 3071 1c08 20301BE5 		ldr	r3, .L327+12
 3072 1c0c 030052E1 		str	r2, [r3, #0]
 3073 1c10 5A00009A 	.L318:
 755:uart.c        **** 		{
 756:uart.c        **** 			while(p<count)
 3074              	 768 0
 3075 1c14 0D0000EA 		ldr	r2, [fp, #-16]
 3076              		ldr	r3, [fp, #-32]
 757:uart.c        **** 			{
 758:uart.c        **** 				buffer[write_pointer++]=data[p++];
 3077              	p	r2, r3
 3078 1c18 80319FE5 		bcc	.L319
 3079 1c1c 001093E5 		.loc 1 772 0
 3080 1c20 14201BE5 		ldr	r3, .L327
 3081 1c24 1C301BE5 		ldr	r2, [r3, #0]
 3082 1c28 033082E0 		ldr	r3, [fp, #-32]
 3083 1c2c 0030D3E5 		rsb	r2, r3, r2
 3084 1c30 6C219FE5 		ldr	r3, .L327
 3085 1c34 0130C2E7 		str	r2, [r3, #0]
 3086 1c38 012081E2 		.loc 1 773 0
 3087 1c3c 5C319FE5 		ldr	r3, .L327
 3088 1c40 002083E5 		ldr	r3, [r3, #0]
 3089 1c44 14301BE5 		cmp	r3, #0
 3090 1c48 013083E2 		bne	.L321
 3091 1c4c 14300BE5 		.loc 1 775 0
 3092              		ldr	r2, .L327+4
 3093              		mov	r3, #0
 3094 1c50 14201BE5 		str	r3, [r2, #0]
 3095 1c54 20301BE5 		.loc 1 776 0
 3096 1c58 030052E1 		ldr	r2, .L327+12
 3097 1c5c EDFFFF3A 		mov	r3, #0
 759:uart.c        **** 			}
 760:uart.c        ****             content+=count;
 3098              	21:
 3099 1c60 34319FE5 		.loc 1 778 0
 3100 1c64 002093E5 		mov	r3, #1
 3101 1c68 20301BE5 		str	r3, [fp, #-36]
 3102 1c6c 032082E0 		b	.L312
 3103 1c70 24319FE5 	.L314:
 3104 1c74 002083E5 		.loc 1 781 0
 761:uart.c        ****             return(1);
 3105              	3, [fp, #-24]	@ zero_extendqisi2
 3106 1c78 0130A0E3 		cmp	r3, #2
 3107 1c7c 24300BE5 		bne	.L313
 3108 1c80 400000EA 		.loc 1 783 0
 3109              		ldr	r3, .L327
 762:uart.c        **** 		}
 763:uart.c        **** 	}
 764:uart.c        **** 	else if(rw==RBREAD)
 3110              	r3, [r3, #0]
 3111 1c84 18305BE5 		cmp	r3, #0
 3112 1c88 000053E3 		beq	.L324
 3113 1c8c 2B00001A 		mov	r3, #0
 765:uart.c        **** 	{
 766:uart.c        **** 		if(content>=count)
 3114              		r3, [fp, #-36]
 3115 1c90 04319FE5 		b	.L312
 3116 1c94 002093E5 	.L324:
 3117 1c98 20301BE5 		.loc 1 784 0
 3118 1c9c 030052E1 		mov	r3, #372
 3119 1ca0 3600003A 		str	r3, [fp, #-36]
 767:uart.c        **** 		{
 768:uart.c        **** 			while(p2<count)
 3120              	3, [fp, #-36]
 3121 1ca4 0E0000EA 		add	r3, r3, #1
 3122              		str	r3, [fp, #-36]
 769:uart.c        **** 			{
 770:uart.c        **** 				data[p2++]=buffer[read_pointer++];
 3123              	.L312
 3124 1ca8 10201BE5 	.L313:
 3125 1cac 1C301BE5 		.loc 1 787 0
 3126 1cb0 032082E0 		mov	r3, #0
 3127 1cb4 EC309FE5 		str	r3, [fp, #-36]
 3128 1cb8 001093E5 	.L312:
 3129 1cbc E0309FE5 		ldr	r3, [fp, #-36]
 3130 1cc0 0130D3E7 		.loc 1 788 0
 3131 1cc4 FF3003E2 		mov	r0, r3
 3132 1cc8 0030C2E5 		sub	sp, fp, #12
 3133 1ccc 10301BE5 		ldmfd	sp, {fp, sp, lr}
 3134 1cd0 013083E2 		bx	lr
 3135 1cd4 10300BE5 	.L328:
 3136 1cd8 012081E2 		.align	2
 3137 1cdc C4309FE5 	.L327:
 3138 1ce0 002083E5 		.word	content.2463
 3139              		.word	write_pointer.2462
 3140              		.word	buffer.2460
 3141 1ce4 10201BE5 		.word	read_pointer.2461
 3142 1ce8 20301BE5 	.LFE26:
 3144 1cf0 ECFFFF3A 		.bss
 771:uart.c        **** 			}
 772:uart.c        ****             content-=count;
 3145              	:
 3146 1cf4 A0309FE5 		.space	4
 3147 1cf8 002093E5 		.align	2
 3148 1cfc 20301BE5 	write_pointer.2516:
 3149 1d00 022063E0 		.space	4
 3150 1d04 90309FE5 		.align	2
 3151 1d08 002083E5 	read_pointer.2515:
 773:uart.c        ****             if(!content) //buffer empty
 3152              		4
 3153 1d0c 88309FE5 	buffer.2514:
 3154 1d10 003093E5 		.space	384
 3155 1d14 000053E3 		.text
 3156 1d18 0500001A 		.align	2
 774:uart.c        ****             {
 775:uart.c        ****             	write_pointer=0;
 3157              	bal	ringbuffer1
 3159 1d20 0030A0E3 	ringbuffer1:
 3160 1d24 003082E5 	.LFB27:
 776:uart.c        ****             	read_pointer=0;
 3161              	c 1 791 0
 3162 1d28 78209FE5 		@ Function supports interworking.
 3163 1d2c 0030A0E3 		@ args = 0, pretend = 0, frame = 24
 3164 1d30 003082E5 		@ frame_needed = 1, uses_anonymous_args = 0
 3165              		mov	ip, sp
 777:uart.c        ****             }
 778:uart.c        **** 			return(1);
 3166              	97:
 3167 1d34 0130A0E3 		stmfd	sp!, {fp, ip, lr, pc}
 3168 1d38 24300BE5 	.LCFI98:
 3169 1d3c 110000EA 		sub	fp, ip, #4
 3170              	.LCFI99:
 779:uart.c        **** 		}
 780:uart.c        **** 	}
 781:uart.c        ****         else if(rw==RBFREE)
 3171              	sp, sp, #24
 3172 1d40 18305BE5 	.LCFI100:
 3173 1d44 020053E3 		mov	r3, r0
 3174 1d48 0C00001A 		str	r1, [fp, #-28]
 782:uart.c        ****         {
 783:uart.c        ****           if(content) return 0;
 3175              		r2, [fp, #-32]
 3176 1d4c 48309FE5 		strb	r3, [fp, #-24]
 3177 1d50 003093E5 		.loc 1 796 0
 3178 1d54 000053E3 		mov	r3, #0
 3179 1d58 0200000A 		str	r3, [fp, #-20]
 3180 1d5c 0030A0E3 		.loc 1 797 0
 3181 1d60 24300BE5 		mov	r3, #0
 3182 1d64 070000EA 		str	r3, [fp, #-16]
 3183              		.loc 1 799 0
 784:uart.c        ****           else return(RINGBUFFERSIZE-11);
 3184              	 [fp, #-24]	@ zero_extendqisi2
 3185 1d68 5D3FA0E3 		cmp	r3, #1
 3186 1d6c 24300BE5 		bne	.L330
 3187 1d70 24301BE5 		.loc 1 801 0
 3188 1d74 013083E2 		ldr	r3, .L352
 3189 1d78 24300BE5 		ldr	r3, [r3, #0]
 3190 1d7c 010000EA 		rsb	r2, r3, #384
 3191              		ldr	r3, [fp, #-32]
 785:uart.c        ****         }
 786:uart.c        **** 
 787:uart.c        **** 	return(0);
 3192              	 r3
 3193 1d80 0030A0E3 		bls	.L338
 3194 1d84 24300BE5 		.loc 1 803 0
 3195              		b	.L334
 3196 1d88 24301BE5 	.L335:
 788:uart.c        **** }
 3197              	 1 805 0
 3198 1d8c 0300A0E1 		ldr	r3, .L352+4
 3199 1d90 0CD04BE2 		ldr	r1, [r3, #0]
 3200 1d94 00689DE8 		ldr	r2, [fp, #-20]
 3201 1d98 1EFF2FE1 		ldr	r3, [fp, #-28]
 3202              		add	r3, r2, r3
 3203              		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3204              		ldr	r2, .L352+8
 3205 1d9c 5C000000 		strb	r3, [r2, r1]
 3206 1da0 60000000 		add	r2, r1, #1
 3207 1da4 68000000 		ldr	r3, .L352+4
 3208 1da8 64000000 		str	r2, [r3, #0]
 3209              		ldr	r3, [fp, #-20]
 3210              		add	r3, r3, #1
 3211              		str	r3, [fp, #-20]
 3212              	.L334:
 3213              		.loc 1 803 0
 3214 01e8 00000000 		ldr	r2, [fp, #-20]
 3215              		ldr	r3, [fp, #-32]
 3216              		cmp	r2, r3
 3217 01ec 00000000 		bcc	.L335
 3218              		.loc 1 807 0
 3219              		ldr	r3, .L352
 3220 01f0 00000000 		ldr	r2, [r3, #0]
 3221              		ldr	r3, [fp, #-32]
 3222 01f4 00000000 		add	r2, r2, r3
 3222      00000000 
 3222      00000000 
 3222      00000000 
 3222      00000000 
 3223              		ldr	r3, .L352
 3224              		str	r2, [r3, #0]
 3225              		.loc 1 808 0
 3226              		mov	r3, #1
 3227              		str	r3, [fp, #-36]
 3228              		b	.L337
 789:uart.c        **** 
 790:uart.c        **** int ringbuffer1(unsigned char rw, unsigned char *data, unsigned int count)	//returns 1 when write/r
 791:uart.c        **** {
 3229              	fp, #-24]	@ zero_extendqisi2
 3230              		cmp	r3, #0
 3231              		bne	.L339
 3232              		.loc 1 813 0
 3233 1dac 0DC0A0E1 		ldr	r3, .L352
 3234              		ldr	r2, [r3, #0]
 3235 1db0 00D82DE9 		ldr	r3, [fp, #-32]
 3236              		cmp	r2, r3
 3237 1db4 04B04CE2 		bcc	.L338
 3238              		.loc 1 815 0
 3239 1db8 18D04DE2 		b	.L343
 3240              	.L344:
 3241 1dbc 0030A0E1 		.loc 1 817 0
 3242 1dc0 1C100BE5 		ldr	r2, [fp, #-16]
 3243 1dc4 20200BE5 		ldr	r3, [fp, #-28]
 3244 1dc8 18304BE5 		add	r2, r2, r3
 792:uart.c        ****     static volatile unsigned char buffer[RINGBUFFERSIZE];
 793:uart.c        **** //	static volatile unsigned int pfirst=0, plast=0;	//Pointers to first and last to read byte
 794:uart.c        **** 	static volatile unsigned int read_pointer, write_pointer;
 795:uart.c        **** 	static volatile unsigned int content=0;
 796:uart.c        **** 	unsigned int p=0;
 3245              	2
 3246 1dcc 0030A0E3 		ldr	r1, [r3, #0]
 3247 1dd0 14300BE5 		ldr	r3, .L352+8
 797:uart.c        ****     unsigned int p2=0;
 3248              	rb	r3, [r3, r1]
 3249 1dd4 0030A0E3 		and	r3, r3, #255
 3250 1dd8 10300BE5 		strb	r3, [r2, #0]
 798:uart.c        **** 
 799:uart.c        **** 	if(rw==RBWRITE)
 3251              	r	r3, [fp, #-16]
 3252 1ddc 18305BE5 		add	r3, r3, #1
 3253 1de0 010053E3 		str	r3, [fp, #-16]
 3254 1de4 2100001A 		add	r2, r1, #1
 800:uart.c        **** 	{
 801:uart.c        **** 		if(count<RINGBUFFERSIZE-content)	//enough space in buffer?
 3255              		r3, .L352+12
 3256 1de8 98319FE5 		str	r2, [r3, #0]
 3257 1dec 003093E5 	.L343:
 3258 1df0 062D63E2 		.loc 1 815 0
 3259 1df4 20301BE5 		ldr	r2, [fp, #-16]
 3260 1df8 030052E1 		ldr	r3, [fp, #-32]
 3261 1dfc 5A00009A 		cmp	r2, r3
 802:uart.c        **** 		{
 803:uart.c        **** 			while(p<count)
 3262              	344
 3263 1e00 0D0000EA 		.loc 1 819 0
 3264              		ldr	r3, .L352
 804:uart.c        **** 			{
 805:uart.c        **** 				buffer[write_pointer++]=data[p++];
 3265              	r	r2, [r3, #0]
 3266 1e04 80319FE5 		ldr	r3, [fp, #-32]
 3267 1e08 001093E5 		rsb	r2, r3, r2
 3268 1e0c 14201BE5 		ldr	r3, .L352
 3269 1e10 1C301BE5 		str	r2, [r3, #0]
 3270 1e14 033082E0 		.loc 1 820 0
 3271 1e18 0030D3E5 		ldr	r3, .L352
 3272 1e1c 6C219FE5 		ldr	r3, [r3, #0]
 3273 1e20 0130C2E7 		cmp	r3, #0
 3274 1e24 012081E2 		bne	.L346
 3275 1e28 5C319FE5 		.loc 1 822 0
 3276 1e2c 002083E5 		ldr	r2, .L352+4
 3277 1e30 14301BE5 		mov	r3, #0
 3278 1e34 013083E2 		str	r3, [r2, #0]
 3279 1e38 14300BE5 		.loc 1 823 0
 3280              		ldr	r2, .L352+12
 3281              		mov	r3, #0
 3282 1e3c 14201BE5 		str	r3, [r2, #0]
 3283 1e40 20301BE5 	.L346:
 3284 1e44 030052E1 		.loc 1 825 0
 3285 1e48 EDFFFF3A 		mov	r3, #1
 806:uart.c        **** 			}
 807:uart.c        ****             content+=count;
 3286              	b	.L337
 3287 1e4c 34319FE5 	.L339:
 3288 1e50 002093E5 		.loc 1 828 0
 3289 1e54 20301BE5 		ldrb	r3, [fp, #-24]	@ zero_extendqisi2
 3290 1e58 032082E0 		cmp	r3, #2
 3291 1e5c 24319FE5 		bne	.L338
 3292 1e60 002083E5 		.loc 1 830 0
 808:uart.c        ****             return(1);
 3293              	, .L352
 3294 1e64 0130A0E3 		ldr	r3, [r3, #0]
 3295 1e68 24300BE5 		cmp	r3, #0
 3296 1e6c 400000EA 		beq	.L349
 3297              		mov	r3, #0
 809:uart.c        **** 		}
 810:uart.c        **** 	}
 811:uart.c        **** 	else if(rw==RBREAD)
 3298              	r3, [fp, #-36]
 3299 1e70 18305BE5 		b	.L337
 3300 1e74 000053E3 	.L349:
 3301 1e78 2B00001A 		.loc 1 831 0
 812:uart.c        **** 	{
 813:uart.c        **** 		if(content>=count)
 3302              		r3, #372
 3303 1e7c 04319FE5 		str	r3, [fp, #-36]
 3304 1e80 002093E5 		ldr	r3, [fp, #-36]
 3305 1e84 20301BE5 		add	r3, r3, #1
 3306 1e88 030052E1 		str	r3, [fp, #-36]
 3307 1e8c 3600003A 		b	.L337
 814:uart.c        **** 		{
 815:uart.c        **** 			while(p2<count)
 3308              	
 3309 1e90 0E0000EA 		.loc 1 834 0
 3310              		mov	r3, #0
 816:uart.c        **** 			{
 817:uart.c        **** 				data[p2++]=buffer[read_pointer++];
 3311              	tr	r3, [fp, #-36]
 3312 1e94 10201BE5 	.L337:
 3313 1e98 1C301BE5 		ldr	r3, [fp, #-36]
 3314 1e9c 032082E0 		.loc 1 835 0
 3315 1ea0 EC309FE5 		mov	r0, r3
 3316 1ea4 001093E5 		sub	sp, fp, #12
 3317 1ea8 E0309FE5 		ldmfd	sp, {fp, sp, lr}
 3318 1eac 0130D3E7 		bx	lr
 3319 1eb0 FF3003E2 	.L353:
 3320 1eb4 0030C2E5 		.align	2
 3321 1eb8 10301BE5 	.L352:
 3322 1ebc 013083E2 		.word	content.2517
 3323 1ec0 10300BE5 		.word	write_pointer.2516
 3324 1ec4 012081E2 		.word	buffer.2514
 3325 1ec8 C4309FE5 		.word	read_pointer.2515
 3326 1ecc 002083E5 	.LFE27:
 3328              		.bss
 3329 1ed0 10201BE5 	StartWithHighBaudrate.2571:
 3330 1ed4 20301BE5 		.space	1
 3331 1ed8 030052E1 	gpsconfig_timeout.2570:
 3332 1edc ECFFFF3A 		.space	1
 818:uart.c        **** 			}
 819:uart.c        ****             content-=count;
 3333              	68:
 3334 1ee0 A0309FE5 		.space	1
 3335 1ee4 002093E5 	gpsconf_state.2567:
 3336 1ee8 20301BE5 		.space	1
 3337 1eec 022063E0 		.section	.rodata
 820:uart.c        ****             if(!content) //buffer empty
 3340              	rtstring.2566:
 3341 1ef8 88309FE5 		.byte	-75
 3342 1efc 003093E5 		.byte	98
 3343 1f00 000053E3 		.text
 3344 1f04 0500001A 		.align	2
 821:uart.c        ****             {
 822:uart.c        ****             	write_pointer=0;
 3345              	bal	GPS_configure
 3347 1f0c 0030A0E3 	GPS_configure:
 3348 1f10 003082E5 	.LFB28:
 823:uart.c        ****             	read_pointer=0;
 3349              	c 1 838 0
 3350 1f14 78209FE5 		@ Function supports interworking.
 3351 1f18 0030A0E3 		@ args = 0, pretend = 0, frame = 4
 3352 1f1c 003082E5 		@ frame_needed = 1, uses_anonymous_args = 0
 3353              		mov	ip, sp
 824:uart.c        ****             }
 825:uart.c        **** 			return(1);
 3354              	101:
 3355 1f20 0130A0E3 		stmfd	sp!, {fp, ip, lr, pc}
 3356 1f24 24300BE5 	.LCFI102:
 3357 1f28 110000EA 		sub	fp, ip, #4
 3358              	.LCFI103:
 826:uart.c        **** 		}
 827:uart.c        **** 	}
 828:uart.c        ****         else if(rw==RBFREE)
 3359              	sp, sp, #4
 3360 1f2c 18305BE5 	.LCFI104:
 3361 1f30 020053E3 		.loc 1 846 0
 3362 1f34 0C00001A 		ldr	r3, .L410
 829:uart.c        ****         {
 830:uart.c        ****           if(content) return 0;
 3363              	b	r3, [r3, #0]	@ zero_extendqisi2
 3364 1f38 48309FE5 		cmp	r3, #7
 3365 1f3c 003093E5 		ldrls	pc, [pc, r3, asl #2]
 3366 1f40 000053E3 		b	.L355
 3367 1f44 0200000A 		.p2align 2
 3368 1f48 0030A0E3 	.L364:
 3369 1f4c 24300BE5 		.word	.L356
 3370 1f50 070000EA 		.word	.L357
 3371              		.word	.L358
 831:uart.c        ****           else return(RINGBUFFERSIZE-11);
 3372              	359
 3373 1f54 5D3FA0E3 		.word	.L360
 3374 1f58 24300BE5 		.word	.L361
 3375 1f5c 24301BE5 		.word	.L362
 3376 1f60 013083E2 		.word	.L363
 3377 1f64 24300BE5 	.L356:
 3378 1f68 010000EA 		.loc 1 849 0
 3379              		ldr	r3, .L410+4
 832:uart.c        ****         }
 833:uart.c        **** 
 834:uart.c        **** 	return(0);
 3380              	, [r3, #0]	@ zero_extendqisi2
 3381 1f6c 0030A0E3 		cmp	r3, #0
 3382 1f70 24300BE5 		beq	.L365
 3383              		.loc 1 851 0
 3384 1f74 24301BE5 		mov	r0, #57600
 835:uart.c        **** }
 3385              	ART1Initialize
 3386 1f78 0300A0E1 		.loc 1 852 0
 3387 1f7c 0CD04BE2 		ldr	r3, .L410+4
 3388 1f80 00689DE8 		mov	r2, #0
 3389 1f84 1EFF2FE1 		strb	r2, [r3, #0]
 3390              		b	.L367
 3391              	.L365:
 3392              		.loc 1 855 0
 3393 1f88 E8010000 		mov	r0, #9600
 3394 1f8c EC010000 		bl	UART1Initialize
 3395 1f90 F4010000 	.L367:
 3396 1f94 F0010000 		.loc 1 856 0
 3397              		mov	r0, #2
 3398              		mov	r1, #0
 3399              		mov	r2, #0
 3400              		bl	ringbuffer1
 3401 0374 00       		mov	r3, r0
 3402              		cmp	r3, #28
 3403 0375 00       		ble	.L368
 3404              		.loc 1 858 0
 3405 0376 00       		mov	r0, #1
 3406              		ldr	r1, .L410+8
 3407 0377 00       		mov	r2, #2
 3408              		bl	ringbuffer1
 3409              		mov	r3, r0
 3410              		str	r3, [fp, #-16]
 3411              		.loc 1 859 0
 3412 0103 B5       		mov	r0, #1
 3413 0104 62       		ldr	r1, .L410+12
 3414              		mov	r2, #26
 3415              		bl	ringbuffer1
 3416              		mov	r3, r0
 3417              		str	r3, [fp, #-16]
 3418              		.loc 1 860 0
 3419              		bl	UART1_send_ringbuffer
 836:uart.c        **** 
 837:uart.c        **** void GPS_configure(void)
 838:uart.c        **** {
 3420              	v	r3, #1
 3421              		strb	r3, [r2, #0]
 3422              		.loc 1 862 0
 3423              		ldr	r3, .L410
 3424 1f98 0DC0A0E1 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3425              		add	r3, r3, #1
 3426 1f9c 00D82DE9 		and	r3, r3, #255
 3427              		ldr	r2, .L410
 3428 1fa0 04B04CE2 		strb	r3, [r2, #0]
 3429              	.L368:
 3430 1fa4 04D04DE2 		.loc 1 864 0
 3431              		ldr	r3, .L410+20
 839:uart.c        **** 	const unsigned char gps_startstring[2]={ 0xb5, 0x62 };		//sync chars
 840:uart.c        **** 
 841:uart.c        **** 	static unsigned char gpsconf_state, gps_cfg_msg_counter;
 842:uart.c        **** 	int written;
 843:uart.c        **** 	static unsigned char gpsconfig_timeout;
 844:uart.c        **** 	static unsigned char StartWithHighBaudrate = 0;
 845:uart.c        **** 
 846:uart.c        **** 	switch (gpsconf_state)
 3432              		strb	r2, [r3, #0]
 3433 1fa8 08369FE5 		.loc 1 865 0
 3434 1fac 0030D3E5 		b	.L370
 3435 1fb0 070053E3 	.L357:
 3436 1fb4 03F19F97 		.loc 1 867 0
 3437 1fb8 600100EA 		ldr	r3, .L410+24
 3438              		ldrb	r3, [r3, #0]
 3439              		and	r3, r3, #255
 3440 1fbc DC1F0000 		cmp	r3, #0
 3441 1fc0 90200000 		beq	.L371
 3442 1fc4 58210000 		.loc 1 869 0
 3443 1fc8 4C220000 		ldr	r2, .L410+24
 3444 1fcc F0220000 		mov	r3, #0
 3445 1fd0 94230000 		strb	r3, [r2, #0]
 3446 1fd4 38240000 		.loc 1 870 0
 3447 1fd8 DC240000 		mov	r0, #2
 3448              		mov	r1, #0
 847:uart.c        **** 	{
 848:uart.c        **** 		case 0:
 849:uart.c        **** 			if (StartWithHighBaudrate)
 3449              	ingbuffer1
 3450 1fdc D8359FE5 		mov	r3, r0
 3451 1fe0 0030D3E5 		cmp	r3, #12
 3452 1fe4 000053E3 		ble	.L373
 3453 1fe8 0500000A 		.loc 1 872 0
 850:uart.c        **** 			{
 851:uart.c        **** 				UART1Initialize(57600);
 3454              	r0, #1
 3455 1fec E10CA0E3 		ldr	r1, .L410+8
 3456 1ff0 FEFFFFEB 		mov	r2, #2
 852:uart.c        **** 				StartWithHighBaudrate = 0;
 3457              		ringbuffer1
 3458 1ff4 C0359FE5 		.loc 1 873 0
 3459 1ff8 0020A0E3 		mov	r0, #1
 3460 1ffc 0020C3E5 		ldr	r1, .L410+28
 3461 2000 010000EA 		mov	r2, #10
 3462              		bl	ringbuffer1
 853:uart.c        **** 			}
 854:uart.c        **** 			else
 855:uart.c        **** 				UART1Initialize(9600);
 3463              	1 874 0
 3464 2004 960DA0E3 		bl	UART1_send_ringbuffer
 3465 2008 FEFFFFEB 		.loc 1 875 0
 3466              		ldr	r2, .L410+32
 856:uart.c        **** 			if ((ringbuffer1(RBFREE, 0, 0))>28)
 3467              		r3, #0
 3468 200c 0200A0E3 		strb	r3, [r2, #0]
 3469 2010 0010A0E3 		.loc 1 876 0
 3470 2014 0020A0E3 		ldr	r3, .L410
 3471 2018 FEFFFFEB 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3472 201c 0030A0E1 		add	r3, r3, #1
 3473 2020 1C0053E3 		and	r3, r3, #255
 3474 2024 150000DA 		ldr	r2, .L410
 857:uart.c        **** 			{
 858:uart.c        **** 				written=ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
 3475              	, [r2, #0]
 3476 2028 0100A0E3 	.L373:
 3477 202c 8C159FE5 		.loc 1 878 0
 3478 2030 0220A0E3 		ldr	r2, .L410+20
 3479 2034 FEFFFFEB 		mov	r3, #0
 3480 2038 0030A0E1 		strb	r3, [r2, #0]
 3481 203c 10300BE5 		.loc 1 879 0
 859:uart.c        **** 				written=ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_PRT, 26);
 3482              	, .L410+4
 3483 2040 0100A0E3 		mov	r3, #0
 3484 2044 78159FE5 		strb	r3, [r2, #0]
 3485 2048 1A20A0E3 		b	.L370
 3486 204c FEFFFFEB 	.L371:
 3487 2050 0030A0E1 		.loc 1 882 0
 3488 2054 10300BE5 		ldr	r3, .L410+20
 860:uart.c        **** 				UART1_send_ringbuffer();
 3489              	3, [r3, #0]	@ zero_extendqisi2
 3490 2058 FEFFFFEB 		add	r3, r3, #1
 861:uart.c        **** 				baudrate1_change=1;
 3491              	nd	r3, r3, #255
 3492 205c 64259FE5 		ldr	r2, .L410+20
 3493 2060 0130A0E3 		strb	r3, [r2, #0]
 3494 2064 0030C2E5 		.loc 1 883 0
 862:uart.c        **** 				gpsconf_state++;
 3495              		r2, .L410+4
 3496 2068 48359FE5 		mov	r3, #1
 3497 206c 0030D3E5 		strb	r3, [r2, #0]
 3498 2070 013083E2 		.loc 1 885 0
 3499 2074 FF3003E2 		b	.L370
 3500 2078 38259FE5 	.L358:
 3501 207c 0030C2E5 		.loc 1 887 0
 3502              		ldr	r3, .L410+24
 863:uart.c        **** 			}
 864:uart.c        **** 			gpsconfig_timeout=0;
 3503              	, [r3, #0]
 3504 2080 44359FE5 		and	r3, r3, #255
 3505 2084 0020A0E3 		cmp	r3, #0
 3506 2088 0020C3E5 		beq	.L376
 865:uart.c        **** 		break;
 3507              	c 1 889 0
 3508 208c 2E0100EA 		ldr	r2, .L410+24
 3509              		mov	r3, #0
 866:uart.c        **** 		case 1:
 867:uart.c        **** 			if (GPS_ACK_received)
 3510              	rb	r3, [r2, #0]
 3511 2090 38359FE5 		.loc 1 890 0
 3512 2094 0030D3E5 		mov	r0, #2
 3513 2098 FF3003E2 		mov	r1, #0
 3514 209c 000053E3 		mov	r2, #0
 3515 20a0 2200000A 		bl	ringbuffer1
 868:uart.c        **** 			{
 869:uart.c        **** 				GPS_ACK_received=0;
 3516              	3, r0
 3517 20a4 24259FE5 		cmp	r3, #14
 3518 20a8 0030A0E3 		ble	.L378
 3519 20ac 0030C2E5 		.loc 1 892 0
 870:uart.c        **** 				if (ringbuffer1(RBFREE, 0, 0)>12)
 3520              		r0, #1
 3521 20b0 0200A0E3 		ldr	r1, .L410+8
 3522 20b4 0010A0E3 		mov	r2, #2
 3523 20b8 0020A0E3 		bl	ringbuffer1
 3524 20bc FEFFFFEB 		.loc 1 893 0
 3525 20c0 0030A0E1 		ldr	r3, .L410+32
 3526 20c4 0C0053E3 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3527 20c8 110000DA 		mov	r2, r3
 871:uart.c        **** 				{
 872:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
 3528              	 r2
 3529 20cc 0100A0E3 		mov	r3, r3, asl #1
 3530 20d0 E8149FE5 		add	r3, r3, r2
 3531 20d4 0220A0E3 		mov	r3, r3, asl #2
 3532 20d8 FEFFFFEB 		mov	r2, r3
 873:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_ANT, 10);
 3533              	r3, .L410+36
 3534 20dc 0100A0E3 		add	r3, r2, r3
 3535 20e0 EC149FE5 		mov	r0, #1
 3536 20e4 0A20A0E3 		mov	r1, r3
 3537 20e8 FEFFFFEB 		mov	r2, #12
 874:uart.c        **** 					UART1_send_ringbuffer();
 3538              	ingbuffer1
 3539 20ec FEFFFFEB 		.loc 1 894 0
 875:uart.c        **** 					gps_cfg_msg_counter=0;
 3540              	l	UART1_send_ringbuffer
 3541 20f0 E0249FE5 		.loc 1 895 0
 3542 20f4 0030A0E3 		ldr	r3, .L410+32
 3543 20f8 0030C2E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 876:uart.c        **** 					gpsconf_state++;
 3544              		r3, r3, #1
 3545 20fc B4349FE5 		and	r3, r3, #255
 3546 2100 0030D3E5 		ldr	r2, .L410+32
 3547 2104 013083E2 		strb	r3, [r2, #0]
 3548 2108 FF3003E2 		ldr	r3, .L410+32
 3549 210c A4249FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3550 2110 0030C2E5 		cmp	r3, #11
 3551              		bne	.L378
 877:uart.c        **** 				}
 878:uart.c        **** 				gpsconfig_timeout=0;
 3552              	897 0
 3553 2114 B0249FE5 		ldr	r3, .L410
 3554 2118 0030A0E3 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3555 211c 0030C2E5 		add	r3, r3, #1
 879:uart.c        **** 				StartWithHighBaudrate = 0;
 3556              		r3, r3, #255
 3557 2120 94249FE5 		ldr	r2, .L410
 3558 2124 0030A0E3 		strb	r3, [r2, #0]
 3559 2128 0030C2E5 	.L378:
 3560 212c 060100EA 		.loc 1 900 0
 3561              		ldr	r3, .L410+20
 880:uart.c        **** 			} else
 881:uart.c        **** 			{
 882:uart.c        **** 				gpsconfig_timeout++;
 3562              	2, #0
 3563 2130 94349FE5 		strb	r2, [r3, #0]
 3564 2134 0030D3E5 		b	.L370
 3565 2138 013083E2 	.L376:
 3566 213c FF3003E2 		.loc 1 902 0
 3567 2140 84249FE5 		ldr	r3, .L410+20
 3568 2144 0030C2E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 883:uart.c        **** 				StartWithHighBaudrate = 1;
 3569              	, r3, #1
 3570 2148 6C249FE5 		and	r3, r3, #255
 3571 214c 0130A0E3 		ldr	r2, .L410+20
 3572 2150 0030C2E5 		strb	r3, [r2, #0]
 884:uart.c        **** 			}
 885:uart.c        **** 		break;
 3573              	c 1 903 0
 3574 2154 FC0000EA 		b	.L370
 3575              	.L359:
 886:uart.c        **** 		case 2:
 887:uart.c        **** 			if (GPS_ACK_received)
 3576              	oc 1 905 0
 3577 2158 70349FE5 		ldr	r3, .L410+24
 3578 215c 0030D3E5 		ldrb	r3, [r3, #0]
 3579 2160 FF3003E2 		and	r3, r3, #255
 3580 2164 000053E3 		cmp	r3, #0
 3581 2168 3000000A 		beq	.L382
 888:uart.c        **** 			{
 889:uart.c        **** 				GPS_ACK_received=0;
 3582              	1 907 0
 3583 216c 5C249FE5 		ldr	r2, .L410+24
 3584 2170 0030A0E3 		mov	r3, #0
 3585 2174 0030C2E5 		strb	r3, [r2, #0]
 890:uart.c        **** 				if (ringbuffer1(RBFREE, 0, 0)>14)
 3586              	c 1 908 0
 3587 2178 0200A0E3 		mov	r0, #2
 3588 217c 0010A0E3 		mov	r1, #0
 3589 2180 0020A0E3 		mov	r2, #0
 3590 2184 FEFFFFEB 		bl	ringbuffer1
 3591 2188 0030A0E1 		mov	r3, r0
 3592 218c 0E0053E3 		cmp	r3, #48
 3593 2190 220000DA 		ble	.L384
 891:uart.c        **** 				{
 892:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
 3594              	910 0
 3595 2194 0100A0E3 		mov	r0, #1
 3596 2198 20149FE5 		ldr	r1, .L410+8
 3597 219c 0220A0E3 		mov	r2, #2
 3598 21a0 FEFFFFEB 		bl	ringbuffer1
 893:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_MSG[gps_cfg_msg_counter], 12);
 3599              	 1 911 0
 3600 21a4 2C349FE5 		mov	r0, #1
 3601 21a8 0030D3E5 		ldr	r1, .L410+40
 3602 21ac 0320A0E1 		mov	r2, #46
 3603 21b0 0230A0E1 		bl	ringbuffer1
 3604 21b4 8330A0E1 		.loc 1 912 0
 3605 21b8 023083E0 		bl	UART1_send_ringbuffer
 3606 21bc 0331A0E1 		.loc 1 913 0
 3607 21c0 0320A0E1 		ldr	r3, .L410
 3608 21c4 10349FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3609 21c8 033082E0 		add	r3, r3, #1
 3610 21cc 0100A0E3 		and	r3, r3, #255
 3611 21d0 0310A0E1 		ldr	r2, .L410
 3612 21d4 0C20A0E3 		strb	r3, [r2, #0]
 3613 21d8 FEFFFFEB 	.L384:
 894:uart.c        **** 					UART1_send_ringbuffer();
 3614              	ldr	r3, .L410+20
 3615 21dc FEFFFFEB 		mov	r2, #0
 895:uart.c        **** 					if (++gps_cfg_msg_counter==11)
 3616              	trb	r2, [r3, #0]
 3617 21e0 F0339FE5 		b	.L370
 3618 21e4 0030D3E5 	.L382:
 3619 21e8 013083E2 		.loc 1 917 0
 3620 21ec FF3003E2 		ldr	r3, .L410+20
 3621 21f0 E0239FE5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3622 21f4 0030C2E5 		add	r3, r3, #1
 3623 21f8 D8339FE5 		and	r3, r3, #255
 3624 21fc 0030D3E5 		ldr	r2, .L410+20
 3625 2200 0B0053E3 		strb	r3, [r2, #0]
 3626 2204 0500001A 		.loc 1 918 0
 896:uart.c        **** 					{
 897:uart.c        **** 						gpsconf_state++;
 3627              	360:
 3628 2208 A8339FE5 		.loc 1 920 0
 3629 220c 0030D3E5 		ldr	r3, .L410+24
 3630 2210 013083E2 		ldrb	r3, [r3, #0]
 3631 2214 FF3003E2 		and	r3, r3, #255
 3632 2218 98239FE5 		cmp	r3, #0
 3633 221c 0030C2E5 		beq	.L387
 3634              		.loc 1 922 0
 898:uart.c        **** 					}
 899:uart.c        **** 				}
 900:uart.c        **** 				gpsconfig_timeout=0;
 3635              	 .L410+24
 3636 2220 A4339FE5 		mov	r3, #0
 3637 2224 0020A0E3 		strb	r3, [r2, #0]
 3638 2228 0020C3E5 		.loc 1 923 0
 3639 222c C60000EA 		mov	r0, #2
 3640              		mov	r1, #0
 901:uart.c        **** 			} else
 902:uart.c        **** 				gpsconfig_timeout++;
 3641              	2, #0
 3642 2230 94339FE5 		bl	ringbuffer1
 3643 2234 0030D3E5 		mov	r3, r0
 3644 2238 013083E2 		cmp	r3, #14
 3645 223c FF3003E2 		ble	.L389
 3646 2240 84239FE5 		.loc 1 925 0
 3647 2244 0030C2E5 		mov	r0, #1
 903:uart.c        **** 		break;
 3648              	, .L410+8
 3649 2248 BF0000EA 		mov	r2, #2
 3650              		bl	ringbuffer1
 904:uart.c        **** 		case 3:
 905:uart.c        **** 			if (GPS_ACK_received)
 3651              	oc 1 926 0
 3652 224c 7C339FE5 		mov	r0, #1
 3653 2250 0030D3E5 		ldr	r1, .L410+44
 3654 2254 FF3003E2 		mov	r2, #12
 3655 2258 000053E3 		bl	ringbuffer1
 3656 225c 1C00000A 		.loc 1 927 0
 906:uart.c        **** 			{
 907:uart.c        **** 				GPS_ACK_received=0;
 3657              	RT1_send_ringbuffer
 3658 2260 68239FE5 		.loc 1 928 0
 3659 2264 0030A0E3 		ldr	r3, .L410
 3660 2268 0030C2E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 908:uart.c        **** 				if (ringbuffer1(RBFREE, 0, 0)>48)
 3661              		r3, r3, #1
 3662 226c 0200A0E3 		and	r3, r3, #255
 3663 2270 0010A0E3 		ldr	r2, .L410
 3664 2274 0020A0E3 		strb	r3, [r2, #0]
 3665 2278 FEFFFFEB 	.L389:
 3666 227c 0030A0E1 		.loc 1 930 0
 3667 2280 300053E3 		ldr	r3, .L410+20
 3668 2284 0E0000DA 		mov	r2, #0
 909:uart.c        **** 				{
 910:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
 3669              	, [r3, #0]
 3670 2288 0100A0E3 		b	.L370
 3671 228c 2C139FE5 	.L387:
 3672 2290 0220A0E3 		.loc 1 932 0
 3673 2294 FEFFFFEB 		ldr	r3, .L410+20
 911:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_NAV2, 46);
 3674              		r3, [r3, #0]	@ zero_extendqisi2
 3675 2298 0100A0E3 		add	r3, r3, #1
 3676 229c 3C139FE5 		and	r3, r3, #255
 3677 22a0 2E20A0E3 		ldr	r2, .L410+20
 3678 22a4 FEFFFFEB 		strb	r3, [r2, #0]
 912:uart.c        **** 					UART1_send_ringbuffer();
 3679              	 1 933 0
 3680 22a8 FEFFFFEB 		b	.L370
 913:uart.c        **** 					gpsconf_state++;
 3681              	361:
 3682 22ac 04339FE5 		.loc 1 935 0
 3683 22b0 0030D3E5 		ldr	r3, .L410+24
 3684 22b4 013083E2 		ldrb	r3, [r3, #0]
 3685 22b8 FF3003E2 		and	r3, r3, #255
 3686 22bc F4229FE5 		cmp	r3, #0
 3687 22c0 0030C2E5 		beq	.L392
 3688              		.loc 1 937 0
 914:uart.c        **** 				}
 915:uart.c        **** 				gpsconfig_timeout=0;
 3689              	 .L410+24
 3690 22c4 00339FE5 		mov	r3, #0
 3691 22c8 0020A0E3 		strb	r3, [r2, #0]
 3692 22cc 0020C3E5 		.loc 1 938 0
 3693 22d0 9D0000EA 		mov	r0, #2
 3694              		mov	r1, #0
 916:uart.c        **** 			} else
 917:uart.c        **** 				gpsconfig_timeout++;
 3695              	2, #0
 3696 22d4 F0329FE5 		bl	ringbuffer1
 3697 22d8 0030D3E5 		mov	r3, r0
 3698 22dc 013083E2 		cmp	r3, #16
 3699 22e0 FF3003E2 		ble	.L394
 3700 22e4 E0229FE5 		.loc 1 940 0
 3701 22e8 0030C2E5 		mov	r0, #1
 918:uart.c        **** 		break;
 3702              	, .L410+8
 3703 22ec 960000EA 		mov	r2, #2
 3704              		bl	ringbuffer1
 919:uart.c        **** 		case 4:
 920:uart.c        **** 			if (GPS_ACK_received)
 3705              	oc 1 941 0
 3706 22f0 D8329FE5 		mov	r0, #1
 3707 22f4 0030D3E5 		ldr	r1, .L410+48
 3708 22f8 FF3003E2 		mov	r2, #14
 3709 22fc 000053E3 		bl	ringbuffer1
 3710 2300 1C00000A 		.loc 1 942 0
 921:uart.c        **** 			{
 922:uart.c        **** 				GPS_ACK_received=0;
 3711              	RT1_send_ringbuffer
 3712 2304 C4229FE5 		.loc 1 943 0
 3713 2308 0030A0E3 		ldr	r3, .L410
 3714 230c 0030C2E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 923:uart.c        **** 				if (ringbuffer1(RBFREE, 0, 0)>14)
 3715              		r3, r3, #1
 3716 2310 0200A0E3 		and	r3, r3, #255
 3717 2314 0010A0E3 		ldr	r2, .L410
 3718 2318 0020A0E3 		strb	r3, [r2, #0]
 3719 231c FEFFFFEB 	.L394:
 3720 2320 0030A0E1 		.loc 1 945 0
 3721 2324 0E0053E3 		ldr	r3, .L410+20
 3722 2328 0E0000DA 		mov	r2, #0
 924:uart.c        **** 				{
 925:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
 3723              	, [r3, #0]
 3724 232c 0100A0E3 		b	.L370
 3725 2330 88129FE5 	.L392:
 3726 2334 0220A0E3 		.loc 1 947 0
 3727 2338 FEFFFFEB 		ldr	r3, .L410+20
 926:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_RATE, 12);
 3728              		r3, [r3, #0]	@ zero_extendqisi2
 3729 233c 0100A0E3 		add	r3, r3, #1
 3730 2340 9C129FE5 		and	r3, r3, #255
 3731 2344 0C20A0E3 		ldr	r2, .L410+20
 3732 2348 FEFFFFEB 		strb	r3, [r2, #0]
 927:uart.c        **** 					UART1_send_ringbuffer();
 3733              	 1 948 0
 3734 234c FEFFFFEB 		b	.L370
 928:uart.c        **** 					gpsconf_state++;
 3735              	362:
 3736 2350 60329FE5 		.loc 1 950 0
 3737 2354 0030D3E5 		ldr	r3, .L410+24
 3738 2358 013083E2 		ldrb	r3, [r3, #0]
 3739 235c FF3003E2 		and	r3, r3, #255
 3740 2360 50229FE5 		cmp	r3, #0
 3741 2364 0030C2E5 		beq	.L397
 3742              		.loc 1 952 0
 929:uart.c        **** 				}
 930:uart.c        **** 				gpsconfig_timeout=0;
 3743              	 .L410+24
 3744 2368 5C329FE5 		mov	r3, #0
 3745 236c 0020A0E3 		strb	r3, [r2, #0]
 3746 2370 0020C3E5 		.loc 1 953 0
 3747 2374 740000EA 		mov	r0, #2
 3748              		mov	r1, #0
 931:uart.c        **** 			} else
 932:uart.c        **** 				gpsconfig_timeout++;
 3749              	2, #0
 3750 2378 4C329FE5 		bl	ringbuffer1
 3751 237c 0030D3E5 		mov	r3, r0
 3752 2380 013083E2 		cmp	r3, #21
 3753 2384 FF3003E2 		ble	.L399
 3754 2388 3C229FE5 		.loc 1 955 0
 3755 238c 0030C2E5 		mov	r0, #1
 933:uart.c        **** 		break;
 3756              	, .L410+8
 3757 2390 6D0000EA 		mov	r2, #2
 3758              		bl	ringbuffer1
 934:uart.c        **** 		case 5:
 935:uart.c        **** 			if (GPS_ACK_received)
 3759              	oc 1 956 0
 3760 2394 34329FE5 		mov	r0, #1
 3761 2398 0030D3E5 		ldr	r1, .L410+52
 3762 239c FF3003E2 		mov	r2, #19
 3763 23a0 000053E3 		bl	ringbuffer1
 3764 23a4 1C00000A 		.loc 1 957 0
 936:uart.c        **** 			{
 937:uart.c        **** 				GPS_ACK_received=0;
 3765              	RT1_send_ringbuffer
 3766 23a8 20229FE5 		.loc 1 958 0
 3767 23ac 0030A0E3 		ldr	r3, .L410
 3768 23b0 0030C2E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 938:uart.c        **** 				if (ringbuffer1(RBFREE, 0, 0)>16)
 3769              		r3, r3, #1
 3770 23b4 0200A0E3 		and	r3, r3, #255
 3771 23b8 0010A0E3 		ldr	r2, .L410
 3772 23bc 0020A0E3 		strb	r3, [r2, #0]
 3773 23c0 FEFFFFEB 	.L399:
 3774 23c4 0030A0E1 		.loc 1 960 0
 3775 23c8 100053E3 		ldr	r3, .L410+20
 3776 23cc 0E0000DA 		mov	r2, #0
 939:uart.c        **** 				{
 940:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
 3777              	, [r3, #0]
 3778 23d0 0100A0E3 		b	.L370
 3779 23d4 E4119FE5 	.L397:
 3780 23d8 0220A0E3 		.loc 1 962 0
 3781 23dc FEFFFFEB 		ldr	r3, .L410+20
 941:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_SBAS, 14);
 3782              		r3, [r3, #0]	@ zero_extendqisi2
 3783 23e0 0100A0E3 		add	r3, r3, #1
 3784 23e4 FC119FE5 		and	r3, r3, #255
 3785 23e8 0E20A0E3 		ldr	r2, .L410+20
 3786 23ec FEFFFFEB 		strb	r3, [r2, #0]
 942:uart.c        **** 					UART1_send_ringbuffer();
 3787              	 1 963 0
 3788 23f0 FEFFFFEB 		b	.L370
 943:uart.c        **** 					gpsconf_state++;
 3789              	363:
 3790 23f4 BC319FE5 		.loc 1 965 0
 3791 23f8 0030D3E5 		ldr	r3, .L410+24
 3792 23fc 013083E2 		ldrb	r3, [r3, #0]
 3793 2400 FF3003E2 		and	r3, r3, #255
 3794 2404 AC219FE5 		cmp	r3, #0
 3795 2408 0030C2E5 		beq	.L402
 3796              		.loc 1 967 0
 944:uart.c        **** 				}
 945:uart.c        **** 				gpsconfig_timeout=0;
 3797              	 .L410+24
 3798 240c B8319FE5 		mov	r3, #0
 3799 2410 0020A0E3 		strb	r3, [r2, #0]
 3800 2414 0020C3E5 		.loc 1 968 0
 3801 2418 4B0000EA 		ldr	r2, .L410+56
 3802              		mov	r3, #2
 946:uart.c        **** 			} else
 947:uart.c        **** 				gpsconfig_timeout++;
 3803              	r3, [r2, #0]
 3804 241c A8319FE5 		.loc 1 969 0
 3805 2420 0030D3E5 		ldr	r2, .L410
 3806 2424 013083E2 		mov	r3, #0
 3807 2428 FF3003E2 		strb	r3, [r2, #0]
 3808 242c 98219FE5 		.loc 1 970 0
 3809 2430 0030C2E5 		ldr	r2, .L410+20
 948:uart.c        **** 		break;
 3810              	, #0
 3811 2434 440000EA 		strb	r3, [r2, #0]
 3812              		b	.L370
 949:uart.c        **** 		case 6:
 950:uart.c        **** 			if (GPS_ACK_received)
 3813              	02:
 3814 2438 90319FE5 		.loc 1 972 0
 3815 243c 0030D3E5 		ldr	r3, .L410+20
 3816 2440 FF3003E2 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3817 2444 000053E3 		add	r3, r3, #1
 3818 2448 1C00000A 		and	r3, r3, #255
 951:uart.c        **** 			{
 952:uart.c        **** 				GPS_ACK_received=0;
 3819              	2, .L410+20
 3820 244c 7C219FE5 		strb	r3, [r2, #0]
 3821 2450 0030A0E3 		.loc 1 973 0
 3822 2454 0030C2E5 		b	.L370
 953:uart.c        **** 				if (ringbuffer1(RBFREE, 0, 0)>21)
 3823              	5:
 3824 2458 0200A0E3 		.loc 1 975 0
 3825 245c 0010A0E3 		ldr	r3, .L410
 3826 2460 0020A0E3 		mov	r2, #0
 3827 2464 FEFFFFEB 		strb	r2, [r3, #0]
 3828 2468 0030A0E1 	.L370:
 3829 246c 150053E3 		.loc 1 978 0
 3830 2470 0E0000DA 		ldr	r3, .L410+20
 954:uart.c        **** 				{
 955:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
 3831              	, [r3, #0]	@ zero_extendqisi2
 3832 2474 0100A0E3 		cmp	r3, #200
 3833 2478 40119FE5 		bls	.L409
 3834 247c 0220A0E3 		.loc 1 980 0
 3835 2480 FEFFFFEB 		ldr	r3, .L410+4
 956:uart.c        **** 					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_CFG, 19);
 3836              		r3, [r3, #0]	@ zero_extendqisi2
 3837 2484 0100A0E3 		cmp	r3, #0
 3838 2488 5C119FE5 		beq	.L407
 3839 248c 1320A0E3 		.loc 1 982 0
 3840 2490 FEFFFFEB 		ldr	r2, .L410
 957:uart.c        **** 					UART1_send_ringbuffer();
 3841              	r3, #0
 3842 2494 FEFFFFEB 		strb	r3, [r2, #0]
 958:uart.c        **** 					gpsconf_state++;
 3843              	loc 1 983 0
 3844 2498 18319FE5 		ldr	r2, .L410+20
 3845 249c 0030D3E5 		mov	r3, #0
 3846 24a0 013083E2 		strb	r3, [r2, #0]
 3847 24a4 FF3003E2 		b	.L409
 3848 24a8 08219FE5 	.L407:
 3849 24ac 0030C2E5 		.loc 1 986 0
 3850              		ldr	r2, .L410
 959:uart.c        **** 				}
 960:uart.c        **** 				gpsconfig_timeout=0;
 3851              	 #0
 3852 24b0 14319FE5 		strb	r3, [r2, #0]
 3853 24b4 0020A0E3 		.loc 1 987 0
 3854 24b8 0020C3E5 		ldr	r2, .L410+20
 3855 24bc 220000EA 		mov	r3, #0
 3856              		strb	r3, [r2, #0]
 961:uart.c        **** 			} else
 962:uart.c        **** 				gpsconfig_timeout++;
 3857              	1 988 0
 3858 24c0 04319FE5 		ldr	r2, .L410+56
 3859 24c4 0030D3E5 		mov	r3, #3
 3860 24c8 013083E2 		strb	r3, [r2, #0]
 3861 24cc FF3003E2 	.L409:
 3862 24d0 F4209FE5 		.loc 1 991 0
 3863 24d4 0030C2E5 		sub	sp, fp, #12
 963:uart.c        **** 		break;
 3864              	sp, {fp, sp, lr}
 3865 24d8 1B0000EA 		bx	lr
 3866              	.L411:
 964:uart.c        **** 		case 7:
 965:uart.c        **** 			if (GPS_ACK_received)
 3867              	lign	2
 3868 24dc EC309FE5 	.L410:
 3869 24e0 0030D3E5 		.word	gpsconf_state.2567
 3870 24e4 FF3003E2 		.word	StartWithHighBaudrate.2571
 3871 24e8 000053E3 		.word	gps_startstring.2566
 3872 24ec 0C00000A 		.word	GPS_CFG_PRT
 966:uart.c        **** 			{
 967:uart.c        **** 				GPS_ACK_received=0;
 3873              		baudrate1_change
 3874 24f0 D8209FE5 		.word	gpsconfig_timeout.2570
 3875 24f4 0030A0E3 		.word	GPS_ACK_received
 3876 24f8 0030C2E5 		.word	GPS_CFG_ANT
 968:uart.c        **** 				GPS_init_status=GPS_IS_CONFIGURED;
 3877              	rd	gps_cfg_msg_counter.2568
 3878 24fc EC209FE5 		.word	GPS_CFG_MSG
 3879 2500 0230A0E3 		.word	GPS_CFG_NAV2
 3880 2504 0030C2E5 		.word	GPS_CFG_RATE
 969:uart.c        **** 				gpsconf_state=0;
 3881              	rd	GPS_CFG_SBAS
 3882 2508 A8209FE5 		.word	GPS_CFG_CFG
 3883 250c 0030A0E3 		.word	GPS_init_status
 3884 2510 0030C2E5 	.LFE28:
 970:uart.c        **** 				gpsconfig_timeout=0;
 3885              	ze	GPS_configure, .-GPS_configure
 3886 2514 B0209FE5 		.comm	GPS_timeout,4,4
 3887 2518 0030A0E3 		.comm	GPS_init_status,1,1
 3888 251c 0030C2E5 		.comm	send_buffer,16,1
 3889 2520 090000EA 		.comm	SSP_trans_cnt,4,4
 3890              		.comm	HLC_buffer,256,1
 971:uart.c        **** 			} else
 972:uart.c        **** 				gpsconfig_timeout++;
 3891              		packets,1,1
 3892 2524 A0309FE5 		.comm	DataOutputsPerSecond,1,1
 3893 2528 0030D3E5 		.comm	uart_cnt,4,4
 3894 252c 013083E2 		.comm	current_chksum,2,2
 3895 2530 FF3003E2 		.comm	tx_buff,4,4
 3896 2534 90209FE5 		.comm	UART_rxptr,4,4
 3897 2538 0030C2E5 		.comm	UART1_rxptr,4,4
 973:uart.c        **** 		break;
 3898              	on	.debug_frame,"",%progbits
 3899 253c 020000EA 	.Lframe0:
 3900              		.4byte	.LECIE0-.LSCIE0
 974:uart.c        **** 		default:
 975:uart.c        **** 			gpsconf_state=0;
 3901              	CIE0:
 3902 2540 70309FE5 		.4byte	0xffffffff
 3903 2544 0020A0E3 		.byte	0x1
 3904 2548 0020C3E5 		.ascii	"\000"
 3905              		.uleb128 0x1
 976:uart.c        **** 		break;
 977:uart.c        **** 	}
 978:uart.c        **** 	if (gpsconfig_timeout>GPSCONF_TIMEOUT)				//timeout for ACK receiving
 3906              	b128 -4
 3907 254c 78309FE5 		.byte	0xe
 3908 2550 0030D3E5 		.byte	0xc
 3909 2554 C80053E3 		.uleb128 0xd
 3910 2558 1300009A 		.uleb128 0x0
 979:uart.c        **** 	{
 980:uart.c        **** 		if (StartWithHighBaudrate)
 3911              	gn	2
 3912 255c 58309FE5 	.LECIE0:
 3913 2560 0030D3E5 	.LSFDE0:
 3914 2564 000053E3 		.4byte	.LEFDE0-.LASFDE0
 3915 2568 0600000A 	.LASFDE0:
 981:uart.c        **** 		{
 982:uart.c        **** 			gpsconf_state=0;
 3916              	te	.Lframe0
 3917 256c 44209FE5 		.4byte	.LFB2
 3918 2570 0030A0E3 		.4byte	.LFE2-.LFB2
 3919 2574 0030C2E5 		.byte	0x4
 983:uart.c        **** 			gpsconfig_timeout=0;
 3920              	yte	.LCFI0-.LFB2
 3921 2578 4C209FE5 		.byte	0xd
 3922 257c 0030A0E3 		.uleb128 0xc
 3923 2580 0030C2E5 		.byte	0x4
 3924 2584 080000EA 		.4byte	.LCFI1-.LCFI0
 3925              		.byte	0x8e
 984:uart.c        **** 		} else
 985:uart.c        **** 		{
 986:uart.c        **** 			gpsconf_state=0;
 3926              	128 0x2
 3927 2588 28209FE5 		.byte	0x8d
 3928 258c 0030A0E3 		.uleb128 0x3
 3929 2590 0030C2E5 		.byte	0x8b
 987:uart.c        **** 			gpsconfig_timeout=0;
 3930              	eb128 0x4
 3931 2594 30209FE5 		.byte	0x4
 3932 2598 0030A0E3 		.4byte	.LCFI2-.LCFI1
 3933 259c 0030C2E5 		.byte	0xc
 988:uart.c        **** 			GPS_init_status=GPS_CONFIG_ERROR;
 3934              	eb128 0xb
 3935 25a0 48209FE5 		.uleb128 0x4
 3936 25a4 0330A0E3 		.align	2
 3937 25a8 0030C2E5 	.LEFDE0:
 3938              	.LSFDE2:
 989:uart.c        **** 		}
 990:uart.c        **** 	}
 991:uart.c        **** }
 3939              	te	.LEFDE2-.LASFDE2
 3940 25ac 0CD04BE2 	.LASFDE2:
 3941 25b0 00689DE8 		.4byte	.Lframe0
 3942 25b4 1EFF2FE1 		.4byte	.LFB3
 3943              		.4byte	.LFE3-.LFB3
 3944              		.byte	0x4
 3945              		.4byte	.LCFI3-.LFB3
 3946 25b8 77030000 		.byte	0xd
 3947 25bc 74030000 		.uleb128 0xc
 3948 25c0 03010000 		.byte	0x4
 3949 25c4 00000000 		.4byte	.LCFI4-.LCFI3
 3950 25c8 00000000 		.byte	0x8e
 3951 25cc 75030000 		.uleb128 0x2
 3952 25d0 12000000 		.byte	0x8d
 3953 25d4 00000000 		.uleb128 0x3
 3954 25d8 76030000 		.byte	0x8b
 3955 25dc 00000000 		.uleb128 0x4
 3956 25e0 00000000 		.byte	0x4
 3957 25e4 00000000 		.4byte	.LCFI5-.LCFI4
 3958 25e8 00000000 		.byte	0xc
 3959 25ec 00000000 		.uleb128 0xb
 3960 25f0 00000000 		.uleb128 0x4
 3961              		.align	2
 3962              	.LEFDE2:
 3963              	.LSFDE4:
 3964              		.4byte	.LEFDE4-.LASFDE4
 3965              	.LASFDE4:
 3966              		.4byte	.Lframe0
 3967              		.4byte	.LFB4
 3968              		.4byte	.LFE4-.LFB4
 3969              		.byte	0x4
 3970              		.4byte	.LCFI7-.LFB4
 3971              		.byte	0xd
 3972              		.uleb128 0xc
 3973              		.byte	0x4
 3974              		.4byte	.LCFI8-.LCFI7
 4670              		.4byte	.LFE6-.Ltext0
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:14     .bss:00000000 data_requested
                             .bss:00000000 $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:19     .bss:00000001 chksum_to_check
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:25     .data:00000000 chksum_trigger
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:31     .bss:00000002 transmission_running
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:22     .bss:00000002 $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:36     .bss:00000003 transmission1_running
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:41     .bss:00000004 trigger_transmission
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:46     .bss:00000005 baudrate1_change
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:51     .bss:00000006 UART_syncstate
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:56     .bss:00000007 UART1_syncstate
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:62     .bss:00000008 UART_rxcount
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:68     .bss:0000000c UART1_rxcount
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:73     .bss:00000010 UART_CalibDoneFlag
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:75     .bss:00000011 rb_busy
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:77     .bss:00000012 GPS_ACK_received
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:83     .rodata:00000000 GPS_CFG_PRT
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:113    .rodata:0000001a GPS_CFG_ANT
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:127    .rodata:00000024 GPS_CFG_MSG
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:263    .rodata:000000a8 GPS_CFG_NAV2
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:313    .rodata:000000d6 GPS_CFG_RATE
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:329    .rodata:000000e2 GPS_CFG_SBAS
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:347    .rodata:000000f0 GPS_CFG_CFG
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:371    .data:00000001 startstring
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:378    .data:00000004 stopstring
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:386    .text:00000000 check_chksum
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:393    .text:00000000 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:414    .text:00000030 $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:420    .bss:00000014 sacc.1578
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:423    .bss:00000018 heading.1577
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:426    .bss:0000001c VN.1576
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:429    .bss:00000020 VE.1575
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:431    .bss:00000024 cnt.1574
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:437    .text:00000038 parse_VELNED
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:443    .text:00000038 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:735    .text:00000400 $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:747    .bss:00000028 vacc.1719
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:750    .bss:0000002c hacc.1718
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:753    .bss:00000030 height.1717
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:756    .bss:00000034 lon.1716
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:759    .bss:00000038 lat.1715
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:761    .bss:0000003c cnt.1714
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:767    .text:00000420 parse_POSLLH
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:773    .text:00000420 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1101   .text:00000858 $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1112   .bss:00000040 N.1886
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1115   .bss:00000044 E.1885
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1117   .bss:00000048 cnt.1884
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1123   .text:00000874 parse_POSUTM
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1129   .text:00000874 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1270   .text:00000a34 $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1277   .bss:0000004a week.1955
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1280   .bss:0000004c tow.1954
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1282   .bss:00000050 cnt.1953
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1288   .text:00000a40 parse_NAVSOL
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1294   .text:00000a40 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1435   .text:00000bfc $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1443   .bss:00000051 diffs.2019
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1445   .bss:00000052 flags.2018
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1447   .bss:00000053 GPSfix.2017
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1449   .bss:00000054 cnt.2016
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1455   .text:00000c10 parse_STATUS
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1461   .text:00000c10 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1542   .text:00000d04 $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1551   .bss:00000056 length.2052
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1554   .bss:00000058 cnt.2051
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1556   .bss:0000005a current_packet.2050
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1558   .bss:0000005b state.2049
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1564   .text:00000d18 uart1ISR
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1570   .text:00000d18 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3227   .text:00001dac ringbuffer1
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2309   .text:0000151c UART1WriteChar
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2205   .text:00001420 UART1Initialize
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1648   .text:00000dfc $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1665   .text:00000e38 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2023   .text:0000124c $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2035   .text:00001268 uart0ISR
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2041   .text:00001268 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3039   .text:00001bc0 ringbuffer
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2270   .text:000014cc UARTWriteChar
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2132   .text:0000136c $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2140   .text:00001374 UARTInitialize
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2146   .text:00001374 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2348   .text:0000156c UARTReadChar
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2384   .text:000015b4 UART1ReadChar
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2420   .text:000015fc __putchar
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2457   .text:00001640 UART_send
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2532   .text:000016fc UART1_send
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2592   .text:00001790 UART_send_ringbuffer
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2636   .text:000017f4 $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2642   .text:000017f8 UART1_send_ringbuffer
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2648   .text:000017f8 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2686   .text:0000185c $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2692   .text:00001860 UART_SendPacket
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2698   .text:00001860 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2964   .text:00001b2c crc16
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2774   .text:00001950 $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2781   .text:00001958 UART_SendPacket_raw
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2787   .text:00001958 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2815   .text:00001998 mdv_output
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2879   .text:00001a38 $d
                            *COM*:00000010 send_buffer
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2885   .text:00001a3c crc_update
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:2891   .text:00001a3c $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:1560   .bss:0000005c $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3025   .bss:0000005c content.2463
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3028   .bss:00000060 write_pointer.2462
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3031   .bss:00000064 read_pointer.2461
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3033   .bss:00000068 buffer.2460
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3205   .text:00001d9c $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3213   .bss:000001e8 content.2517
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3216   .bss:000001ec write_pointer.2516
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3219   .bss:000001f0 read_pointer.2515
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3221   .bss:000001f4 buffer.2514
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3233   .text:00001dac $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3393   .text:00001f88 $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3400   .bss:00000374 StartWithHighBaudrate.2571
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3402   .bss:00000375 gpsconfig_timeout.2570
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3404   .bss:00000376 gps_cfg_msg_counter.2568
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3406   .bss:00000377 gpsconf_state.2567
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3411   .rodata:00000103 gps_startstring.2566
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3418   .text:00001f98 GPS_configure
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3424   .text:00001f98 $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3440   .text:00001fbc $d
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3450   .text:00001fdc $a
C:\Users\Nacho\AppData\Local\Temp/ccWoaaaa.s:3946   .text:000025b8 $d
                            *COM*:00000001 GPS_init_status
                            *COM*:00000004 GPS_timeout
                            *COM*:00000004 SSP_trans_cnt
                            *COM*:00000100 HLC_buffer
                            *COM*:00000001 packets
                            *COM*:00000001 DataOutputsPerSecond
                            *COM*:00000004 uart_cnt
                            *COM*:00000002 current_chksum
                            *COM*:00000004 tx_buff
                            *COM*:00000004 UART_rxptr
                            *COM*:00000004 UART1_rxptr

UNDEFINED SYMBOLS
GPS_Data
gpsDataOkTrigger
GPS_Time
HLC_Protocol
__udivsi3
peripheralClockFrequency
