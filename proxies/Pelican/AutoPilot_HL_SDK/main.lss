
main.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000d97c  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000840  40000000  0000d97c  00018000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000944  40000840  40000840  00018840  2**2
                  ALLOC
  3 .stack        00001980  40001200  40001200  00018840  2**4
                  CONTENTS
  4 .comment      00000654  00000000  00000000  0001a1c0  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000390  00000000  00000000  0001a818  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000e7c  00000000  00000000  0001aba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000068c4  00000000  00000000  0001ba24  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000011b7  00000000  00000000  000222e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001858  00000000  00000000  0002349f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000c60  00000000  00000000  00024cf8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000a99  00000000  00000000  00025958  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001de8  00000000  00000000  000263f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000220  00000000  00000000  000281d9  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__Vectors>:
// Exception Vectors
// Mapped to Address 0.
// Absolute addressing mode must be used.

__Vectors:        LDR     PC,Reset_Addr         
       0:	e59ff018 	ldr	pc, [pc, #24]	; 20 <Reset_Addr>
                LDR     PC,Undef_Addr
       4:	e59ff018 	ldr	pc, [pc, #24]	; 24 <Undef_Addr>
                LDR     PC,SWI_Addr
       8:	e59ff018 	ldr	pc, [pc, #24]	; 28 <SWI_Addr>
                LDR     PC,PAbt_Addr
       c:	e59ff018 	ldr	pc, [pc, #24]	; 2c <PAbt_Addr>
                LDR     PC,DAbt_Addr
      10:	e59ff018 	ldr	pc, [pc, #24]	; 30 <DAbt_Addr>
                NOP                            /* Reserved Vector */
      14:	e1a00000 	nop			(mov r0,r0)
//                LDR     PC,IRQ_Addr
//                LDR     PC,[PC, #-0x0FF0]      /* Vector from VicVectAddr */
                LDR     PC,IRQ_Wrapper_Addr
      18:	e59ff018 	ldr	pc, [pc, #24]	; 38 <IRQ_Wrapper_Addr>
                LDR     PC,FIQ_Addr
      1c:	e59ff018 	ldr	pc, [pc, #24]	; 3c <FIQ_Addr>

00000020 <Reset_Addr>:
      20:	00000168 	andeq	r0, r0, r8, ror #2

00000024 <Undef_Addr>:
      24:	00000040 	andeq	r0, r0, r0, asr #32

00000028 <SWI_Addr>:
      28:	00000098 	muleq	r0, r8, r0

0000002c <PAbt_Addr>:
      2c:	00000044 	andeq	r0, r0, r4, asr #32

00000030 <DAbt_Addr>:
      30:	00000048 	andeq	r0, r0, r8, asr #32
      34:	00000000 	andeq	r0, r0, r0

00000038 <IRQ_Wrapper_Addr>:
      38:	00000050 	andeq	r0, r0, r0, asr r0

0000003c <FIQ_Addr>:
      3c:	0000004c 	andeq	r0, r0, ip, asr #32

00000040 <Undef_Handler>:

Reset_Addr:       .word     Reset_Handler
Undef_Addr:       .word     Undef_Handler
// SWI_Addr:         .word     SWI_Handler
// SWI_Wrapper_Addr: .word     SWI_Wrapper
SWI_Addr:         .word     SoftwareInterrupt      /* in swi_handler.S */
PAbt_Addr:        .word     PAbt_Handler
DAbt_Addr:        .word     DAbt_Handler
                  .word     0                      /* Reserved Address */
// IRQ_Addr:         .word     __IRQ_Handler
IRQ_Wrapper_Addr: .word    __IRQ_Wrapper
FIQ_Addr:         .word     FIQ_Handler

Undef_Handler:  B       Undef_Handler
      40:	eafffffe 	b	40 <Undef_Handler>

00000044 <PAbt_Handler>:
/* SWI_Handler:    B       SWI_Handler */
PAbt_Handler:   B       PAbt_Handler
      44:	eafffffe 	b	44 <PAbt_Handler>

00000048 <DAbt_Handler>:
DAbt_Handler:   B       DAbt_Handler
      48:	eafffffe 	b	48 <DAbt_Handler>

0000004c <FIQ_Handler>:
/* IRQ_Handler:    B       IRQ_Handler */
FIQ_Handler:    B       FIQ_Handler
      4c:	eafffffe 	b	4c <FIQ_Handler>

00000050 <__IRQ_Wrapper>:

.size   __Vectors, . - __Vectors



.arm
.section .init, "ax"

.if (VECTREMAPPED)
/* mthomas: Dummy used during startup - mind the nops since the 
   flash-utility will overwrite the "reserved vector"-address
   with the checksum */
				B Reset_Handler
				NOP
				NOP
				NOP
				NOP
				NOP  /* Reserved Address */
				NOP
				NOP
.endif

.arm
.section .init, "ax"
.global __startup
.func __startup
__startup:

Reset_Handler:  

.if (VPBDIV_SETUP)
                LDR     R0, =VPBDIV
                LDR     R1, =VPBDIV_Val
                STR     R1, [R0]
.endif


.if (PLL_SETUP)
                LDR     R0, =PLL_BASE
                MOV     R1, #0xAA
                MOV     R2, #0x55

// Configure and Enable PLL
                MOV     R3, #PLLCFG_Val
                STR     R3, [R0, #PLLCFG_OFS] 
                MOV     R3, #PLLCON_PLLE
                STR     R3, [R0, #PLLCON_OFS]
                STR     R1, [R0, #PLLFEED_OFS]
                STR     R2, [R0, #PLLFEED_OFS]

// Wait until PLL Locked
PLL_Loop:       LDR     R3, [R0, #PLLSTAT_OFS]
                ANDS    R3, R3, #PLLSTAT_PLOCK
                BEQ     PLL_Loop

// Switch to PLL Clock
                MOV     R3, #(PLLCON_PLLE | PLLCON_PLLC)
                STR     R3, [R0, #PLLCON_OFS]
                STR     R1, [R0, #PLLFEED_OFS]
                STR     R2, [R0, #PLLFEED_OFS]
.endif


.if (MAM_SETUP)
                LDR     R0, =MAM_BASE
                MOV     R1, #MAMTIM_Val
                STR     R1, [R0, #MAMTIM_OFS] 
                MOV     R1, #MAMCR_Val
                STR     R1, [R0, #MAMCR_OFS] 
.endif


// Memory Mapping
                .set MEMMAP, 0xE01FC040  /* Memory Mapping Control */

.if (REMAP)
                LDR     R0, =MEMMAP
.if     (EXTMEM_MODE)                
                MOV     R1, #3
.elseif (RAM_MODE) || (VECTREMAPPED)
.print "MEMMAP to 2 on init"
                MOV     R1, #2
.else
                MOV     R1, #1
.endif
                STR     R1, [R0]
.endif

// Setup Stack for each mode
                LDR     R0, =Top_Stack

// Enter Undefined Instruction Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_UND|I_Bit|F_Bit
                MOV     SP, R0
                SUB     R0, R0, #UND_Stack_Size

// Enter Abort Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_ABT|I_Bit|F_Bit
                MOV     SP, R0
                SUB     R0, R0, #ABT_Stack_Size

// Enter FIQ Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_FIQ|I_Bit|F_Bit
                MOV     SP, R0
                SUB     R0, R0, #FIQ_Stack_Size

// Enter IRQ Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_IRQ|I_Bit|F_Bit
                MOV     SP, R0
                SUB     R0, R0, #IRQ_Stack_Size

// Enter Supervisor Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_SVC|I_Bit|F_Bit
                MOV     SP, R0
                SUB     R0, R0, #SVC_Stack_Size

// Enter User Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_USR /* Interrupts enabled */
//				MSR     CPSR_c, #Mode_USR|I_Bit|F_Bit /* Interrupts disabled */
                MOV     SP, R0


.if (RAM_MODE==0)
/* Relocate .data section (Copy from ROM to RAM) */
                LDR     R1, =_etext 
                LDR     R2, =_data 
                LDR     R3, =_edata 
                CMP     R2, R3
                BEQ     DataIsEmpty
LoopRel:        CMP     R2, R3 
                LDRLO   R0, [R1], #4 
                STRLO   R0, [R2], #4 
                BLO     LoopRel 
DataIsEmpty:
.endif
 
/* Clear .bss section (Zero init) */
                MOV     R0, #0 
                LDR     R1, =__bss_start__ 
                LDR     R2, =__bss_end__ 
                CMP     R1,R2
                BEQ     BSSIsEmpty
LoopZI:         CMP     R1, R2 
                STRLO   R0, [R1], #4 
                BLO     LoopZI 
BSSIsEmpty:


// call C++ constructors of global objects
		LDR 	r0, =__ctors_start__
		LDR 	r1, =__ctors_end__
ctor_loop:
		CMP 	r0, r1
		BEQ 	ctor_end
		LDR 	r2, [r0], #4
		STMFD 	sp!, {r0-r1}
		MOV 	lr, pc
		MOV 	pc, r2
		LDMFD 	sp!, {r0-r1}
		B 		ctor_loop
ctor_end:

// Enter the C code
                //LDR     R0,=INIT
                LDR     R0,=main
                TST     R0,#1             // Bit-0 set: main is Thumb
                LDREQ   LR,=__exit_ARM    // ARM Mode
                LDRNE   LR,=__exit_THUMB  // Thumb Mode
                BX      R0

.size   __startup, . - __startup
.endfunc

.arm
.global __exit_ARM
.func __exit_ARM
__exit_ARM:
                B       __exit_ARM
.size   __exit_ARM, . - __exit_ARM
.endfunc

.thumb
.global __exit_THUMB
.func __exit_THUMB
__exit_THUMB:
                B       __exit_THUMB
.size   __exit_THUMB, . - __exit_THUMB
.endfunc


/* mthomas: the following code is inspired by various examples and
   documents from ARM, Atmel, Anglia Designs and others */


.text
.arm

.if (VECTREMAPPED)
.print "Handlers in section .vectmapped -> .data"
.section .vectmapped, "ax"
.else
.print "Handlers in section .vectorg -> .code/.text"
.section .vectorg, "ax"
.endif

.set VIC_base_addr, 0xFFFFF000
.set VIC_vect_offs, 0x30

        .arm
        .global __IRQ_Wrapper
        .func   __IRQ_Wrapper
__IRQ_Wrapper:
/*- Manage Exception Entry  */
/*- Adjust and save LR_irq in IRQ stack  */
            sub         lr, lr, #4
      50:	e24ee004 	sub	lr, lr, #4	; 0x4
            stmfd       sp!, {lr}
      54:	e92d4000 	stmdb	sp!, {lr}

/*- Save SPSR need to be saved for nested interrupt */
            mrs         r14, SPSR
      58:	e14fe000 	mrs	lr, SPSR
            stmfd       sp!, {r14}
      5c:	e92d4000 	stmdb	sp!, {lr}

/*- Save and r0 in IRQ stack  */
            stmfd       sp!, {r0}
      60:	e92d0001 	stmdb	sp!, {r0}

/*- Write in the IVR to support Protect Mode  */
/*- No effect in Normal Mode  */
/*- De-assert the NIRQ and clear the source in Protect Mode */
/* R14 = LR */
            ldr         r14, =VIC_base_addr
      64:	e59fe028 	ldr	lr, [pc, #40]	; 94 <.text+0x94>
            ldr         r0 , [r14, #VIC_vect_offs]
      68:	e59e0030 	ldr	r0, [lr, #48]
            /*str         r14, [r14, #VIC_vect_offs]*/

/*- Enable Interrupt and Switch in Supervisor Mode */
            msr         CPSR_c, #I_Bit | Mode_SVC
      6c:	e321f093 	msr	CPSR_c, #147	; 0x93

/*- Save scratch/used registers and LR in User Stack */
            /*stmfd       sp!, { r1-r3, r12, r14}*/
            stmfd       sp!, { r1-r12, r14 }
      70:	e92d5ffe 	stmdb	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}

/*- Branch to the routine pointed by the VIC-Vector-Address  */
            mov         r14, pc
      74:	e1a0e00f 	mov	lr, pc
            bx          r0
      78:	e12fff10 	bx	r0
/*- Restore scratch/used registers and LR from User Stack*/
            /* ldmia       sp!, { r1-r3, r12, r14} */
            ldmia       sp!, { r1-r12, r14 }
      7c:	e8bd5ffe 	ldmia	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}

/*- Disable Interrupt and switch back in IRQ mode */
            msr         CPSR_c, #I_Bit | Mode_IRQ
      80:	e321f092 	msr	CPSR_c, #146	; 0x92

#if 0
/* VICVectAddr=0 is already done in the ISRs of the Philips-Examples 
   so commented out here */
/*- Mark the End of Interrupt on the VIC */
            ldr         r14, =VIC_base_addr
            str         r14, [r14, #VIC_vect_offs]
#endif

/*- Restore SPSR_irq and r0 from IRQ stack */
            ldmia       sp!, {r0}
      84:	e8bd0001 	ldmia	sp!, {r0}

/*- Restore SPSR_irq and r0 from IRQ stack */
            ldmia       sp!, {r14}
      88:	e8bd4000 	ldmia	sp!, {lr}
            msr         SPSR_cxsf, r14
      8c:	e16ff00e 	msr	SPSR_fsxc, lr

/*- Restore adjusted  LR_irq from IRQ stack directly in the PC */
            ldmia       sp!, {pc}^
      90:	e8fd8000 	ldmia	sp!, {pc}^
      94:	fffff000 	undefined instruction 0xfffff000

00000098 <SoftwareInterrupt>:
.global SoftwareInterrupt
.func   SoftwareInterrupt
SoftwareInterrupt:
SWI_HandlerMT:
	STMFD   sp!, {r4, lr}      /* store regs. */
      98:	e92d4010 	stmdb	sp!, {r4, lr}
	MRS     r4, spsr
      9c:	e14f4000 	mrs	r4, SPSR
	TST     r4, #T_Bit             /* test for thumb */
      a0:	e3140020 	tst	r4, #32	; 0x20
	LDRNEH  r4, [lr, #-2]          /* NE->thumb - get swi instruction code */
      a4:	115e40b2 	ldrneh	r4, [lr, #-2]
	BICNE   r4, r4, #0xff00        /* NE->thumb - clear top 8 bits leaving swi "comment field"=number */
      a8:	13c44cff 	bicne	r4, r4, #65280	; 0xff00
	LDREQ   r4, [lr, #-4]          /* EQ->arm - get swi instruction code */
      ac:	051e4004 	ldreq	r4, [lr, #-4]
	BICEQ   r4, r4, #0xff000000    /* EQ->arm - clear top 8 bits leaving swi "comment field"=number */
      b0:	03c444ff 	biceq	r4, r4, #-16777216	; 0xff000000
	CMP     r4, #MAX_SWI           /* range-check */
      b4:	e3540006 	cmp	r4, #6	; 0x6
	LDRLS   pc, [pc, r4, LSL #2]   /* jump to routine if <= MAX (LS) */
      b8:	979ff104 	ldrls	pc, [pc, r4, lsl #2]

000000bc <SWIOutOfRange>:
SWIOutOfRange:
	B       SWIOutOfRange
      bc:	eafffffe 	b	bc <SWIOutOfRange>

000000c0 <SwiTableStart>:
      c0:	000000dc 	ldreqd	r0, [r0], -ip
      c4:	000000ec 	andeq	r0, r0, ip, ror #1
      c8:	000000fc 	streqd	r0, [r0], -ip
      cc:	00000110 	andeq	r0, r0, r0, lsl r1
      d0:	00000124 	andeq	r0, r0, r4, lsr #2
      d4:	0000012c 	andeq	r0, r0, ip, lsr #2
      d8:	00000148 	andeq	r0, r0, r8, asr #2

000000dc <IRQDisable>:

/* Jump-Table */
SwiTableStart:
	.word IRQDisable	// 0
	.word IRQEnable		// 1
	.word FIQDisable	// 2
	.word FIQEnable		// 3
	.word CPSRget		// 4
	.word IRQRestore	// 5
	.word FIQRestore	// 6
SwiTableEnd:
.set MAX_SWI, ((SwiTableEnd-SwiTableStart)/4)-1

IRQDisable:
	MRS     r0, SPSR                        /* Get SPSR = return value */
      dc:	e14f0000 	mrs	r0, SPSR
	ORR     r4, r0, #I_Bit                  /* I_Bit set */
      e0:	e3804080 	orr	r4, r0, #128	; 0x80
	MSR     SPSR_c, r4                      /* Set SPSR */
      e4:	e161f004 	msr	SPSR_c, r4
	B       EndofSWI
      e8:	ea00001d 	b	164 <EndofSWI>

000000ec <IRQEnable>:

IRQEnable:
	MRS     r0, SPSR                        /* Get SPSR = return value */
      ec:	e14f0000 	mrs	r0, SPSR
	BIC     r4, r0, #I_Bit                  /* I_Bit clear */
      f0:	e3c04080 	bic	r4, r0, #128	; 0x80
	MSR     SPSR_c, r4                      /* Set SPSR */
      f4:	e161f004 	msr	SPSR_c, r4
	B       EndofSWI                       
      f8:	ea000019 	b	164 <EndofSWI>

000000fc <FIQDisable>:

FIQDisable:
	MRS     r0, SPSR
      fc:	e14f0000 	mrs	r0, SPSR
	ORR     r4, r0, #F_Bit
     100:	e3804040 	orr	r4, r0, #64	; 0x40
	AND     r0, r0, #F_Bit
     104:	e2000040 	and	r0, r0, #64	; 0x40
	MSR     SPSR_c, r4
     108:	e161f004 	msr	SPSR_c, r4
	B       EndofSWI
     10c:	ea000014 	b	164 <EndofSWI>

00000110 <FIQEnable>:

FIQEnable:
	MRS     r0, SPSR
     110:	e14f0000 	mrs	r0, SPSR
	BIC     r4, r0, #F_Bit
     114:	e3c04040 	bic	r4, r0, #64	; 0x40
	AND     r0, r0, #F_Bit
     118:	e2000040 	and	r0, r0, #64	; 0x40
	MSR     SPSR_c, r4
     11c:	e161f004 	msr	SPSR_c, r4
	B       EndofSWI
     120:	ea00000f 	b	164 <EndofSWI>

00000124 <CPSRget>:

CPSRget:
	// LDR r0, =0xdeadbeef
	MRS     r0, SPSR                        /* Get SPSR */
     124:	e14f0000 	mrs	r0, SPSR
	B       EndofSWI                       
     128:	ea00000d 	b	164 <EndofSWI>

0000012c <IRQRestore>:

IRQRestore:
	MRS     r4, SPSR                        /* Get SPSR */
     12c:	e14f4000 	mrs	r4, SPSR
	AND     r0, r0, #I_Bit
     130:	e2000080 	and	r0, r0, #128	; 0x80
	TST     r0, #I_Bit             /* Test input for I_Bit */
     134:	e3100080 	tst	r0, #128	; 0x80
	BICEQ   r4, r4, #I_Bit
     138:	03c44080 	biceq	r4, r4, #128	; 0x80
	ORRNE   r4, r4, #I_Bit
     13c:	13844080 	orrne	r4, r4, #128	; 0x80
	MSR     SPSR_c, r4
     140:	e161f004 	msr	SPSR_c, r4
	B       EndofSWI
     144:	ea000006 	b	164 <EndofSWI>

00000148 <FIQRestore>:

FIQRestore:
	MRS     r4, SPSR                        /* Get SPSR */
     148:	e14f4000 	mrs	r4, SPSR
	AND     r0, r0, #F_Bit
     14c:	e2000040 	and	r0, r0, #64	; 0x40
	TST     r0, #F_Bit             /* Test input for F_Bit */
     150:	e3100040 	tst	r0, #64	; 0x40
	BICEQ   r4, r4, #F_Bit
     154:	03c44040 	biceq	r4, r4, #64	; 0x40
	ORRNE   r4, r4, #F_Bit
     158:	13844040 	orrne	r4, r4, #64	; 0x40
	MSR     SPSR_c, r4
     15c:	e161f004 	msr	SPSR_c, r4
	B       EndofSWI
     160:	eaffffff 	b	164 <EndofSWI>

00000164 <EndofSWI>:

EndofSWI:
	LDMFD   sp!, {r4,pc}^
     164:	e8fd8010 	ldmia	sp!, {r4, pc}^

00000168 <__startup>:
     168:	e59f0128 	ldr	r0, [pc, #296]	; 298 <.text+0x298>
     16c:	e3a01000 	mov	r1, #0	; 0x0
     170:	e5801000 	str	r1, [r0]
     174:	e59f0120 	ldr	r0, [pc, #288]	; 29c <.text+0x29c>
     178:	e3a010aa 	mov	r1, #170	; 0xaa
     17c:	e3a02055 	mov	r2, #85	; 0x55
     180:	e3a03024 	mov	r3, #36	; 0x24
     184:	e5803004 	str	r3, [r0, #4]
     188:	e3a03001 	mov	r3, #1	; 0x1
     18c:	e5803000 	str	r3, [r0]
     190:	e580100c 	str	r1, [r0, #12]
     194:	e580200c 	str	r2, [r0, #12]

00000198 <PLL_Loop>:
     198:	e5903008 	ldr	r3, [r0, #8]
     19c:	e2133b01 	ands	r3, r3, #1024	; 0x400
     1a0:	0afffffc 	beq	198 <PLL_Loop>
     1a4:	e3a03003 	mov	r3, #3	; 0x3
     1a8:	e5803000 	str	r3, [r0]
     1ac:	e580100c 	str	r1, [r0, #12]
     1b0:	e580200c 	str	r2, [r0, #12]
     1b4:	e59f00e4 	ldr	r0, [pc, #228]	; 2a0 <.text+0x2a0>
     1b8:	e3a01004 	mov	r1, #4	; 0x4
     1bc:	e5801004 	str	r1, [r0, #4]
     1c0:	e3a01002 	mov	r1, #2	; 0x2
     1c4:	e5801000 	str	r1, [r0]
     1c8:	e59f00d4 	ldr	r0, [pc, #212]	; 2a4 <.text+0x2a4>
     1cc:	e321f0db 	msr	CPSR_c, #219	; 0xdb
     1d0:	e1a0d000 	mov	sp, r0
     1d4:	e2400080 	sub	r0, r0, #128	; 0x80
     1d8:	e321f0d7 	msr	CPSR_c, #215	; 0xd7
     1dc:	e1a0d000 	mov	sp, r0
     1e0:	e2400080 	sub	r0, r0, #128	; 0x80
     1e4:	e321f0d1 	msr	CPSR_c, #209	; 0xd1
     1e8:	e1a0d000 	mov	sp, r0
     1ec:	e2400080 	sub	r0, r0, #128	; 0x80
     1f0:	e321f0d2 	msr	CPSR_c, #210	; 0xd2
     1f4:	e1a0d000 	mov	sp, r0
     1f8:	e2400b02 	sub	r0, r0, #2048	; 0x800
     1fc:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
     200:	e1a0d000 	mov	sp, r0
     204:	e2400b02 	sub	r0, r0, #2048	; 0x800
     208:	e321f010 	msr	CPSR_c, #16	; 0x10
     20c:	e1a0d000 	mov	sp, r0
     210:	e59f1090 	ldr	r1, [pc, #144]	; 2a8 <.text+0x2a8>
     214:	e59f2090 	ldr	r2, [pc, #144]	; 2ac <.text+0x2ac>
     218:	e59f3090 	ldr	r3, [pc, #144]	; 2b0 <.text+0x2b0>
     21c:	e1520003 	cmp	r2, r3
     220:	0a000003 	beq	234 <DataIsEmpty>

00000224 <LoopRel>:
     224:	e1520003 	cmp	r2, r3
     228:	34910004 	ldrcc	r0, [r1], #4
     22c:	34820004 	strcc	r0, [r2], #4
     230:	3afffffb 	bcc	224 <LoopRel>

00000234 <DataIsEmpty>:
     234:	e3a00000 	mov	r0, #0	; 0x0
     238:	e59f1074 	ldr	r1, [pc, #116]	; 2b4 <.text+0x2b4>
     23c:	e59f2074 	ldr	r2, [pc, #116]	; 2b8 <.text+0x2b8>
     240:	e1510002 	cmp	r1, r2
     244:	0a000002 	beq	254 <BSSIsEmpty>

00000248 <LoopZI>:
     248:	e1510002 	cmp	r1, r2
     24c:	34810004 	strcc	r0, [r1], #4
     250:	3afffffc 	bcc	248 <LoopZI>

00000254 <BSSIsEmpty>:
     254:	e59f0060 	ldr	r0, [pc, #96]	; 2bc <.text+0x2bc>
     258:	e59f1060 	ldr	r1, [pc, #96]	; 2c0 <.text+0x2c0>

0000025c <ctor_loop>:
     25c:	e1500001 	cmp	r0, r1
     260:	0a000005 	beq	27c <ctor_end>
     264:	e4902004 	ldr	r2, [r0], #4
     268:	e92d0003 	stmdb	sp!, {r0, r1}
     26c:	e1a0e00f 	mov	lr, pc
     270:	e1a0f002 	mov	pc, r2
     274:	e8bd0003 	ldmia	sp!, {r0, r1}
     278:	eafffff7 	b	25c <ctor_loop>

0000027c <ctor_end>:
     27c:	e59f0040 	ldr	r0, [pc, #64]	; 2c4 <.text+0x2c4>
     280:	e3100001 	tst	r0, #1	; 0x1
     284:	059fe03c 	ldreq	lr, [pc, #60]	; 2c8 <.text+0x2c8>
     288:	159fe03c 	ldrne	lr, [pc, #60]	; 2cc <.text+0x2cc>
     28c:	e12fff10 	bx	r0

00000290 <__exit_ARM>:
     290:	eafffffe 	b	290 <__exit_ARM>

00000294 <__exit_THUMB>:
     294:	e7fe      	b.n	294 <__exit_THUMB>
     296:	0000      	lsls	r0, r0, #0
     298:	c100      	stmia	r1!, {}
     29a:	e01f      	b.n	2dc <FiqRestore+0x4>
     29c:	c080      	stmia	r0!, {r7}
     29e:	e01f      	b.n	2e0 <IntGetCPSR>
     2a0:	c000      	stmia	r0!, {}
     2a2:	e01f      	b.n	2e4 <IntGetCPSR+0x4>
     2a4:	2b80      	cmp	r3, #128
     2a6:	4000      	ands	r0, r0
     2a8:	d97c      	bls.n	3a4 <SSP_data_distribution_HL+0x9c>
     2aa:	0000      	lsls	r0, r0, #0
     2ac:	0000      	lsls	r0, r0, #0
     2ae:	4000      	ands	r0, r0
     2b0:	0840      	lsrs	r0, r0, #1
     2b2:	4000      	ands	r0, r0
     2b4:	0840      	lsrs	r0, r0, #1
     2b6:	4000      	ands	r0, r0
     2b8:	1184      	asrs	r4, r0, #6
     2ba:	4000      	ands	r0, r0
     2bc:	d97c      	bls.n	3b8 <SSP_data_distribution_HL+0xb0>
     2be:	0000      	lsls	r0, r0, #0
     2c0:	d97c      	bls.n	3bc <SSP_data_distribution_HL+0xb4>
     2c2:	0000      	lsls	r0, r0, #0
     2c4:	18a0      	adds	r0, r4, r2
     2c6:	0000      	lsls	r0, r0, #0
     2c8:	0290      	lsls	r0, r2, #10
     2ca:	0000      	lsls	r0, r0, #0
     2cc:	0294      	lsls	r4, r2, #10
	...

000002d0 <IntRestore>:
.endfunc


/**********************************************************************
 *  Call SWI to restore IRQ
 *  Function : void IntEnable(uint32_t)
 *  Parameters:      None
 *  input  :         newstate
 *                   if I_bit in newstate cleared->IRQ on  -> clear I_BIT
 *                   if I_bit in newstate set    ->IRQ off -> set I_Bit
 *  output :         None
 **********************************************************************/
.arm
.text
.section .text, "ax"
.global IntRestore
.func   IntRestore
IntRestore:
		SWI     SWI_IRQ_REST
     2d0:	ef000005 	svc	0x00000005
		BX      lr
     2d4:	e12fff1e 	bx	lr

000002d8 <FiqRestore>:
.endfunc

/**********************************************************************
 *  Call SWI to restore FIQ
 *  Function : void IntEnable(uint32_t)
 *  Parameters:      None
 *  input  :         newstate
 *                   if F_bit in newstate cleared->FIQ on  -> clear F_BIT
 *                   if F_bit in newstate set    ->FIQ off -> set F_Bit
 *  output :         None
 **********************************************************************/
.arm
.text
.section .text, "ax"
.global FiqRestore
.func   FiqRestore
FiqRestore:
		SWI     SWI_FIQ_REST
     2d8:	ef000006 	svc	0x00000006
		BX      lr
     2dc:	e12fff1e 	bx	lr

000002e0 <IntGetCPSR>:
.endfunc

/**********************************************************************
 *  Call SWI to read IRQ/FIQ-status
 *  Function : uint32_t IntEnable(void)
 *  Parameters:      None
 *  input  :         None
 *  output :         CPSR (SPSR_SVC)
 **********************************************************************/
.arm
.text
.section .text, "ax"
.global IntGetCPSR
.func   IntGetCPSR
IntGetCPSR:
		SWI     SWI_GET_CPSR
     2e0:	ef000004 	svc	0x00000004
		BX      lr
     2e4:	e12fff1e 	bx	lr

000002e8 <IntEnable>:
.endfunc

/**********************************************************************
 *  Call SWI to enable IRQ
 *  Function : uint32_t IntEnable(void)
 *  Parameters:      None
 *  input  :         None
 *  output :         previous status
 *                   I_Bit clear if IRQs were enabled
 *                   I_Bit set   if IRQs were disabled
 **********************************************************************/
.arm
.text
.section .text, "ax"
.global IntEnable
.func   IntEnable
IntEnable:
        SWI     SWI_IRQ_EN
     2e8:	ef000001 	svc	0x00000001
        BX      lr
     2ec:	e12fff1e 	bx	lr

000002f0 <IntDisable>:
.endfunc /* end of IntEnable */

/**********************************************************************
 *  Call SWI to disable IRQ
 *  Function : uint32_t IntDisable(void)
 *  Parameters     : None
 *  input          : None
 *  output :         previous status
 *                   I_Bit clear if IRQs were enabled
 *                   I_Bit set   if IRQs were disabled
 **********************************************************************/
.arm
.global IntDisable
.section .text, "ax"
.func   IntDisable
IntDisable:
        SWI     SWI_IRQ_DIS
     2f0:	ef000000 	svc	0x00000000
        BX      lr
     2f4:	e12fff1e 	bx	lr

000002f8 <FiqEnable>:
.endfunc /* end of IntDisable */

/**********************************************************************
 *  Call SWI to enable FIQ
 *  Function : uint32_t FiqEnable(void)
 *  Parameters:      None
 *  input  :         None
 *  output :         previous status
 *                   F_Bit clear if FIQs were enabled
 *                   F_Bit set   if FIQs were disabled
 **********************************************************************/
.arm
.text
.section .text, "ax"
.global FiqEnable
.func   FiqEnable
FiqEnable:
        SWI     SWI_FIQ_EN
     2f8:	ef000003 	svc	0x00000003
        BX      lr
     2fc:	e12fff1e 	bx	lr

00000300 <FiqDisable>:
.endfunc

/**********************************************************************
 *  Call SWI to disable FIQ
 *  Function : uint32_t FiqDisable(void)
 *  Parameters     : None
 *  input          : None
 *  output :         previous status
 *                   F_Bit clear if FIQs were enabled
 *                   F_Bit set   if FIQs were disabled
 **********************************************************************/
.arm
.global FiqDisable
.section .text, "ax"
.func   FiqDisable
FiqDisable:
        SWI     SWI_FIQ_DIS
     300:	ef000002 	svc	0x00000002
        BX      lr
     304:	e12fff1e 	bx	lr

00000308 <SSP_data_distribution_HL>:
struct LL_ATTITUDE_DATA LL_1khz_attitude_data;
struct LL_CONTROL_INPUT LL_1khz_control_input;

void SSP_data_distribution_HL(void)
{
     308:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
	unsigned char i;
	unsigned char current_page=LL_1khz_attitude_data.system_flags&0x03;
     30c:	e59f510c 	ldr	r5, [pc, #268]	; 420 <.text+0x420>
     310:	e1d530b0 	ldrh	r3, [r5]

	if(LL_1khz_attitude_data.system_flags&SF_GPS_NEW) gpsDataOkTrigger=0;
     314:	e3130008 	tst	r3, #8	; 0x8
     318:	e2036003 	and	r6, r3, #3	; 0x3
     31c:	159f3100 	ldrne	r3, [pc, #256]	; 424 <.text+0x424>
     320:	13a02000 	movne	r2, #0	; 0x0
     324:	15832000 	strne	r2, [r3]

	IMU_CalcData.angle_nick=LL_1khz_attitude_data.angle_pitch*10;
	IMU_CalcData.angle_roll=LL_1khz_attitude_data.angle_roll*10;
	IMU_CalcData.angle_yaw=LL_1khz_attitude_data.angle_yaw*10;
     328:	e1d510b6 	ldrh	r1, [r5, #6]
     32c:	e1d530f2 	ldrsh	r3, [r5, #2]
     330:	e1d520f4 	ldrsh	r2, [r5, #4]
     334:	e59f40ec 	ldr	r4, [pc, #236]	; 428 <.text+0x428>

	IMU_CalcData.angvel_nick=LL_1khz_attitude_data.angvel_pitch;
	IMU_CalcData.angvel_roll=LL_1khz_attitude_data.angvel_roll;
	IMU_CalcData.angvel_yaw=LL_1khz_attitude_data.angvel_yaw;
     338:	e1d5e0fc 	ldrsh	lr, [r5, #12]
     33c:	e0833103 	add	r3, r3, r3, lsl #2
     340:	e0822102 	add	r2, r2, r2, lsl #2
     344:	e0811101 	add	r1, r1, r1, lsl #2
     348:	e1d500f8 	ldrsh	r0, [r5, #8]
     34c:	e1d5c0fa 	ldrsh	ip, [r5, #10]
     350:	e1a03083 	mov	r3, r3, lsl #1
     354:	e1a02082 	mov	r2, r2, lsl #1
     358:	e1a01081 	mov	r1, r1, lsl #1

	if(!current_page)	//page 0
     35c:	e3560000 	cmp	r6, #0	; 0x0
     360:	e584e014 	str	lr, [r4, #20]
     364:	e5843000 	str	r3, [r4]
     368:	e5842004 	str	r2, [r4, #4]
     36c:	e5841008 	str	r1, [r4, #8]
     370:	e584000c 	str	r0, [r4, #12]
     374:	e584c010 	str	ip, [r4, #16]
     378:	e1a0e004 	mov	lr, r4
     37c:	1a000017 	bne	3e0 <SSP_data_distribution_HL+0xd8>
     380:	e59f10a4 	ldr	r1, [pc, #164]	; 42c <.text+0x42c>
     384:	e1a02005 	mov	r2, r5
     388:	e2850008 	add	r0, r5, #8	; 0x8
     38c:	e1a0c005 	mov	ip, r5
	{
		for(i=0;i<8;i++)
		{
			RO_RC_Data.channel[i]=LL_1khz_attitude_data.RC_data[i]*16;
     390:	e5d2300e 	ldrb	r3, [r2, #14]
     394:	e2822001 	add	r2, r2, #1	; 0x1
     398:	e1a03203 	mov	r3, r3, lsl #4
     39c:	e1520000 	cmp	r2, r0
     3a0:	e0c130b2 	strh	r3, [r1], #2
     3a4:	1afffff9 	bne	390 <SSP_data_distribution_HL+0x88>
		}
		IMU_CalcData.acc_x_calib=LL_1khz_attitude_data.acc_x*10;
		IMU_CalcData.acc_y_calib=LL_1khz_attitude_data.acc_y*10;
		IMU_CalcData.acc_z_calib=LL_1khz_attitude_data.acc_z*10;
     3a8:	e1dc32f4 	ldrsh	r3, [ip, #36]
     3ac:	e1dc22f0 	ldrsh	r2, [ip, #32]
     3b0:	e1dc12f2 	ldrsh	r1, [ip, #34]
     3b4:	e0822102 	add	r2, r2, r2, lsl #2
     3b8:	e0811101 	add	r1, r1, r1, lsl #2
     3bc:	e0833103 	add	r3, r3, r3, lsl #2
     3c0:	e1a02082 	mov	r2, r2, lsl #1
     3c4:	e1a01081 	mov	r1, r1, lsl #1
     3c8:	e1a03083 	mov	r3, r3, lsl #1
     3cc:	e1ce31bc 	strh	r3, [lr, #28]
     3d0:	e1ce21b8 	strh	r2, [lr, #24]
     3d4:	e1ce11ba 	strh	r1, [lr, #26]
	}
	else if(current_page==1)	//page 1
	{
		IMU_CalcData.height=LL_1khz_attitude_data.height;
		IMU_CalcData.dheight=LL_1khz_attitude_data.dheight;
	}
	else if(current_page==2)
	{
		IMU_CalcData.Hx=LL_1khz_attitude_data.mag_x;
		IMU_CalcData.Hy=LL_1khz_attitude_data.mag_y;
		IMU_CalcData.Hz=LL_1khz_attitude_data.mag_z;
	}
}
     3d8:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
     3dc:	e12fff1e 	bx	lr
     3e0:	e3560001 	cmp	r6, #1	; 0x1
     3e4:	0a000008 	beq	40c <PLLSTAT_PLOCK+0xc>
     3e8:	e3560002 	cmp	r6, #2	; 0x2
     3ec:	1afffff9 	bne	3d8 <SSP_data_distribution_HL+0xd0>
     3f0:	e1d534f6 	ldrsh	r3, [r5, #70]
     3f4:	e1d524f2 	ldrsh	r2, [r5, #66]
     3f8:	e1d514f4 	ldrsh	r1, [r5, #68]
     3fc:	e5843038 	str	r3, [r4, #56]
     400:	e5842030 	str	r2, [r4, #48]
     404:	e5841034 	str	r1, [r4, #52]
     408:	eafffff2 	b	3d8 <SSP_data_distribution_HL+0xd0>
     40c:	e1d534f0 	ldrsh	r3, [r5, #64]
     410:	e595203c 	ldr	r2, [r5, #60]
     414:	e5843050 	str	r3, [r4, #80]
     418:	e584204c 	str	r2, [r4, #76]
     41c:	eaffffed 	b	3d8 <SSP_data_distribution_HL+0xd0>
     420:	40000c94 	mulmi	r0, r4, ip
     424:	40000850 	andmi	r0, r0, r0, asr r8
     428:	40000ebc 	strmih	r0, [r0], -ip
     42c:	40000ea0 	andmi	r0, r0, r0, lsr #29

00000430 <LL_write_ctrl_data>:

int HL2LL_write_cycle(void)	//write data to low-level processor
{
	static char pageselect=0;

	if(!data_sent_to_LL) return(0);

	//update 1kHz data
	LL_1khz_control_input.system_flags=0|pageselect;
	//SSP_ack=0;	//reset ack

	if(gpsDataOkTrigger) LL_1khz_control_input.system_flags|=SF_GPS_NEW;

#ifndef FALCON
	if(WO_SDK.ctrl_enabled)  LL_1khz_control_input.system_flags|=SF_HL_CONTROL_ENABLED;
	else LL_1khz_control_input.system_flags&=~SF_HL_CONTROL_ENABLED;

	if(WO_SDK.ctrl_mode==0x01) LL_1khz_control_input.system_flags|=SF_DIRECT_MOTOR_CONTROL;
	else LL_1khz_control_input.system_flags&=~SF_DIRECT_MOTOR_CONTROL;
#else //Disable Control Input if system is a FALCON
	LL_1khz_control_input.system_flags&=~SF_HL_CONTROL_ENABLED;
	LL_1khz_control_input.system_flags&=~SF_DIRECT_MOTOR_CONTROL;
#endif



	LL_1khz_control_input.ctrl_flags=WO_CTRL_Input.ctrl;
	LL_1khz_control_input.pitch=WO_CTRL_Input.pitch;
	LL_1khz_control_input.roll=WO_CTRL_Input.roll;
	LL_1khz_control_input.yaw=WO_CTRL_Input.yaw;
	LL_1khz_control_input.thrust=WO_CTRL_Input.thrust;

	if(WO_SDK.ctrl_mode==0x01)
	{
		LL_1khz_control_input.direct_motor_control[0]=WO_Direct_Motor_Control.pitch;
		LL_1khz_control_input.direct_motor_control[1]=WO_Direct_Motor_Control.roll;
		LL_1khz_control_input.direct_motor_control[2]=WO_Direct_Motor_Control.yaw;
		LL_1khz_control_input.direct_motor_control[3]=WO_Direct_Motor_Control.thrust;
	}

/*	for(i=0;i<8;i++)
	{
		LL_1khz_control_input.direct_motor_control[i]=0;
	}
*/
	if(pageselect==0)
	{
		//fill struct with 500Hz data
		LL_1khz_control_input.latitude=GPS_Data.latitude;
		LL_1khz_control_input.longitude=GPS_Data.longitude;
		LL_1khz_control_input.height=GPS_Data.height;
		LL_1khz_control_input.speed_x=GPS_Data.speed_x;
		LL_1khz_control_input.speed_y=GPS_Data.speed_y;
		LL_1khz_control_input.heading=GPS_Data.heading;
		LL_1khz_control_input.status=GPS_Data.status;

		//write data
		LL_write_ctrl_data(pageselect);
		//set pageselect to other page for next cycle
		pageselect=1;
	}
	else //pageselect=1
	{
		//fill struct with 500Hz data
		LL_1khz_control_input.hor_accuracy=GPS_Data.horizontal_accuracy;
		LL_1khz_control_input.vert_accuracy=GPS_Data.vertical_accuracy;
		LL_1khz_control_input.speed_accuracy=GPS_Data.speed_accuracy;
		LL_1khz_control_input.numSV=GPS_Data.numSV;
		LL_1khz_control_input.battery_voltage_1=HL_Status.battery_voltage_1;
		LL_1khz_control_input.battery_voltage_2=HL_Status.battery_voltage_2;
		LL_1khz_control_input.dummy_500Hz_2=0;
		LL_1khz_control_input.dummy_500Hz_3=0;

		//write data
		LL_write_ctrl_data(pageselect);
		//set pageselect to other page for next cycle
		pageselect=0;
	}
	return(1);
}

void LL_write_ctrl_data(char page)
{
	unsigned int i;
	unsigned char *dataptr;
	static volatile short spi_chksum;

	dataptr=(unsigned char *)&LL_1khz_control_input;

	//initialize syncbytes
	SPIWRData[0]='>';
	SPIWRData[1]='*';

	spi_chksum=0xAAAA;

	if(!page)
     430:	e31000ff 	tst	r0, #255	; 0xff
     434:	e92d4030 	stmdb	sp!, {r4, r5, lr}
     438:	e59fc0f8 	ldr	ip, [pc, #248]	; 538 <.text+0x538>
     43c:	e59f50f8 	ldr	r5, [pc, #248]	; 53c <.text+0x53c>
     440:	e3e03c55 	mvn	r3, #21760	; 0x5500
	{
		for(i=2;i<40;i++)
     444:	159f00f4 	ldrne	r0, [pc, #244]	; 540 <.text+0x540>
     448:	e3a0102a 	mov	r1, #42	; 0x2a
     44c:	e2433055 	sub	r3, r3, #85	; 0x55
     450:	e3a0203e 	mov	r2, #62	; 0x3e
     454:	e5c51001 	strb	r1, [r5, #1]
     458:	e5c52000 	strb	r2, [r5]
     45c:	e1cc30b0 	strh	r3, [ip]
     460:	11a01005 	movne	r1, r5
     464:	1280e014 	addne	lr, r0, #20	; 0x14
     468:	1a000019 	bne	4d4 <LL_write_ctrl_data+0xa4>
     46c:	e59f00cc 	ldr	r0, [pc, #204]	; 540 <.text+0x540>
     470:	e1a01005 	mov	r1, r5
     474:	e280e026 	add	lr, r0, #38	; 0x26
		{
			SPIWRData[i]=*dataptr++;
     478:	e4d02001 	ldrb	r2, [r0], #1
			spi_chksum+=SPIWRData[i];
     47c:	e1dc30b0 	ldrh	r3, [ip]
     480:	e0833002 	add	r3, r3, r2
     484:	e1a03803 	mov	r3, r3, lsl #16
     488:	e1a03823 	mov	r3, r3, lsr #16
     48c:	e15e0000 	cmp	lr, r0
     490:	e5c12002 	strb	r2, [r1, #2]
     494:	e1cc30b0 	strh	r3, [ip]
     498:	e2811001 	add	r1, r1, #1	; 0x1
     49c:	1afffff5 	bne	478 <LL_write_ctrl_data+0x48>
		}
	}
	else
	{
		for(i=2;i<22;i++)
		{
			SPIWRData[i]=*dataptr++;
			spi_chksum+=SPIWRData[i];
		}
		dataptr+=18;
		for(i=22;i<40;i++)
		{
			SPIWRData[i]=*dataptr++;
			spi_chksum+=SPIWRData[i];
		}
	}

	SPIWRData[40]=spi_chksum;		//chksum LSB
     4a0:	e1dc00b0 	ldrh	r0, [ip]
	SPIWRData[41]=(spi_chksum>>8);	//chksum MSB
     4a4:	e1dc30b0 	ldrh	r3, [ip]
     4a8:	e1a03423 	mov	r3, r3, lsr #8
     4ac:	e5c53029 	strb	r3, [r5, #41]

	SPIWR_num_bytes=42;
     4b0:	e59f308c 	ldr	r3, [pc, #140]	; 544 <.text+0x544>
     4b4:	e3a0202a 	mov	r2, #42	; 0x2a
     4b8:	e5832000 	str	r2, [r3]
	data_sent_to_LL=0;
     4bc:	e59f3084 	ldr	r3, [pc, #132]	; 548 <.text+0x548>
     4c0:	e3a01000 	mov	r1, #0	; 0x0
     4c4:	e5c31000 	strb	r1, [r3]
     4c8:	e5c50028 	strb	r0, [r5, #40]
}
     4cc:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
     4d0:	e12fff1e 	bx	lr
     4d4:	e4d02001 	ldrb	r2, [r0], #1
     4d8:	e1dc30b0 	ldrh	r3, [ip]
     4dc:	e0833002 	add	r3, r3, r2
     4e0:	e1a03803 	mov	r3, r3, lsl #16
     4e4:	e1a03823 	mov	r3, r3, lsr #16
     4e8:	e150000e 	cmp	r0, lr
     4ec:	e5c12002 	strb	r2, [r1, #2]
     4f0:	e1cc30b0 	strh	r3, [ip]
     4f4:	e2811001 	add	r1, r1, #1	; 0x1
     4f8:	1afffff5 	bne	4d4 <LL_write_ctrl_data+0xa4>
     4fc:	e59fe038 	ldr	lr, [pc, #56]	; 53c <.text+0x53c>
     500:	e2804025 	add	r4, r0, #37	; 0x25
     504:	e2801013 	add	r1, r0, #19	; 0x13
     508:	e5512001 	ldrb	r2, [r1, #-1]
     50c:	e1dc30b0 	ldrh	r3, [ip]
     510:	e0833002 	add	r3, r3, r2
     514:	e1a03803 	mov	r3, r3, lsl #16
     518:	e2811001 	add	r1, r1, #1	; 0x1
     51c:	e1a03823 	mov	r3, r3, lsr #16
     520:	e1510004 	cmp	r1, r4
     524:	e5ce2016 	strb	r2, [lr, #22]
     528:	e1cc30b0 	strh	r3, [ip]
     52c:	e28ee001 	add	lr, lr, #1	; 0x1
     530:	1afffff4 	bne	508 <LL_write_ctrl_data+0xd8>
     534:	eaffffd9 	b	4a0 <LL_write_ctrl_data+0x70>
     538:	4000084a 	andmi	r0, r0, sl, asr #16
     53c:	40001084 	andmi	r1, r0, r4, lsl #1
     540:	40000df4 	strmid	r0, [r0], -r4
     544:	4000107c 	andmi	r1, r0, ip, ror r0
     548:	40000017 	andmi	r0, r0, r7, lsl r0

0000054c <HL2LL_write_cycle>:
     54c:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
     550:	e59f31a8 	ldr	r3, [pc, #424]	; 700 <.text+0x700>
     554:	e5d30000 	ldrb	r0, [r3]
     558:	e3500000 	cmp	r0, #0	; 0x0
     55c:	0a000037 	beq	640 <HL2LL_write_cycle+0xf4>
     560:	e59f319c 	ldr	r3, [pc, #412]	; 704 <.text+0x704>
     564:	e59f719c 	ldr	r7, [pc, #412]	; 708 <.text+0x708>
     568:	e5932000 	ldr	r2, [r3]
     56c:	e5d76000 	ldrb	r6, [r7]
     570:	e59f5194 	ldr	r5, [pc, #404]	; 70c <.text+0x70c>
     574:	e3520000 	cmp	r2, #0	; 0x0
     578:	e59f2190 	ldr	r2, [pc, #400]	; 710 <.text+0x710>
     57c:	13863008 	orrne	r3, r6, #8	; 0x8
     580:	e1c560b0 	strh	r6, [r5]
     584:	11c530b0 	strneh	r3, [r5]
     588:	e5d23001 	ldrb	r3, [r2, #1]
     58c:	e3530000 	cmp	r3, #0	; 0x0
     590:	11d530b0 	ldrneh	r3, [r5]
     594:	01d530b0 	ldreqh	r3, [r5]
     598:	13833010 	orrne	r3, r3, #16	; 0x10
     59c:	03c33010 	biceq	r3, r3, #16	; 0x10
     5a0:	11c530b0 	strneh	r3, [r5]
     5a4:	01c530b0 	streqh	r3, [r5]
     5a8:	e5d23000 	ldrb	r3, [r2]
     5ac:	e3530001 	cmp	r3, #1	; 0x1
     5b0:	0a00003a 	beq	6a0 <HL2LL_write_cycle+0x154>
     5b4:	e1d530b0 	ldrh	r3, [r5]
     5b8:	e59f2154 	ldr	r2, [pc, #340]	; 714 <.text+0x714>
     5bc:	e3c33020 	bic	r3, r3, #32	; 0x20
     5c0:	e1c530b0 	strh	r3, [r5]
     5c4:	e1d230b6 	ldrh	r3, [r2, #6]
     5c8:	e1d2e0b8 	ldrh	lr, [r2, #8]
     5cc:	e1d210b0 	ldrh	r1, [r2]
     5d0:	e1c530ba 	strh	r3, [r5, #10]
     5d4:	e1d230b2 	ldrh	r3, [r2, #2]
     5d8:	e1d220b4 	ldrh	r2, [r2, #4]
     5dc:	e1c5e0b2 	strh	lr, [r5, #2]
     5e0:	e1c510b4 	strh	r1, [r5, #4]
     5e4:	e1c530b6 	strh	r3, [r5, #6]
     5e8:	e1c520b8 	strh	r2, [r5, #8]
     5ec:	e3560000 	cmp	r6, #0	; 0x0
     5f0:	1a000014 	bne	648 <HL2LL_write_cycle+0xfc>
     5f4:	e59f311c 	ldr	r3, [pc, #284]	; 718 <.text+0x718>
     5f8:	e5932000 	ldr	r2, [r3]
     5fc:	e9931002 	ldmib	r3, {r1, ip}
     600:	e1d3e2b8 	ldrh	lr, [r3, #40]
     604:	e5852014 	str	r2, [r5, #20]
     608:	e5851018 	str	r1, [r5, #24]
     60c:	e1d321b0 	ldrh	r2, [r3, #16]
     610:	e1d310bc 	ldrh	r1, [r3, #12]
     614:	e1d331b4 	ldrh	r3, [r3, #20]
     618:	e1a00006 	mov	r0, r6
     61c:	e1c532be 	strh	r3, [r5, #46]
     620:	e1c5e2b4 	strh	lr, [r5, #36]
     624:	e585c01c 	str	ip, [r5, #28]
     628:	e1c512b0 	strh	r1, [r5, #32]
     62c:	e1c522b2 	strh	r2, [r5, #34]
     630:	ebffff7e 	bl	430 <LL_write_ctrl_data>
     634:	e3a03001 	mov	r3, #1	; 0x1
     638:	e5c73000 	strb	r3, [r7]
     63c:	e1a00003 	mov	r0, r3
     640:	e8bd40f0 	ldmia	sp!, {r4, r5, r6, r7, lr}
     644:	e12fff1e 	bx	lr
     648:	e59f30c8 	ldr	r3, [pc, #200]	; 718 <.text+0x718>
     64c:	e59f20c8 	ldr	r2, [pc, #200]	; 71c <.text+0x71c>
     650:	e1d3e2b4 	ldrh	lr, [r3, #36]
     654:	e1d210b2 	ldrh	r1, [r2, #2]
     658:	e1c5e2bc 	strh	lr, [r5, #44]
     65c:	e1c513b2 	strh	r1, [r5, #50]
     660:	e1d3e1b8 	ldrh	lr, [r3, #24]
     664:	e1d311bc 	ldrh	r1, [r3, #28]
     668:	e1d220b0 	ldrh	r2, [r2]
     66c:	e1d332b0 	ldrh	r3, [r3, #32]
     670:	e3a04000 	mov	r4, #0	; 0x0
     674:	e1a00006 	mov	r0, r6
     678:	e1c543b6 	strh	r4, [r5, #54]
     67c:	e1c5e2b6 	strh	lr, [r5, #38]
     680:	e1c512b8 	strh	r1, [r5, #40]
     684:	e1c532ba 	strh	r3, [r5, #42]
     688:	e1c523b0 	strh	r2, [r5, #48]
     68c:	e1c543b4 	strh	r4, [r5, #52]
     690:	ebffff66 	bl	430 <LL_write_ctrl_data>
     694:	e3a00001 	mov	r0, #1	; 0x1
     698:	e5c74000 	strb	r4, [r7]
     69c:	eaffffe7 	b	640 <HL2LL_write_cycle+0xf4>
     6a0:	e1d520b0 	ldrh	r2, [r5]
     6a4:	e59f3074 	ldr	r3, [pc, #116]	; 720 <.text+0x720>
     6a8:	e59f1064 	ldr	r1, [pc, #100]	; 714 <.text+0x714>
     6ac:	e3822020 	orr	r2, r2, #32	; 0x20
     6b0:	e5d3e002 	ldrb	lr, [r3, #2]
     6b4:	e1c520b0 	strh	r2, [r5]
     6b8:	e1d120b6 	ldrh	r2, [r1, #6]
     6bc:	e5d34003 	ldrb	r4, [r3, #3]
     6c0:	e5d30000 	ldrb	r0, [r3]
     6c4:	e5d3c001 	ldrb	ip, [r3, #1]
     6c8:	e1c520ba 	strh	r2, [r5, #10]
     6cc:	e1d130b8 	ldrh	r3, [r1, #8]
     6d0:	e1d120b2 	ldrh	r2, [r1, #2]
     6d4:	e5c5e00e 	strb	lr, [r5, #14]
     6d8:	e1d1e0b0 	ldrh	lr, [r1]
     6dc:	e1d110b4 	ldrh	r1, [r1, #4]
     6e0:	e5c5000c 	strb	r0, [r5, #12]
     6e4:	e5c5c00d 	strb	ip, [r5, #13]
     6e8:	e5c5400f 	strb	r4, [r5, #15]
     6ec:	e1c530b2 	strh	r3, [r5, #2]
     6f0:	e1c5e0b4 	strh	lr, [r5, #4]
     6f4:	e1c520b6 	strh	r2, [r5, #6]
     6f8:	e1c510b8 	strh	r1, [r5, #8]
     6fc:	eaffffba 	b	5ec <HL2LL_write_cycle+0xa0>
     700:	40000017 	andmi	r0, r0, r7, lsl r0
     704:	40000850 	andmi	r0, r0, r0, asr r8
     708:	4000084c 	andmi	r0, r0, ip, asr #16
     70c:	40000df4 	strmid	r0, [r0], -r4
     710:	40000e9c 	mulmi	r0, ip, lr
     714:	40000e84 	andmi	r0, r0, r4, lsl #29
     718:	40000e2c 	andmi	r0, r0, ip, lsr #28
     71c:	40000f4c 	andmi	r0, r0, ip, asr #30
     720:	40000e94 	mulmi	r0, r4, lr

00000724 <SSP_rx_handler_HL>:


inline void SSP_rx_handler_HL(unsigned char SPI_rxdata)	//rx_handler @ high-level processor
{
     724:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
	static volatile unsigned char SPI_syncstate=0;
	static volatile unsigned char SPI_rxcount=0;
	static volatile unsigned char *SPI_rxptr;
	static volatile unsigned char incoming_page;

        //receive handler
        if (SPI_syncstate==0)
     728:	e59f2264 	ldr	r2, [pc, #612]	; 994 <.text+0x994>
     72c:	e5d23000 	ldrb	r3, [r2]
     730:	e20330ff 	and	r3, r3, #255	; 0xff
     734:	e3530000 	cmp	r3, #0	; 0x0
     738:	e20000ff 	and	r0, r0, #255	; 0xff
     73c:	e1a04002 	mov	r4, r2
     740:	1a000004 	bne	758 <SSP_rx_handler_HL+0x34>
		{
			if (SPI_rxdata=='>') SPI_syncstate++; else SPI_syncstate=0;
     744:	e350003e 	cmp	r0, #62	; 0x3e
     748:	0a000011 	beq	794 <SSP_rx_handler_HL+0x70>
		}
		else if (SPI_syncstate==1)
		{
			if (SPI_rxdata=='*')
			{
				SPI_syncstate++;
				SPI_rxptr=(unsigned char *)&LL_1khz_attitude_data;
				SPI_rxcount=40;
			}
			else SPI_syncstate=0;
		}
		else if (SPI_syncstate==2)
		{
			if(SPI_rxcount==26) //14 bytes transmitted => select 500Hz page
			{
				incoming_page=LL_1khz_attitude_data.system_flags&0x03;	//system flags were already received
				if(incoming_page==1) SPI_rxptr+=26;
				else if(incoming_page==2) SPI_rxptr+=52;
			}
			SPI_rxcount--;
			*SPI_rxptr=SPI_rxdata;
			SPI_rxptr++;
			if (SPI_rxcount==0)
        	{
             	SPI_syncstate++;
        	}
		}
		else if (SPI_syncstate==3)
		{
			if(SPI_rxdata=='<')	//last byte ok => data should be valid
			{
				SSP_data_distribution_HL();	//only distribute data to other structs, if it was received correctly
											//ack data receiption
			}
			SPI_syncstate=0;
		}
		else SPI_syncstate=0;
     74c:	e5c23000 	strb	r3, [r2]
}
     750:	e8bd40f0 	ldmia	sp!, {r4, r5, r6, r7, lr}
     754:	e12fff1e 	bx	lr
     758:	e5d23000 	ldrb	r3, [r2]
     75c:	e3530001 	cmp	r3, #1	; 0x1
     760:	0a000010 	beq	7a8 <SSP_rx_handler_HL+0x84>
     764:	e5d23000 	ldrb	r3, [r2]
     768:	e3530002 	cmp	r3, #2	; 0x2
     76c:	0a00001c 	beq	7e4 <SSP_rx_handler_HL+0xc0>
     770:	e5d23000 	ldrb	r3, [r2]
     774:	e3530003 	cmp	r3, #3	; 0x3
     778:	13a03000 	movne	r3, #0	; 0x0
     77c:	1afffff2 	bne	74c <SSP_rx_handler_HL+0x28>
     780:	e350003c 	cmp	r0, #60	; 0x3c
     784:	0a000039 	beq	870 <IRQ_Stack_Size+0x70>
     788:	e3a03000 	mov	r3, #0	; 0x0
     78c:	e5c43000 	strb	r3, [r4]
     790:	eaffffee 	b	750 <SSP_rx_handler_HL+0x2c>
     794:	e5d23000 	ldrb	r3, [r2]
     798:	e2833001 	add	r3, r3, #1	; 0x1
     79c:	e20330ff 	and	r3, r3, #255	; 0xff
     7a0:	e5c23000 	strb	r3, [r2]
     7a4:	eaffffe9 	b	750 <SSP_rx_handler_HL+0x2c>
     7a8:	e350002a 	cmp	r0, #42	; 0x2a
     7ac:	13a03000 	movne	r3, #0	; 0x0
     7b0:	15c23000 	strneb	r3, [r2]
     7b4:	1affffe5 	bne	750 <SSP_rx_handler_HL+0x2c>
     7b8:	e5d23000 	ldrb	r3, [r2]
     7bc:	e2833001 	add	r3, r3, #1	; 0x1
     7c0:	e20330ff 	and	r3, r3, #255	; 0xff
     7c4:	e5c23000 	strb	r3, [r2]
     7c8:	e59f31c8 	ldr	r3, [pc, #456]	; 998 <.text+0x998>
     7cc:	e59f21c8 	ldr	r2, [pc, #456]	; 99c <.text+0x99c>
     7d0:	e5832000 	str	r2, [r3]
     7d4:	e59f31c4 	ldr	r3, [pc, #452]	; 9a0 <.text+0x9a0>
     7d8:	e3a01028 	mov	r1, #40	; 0x28
     7dc:	e5c31000 	strb	r1, [r3]
     7e0:	eaffffda 	b	750 <SSP_rx_handler_HL+0x2c>
     7e4:	e59fc1b4 	ldr	ip, [pc, #436]	; 9a0 <.text+0x9a0>
     7e8:	e5dc3000 	ldrb	r3, [ip]
     7ec:	e353001a 	cmp	r3, #26	; 0x1a
     7f0:	0a00000e 	beq	830 <IRQ_Stack_Size+0x30>
     7f4:	e59f119c 	ldr	r1, [pc, #412]	; 998 <.text+0x998>
     7f8:	e5dc3000 	ldrb	r3, [ip]
     7fc:	e5912000 	ldr	r2, [r1]
     800:	e2433001 	sub	r3, r3, #1	; 0x1
     804:	e20330ff 	and	r3, r3, #255	; 0xff
     808:	e5cc3000 	strb	r3, [ip]
     80c:	e4c20001 	strb	r0, [r2], #1
     810:	e5dc3000 	ldrb	r3, [ip]
     814:	e3530000 	cmp	r3, #0	; 0x0
     818:	e5812000 	str	r2, [r1]
     81c:	05d43000 	ldreqb	r3, [r4]
     820:	02833001 	addeq	r3, r3, #1	; 0x1
     824:	020330ff 	andeq	r3, r3, #255	; 0xff
     828:	05c43000 	streqb	r3, [r4]
     82c:	eaffffc7 	b	750 <SSP_rx_handler_HL+0x2c>
     830:	e59f3164 	ldr	r3, [pc, #356]	; 99c <.text+0x99c>
     834:	e1d320b0 	ldrh	r2, [r3]
     838:	e59f1164 	ldr	r1, [pc, #356]	; 9a4 <.text+0x9a4>
     83c:	e2022003 	and	r2, r2, #3	; 0x3
     840:	e5c12000 	strb	r2, [r1]
     844:	e5d13000 	ldrb	r3, [r1]
     848:	e3530001 	cmp	r3, #1	; 0x1
     84c:	0a000046 	beq	96c <IRQ_Stack_Size+0x16c>
     850:	e5d13000 	ldrb	r3, [r1]
     854:	e3530002 	cmp	r3, #2	; 0x2
     858:	1affffe5 	bne	7f4 <SSP_rx_handler_HL+0xd0>
     85c:	e59f1134 	ldr	r1, [pc, #308]	; 998 <.text+0x998>
     860:	e5913000 	ldr	r3, [r1]
     864:	e2833034 	add	r3, r3, #52	; 0x34
     868:	e5813000 	str	r3, [r1]
     86c:	eaffffe1 	b	7f8 <SSP_rx_handler_HL+0xd4>
     870:	e59f6124 	ldr	r6, [pc, #292]	; 99c <.text+0x99c>
     874:	e1d630b0 	ldrh	r3, [r6]
     878:	e3130008 	tst	r3, #8	; 0x8
     87c:	e2037003 	and	r7, r3, #3	; 0x3
     880:	159f3120 	ldrne	r3, [pc, #288]	; 9a8 <.text+0x9a8>
     884:	13a02000 	movne	r2, #0	; 0x0
     888:	15832000 	strne	r2, [r3]
     88c:	e1d610b6 	ldrh	r1, [r6, #6]
     890:	e1d630f2 	ldrsh	r3, [r6, #2]
     894:	e1d620f4 	ldrsh	r2, [r6, #4]
     898:	e59f510c 	ldr	r5, [pc, #268]	; 9ac <.text+0x9ac>
     89c:	e1d6e0fc 	ldrsh	lr, [r6, #12]
     8a0:	e0833103 	add	r3, r3, r3, lsl #2
     8a4:	e0822102 	add	r2, r2, r2, lsl #2
     8a8:	e0811101 	add	r1, r1, r1, lsl #2
     8ac:	e1d600f8 	ldrsh	r0, [r6, #8]
     8b0:	e1d6c0fa 	ldrsh	ip, [r6, #10]
     8b4:	e1a03083 	mov	r3, r3, lsl #1
     8b8:	e1a02082 	mov	r2, r2, lsl #1
     8bc:	e1a01081 	mov	r1, r1, lsl #1
     8c0:	e3570000 	cmp	r7, #0	; 0x0
     8c4:	e585e014 	str	lr, [r5, #20]
     8c8:	e5853000 	str	r3, [r5]
     8cc:	e5852004 	str	r2, [r5, #4]
     8d0:	e5851008 	str	r1, [r5, #8]
     8d4:	e585000c 	str	r0, [r5, #12]
     8d8:	e585c010 	str	ip, [r5, #16]
     8dc:	e1a0e005 	mov	lr, r5
     8e0:	1a000016 	bne	940 <IRQ_Stack_Size+0x140>
     8e4:	e59f10c4 	ldr	r1, [pc, #196]	; 9b0 <.text+0x9b0>
     8e8:	e1a02006 	mov	r2, r6
     8ec:	e2860008 	add	r0, r6, #8	; 0x8
     8f0:	e1a0c006 	mov	ip, r6
     8f4:	e5d2300e 	ldrb	r3, [r2, #14]
     8f8:	e2822001 	add	r2, r2, #1	; 0x1
     8fc:	e1a03203 	mov	r3, r3, lsl #4
     900:	e1520000 	cmp	r2, r0
     904:	e0c130b2 	strh	r3, [r1], #2
     908:	1afffff9 	bne	8f4 <IRQ_Stack_Size+0xf4>
     90c:	e1dc32f4 	ldrsh	r3, [ip, #36]
     910:	e1dc22f0 	ldrsh	r2, [ip, #32]
     914:	e1dc12f2 	ldrsh	r1, [ip, #34]
     918:	e0822102 	add	r2, r2, r2, lsl #2
     91c:	e0811101 	add	r1, r1, r1, lsl #2
     920:	e0833103 	add	r3, r3, r3, lsl #2
     924:	e1a02082 	mov	r2, r2, lsl #1
     928:	e1a01081 	mov	r1, r1, lsl #1
     92c:	e1a03083 	mov	r3, r3, lsl #1
     930:	e1ce31bc 	strh	r3, [lr, #28]
     934:	e1ce21b8 	strh	r2, [lr, #24]
     938:	e1ce11ba 	strh	r1, [lr, #26]
     93c:	eaffff91 	b	788 <SSP_rx_handler_HL+0x64>
     940:	e3570001 	cmp	r7, #1	; 0x1
     944:	0a00000d 	beq	980 <IRQ_Stack_Size+0x180>
     948:	e3570002 	cmp	r7, #2	; 0x2
     94c:	1affff8d 	bne	788 <SSP_rx_handler_HL+0x64>
     950:	e1d634f6 	ldrsh	r3, [r6, #70]
     954:	e1d624f2 	ldrsh	r2, [r6, #66]
     958:	e1d614f4 	ldrsh	r1, [r6, #68]
     95c:	e5853038 	str	r3, [r5, #56]
     960:	e5852030 	str	r2, [r5, #48]
     964:	e5851034 	str	r1, [r5, #52]
     968:	eaffff86 	b	788 <SSP_rx_handler_HL+0x64>
     96c:	e59f1024 	ldr	r1, [pc, #36]	; 998 <.text+0x998>
     970:	e5913000 	ldr	r3, [r1]
     974:	e283301a 	add	r3, r3, #26	; 0x1a
     978:	e5813000 	str	r3, [r1]
     97c:	eaffff9d 	b	7f8 <SSP_rx_handler_HL+0xd4>
     980:	e1d634f0 	ldrsh	r3, [r6, #64]
     984:	e596203c 	ldr	r2, [r6, #60]
     988:	e5853050 	str	r3, [r5, #80]
     98c:	e585204c 	str	r2, [r5, #76]
     990:	eaffff7c 	b	788 <SSP_rx_handler_HL+0x64>
     994:	40000849 	andmi	r0, r0, r9, asr #16
     998:	40000844 	andmi	r0, r0, r4, asr #16
     99c:	40000c94 	mulmi	r0, r4, ip
     9a0:	40000848 	andmi	r0, r0, r8, asr #16
     9a4:	40000842 	andmi	r0, r0, r2, asr #16
     9a8:	40000850 	andmi	r0, r0, r0, asr r8
     9ac:	40000ebc 	strmih	r0, [r0], -ip
     9b0:	40000ea0 	andmi	r0, r0, r0, lsr #29

000009b4 <HLC_Checksum>:
}

short HLC_Checksum(void *data, int size) {
	int chk = 0;
	for (int i = 0; i < size; i++)
     9b4:	e3510000 	cmp	r1, #0	; 0x0
     9b8:	d3a00000 	movle	r0, #0	; 0x0
     9bc:	da000008 	ble	9e4 <HLC_Checksum+0x30>
     9c0:	e3a0c000 	mov	ip, #0	; 0x0
     9c4:	e1a0200c 	mov	r2, ip
	{
		chk += *((char *)data + i);
     9c8:	e7d23000 	ldrb	r3, [r2, r0]
     9cc:	e2822001 	add	r2, r2, #1	; 0x1
     9d0:	e1510002 	cmp	r1, r2
     9d4:	e08cc003 	add	ip, ip, r3
     9d8:	1afffffa 	bne	9c8 <HLC_Checksum+0x14>
     9dc:	e1a0380c 	mov	r3, ip, lsl #16
     9e0:	e1a00823 	mov	r0, r3, lsr #16
     9e4:	e1a00800 	mov	r0, r0, lsl #16
	}

	return (short)(chk & 0xFFFF);
}
     9e8:	e1a00840 	mov	r0, r0, asr #16
     9ec:	e12fff1e 	bx	lr

000009f0 <HLC_Protocol>:
     9f0:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     9f4:	e59f99b0 	ldr	r9, [pc, #2480]	; 13ac <.text+0x13ac>
     9f8:	e1d930f0 	ldrsh	r3, [r9]
     9fc:	e24dde12 	sub	sp, sp, #288	; 0x120
     a00:	e200b0ff 	and	fp, r0, #255	; 0xff
     a04:	e3530017 	cmp	r3, #23	; 0x17
     a08:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
     a0c:	ea000087 	b	c30 <.text+0xc30>
     a10:	00000c3c 	andeq	r0, r0, ip, lsr ip
     a14:	00000e20 	andeq	r0, r0, r0, lsr #28
     a18:	00000cb0 	streqh	r0, [r0], -r0
     a1c:	00000c30 	andeq	r0, r0, r0, lsr ip
     a20:	00000c30 	andeq	r0, r0, r0, lsr ip
     a24:	00000c30 	andeq	r0, r0, r0, lsr ip
     a28:	00000c30 	andeq	r0, r0, r0, lsr ip
     a2c:	00000c30 	andeq	r0, r0, r0, lsr ip
     a30:	00000c30 	andeq	r0, r0, r0, lsr ip
     a34:	00000c30 	andeq	r0, r0, r0, lsr ip
     a38:	00000c30 	andeq	r0, r0, r0, lsr ip
     a3c:	00000c30 	andeq	r0, r0, r0, lsr ip
     a40:	00000c30 	andeq	r0, r0, r0, lsr ip
     a44:	00000c30 	andeq	r0, r0, r0, lsr ip
     a48:	00000c30 	andeq	r0, r0, r0, lsr ip
     a4c:	00000c30 	andeq	r0, r0, r0, lsr ip
     a50:	00000c30 	andeq	r0, r0, r0, lsr ip
     a54:	00000c94 	muleq	r0, r4, ip
     a58:	00000c68 	andeq	r0, r0, r8, ror #24
     a5c:	00000c30 	andeq	r0, r0, r0, lsr ip
     a60:	00000c30 	andeq	r0, r0, r0, lsr ip
     a64:	00000c30 	andeq	r0, r0, r0, lsr ip
     a68:	00000c30 	andeq	r0, r0, r0, lsr ip
     a6c:	00000a70 	andeq	r0, r0, r0, ror sl
     a70:	e59f0938 	ldr	r0, [pc, #2360]	; 13b0 <.text+0x13b0>
     a74:	e1d030b0 	ldrh	r3, [r0]
     a78:	e3530000 	cmp	r3, #0	; 0x0
     a7c:	e59f3930 	ldr	r3, [pc, #2352]	; 13b4 <.text+0x13b4>
     a80:	e3a02001 	mov	r2, #1	; 0x1
     a84:	159fc92c 	ldrne	ip, [pc, #2348]	; 13b8 <.text+0x13b8>
     a88:	e5c32000 	strb	r2, [r3]
     a8c:	e59f3928 	ldr	r3, [pc, #2344]	; 13bc <.text+0x13bc>
     a90:	11dc20b8 	ldrneh	r2, [ip, #8]
     a94:	059fc91c 	ldreq	ip, [pc, #2332]	; 13b8 <.text+0x13b8>
     a98:	e59fe920 	ldr	lr, [pc, #2336]	; 13c0 <.text+0x13c0>
     a9c:	e3a01000 	mov	r1, #0	; 0x0
     aa0:	e5c31000 	strb	r1, [r3]
     aa4:	01a0200b 	moveq	r2, fp
     aa8:	e1d030b0 	ldrh	r3, [r0]
     aac:	e3a06009 	mov	r6, #9	; 0x9
     ab0:	e1cc20b8 	strh	r2, [ip, #8]
     ab4:	e1ce60b0 	strh	r6, [lr]
     ab8:	e59fc8f8 	ldr	ip, [pc, #2296]	; 13b8 <.text+0x13b8>
     abc:	e3530001 	cmp	r3, #1	; 0x1
     ac0:	15dc2000 	ldrneb	r2, [ip]
     ac4:	e1d030b0 	ldrh	r3, [r0]
     ac8:	01a0200b 	moveq	r2, fp
     acc:	e5cc2000 	strb	r2, [ip]
     ad0:	e1a0100c 	mov	r1, ip
     ad4:	e3530002 	cmp	r3, #2	; 0x2
     ad8:	15d11001 	ldrneb	r1, [r1, #1]
     adc:	e59f28e0 	ldr	r2, [pc, #2272]	; 13c4 <.text+0x13c4>
     ae0:	01a0100b 	moveq	r1, fp
     ae4:	e1d030b0 	ldrh	r3, [r0]
     ae8:	e5c21000 	strb	r1, [r2]
     aec:	e59f18d4 	ldr	r1, [pc, #2260]	; 13c8 <.text+0x13c8>
     af0:	e3530003 	cmp	r3, #3	; 0x3
     af4:	e1d030b0 	ldrh	r3, [r0]
     af8:	15d12000 	ldrneb	r2, [r1]
     afc:	01a0200b 	moveq	r2, fp
     b00:	e3530004 	cmp	r3, #4	; 0x4
     b04:	e5c12000 	strb	r2, [r1]
     b08:	15d11001 	ldrneb	r1, [r1, #1]
     b0c:	e59f28b8 	ldr	r2, [pc, #2232]	; 13cc <.text+0x13cc>
     b10:	01a0100b 	moveq	r1, fp
     b14:	e1d030b0 	ldrh	r3, [r0]
     b18:	e5c21000 	strb	r1, [r2]
     b1c:	e59f18ac 	ldr	r1, [pc, #2220]	; 13d0 <.text+0x13d0>
     b20:	e3530005 	cmp	r3, #5	; 0x5
     b24:	e1d030b0 	ldrh	r3, [r0]
     b28:	15d12000 	ldrneb	r2, [r1]
     b2c:	01a0200b 	moveq	r2, fp
     b30:	e3530006 	cmp	r3, #6	; 0x6
     b34:	e5c12000 	strb	r2, [r1]
     b38:	15d11001 	ldrneb	r1, [r1, #1]
     b3c:	e59f2890 	ldr	r2, [pc, #2192]	; 13d4 <.text+0x13d4>
     b40:	01a0100b 	moveq	r1, fp
     b44:	e1d030b0 	ldrh	r3, [r0]
     b48:	e5c21000 	strb	r1, [r2]
     b4c:	e3530007 	cmp	r3, #7	; 0x7
     b50:	e1d010b0 	ldrh	r1, [r0]
     b54:	e59f387c 	ldr	r3, [pc, #2172]	; 13d8 <.text+0x13d8>
     b58:	01a0200b 	moveq	r2, fp
     b5c:	15d32000 	ldrneb	r2, [r3]
     b60:	e3510008 	cmp	r1, #8	; 0x8
     b64:	15d3b001 	ldrneb	fp, [r3, #1]
     b68:	e5c32000 	strb	r2, [r3]
     b6c:	e5c3b001 	strb	fp, [r3, #1]
     b70:	e1de30b0 	ldrh	r3, [lr]
     b74:	e1dc20f0 	ldrsh	r2, [ip]
     b78:	e1510003 	cmp	r1, r3
     b7c:	13a03017 	movne	r3, #23	; 0x17
     b80:	03a03000 	moveq	r3, #0	; 0x0
     b84:	e59f182c 	ldr	r1, [pc, #2092]	; 13b8 <.text+0x13b8>
     b88:	e3520e7d 	cmp	r2, #2000	; 0x7d0
     b8c:	c3a02e7d 	movgt	r2, #2000	; 0x7d0
     b90:	e1c930b0 	strh	r3, [r9]
     b94:	c1c120b0 	strgth	r2, [r1]
     b98:	ca000003 	bgt	bac <.text+0xbac>
     b9c:	e3720e7d 	cmn	r2, #2000	; 0x7d0
     ba0:	b3a03483 	movlt	r3, #-2097152000	; 0x83000000
     ba4:	b1a03a43 	movlt	r3, r3, asr #20
     ba8:	b1c130b0 	strlth	r3, [r1]
     bac:	e1dc30f2 	ldrsh	r3, [ip, #2]
     bb0:	e59f2800 	ldr	r2, [pc, #2048]	; 13b8 <.text+0x13b8>
     bb4:	e3530e7d 	cmp	r3, #2000	; 0x7d0
     bb8:	c3a03e7d 	movgt	r3, #2000	; 0x7d0
     bbc:	c1c230b2 	strgth	r3, [r2, #2]
     bc0:	ca000003 	bgt	bd4 <.text+0xbd4>
     bc4:	e3730e7d 	cmn	r3, #2000	; 0x7d0
     bc8:	b3a03483 	movlt	r3, #-2097152000	; 0x83000000
     bcc:	b1a03a43 	movlt	r3, r3, asr #20
     bd0:	b1c230b2 	strlth	r3, [r2, #2]
     bd4:	e3a03e5d 	mov	r3, #1488	; 0x5d0
     bd8:	e1dc20f4 	ldrsh	r2, [ip, #4]
     bdc:	e283300c 	add	r3, r3, #12	; 0xc
     be0:	e1520003 	cmp	r2, r3
     be4:	e59f17cc 	ldr	r1, [pc, #1996]	; 13b8 <.text+0x13b8>
     be8:	ca000003 	bgt	bfc <.text+0xbfc>
     bec:	e3e03e5d 	mvn	r3, #1488	; 0x5d0
     bf0:	e243300b 	sub	r3, r3, #11	; 0xb
     bf4:	e1520003 	cmp	r2, r3
     bf8:	aa000000 	bge	c00 <.text+0xc00>
     bfc:	e1c130b4 	strh	r3, [r1, #4]
     c00:	e1dc30f6 	ldrsh	r3, [ip, #6]
     c04:	e59f27ac 	ldr	r2, [pc, #1964]	; 13b8 <.text+0x13b8>
     c08:	e3530d32 	cmp	r3, #3200	; 0xc80
     c0c:	c3a05d32 	movgt	r5, #3200	; 0xc80
     c10:	c1c250b6 	strgth	r5, [r2, #6]
     c14:	ca000002 	bgt	c24 <.text+0xc24>
     c18:	e3530000 	cmp	r3, #0	; 0x0
     c1c:	b3a06000 	movlt	r6, #0	; 0x0
     c20:	b1c260b6 	strlth	r6, [r2, #6]
     c24:	e1d030b0 	ldrh	r3, [r0]
     c28:	e2833001 	add	r3, r3, #1	; 0x1
     c2c:	e1c030b0 	strh	r3, [r0]
     c30:	e28dde12 	add	sp, sp, #288	; 0x120
     c34:	e8bd4ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c38:	e12fff1e 	bx	lr
     c3c:	e35b0024 	cmp	fp, #36	; 0x24
     c40:	03a01001 	moveq	r1, #1	; 0x1
     c44:	01c910b0 	streqh	r1, [r9]
     c48:	0afffff8 	beq	c30 <.text+0xc30>
     c4c:	e35b0023 	cmp	fp, #35	; 0x23
     c50:	03a02011 	moveq	r2, #17	; 0x11
     c54:	01c920b0 	streqh	r2, [r9]
     c58:	0afffff4 	beq	c30 <.text+0xc30>
     c5c:	e3a03000 	mov	r3, #0	; 0x0
     c60:	e1c930b0 	strh	r3, [r9]
     c64:	eafffff1 	b	c30 <.text+0xc30>
     c68:	e35b0044 	cmp	fp, #68	; 0x44
     c6c:	0a000083 	beq	e80 <.text+0xe80>
     c70:	e35b004e 	cmp	fp, #78	; 0x4e
     c74:	03a01017 	moveq	r1, #23	; 0x17
     c78:	13a02000 	movne	r2, #0	; 0x0
     c7c:	01c910b0 	streqh	r1, [r9]
     c80:	11c920b0 	strneh	r2, [r9]
     c84:	e59f3724 	ldr	r3, [pc, #1828]	; 13b0 <.text+0x13b0>
     c88:	e3a05000 	mov	r5, #0	; 0x0
     c8c:	e1c350b0 	strh	r5, [r3]
     c90:	eaffffe6 	b	c30 <.text+0xc30>
     c94:	e35b003e 	cmp	fp, #62	; 0x3e
     c98:	03a05012 	moveq	r5, #18	; 0x12
     c9c:	01c950b0 	streqh	r5, [r9]
     ca0:	0affffe2 	beq	c30 <.text+0xc30>
     ca4:	e3a06000 	mov	r6, #0	; 0x0
     ca8:	e1c960b0 	strh	r6, [r9]
     cac:	eaffffdf 	b	c30 <.text+0xc30>
     cb0:	e35b0076 	cmp	fp, #118	; 0x76
     cb4:	0a000068 	beq	e5c <.text+0xe5c>
     cb8:	e35b0061 	cmp	fp, #97	; 0x61
     cbc:	0a000074 	beq	e94 <.text+0xe94>
     cc0:	e35b0062 	cmp	fp, #98	; 0x62
     cc4:	0a000090 	beq	f0c <.text+0xf0c>
     cc8:	e35b0063 	cmp	fp, #99	; 0x63
     ccc:	0a000058 	beq	e34 <.text+0xe34>
     cd0:	e35b007a 	cmp	fp, #122	; 0x7a
     cd4:	1affffe0 	bne	c5c <.text+0xc5c>
     cd8:	e59f16fc 	ldr	r1, [pc, #1788]	; 13dc <.text+0x13dc>
     cdc:	e5d1c000 	ldrb	ip, [r1]
     ce0:	e35c0000 	cmp	ip, #0	; 0x0
     ce4:	1a000048 	bne	e0c <.text+0xe0c>
     ce8:	e59f26f0 	ldr	r2, [pc, #1776]	; 13e0 <.text+0x13e0>
     cec:	e28d30b8 	add	r3, sp, #184	; 0xb8
     cf0:	e5d21000 	ldrb	r1, [r2]
     cf4:	e5d20001 	ldrb	r0, [r2, #1]
     cf8:	e58d3118 	str	r3, [sp, #280]
     cfc:	e5cd10b8 	strb	r1, [sp, #184]
     d00:	e5cd00b9 	strb	r0, [sp, #185]
     d04:	e1a0e002 	mov	lr, r2
     d08:	e1a0100c 	mov	r1, ip
     d0c:	e28d40b3 	add	r4, sp, #179	; 0xb3
     d10:	e28d50dc 	add	r5, sp, #220	; 0xdc
     d14:	e1a00002 	mov	r0, r2
     d18:	e59d3118 	ldr	r3, [sp, #280]
     d1c:	e5d0200e 	ldrb	r2, [r0, #14]
     d20:	e0833001 	add	r3, r3, r1
     d24:	e2811001 	add	r1, r1, #1	; 0x1
     d28:	e351000a 	cmp	r1, #10	; 0xa
     d2c:	e5c32002 	strb	r2, [r3, #2]
     d30:	e2800001 	add	r0, r0, #1	; 0x1
     d34:	1afffff7 	bne	d18 <.text+0xd18>
     d38:	e5de3026 	ldrb	r3, [lr, #38]
     d3c:	e59d1118 	ldr	r1, [sp, #280]
     d40:	e5c1300c 	strb	r3, [r1, #12]
     d44:	e5de2027 	ldrb	r2, [lr, #39]
     d48:	e59fe690 	ldr	lr, [pc, #1680]	; 13e0 <.text+0x13e0>
     d4c:	e5c1200d 	strb	r2, [r1, #13]
     d50:	e1a0000e 	mov	r0, lr
     d54:	e3a01000 	mov	r1, #0	; 0x0
     d58:	e59d3118 	ldr	r3, [sp, #280]
     d5c:	e5d02028 	ldrb	r2, [r0, #40]
     d60:	e0833001 	add	r3, r3, r1
     d64:	e2811001 	add	r1, r1, #1	; 0x1
     d68:	e3510010 	cmp	r1, #16	; 0x10
     d6c:	e5c3200e 	strb	r2, [r3, #14]
     d70:	e2800001 	add	r0, r0, #1	; 0x1
     d74:	1afffff7 	bne	d58 <.text+0xd58>
     d78:	e5de3050 	ldrb	r3, [lr, #80]
     d7c:	e59d1118 	ldr	r1, [sp, #280]
     d80:	e5c1301e 	strb	r3, [r1, #30]
     d84:	e5de2051 	ldrb	r2, [lr, #81]
     d88:	e5c1201f 	strb	r2, [r1, #31]
     d8c:	e59d0118 	ldr	r0, [sp, #280]
     d90:	e5de3058 	ldrb	r3, [lr, #88]
     d94:	e5c03020 	strb	r3, [r0, #32]
     d98:	e5de2059 	ldrb	r2, [lr, #89]
     d9c:	e5c02021 	strb	r2, [r0, #33]
     da0:	e59d1118 	ldr	r1, [sp, #280]
     da4:	e5de305a 	ldrb	r3, [lr, #90]
     da8:	e5c13022 	strb	r3, [r1, #34]
     dac:	e5de205b 	ldrb	r2, [lr, #91]
     db0:	e3a0303e 	mov	r3, #62	; 0x3e
     db4:	e5c12023 	strb	r2, [r1, #35]
     db8:	e3a0c024 	mov	ip, #36	; 0x24
     dbc:	e3a02000 	mov	r2, #0	; 0x0
     dc0:	e5c43001 	strb	r3, [r4, #1]
     dc4:	e283303c 	add	r3, r3, #60	; 0x3c
     dc8:	e1a0100c 	mov	r1, ip
     dcc:	e5c42003 	strb	r2, [r4, #3]
     dd0:	e5c43004 	strb	r3, [r4, #4]
     dd4:	e28d0f46 	add	r0, sp, #280	; 0x118
     dd8:	e5c4c000 	strb	ip, [r4]
     ddc:	e5c4c002 	strb	ip, [r4, #2]
     de0:	ebfffef3 	bl	9b4 <HLC_Checksum>
     de4:	e3a03040 	mov	r3, #64	; 0x40
     de8:	e1a02420 	mov	r2, r0, lsr #8
     dec:	e5c53003 	strb	r3, [r5, #3]
     df0:	e2433004 	sub	r3, r3, #4	; 0x4
     df4:	e5c50000 	strb	r0, [r5]
     df8:	e3a0102d 	mov	r1, #45	; 0x2d
     dfc:	e1a00004 	mov	r0, r4
     e00:	e5c52001 	strb	r2, [r5, #1]
     e04:	e5c53002 	strb	r3, [r5, #2]
     e08:	eb000daa 	bl	44b8 <UART_SendPacket_raw>
     e0c:	e59f25c8 	ldr	r2, [pc, #1480]	; 13dc <.text+0x13dc>
     e10:	e3a03000 	mov	r3, #0	; 0x0
     e14:	e1c930b0 	strh	r3, [r9]
     e18:	e5c23000 	strb	r3, [r2]
     e1c:	eaffff83 	b	c30 <.text+0xc30>
     e20:	e35b003e 	cmp	fp, #62	; 0x3e
     e24:	03a05002 	moveq	r5, #2	; 0x2
     e28:	01c950b0 	streqh	r5, [r9]
     e2c:	1affff9c 	bne	ca4 <.text+0xca4>
     e30:	eaffff7e 	b	c30 <.text+0xc30>
     e34:	e59f15a0 	ldr	r1, [pc, #1440]	; 13dc <.text+0x13dc>
     e38:	e5d11000 	ldrb	r1, [r1]
     e3c:	e3510000 	cmp	r1, #0	; 0x0
     e40:	e58d102c 	str	r1, [sp, #44]
     e44:	0a000104 	beq	125c <.text+0x125c>
     e48:	e59f658c 	ldr	r6, [pc, #1420]	; 13dc <.text+0x13dc>
     e4c:	e3a03000 	mov	r3, #0	; 0x0
     e50:	e1c930b0 	strh	r3, [r9]
     e54:	e5c63000 	strb	r3, [r6]
     e58:	eaffff74 	b	c30 <.text+0xc30>
     e5c:	e59f2578 	ldr	r2, [pc, #1400]	; 13dc <.text+0x13dc>
     e60:	e5d23000 	ldrb	r3, [r2]
     e64:	e3530000 	cmp	r3, #0	; 0x0
     e68:	02833001 	addeq	r3, r3, #1	; 0x1
     e6c:	03a01002 	moveq	r1, #2	; 0x2
     e70:	05c23000 	streqb	r3, [r2]
     e74:	01c910b0 	streqh	r1, [r9]
     e78:	0affff6c 	beq	c30 <.text+0xc30>
     e7c:	eaffff76 	b	c5c <.text+0xc5c>
     e80:	e59f355c 	ldr	r3, [pc, #1372]	; 13e4 <.text+0x13e4>
     e84:	e3a02000 	mov	r2, #0	; 0x0
     e88:	e1c920b0 	strh	r2, [r9]
     e8c:	e5c32001 	strb	r2, [r3, #1]
     e90:	eaffff7b 	b	c84 <.text+0xc84>
     e94:	e59f2540 	ldr	r2, [pc, #1344]	; 13dc <.text+0x13dc>
     e98:	e5d2a000 	ldrb	sl, [r2]
     e9c:	e35a0000 	cmp	sl, #0	; 0x0
     ea0:	0a0000b4 	beq	1178 <.text+0x1178>
     ea4:	e59f453c 	ldr	r4, [pc, #1340]	; 13e8 <.text+0x13e8>
     ea8:	e59f053c 	ldr	r0, [pc, #1340]	; 13ec <.text+0x13ec>
     eac:	eb003051 	bl	cff8 <__printf_from_arm>
     eb0:	e1d410b0 	ldrh	r1, [r4]
     eb4:	e59f0534 	ldr	r0, [pc, #1332]	; 13f0 <.text+0x13f0>
     eb8:	eb00304e 	bl	cff8 <__printf_from_arm>
     ebc:	e1d410b2 	ldrh	r1, [r4, #2]
     ec0:	e59f052c 	ldr	r0, [pc, #1324]	; 13f4 <.text+0x13f4>
     ec4:	eb00304b 	bl	cff8 <__printf_from_arm>
     ec8:	e1d410b4 	ldrh	r1, [r4, #4]
     ecc:	e59f0524 	ldr	r0, [pc, #1316]	; 13f8 <.text+0x13f8>
     ed0:	eb003048 	bl	cff8 <__printf_from_arm>
     ed4:	e1d410b6 	ldrh	r1, [r4, #6]
     ed8:	e59f051c 	ldr	r0, [pc, #1308]	; 13fc <.text+0x13fc>
     edc:	eb003045 	bl	cff8 <__printf_from_arm>
     ee0:	e1d410b8 	ldrh	r1, [r4, #8]
     ee4:	e59f0514 	ldr	r0, [pc, #1300]	; 1400 <.text+0x1400>
     ee8:	eb003042 	bl	cff8 <__printf_from_arm>
     eec:	e1d410ba 	ldrh	r1, [r4, #10]
     ef0:	e59f050c 	ldr	r0, [pc, #1292]	; 1404 <.text+0x1404>
     ef4:	eb00303f 	bl	cff8 <__printf_from_arm>
     ef8:	e59f54dc 	ldr	r5, [pc, #1244]	; 13dc <.text+0x13dc>
     efc:	e3a03000 	mov	r3, #0	; 0x0
     f00:	e1c930b0 	strh	r3, [r9]
     f04:	e5c53000 	strb	r3, [r5]
     f08:	eaffff48 	b	c30 <.text+0xc30>
     f0c:	e59f64c8 	ldr	r6, [pc, #1224]	; 13dc <.text+0x13dc>
     f10:	e5d66000 	ldrb	r6, [r6]
     f14:	e3560000 	cmp	r6, #0	; 0x0
     f18:	e58d605c 	str	r6, [sp, #92]
     f1c:	1affffc9 	bne	e48 <.text+0xe48>
     f20:	e59f44b8 	ldr	r4, [pc, #1208]	; 13e0 <.text+0x13e0>
     f24:	e5d43008 	ldrb	r3, [r4, #8]
     f28:	e58d3058 	str	r3, [sp, #88]
     f2c:	e5d4300a 	ldrb	r3, [r4, #10]
     f30:	e5d46009 	ldrb	r6, [r4, #9]
     f34:	e58d3050 	str	r3, [sp, #80]
     f38:	e5d4300c 	ldrb	r3, [r4, #12]
     f3c:	e58d6054 	str	r6, [sp, #84]
     f40:	e5d4600b 	ldrb	r6, [r4, #11]
     f44:	e58d3048 	str	r3, [sp, #72]
     f48:	e5d43018 	ldrb	r3, [r4, #24]
     f4c:	e58d604c 	str	r6, [sp, #76]
     f50:	e5d4600d 	ldrb	r6, [r4, #13]
     f54:	e58d3040 	str	r3, [sp, #64]
     f58:	e5d4301a 	ldrb	r3, [r4, #26]
     f5c:	e58d6044 	str	r6, [sp, #68]
     f60:	e5d46019 	ldrb	r6, [r4, #25]
     f64:	e58d3038 	str	r3, [sp, #56]
     f68:	e5d4301c 	ldrb	r3, [r4, #28]
     f6c:	e5d45007 	ldrb	r5, [r4, #7]
     f70:	e5d42002 	ldrb	r2, [r4, #2]
     f74:	e5d41003 	ldrb	r1, [r4, #3]
     f78:	e5d40004 	ldrb	r0, [r4, #4]
     f7c:	e5d4c005 	ldrb	ip, [r4, #5]
     f80:	e5d4e006 	ldrb	lr, [r4, #6]
     f84:	e58d603c 	str	r6, [sp, #60]
     f88:	e5d4601b 	ldrb	r6, [r4, #27]
     f8c:	e58d3030 	str	r3, [sp, #48]
     f90:	e28d3089 	add	r3, sp, #137	; 0x89
     f94:	e58d6034 	str	r6, [sp, #52]
     f98:	e58d3114 	str	r3, [sp, #276]
     f9c:	e5cd2089 	strb	r2, [sp, #137]
     fa0:	e5cd108a 	strb	r1, [sp, #138]
     fa4:	e5cd008b 	strb	r0, [sp, #139]
     fa8:	e5cdc08c 	strb	ip, [sp, #140]
     fac:	e5cde08d 	strb	lr, [sp, #141]
     fb0:	e5cd508e 	strb	r5, [sp, #142]
     fb4:	e59d5058 	ldr	r5, [sp, #88]
     fb8:	e59d6054 	ldr	r6, [sp, #84]
     fbc:	e5cd508f 	strb	r5, [sp, #143]
     fc0:	e59d1050 	ldr	r1, [sp, #80]
     fc4:	e59d204c 	ldr	r2, [sp, #76]
     fc8:	e59d3048 	ldr	r3, [sp, #72]
     fcc:	e59d5044 	ldr	r5, [sp, #68]
     fd0:	e5cd6090 	strb	r6, [sp, #144]
     fd4:	e5cd1091 	strb	r1, [sp, #145]
     fd8:	e5cd2092 	strb	r2, [sp, #146]
     fdc:	e5cd3093 	strb	r3, [sp, #147]
     fe0:	e5cd5094 	strb	r5, [sp, #148]
     fe4:	e28d103c 	add	r1, sp, #60	; 0x3c
     fe8:	e8910042 	ldmia	r1, {r1, r6}
     fec:	e59d2038 	ldr	r2, [sp, #56]
     ff0:	e59d3034 	ldr	r3, [sp, #52]
     ff4:	e59d5030 	ldr	r5, [sp, #48]
     ff8:	e5cd6095 	strb	r6, [sp, #149]
     ffc:	e5cd1096 	strb	r1, [sp, #150]
    1000:	e5cd2097 	strb	r2, [sp, #151]
    1004:	e5cd3098 	strb	r3, [sp, #152]
    1008:	e5cd5099 	strb	r5, [sp, #153]
    100c:	e5d4c03d 	ldrb	ip, [r4, #61]
    1010:	e5d4e03e 	ldrb	lr, [r4, #62]
    1014:	e5d4503f 	ldrb	r5, [r4, #63]
    1018:	e5d4301d 	ldrb	r3, [r4, #29]
    101c:	e5d4201e 	ldrb	r2, [r4, #30]
    1020:	e5d4101f 	ldrb	r1, [r4, #31]
    1024:	e5d4003c 	ldrb	r0, [r4, #60]
    1028:	e5cd309a 	strb	r3, [sp, #154]
    102c:	e5cd209b 	strb	r2, [sp, #155]
    1030:	e5cd109c 	strb	r1, [sp, #156]
    1034:	e59f33cc 	ldr	r3, [pc, #972]	; 1408 <.text+0x1408>
    1038:	e5cd009d 	strb	r0, [sp, #157]
    103c:	e5cdc09e 	strb	ip, [sp, #158]
    1040:	e5cde09f 	strb	lr, [sp, #159]
    1044:	e5cd50a0 	strb	r5, [sp, #160]
    1048:	e8930006 	ldmia	r3, {r1, r2}
    104c:	e58d1070 	str	r1, [sp, #112]
    1050:	e58d2074 	str	r2, [sp, #116]
    1054:	eb000689 	bl	2a80 <peripheralClockFrequency>
    1058:	e1a02000 	mov	r2, r0
    105c:	e3a03000 	mov	r3, #0	; 0x0
    1060:	e28d0070 	add	r0, sp, #112	; 0x70
    1064:	e8900003 	ldmia	r0, {r0, r1}
    1068:	eb002fe5 	bl	d004 <____divdi3_from_arm>
    106c:	e1a03420 	mov	r3, r0, lsr #8
    1070:	e5cd30a2 	strb	r3, [sp, #162]
    1074:	e59f2390 	ldr	r2, [pc, #912]	; 140c <.text+0x140c>
    1078:	e8920060 	ldmia	r2, {r5, r6}
    107c:	e58d5078 	str	r5, [sp, #120]
    1080:	e58d607c 	str	r6, [sp, #124]
    1084:	e59d6114 	ldr	r6, [sp, #276]
    1088:	e5cd00a1 	strb	r0, [sp, #161]
    108c:	e58d6080 	str	r6, [sp, #128]
    1090:	eb00067a 	bl	2a80 <peripheralClockFrequency>
    1094:	e1a02000 	mov	r2, r0
    1098:	e3a03000 	mov	r3, #0	; 0x0
    109c:	e28d0078 	add	r0, sp, #120	; 0x78
    10a0:	e8900003 	ldmia	r0, {r0, r1}
    10a4:	eb002fd6 	bl	d004 <____divdi3_from_arm>
    10a8:	e1a03420 	mov	r3, r0, lsr #8
    10ac:	e5c6301b 	strb	r3, [r6, #27]
    10b0:	e5c6001a 	strb	r0, [r6, #26]
    10b4:	e59d1114 	ldr	r1, [sp, #276]
    10b8:	e5d43040 	ldrb	r3, [r4, #64]
    10bc:	e5c1301c 	strb	r3, [r1, #28]
    10c0:	e5d42041 	ldrb	r2, [r4, #65]
    10c4:	e5c1201d 	strb	r2, [r1, #29]
    10c8:	e59d0114 	ldr	r0, [sp, #276]
    10cc:	e5d43020 	ldrb	r3, [r4, #32]
    10d0:	e5c0301e 	strb	r3, [r0, #30]
    10d4:	e5d42021 	ldrb	r2, [r4, #33]
    10d8:	e5c0201f 	strb	r2, [r0, #31]
    10dc:	e59d1114 	ldr	r1, [sp, #276]
    10e0:	e5d43022 	ldrb	r3, [r4, #34]
    10e4:	e5c13020 	strb	r3, [r1, #32]
    10e8:	e5d42023 	ldrb	r2, [r4, #35]
    10ec:	e5c12021 	strb	r2, [r1, #33]
    10f0:	e59d0114 	ldr	r0, [sp, #276]
    10f4:	e5d43024 	ldrb	r3, [r4, #36]
    10f8:	e5c03022 	strb	r3, [r0, #34]
    10fc:	e5d42025 	ldrb	r2, [r4, #37]
    1100:	e5c02023 	strb	r2, [r0, #35]
    1104:	e59d1114 	ldr	r1, [sp, #276]
    1108:	e5d43052 	ldrb	r3, [r4, #82]
    110c:	e5c13024 	strb	r3, [r1, #36]
    1110:	e5d42053 	ldrb	r2, [r4, #83]
    1114:	e59d305c 	ldr	r3, [sp, #92]
    1118:	e5c12025 	strb	r2, [r1, #37]
    111c:	e383c026 	orr	ip, r3, #38	; 0x26
    1120:	e59d505c 	ldr	r5, [sp, #92]
    1124:	e1a0100c 	mov	r1, ip
    1128:	e3a03024 	mov	r3, #36	; 0x24
    112c:	e3a0203e 	mov	r2, #62	; 0x3e
    1130:	e28d0f45 	add	r0, sp, #276	; 0x114
    1134:	e5cd3084 	strb	r3, [sp, #132]
    1138:	e5cd2085 	strb	r2, [sp, #133]
    113c:	e5cd5087 	strb	r5, [sp, #135]
    1140:	e5cdb088 	strb	fp, [sp, #136]
    1144:	e5cdc086 	strb	ip, [sp, #134]
    1148:	ebfffe19 	bl	9b4 <HLC_Checksum>
    114c:	e1a02420 	mov	r2, r0, lsr #8
    1150:	e5cd00af 	strb	r0, [sp, #175]
    1154:	e5cd20b0 	strb	r2, [sp, #176]
    1158:	e3a0303c 	mov	r3, #60	; 0x3c
    115c:	e3a02040 	mov	r2, #64	; 0x40
    1160:	e28d0084 	add	r0, sp, #132	; 0x84
    1164:	e3a0102f 	mov	r1, #47	; 0x2f
    1168:	e5cd30b1 	strb	r3, [sp, #177]
    116c:	e5cd20b2 	strb	r2, [sp, #178]
    1170:	eb000cd0 	bl	44b8 <UART_SendPacket_raw>
    1174:	eaffff33 	b	e48 <.text+0xe48>
    1178:	e59f3268 	ldr	r3, [pc, #616]	; 13e8 <.text+0x13e8>
    117c:	e5d36005 	ldrb	r6, [r3, #5]
    1180:	e5d3500b 	ldrb	r5, [r3, #11]
    1184:	e5d31006 	ldrb	r1, [r3, #6]
    1188:	e58d606c 	str	r6, [sp, #108]
    118c:	e5d36007 	ldrb	r6, [r3, #7]
    1190:	e5d32000 	ldrb	r2, [r3]
    1194:	e5d3c001 	ldrb	ip, [r3, #1]
    1198:	e5d3e002 	ldrb	lr, [r3, #2]
    119c:	e5d34003 	ldrb	r4, [r3, #3]
    11a0:	e5d38008 	ldrb	r8, [r3, #8]
    11a4:	e5d37009 	ldrb	r7, [r3, #9]
    11a8:	e58d5060 	str	r5, [sp, #96]
    11ac:	e58d1068 	str	r1, [sp, #104]
    11b0:	e5d35004 	ldrb	r5, [r3, #4]
    11b4:	e58d6064 	str	r6, [sp, #100]
    11b8:	e5d3600a 	ldrb	r6, [r3, #10]
    11bc:	e28d3c01 	add	r3, sp, #256	; 0x100
    11c0:	e58d311c 	str	r3, [sp, #284]
    11c4:	e5cd2100 	strb	r2, [sp, #256]
    11c8:	e59d3068 	ldr	r3, [sp, #104]
    11cc:	e59d206c 	ldr	r2, [sp, #108]
    11d0:	e5cd5104 	strb	r5, [sp, #260]
    11d4:	e5cd610a 	strb	r6, [sp, #266]
    11d8:	e59d5064 	ldr	r5, [sp, #100]
    11dc:	e59d6060 	ldr	r6, [sp, #96]
    11e0:	e5cd2105 	strb	r2, [sp, #261]
    11e4:	e5cd3106 	strb	r3, [sp, #262]
    11e8:	e3a0203e 	mov	r2, #62	; 0x3e
    11ec:	e3a03024 	mov	r3, #36	; 0x24
    11f0:	e5cdc101 	strb	ip, [sp, #257]
    11f4:	e5cde102 	strb	lr, [sp, #258]
    11f8:	e3a0100c 	mov	r1, #12	; 0xc
    11fc:	e28d0f47 	add	r0, sp, #284	; 0x11c
    1200:	e5cd4103 	strb	r4, [sp, #259]
    1204:	e5cd5107 	strb	r5, [sp, #263]
    1208:	e5cd8108 	strb	r8, [sp, #264]
    120c:	e5cd7109 	strb	r7, [sp, #265]
    1210:	e5cd610b 	strb	r6, [sp, #267]
    1214:	e5cd30fb 	strb	r3, [sp, #251]
    1218:	e5cd20fc 	strb	r2, [sp, #252]
    121c:	e3a0200c 	mov	r2, #12	; 0xc
    1220:	e5cd20fd 	strb	r2, [sp, #253]
    1224:	e5cda0fe 	strb	sl, [sp, #254]
    1228:	e5cdb0ff 	strb	fp, [sp, #255]
    122c:	ebfffde0 	bl	9b4 <HLC_Checksum>
    1230:	e1a02420 	mov	r2, r0, lsr #8
    1234:	e5cd010c 	strb	r0, [sp, #268]
    1238:	e5cd210d 	strb	r2, [sp, #269]
    123c:	e3a0303c 	mov	r3, #60	; 0x3c
    1240:	e3a02040 	mov	r2, #64	; 0x40
    1244:	e28d00fb 	add	r0, sp, #251	; 0xfb
    1248:	e3a01015 	mov	r1, #21	; 0x15
    124c:	e5cd310e 	strb	r3, [sp, #270]
    1250:	e5cd210f 	strb	r2, [sp, #271]
    1254:	eb000c97 	bl	44b8 <UART_SendPacket_raw>
    1258:	eaffff26 	b	ef8 <.text+0xef8>
    125c:	e59f317c 	ldr	r3, [pc, #380]	; 13e0 <.text+0x13e0>
    1260:	e5d3204c 	ldrb	r2, [r3, #76]
    1264:	e58d2028 	str	r2, [sp, #40]
    1268:	e5d32048 	ldrb	r2, [r3, #72]
    126c:	e5d3604d 	ldrb	r6, [r3, #77]
    1270:	e58d2020 	str	r2, [sp, #32]
    1274:	e5d3204a 	ldrb	r2, [r3, #74]
    1278:	e58d6024 	str	r6, [sp, #36]
    127c:	e5d36049 	ldrb	r6, [r3, #73]
    1280:	e58d2018 	str	r2, [sp, #24]
    1284:	e5d3204e 	ldrb	r2, [r3, #78]
    1288:	e58d601c 	str	r6, [sp, #28]
    128c:	e5d3604b 	ldrb	r6, [r3, #75]
    1290:	e58d2010 	str	r2, [sp, #16]
    1294:	e5d32054 	ldrb	r2, [r3, #84]
    1298:	e58d6014 	str	r6, [sp, #20]
    129c:	e5d3604f 	ldrb	r6, [r3, #79]
    12a0:	e58d2008 	str	r2, [sp, #8]
    12a4:	e5d32056 	ldrb	r2, [r3, #86]
    12a8:	e5d3e045 	ldrb	lr, [r3, #69]
    12ac:	e5d35047 	ldrb	r5, [r3, #71]
    12b0:	e5d31042 	ldrb	r1, [r3, #66]
    12b4:	e5d30043 	ldrb	r0, [r3, #67]
    12b8:	e5d3c044 	ldrb	ip, [r3, #68]
    12bc:	e5d34046 	ldrb	r4, [r3, #70]
    12c0:	e58d600c 	str	r6, [sp, #12]
    12c4:	e5d36055 	ldrb	r6, [r3, #85]
    12c8:	e58d2000 	str	r2, [sp]
    12cc:	e28d20e5 	add	r2, sp, #229	; 0xe5
    12d0:	e58d6004 	str	r6, [sp, #4]
    12d4:	e58d2110 	str	r2, [sp, #272]
    12d8:	e5cd10e5 	strb	r1, [sp, #229]
    12dc:	e5cd00e6 	strb	r0, [sp, #230]
    12e0:	e5cdc0e7 	strb	ip, [sp, #231]
    12e4:	e5cde0e8 	strb	lr, [sp, #232]
    12e8:	e5cd40e9 	strb	r4, [sp, #233]
    12ec:	e5cd50ea 	strb	r5, [sp, #234]
    12f0:	e59d6024 	ldr	r6, [sp, #36]
    12f4:	e59d5028 	ldr	r5, [sp, #40]
    12f8:	e59d1020 	ldr	r1, [sp, #32]
    12fc:	e5cd50eb 	strb	r5, [sp, #235]
    1300:	e5cd60ec 	strb	r6, [sp, #236]
    1304:	e5cd10ed 	strb	r1, [sp, #237]
    1308:	e59d201c 	ldr	r2, [sp, #28]
    130c:	e59d5018 	ldr	r5, [sp, #24]
    1310:	e28d1010 	add	r1, sp, #16	; 0x10
    1314:	e8910042 	ldmia	r1, {r1, r6}
    1318:	e5cd20ee 	strb	r2, [sp, #238]
    131c:	e5cd50ef 	strb	r5, [sp, #239]
    1320:	e5cd60f0 	strb	r6, [sp, #240]
    1324:	e5cd10f1 	strb	r1, [sp, #241]
    1328:	e59d200c 	ldr	r2, [sp, #12]
    132c:	e59d5008 	ldr	r5, [sp, #8]
    1330:	e89d0042 	ldmia	sp, {r1, r6}
    1334:	e5cd50f3 	strb	r5, [sp, #243]
    1338:	e5cd10f5 	strb	r1, [sp, #245]
    133c:	e5cd20f2 	strb	r2, [sp, #242]
    1340:	e5cd60f4 	strb	r6, [sp, #244]
    1344:	e5d32057 	ldrb	r2, [r3, #87]
    1348:	e59d302c 	ldr	r3, [sp, #44]
    134c:	e59d502c 	ldr	r5, [sp, #44]
    1350:	e383c012 	orr	ip, r3, #18	; 0x12
    1354:	e1a0100c 	mov	r1, ip
    1358:	e5cd20f6 	strb	r2, [sp, #246]
    135c:	e3a03024 	mov	r3, #36	; 0x24
    1360:	e3a0203e 	mov	r2, #62	; 0x3e
    1364:	e28d0e11 	add	r0, sp, #272	; 0x110
    1368:	e5cd30e0 	strb	r3, [sp, #224]
    136c:	e5cd20e1 	strb	r2, [sp, #225]
    1370:	e5cd50e3 	strb	r5, [sp, #227]
    1374:	e5cdb0e4 	strb	fp, [sp, #228]
    1378:	e5cdc0e2 	strb	ip, [sp, #226]
    137c:	ebfffd8c 	bl	9b4 <HLC_Checksum>
    1380:	e1a02420 	mov	r2, r0, lsr #8
    1384:	e5cd00f7 	strb	r0, [sp, #247]
    1388:	e5cd20f8 	strb	r2, [sp, #248]
    138c:	e3a0303c 	mov	r3, #60	; 0x3c
    1390:	e3a02040 	mov	r2, #64	; 0x40
    1394:	e28d00e0 	add	r0, sp, #224	; 0xe0
    1398:	e3a0101b 	mov	r1, #27	; 0x1b
    139c:	e5cd30f9 	strb	r3, [sp, #249]
    13a0:	e5cd20fa 	strb	r2, [sp, #250]
    13a4:	eb000c43 	bl	44b8 <UART_SendPacket_raw>
    13a8:	eafffea6 	b	e48 <.text+0xe48>
    13ac:	40000858 	andmi	r0, r0, r8, asr r8
    13b0:	4000085e 	andmi	r0, r0, lr, asr r8
    13b4:	40000861 	andmi	r0, r0, r1, ror #16
    13b8:	40000e84 	andmi	r0, r0, r4, lsl #29
    13bc:	40000860 	andmi	r0, r0, r0, ror #16
    13c0:	4000085c 	andmi	r0, r0, ip, asr r8
    13c4:	40000e85 	andmi	r0, r0, r5, lsl #29
    13c8:	40000e86 	andmi	r0, r0, r6, lsl #29
    13cc:	40000e87 	andmi	r0, r0, r7, lsl #29
    13d0:	40000e88 	andmi	r0, r0, r8, lsl #29
    13d4:	40000e89 	andmi	r0, r0, r9, lsl #29
    13d8:	40000e8a 	andmi	r0, r0, sl, lsl #29
    13dc:	4000085a 	andmi	r0, r0, sl, asr r8
    13e0:	40000c94 	mulmi	r0, r4, ip
    13e4:	40000e9c 	mulmi	r0, ip, lr
    13e8:	40000ea0 	andmi	r0, r0, r0, lsr #29
    13ec:	0000d82c 	andeq	sp, r0, ip, lsr #16
    13f0:	0000d838 	andeq	sp, r0, r8, lsr r8
    13f4:	0000d854 	andeq	sp, r0, r4, asr r8
    13f8:	0000d86c 	andeq	sp, r0, ip, ror #16
    13fc:	0000d888 	andeq	sp, r0, r8, lsl #17
    1400:	0000d8a0 	andeq	sp, r0, r0, lsr #17
    1404:	0000d8bc 	streqh	sp, [r0], -ip
    1408:	40000864 	andmi	r0, r0, r4, ror #16
    140c:	4000086c 	andmi	r0, r0, ip, ror #16

00001410 <SDK_mainloop>:
    1410:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1414:	e59f2310 	ldr	r2, [pc, #784]	; 172c <.text+0x172c>
    1418:	e59f3310 	ldr	r3, [pc, #784]	; 1730 <.text+0x1730>
    141c:	e59f6310 	ldr	r6, [pc, #784]	; 1734 <.text+0x1734>
    1420:	e5d3c000 	ldrb	ip, [r3]
    1424:	e5d21000 	ldrb	r1, [r2]
    1428:	e59f3308 	ldr	r3, [pc, #776]	; 1738 <.text+0x1738>
    142c:	e24dd00c 	sub	sp, sp, #12	; 0xc
    1430:	e5c3c000 	strb	ip, [r3]
    1434:	e1d600f4 	ldrsh	r0, [r6, #4]
    1438:	e5c31001 	strb	r1, [r3, #1]
    143c:	eb002bc0 	bl	c344 <__aeabi_i2d>
    1440:	e28f2fb3 	add	r2, pc, #716	; 0x2cc
    1444:	e892000c 	ldmia	r2, {r2, r3}
    1448:	eb002bf8 	bl	c430 <__aeabi_dmul>
    144c:	e3a02441 	mov	r2, #1090519040	; 0x41000000
    1450:	e2822a5f 	add	r2, r2, #389120	; 0x5f000
    1454:	e2822c09 	add	r2, r2, #2304	; 0x900
    1458:	e3a03000 	mov	r3, #0	; 0x0
    145c:	eb002c97 	bl	c6c0 <__aeabi_ddiv>
    1460:	e1a09000 	mov	r9, r0
    1464:	e1d602f0 	ldrsh	r0, [r6, #32]
    1468:	e2600000 	rsb	r0, r0, #0	; 0x0
    146c:	e1a0a001 	mov	sl, r1
    1470:	eb002bb3 	bl	c344 <__aeabi_i2d>
    1474:	e1a07000 	mov	r7, r0
    1478:	e1a08001 	mov	r8, r1
    147c:	e1a00009 	mov	r0, r9
    1480:	e1a0100a 	mov	r1, sl
    1484:	eb002ee1 	bl	d010 <__cos_from_arm>
    1488:	e28f2fa3 	add	r2, pc, #652	; 0x28c
    148c:	e892000c 	ldmia	r2, {r2, r3}
    1490:	eb002be6 	bl	c430 <__aeabi_dmul>
    1494:	e1a04000 	mov	r4, r0
    1498:	e1d600f2 	ldrsh	r0, [r6, #2]
    149c:	e1a05001 	mov	r5, r1
    14a0:	eb002ba7 	bl	c344 <__aeabi_i2d>
    14a4:	e28f2f9a 	add	r2, pc, #616	; 0x268
    14a8:	e892000c 	ldmia	r2, {r2, r3}
    14ac:	eb002bdf 	bl	c430 <__aeabi_dmul>
    14b0:	e3a02441 	mov	r2, #1090519040	; 0x41000000
    14b4:	e2822a5f 	add	r2, r2, #389120	; 0x5f000
    14b8:	e2822c09 	add	r2, r2, #2304	; 0x900
    14bc:	e3a03000 	mov	r3, #0	; 0x0
    14c0:	eb002c7e 	bl	c6c0 <__aeabi_ddiv>
    14c4:	eb002ed4 	bl	d01c <__sin_from_arm>
    14c8:	e1a02000 	mov	r2, r0
    14cc:	e1a03001 	mov	r3, r1
    14d0:	e1a00004 	mov	r0, r4
    14d4:	e1a01005 	mov	r1, r5
    14d8:	eb002bd4 	bl	c430 <__aeabi_dmul>
    14dc:	e1a02000 	mov	r2, r0
    14e0:	e1a03001 	mov	r3, r1
    14e4:	e1a00007 	mov	r0, r7
    14e8:	e1a01008 	mov	r1, r8
    14ec:	eb002ac5 	bl	c008 <__aeabi_dsub>
    14f0:	e88d0003 	stmia	sp, {r0, r1}
    14f4:	e1d602f2 	ldrsh	r0, [r6, #34]
    14f8:	eb002b91 	bl	c344 <__aeabi_i2d>
    14fc:	e1a04000 	mov	r4, r0
    1500:	e1a05001 	mov	r5, r1
    1504:	e1a00009 	mov	r0, r9
    1508:	e1a0100a 	mov	r1, sl
    150c:	eb002ec2 	bl	d01c <__sin_from_arm>
    1510:	e28f2f83 	add	r2, pc, #524	; 0x20c
    1514:	e892000c 	ldmia	r2, {r2, r3}
    1518:	eb002bc4 	bl	c430 <__aeabi_dmul>
    151c:	e1a02000 	mov	r2, r0
    1520:	e1a03001 	mov	r3, r1
    1524:	e1a00004 	mov	r0, r4
    1528:	e1a01005 	mov	r1, r5
    152c:	eb002ab5 	bl	c008 <__aeabi_dsub>
    1530:	e1a0a000 	mov	sl, r0
    1534:	e1a0b001 	mov	fp, r1
    1538:	eb000085 	bl	1754 <getSystemTicks>
    153c:	e59f21f8 	ldr	r2, [pc, #504]	; 173c <.text+0x173c>
    1540:	e5d23000 	ldrb	r3, [r2]
    1544:	e3530000 	cmp	r3, #0	; 0x0
    1548:	e58d0008 	str	r0, [sp, #8]
    154c:	1a000048 	bne	1674 <SDK_mainloop+0x264>
    1550:	e59f11e8 	ldr	r1, [pc, #488]	; 1740 <.text+0x1740>
    1554:	e5913000 	ldr	r3, [r1]
    1558:	e0633000 	rsb	r3, r3, r0
    155c:	e1a05003 	mov	r5, r3
    1560:	e3a06000 	mov	r6, #0	; 0x0
    1564:	e1a00005 	mov	r0, r5
    1568:	e1a01006 	mov	r1, r6
    156c:	e3a02000 	mov	r2, #0	; 0x0
    1570:	e3a03000 	mov	r3, #0	; 0x0
    1574:	eb002eab 	bl	d028 <____cmpdi2_from_arm>
    1578:	e3500000 	cmp	r0, #0	; 0x0
    157c:	da000055 	ble	16d8 <SDK_mainloop+0x2c8>
    1580:	e1a00005 	mov	r0, r5
    1584:	e1a01006 	mov	r1, r6
    1588:	eb002b8d 	bl	c3c4 <__aeabi_l2d>
    158c:	e1a08000 	mov	r8, r0
    1590:	e1a09001 	mov	r9, r1
    1594:	e59f61a8 	ldr	r6, [pc, #424]	; 1744 <.text+0x1744>
    1598:	e8960003 	ldmia	r6, {r0, r1}
    159c:	eb002b88 	bl	c3c4 <__aeabi_l2d>
    15a0:	e59f21a0 	ldr	r2, [pc, #416]	; 1748 <.text+0x1748>
    15a4:	e1a04000 	mov	r4, r0
    15a8:	e1d200f0 	ldrsh	r0, [r2]
    15ac:	e1a05001 	mov	r5, r1
    15b0:	eb002b63 	bl	c344 <__aeabi_i2d>
    15b4:	e1a02000 	mov	r2, r0
    15b8:	e1a03001 	mov	r3, r1
    15bc:	e89d0003 	ldmia	sp, {r0, r1}
    15c0:	eb002a91 	bl	c00c <__adddf3>
    15c4:	e3a025ff 	mov	r2, #1069547520	; 0x3fc00000
    15c8:	e2822602 	add	r2, r2, #2097152	; 0x200000
    15cc:	e3a03000 	mov	r3, #0	; 0x0
    15d0:	eb002b96 	bl	c430 <__aeabi_dmul>
    15d4:	e1a02008 	mov	r2, r8
    15d8:	e1a03009 	mov	r3, r9
    15dc:	eb002b93 	bl	c430 <__aeabi_dmul>
    15e0:	e1a02000 	mov	r2, r0
    15e4:	e1a03001 	mov	r3, r1
    15e8:	e1a00004 	mov	r0, r4
    15ec:	e1a01005 	mov	r1, r5
    15f0:	eb002a85 	bl	c00c <__adddf3>
    15f4:	eb002e8e 	bl	d034 <____fixdfdi_from_arm>
    15f8:	e59f714c 	ldr	r7, [pc, #332]	; 174c <.text+0x174c>
    15fc:	e8860003 	stmia	r6, {r0, r1}
    1600:	e8970003 	ldmia	r7, {r0, r1}
    1604:	eb002b6e 	bl	c3c4 <__aeabi_l2d>
    1608:	e59f3140 	ldr	r3, [pc, #320]	; 1750 <.text+0x1750>
    160c:	e1a04000 	mov	r4, r0
    1610:	e1d300f0 	ldrsh	r0, [r3]
    1614:	e1a05001 	mov	r5, r1
    1618:	eb002b49 	bl	c344 <__aeabi_i2d>
    161c:	e1a02000 	mov	r2, r0
    1620:	e1a03001 	mov	r3, r1
    1624:	e1a0000a 	mov	r0, sl
    1628:	e1a0100b 	mov	r1, fp
    162c:	eb002a76 	bl	c00c <__adddf3>
    1630:	e3a025ff 	mov	r2, #1069547520	; 0x3fc00000
    1634:	e2822602 	add	r2, r2, #2097152	; 0x200000
    1638:	e3a03000 	mov	r3, #0	; 0x0
    163c:	eb002b7b 	bl	c430 <__aeabi_dmul>
    1640:	e1a02000 	mov	r2, r0
    1644:	e1a03001 	mov	r3, r1
    1648:	e1a00008 	mov	r0, r8
    164c:	e1a01009 	mov	r1, r9
    1650:	eb002b76 	bl	c430 <__aeabi_dmul>
    1654:	e1a02000 	mov	r2, r0
    1658:	e1a03001 	mov	r3, r1
    165c:	e1a00004 	mov	r0, r4
    1660:	e1a01005 	mov	r1, r5
    1664:	eb002a68 	bl	c00c <__adddf3>
    1668:	eb002e71 	bl	d034 <____fixdfdi_from_arm>
    166c:	e8870003 	stmia	r7, {r0, r1}
    1670:	ea000009 	b	169c <SDK_mainloop+0x28c>
    1674:	e3a03000 	mov	r3, #0	; 0x0
    1678:	e5c23000 	strb	r3, [r2]
    167c:	e59f30c0 	ldr	r3, [pc, #192]	; 1744 <.text+0x1744>
    1680:	e3a02000 	mov	r2, #0	; 0x0
    1684:	e3a01000 	mov	r1, #0	; 0x0
    1688:	e8830006 	stmia	r3, {r1, r2}
    168c:	e59f20b8 	ldr	r2, [pc, #184]	; 174c <.text+0x174c>
    1690:	e3a03000 	mov	r3, #0	; 0x0
    1694:	e3a04000 	mov	r4, #0	; 0x0
    1698:	e8820018 	stmia	r2, {r3, r4}
    169c:	e59d2008 	ldr	r2, [sp, #8]
    16a0:	e59f4098 	ldr	r4, [pc, #152]	; 1740 <.text+0x1740>
    16a4:	e89d0003 	ldmia	sp, {r0, r1}
    16a8:	e5842000 	str	r2, [r4]
    16ac:	eb002cd6 	bl	ca0c <__aeabi_d2iz>
    16b0:	e59f3090 	ldr	r3, [pc, #144]	; 1748 <.text+0x1748>
    16b4:	e1a0100b 	mov	r1, fp
    16b8:	e1c300b0 	strh	r0, [r3]
    16bc:	e1a0000a 	mov	r0, sl
    16c0:	eb002cd1 	bl	ca0c <__aeabi_d2iz>
    16c4:	e59f4084 	ldr	r4, [pc, #132]	; 1750 <.text+0x1750>
    16c8:	e1c400b0 	strh	r0, [r4]
    16cc:	e28dd00c 	add	sp, sp, #12	; 0xc
    16d0:	e8bd4ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    16d4:	e12fff1e 	bx	lr
    16d8:	e3a02000 	mov	r2, #0	; 0x0
    16dc:	e3a01001 	mov	r1, #1	; 0x1
    16e0:	e1b040a6 	movs	r4, r6, lsr #1
    16e4:	e1a03065 	mov	r3, r5, rrx
    16e8:	e0066002 	and	r6, r6, r2
    16ec:	e0055001 	and	r5, r5, r1
    16f0:	e1850003 	orr	r0, r5, r3
    16f4:	e1861004 	orr	r1, r6, r4
    16f8:	eb002b31 	bl	c3c4 <__aeabi_l2d>
    16fc:	e1a02000 	mov	r2, r0
    1700:	e1a03001 	mov	r3, r1
    1704:	eb002a40 	bl	c00c <__adddf3>
    1708:	e1a08000 	mov	r8, r0
    170c:	e1a09001 	mov	r9, r1
    1710:	eaffff9f 	b	1594 <SDK_mainloop+0x184>
    1714:	400921fb 	strmid	r2, [r9], -fp
    1718:	54442d18 	strplb	r2, [r4], #-3352
    171c:	c0c32759 	sbcgt	r2, r3, r9, asr r7
    1720:	9999999a 	ldmlsib	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
    1724:	40c32759 	sbcmi	r2, r3, r9, asr r7
    1728:	9999999a 	ldmlsib	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
    172c:	40000861 	andmi	r0, r0, r1, ror #16
    1730:	40000860 	andmi	r0, r0, r0, ror #16
    1734:	40000c94 	mulmi	r0, r4, ip
    1738:	40000e9c 	mulmi	r0, ip, lr
    173c:	40000000 	andmi	r0, r0, r0
    1740:	40000e90 	mulmi	r0, r0, lr
    1744:	40000864 	andmi	r0, r0, r4, ror #16
    1748:	40000e98 	mulmi	r0, r8, lr
    174c:	4000086c 	andmi	r0, r0, ip, ror #16
    1750:	40000eb0 	strmih	r0, [r0], -r0

00001754 <getSystemTicks>:

// NACHO start
volatile unsigned int numTimer0Ints = 0;

unsigned int getSystemTicks() {
    1754:	e1a0c00d 	mov	ip, sp
    1758:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    175c:	e24cb004 	sub	fp, ip, #4	; 0x4
	return numTimer0Ints * T0MR0 + T0TC;
    1760:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    1764:	e2833901 	add	r3, r3, #16384	; 0x4000
    1768:	e2833018 	add	r3, r3, #24	; 0x18
    176c:	e5932000 	ldr	r2, [r3]
    1770:	e59f3024 	ldr	r3, [pc, #36]	; 179c <.text+0x179c>
    1774:	e5933000 	ldr	r3, [r3]
    1778:	e0020293 	mul	r2, r3, r2
    177c:	e3a03901 	mov	r3, #16384	; 0x4000
    1780:	e283328e 	add	r3, r3, #-536870904	; 0xe0000008
    1784:	e5933000 	ldr	r3, [r3]
    1788:	e0823003 	add	r3, r2, r3
}
    178c:	e1a00003 	mov	r0, r3
    1790:	e24bd00c 	sub	sp, fp, #12	; 0xc
    1794:	e89d6800 	ldmia	sp, {fp, sp, lr}
    1798:	e12fff1e 	bx	lr
    179c:	40000898 	mulmi	r0, r8, r8

000017a0 <timer0ISR>:
// NACHO end

void timer0ISR(void) __irq
{
    17a0:	e1a0c00d 	mov	ip, sp
    17a4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    17a8:	e24cb004 	sub	fp, ip, #4	; 0x4
  T0IR = 0x01;      //Clear the timer 0 interrupt
    17ac:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    17b0:	e2833901 	add	r3, r3, #16384	; 0x4000
    17b4:	e3a02001 	mov	r2, #1	; 0x1
    17b8:	e5832000 	str	r2, [r3]
  IENABLE;
  trigger_cnt++;
    17bc:	e59f30c8 	ldr	r3, [pc, #200]	; 188c <.text+0x188c>
    17c0:	e5933000 	ldr	r3, [r3]
    17c4:	e2832001 	add	r2, r3, #1	; 0x1
    17c8:	e59f30bc 	ldr	r3, [pc, #188]	; 188c <.text+0x188c>
    17cc:	e5832000 	str	r2, [r3]
  numTimer0Ints++;	// NACHO
    17d0:	e59f30b8 	ldr	r3, [pc, #184]	; 1890 <.text+0x1890>
    17d4:	e5933000 	ldr	r3, [r3]
    17d8:	e2832001 	add	r2, r3, #1	; 0x1
    17dc:	e59f30ac 	ldr	r3, [pc, #172]	; 1890 <.text+0x1890>
    17e0:	e5832000 	str	r2, [r3]
  if(trigger_cnt==ControllerCyclesPerSecond)
    17e4:	e59f30a0 	ldr	r3, [pc, #160]	; 188c <.text+0x188c>
    17e8:	e5933000 	ldr	r3, [r3]
    17ec:	e3530ffa 	cmp	r3, #1000	; 0x3e8
    17f0:	1a000012 	bne	1840 <timer0ISR+0xa0>
  {
  	trigger_cnt=0;
    17f4:	e59f2090 	ldr	r2, [pc, #144]	; 188c <.text+0x188c>
    17f8:	e3a03000 	mov	r3, #0	; 0x0
    17fc:	e5823000 	str	r3, [r2]
  	HL_Status.up_time++;
    1800:	e59f308c 	ldr	r3, [pc, #140]	; 1894 <.text+0x1894>
    1804:	e1d330b4 	ldrh	r3, [r3, #4]
    1808:	e2833001 	add	r3, r3, #1	; 0x1
    180c:	e1a03803 	mov	r3, r3, lsl #16
    1810:	e1a02823 	mov	r2, r3, lsr #16
    1814:	e59f3078 	ldr	r3, [pc, #120]	; 1894 <.text+0x1894>
    1818:	e1c320b4 	strh	r2, [r3, #4]
  	HL_Status.cpu_load=mainloop_cnt;
    181c:	e59f3074 	ldr	r3, [pc, #116]	; 1898 <.text+0x1898>
    1820:	e5933000 	ldr	r3, [r3]
    1824:	e1a03803 	mov	r3, r3, lsl #16
    1828:	e1a02823 	mov	r2, r3, lsr #16
    182c:	e59f3060 	ldr	r3, [pc, #96]	; 1894 <.text+0x1894>
    1830:	e1c321b2 	strh	r2, [r3, #18]

  	mainloop_cnt=0;
    1834:	e59f205c 	ldr	r2, [pc, #92]	; 1898 <.text+0x1898>
    1838:	e3a03000 	mov	r3, #0	; 0x0
    183c:	e5823000 	str	r3, [r2]
  }

  if(mainloop_trigger<10) mainloop_trigger++;
    1840:	e59f3054 	ldr	r3, [pc, #84]	; 189c <.text+0x189c>
    1844:	e5d33000 	ldrb	r3, [r3]
    1848:	e20330ff 	and	r3, r3, #255	; 0xff
    184c:	e3530009 	cmp	r3, #9	; 0x9
    1850:	8a000006 	bhi	1870 <timer0ISR+0xd0>
    1854:	e59f3040 	ldr	r3, [pc, #64]	; 189c <.text+0x189c>
    1858:	e5d33000 	ldrb	r3, [r3]
    185c:	e20330ff 	and	r3, r3, #255	; 0xff
    1860:	e2833001 	add	r3, r3, #1	; 0x1
    1864:	e20330ff 	and	r3, r3, #255	; 0xff
    1868:	e59f202c 	ldr	r2, [pc, #44]	; 189c <.text+0x189c>
    186c:	e5c23000 	strb	r3, [r2]

  IDISABLE;
  VICVectAddr = 0;		// Acknowledge Interrupt
    1870:	e3a03000 	mov	r3, #0	; 0x0
    1874:	e2433efd 	sub	r3, r3, #4048	; 0xfd0
    1878:	e3a02000 	mov	r2, #0	; 0x0
    187c:	e5832000 	str	r2, [r3]
}
    1880:	e24bd00c 	sub	sp, fp, #12	; 0xc
    1884:	e89d6800 	ldmia	sp, {fp, sp, lr}
    1888:	e12fff1e 	bx	lr
    188c:	40000888 	andmi	r0, r0, r8, lsl #17
    1890:	40000898 	mulmi	r0, r8, r8
    1894:	40000f4c 	andmi	r0, r0, ip, asr #30
    1898:	4000087c 	andmi	r0, r0, ip, ror r8
    189c:	40000880 	andmi	r0, r0, r0, lsl #17

000018a0 <main>:

/**********************************************************
                       MAIN
**********************************************************/
int	main (void) {
    18a0:	e1a0c00d 	mov	ip, sp
    18a4:	e92dd810 	stmdb	sp!, {r4, fp, ip, lr, pc}
    18a8:	e24cb004 	sub	fp, ip, #4	; 0x4
    18ac:	e24dd004 	sub	sp, sp, #4	; 0x4

 static int vbat1, vbat2;
 int vbat;
 static int bat_cnt=0, bat_warning=1000;
 static char bat_warning_enabled=1;

#ifdef GPS_BEEP
 static unsigned int gps_beep_cnt;
#endif

  IDISABLE;

  init();
    18b0:	eb000346 	bl	25d0 <init>
	LL_write_init();
    18b4:	eb001336 	bl	6594 <LL_write_init>
  beeper(OFF);
    18b8:	e3a00000 	mov	r0, #0	; 0x0
    18bc:	eb0000da 	bl	1c2c <beeper>

  HL_Status.up_time=0;
    18c0:	e59f231c 	ldr	r2, [pc, #796]	; 1be4 <.text+0x1be4>
    18c4:	e3a03000 	mov	r3, #0	; 0x0
    18c8:	e1c230b4 	strh	r3, [r2, #4]

  printf("\n\nProgramm is running ... \n");
    18cc:	e59f0314 	ldr	r0, [pc, #788]	; 1be8 <.text+0x1be8>
    18d0:	eb002dda 	bl	d040 <__puts_from_arm>
  printf("Processor Clock Frequency: %d Hz\n", processorClockFrequency());
    18d4:	eb000461 	bl	2a60 <processorClockFrequency>
    18d8:	e1a03000 	mov	r3, r0
    18dc:	e59f0308 	ldr	r0, [pc, #776]	; 1bec <.text+0x1bec>
    18e0:	e1a01003 	mov	r1, r3
    18e4:	eb002dc3 	bl	cff8 <__printf_from_arm>
  printf("Peripheral Clock Frequency: %d Hz\n", peripheralClockFrequency());
    18e8:	eb000464 	bl	2a80 <peripheralClockFrequency>
    18ec:	e1a03000 	mov	r3, r0
    18f0:	e59f02f8 	ldr	r0, [pc, #760]	; 1bf0 <.text+0x1bf0>
    18f4:	e1a01003 	mov	r1, r3
    18f8:	eb002dbe 	bl	cff8 <__printf_from_arm>

  IENABLE;

  packetsTemp=packets;
    18fc:	e59f32f0 	ldr	r3, [pc, #752]	; 1bf4 <.text+0x1bf4>
    1900:	e5d33000 	ldrb	r3, [r3]
    1904:	e59f22ec 	ldr	r2, [pc, #748]	; 1bf8 <.text+0x1bf8>
    1908:	e5c23000 	strb	r3, [r2]


  LED(1,ON);
    190c:	e3a00001 	mov	r0, #1	; 0x1
    1910:	e3a01001 	mov	r1, #1	; 0x1
    1914:	eb000185 	bl	1f30 <LED>

  GPS_init_status=GPS_STARTUP;
    1918:	e59f22dc 	ldr	r2, [pc, #732]	; 1bfc <.text+0x1bfc>
    191c:	e3a03000 	mov	r3, #0	; 0x0
    1920:	e5c23000 	strb	r3, [r2]
    1924:	eaffffff 	b	1928 <main+0x88>

  while(1)
  {
      if(mainloop_trigger)
    1928:	e59f32d0 	ldr	r3, [pc, #720]	; 1c00 <.text+0x1c00>
    192c:	e5d33000 	ldrb	r3, [r3]
    1930:	e20330ff 	and	r3, r3, #255	; 0xff
    1934:	e3530000 	cmp	r3, #0	; 0x0
    1938:	0afffffa 	beq	1928 <main+0x88>
      {
     	if(GPS_timeout<ControllerCyclesPerSecond) GPS_timeout++;
    193c:	e59f32c0 	ldr	r3, [pc, #704]	; 1c04 <.text+0x1c04>
    1940:	e5932000 	ldr	r2, [r3]
    1944:	e3a03ff9 	mov	r3, #996	; 0x3e4
    1948:	e2833003 	add	r3, r3, #3	; 0x3
    194c:	e1520003 	cmp	r2, r3
    1950:	8a000005 	bhi	196c <main+0xcc>
    1954:	e59f32a8 	ldr	r3, [pc, #680]	; 1c04 <.text+0x1c04>
    1958:	e5933000 	ldr	r3, [r3]
    195c:	e2832001 	add	r2, r3, #1	; 0x1
    1960:	e59f329c 	ldr	r3, [pc, #668]	; 1c04 <.text+0x1c04>
    1964:	e5832000 	str	r2, [r3]
    1968:	ea000014 	b	19c0 <main+0x120>
	  	else if(GPS_timeout==ControllerCyclesPerSecond)
    196c:	e59f3290 	ldr	r3, [pc, #656]	; 1c04 <.text+0x1c04>
    1970:	e5933000 	ldr	r3, [r3]
    1974:	e3530ffa 	cmp	r3, #1000	; 0x3e8
    1978:	1a000010 	bne	19c0 <main+0x120>
	  	{
  	 		GPS_timeout=ControllerCyclesPerSecond+1;
    197c:	e59f2280 	ldr	r2, [pc, #640]	; 1c04 <.text+0x1c04>
    1980:	e3a03ffa 	mov	r3, #1000	; 0x3e8
    1984:	e2833001 	add	r3, r3, #1	; 0x1
    1988:	e5823000 	str	r3, [r2]
	  		GPS_Data.status=0;
    198c:	e59f2274 	ldr	r2, [pc, #628]	; 1c08 <.text+0x1c08>
    1990:	e3a03000 	mov	r3, #0	; 0x0
    1994:	e5823028 	str	r3, [r2, #40]
	  		GPS_Data.numSV=0;
    1998:	e59f2268 	ldr	r2, [pc, #616]	; 1c08 <.text+0x1c08>
    199c:	e3a03000 	mov	r3, #0	; 0x0
    19a0:	e5823024 	str	r3, [r2, #36]
	  		if (GPS_init_status==GPS_STARTUP)				//no GPS packet after startup
    19a4:	e59f3250 	ldr	r3, [pc, #592]	; 1bfc <.text+0x1bfc>
    19a8:	e5d33000 	ldrb	r3, [r3]
    19ac:	e3530000 	cmp	r3, #0	; 0x0
    19b0:	1a000002 	bne	19c0 <main+0x120>
	  		{
	  			GPS_init_status=GPS_NEEDS_CONFIGURATION;
    19b4:	e59f3240 	ldr	r3, [pc, #576]	; 1bfc <.text+0x1bfc>
    19b8:	e3a02001 	mov	r2, #1	; 0x1
    19bc:	e5c32000 	strb	r2, [r3]
	  		}
	  	}

        mainloop_cnt++;
    19c0:	e59f3244 	ldr	r3, [pc, #580]	; 1c0c <.text+0x1c0c>
    19c4:	e5933000 	ldr	r3, [r3]
    19c8:	e2832001 	add	r2, r3, #1	; 0x1
    19cc:	e59f3238 	ldr	r3, [pc, #568]	; 1c0c <.text+0x1c0c>
    19d0:	e5832000 	str	r2, [r3]
        if(++bat_cnt==100) bat_cnt=0;
    19d4:	e59f3234 	ldr	r3, [pc, #564]	; 1c10 <.text+0x1c10>
    19d8:	e5933000 	ldr	r3, [r3]
    19dc:	e2832001 	add	r2, r3, #1	; 0x1
    19e0:	e59f3228 	ldr	r3, [pc, #552]	; 1c10 <.text+0x1c10>
    19e4:	e5832000 	str	r2, [r3]
    19e8:	e59f3220 	ldr	r3, [pc, #544]	; 1c10 <.text+0x1c10>
    19ec:	e5933000 	ldr	r3, [r3]
    19f0:	e3530064 	cmp	r3, #100	; 0x64
    19f4:	1a000002 	bne	1a04 <main+0x164>
    19f8:	e59f2210 	ldr	r2, [pc, #528]	; 1c10 <.text+0x1c10>
    19fc:	e3a03000 	mov	r3, #0	; 0x0
    1a00:	e5823000 	str	r3, [r2]

        //battery monitoring
        vbat1=(vbat1*29+(ADC0Read(VOLTAGE_1)*9872/579))/30;	//voltage in mV //*9872/579
    1a04:	e59f3208 	ldr	r3, [pc, #520]	; 1c14 <.text+0x1c14>
    1a08:	e5932000 	ldr	r2, [r3]
    1a0c:	e1a03002 	mov	r3, r2
    1a10:	e1a03183 	mov	r3, r3, lsl #3
    1a14:	e0623003 	rsb	r3, r2, r3
    1a18:	e1a03103 	mov	r3, r3, lsl #2
    1a1c:	e0833002 	add	r3, r3, r2
    1a20:	e1a04003 	mov	r4, r3
    1a24:	e3a00002 	mov	r0, #2	; 0x2
    1a28:	eb001120 	bl	5eb0 <ADC0Read>
    1a2c:	e1a01000 	mov	r1, r0
    1a30:	e1a02001 	mov	r2, r1
    1a34:	e1a02102 	mov	r2, r2, lsl #2
    1a38:	e0822001 	add	r2, r2, r1
    1a3c:	e1a02082 	mov	r2, r2, lsl #1
    1a40:	e0822001 	add	r2, r2, r1
    1a44:	e1a03182 	mov	r3, r2, lsl #3
    1a48:	e0623003 	rsb	r3, r2, r3
    1a4c:	e1a03183 	mov	r3, r3, lsl #3
    1a50:	e0833001 	add	r3, r3, r1
    1a54:	e1a03203 	mov	r3, r3, lsl #4
    1a58:	e1a02003 	mov	r2, r3
    1a5c:	e3a032be 	mov	r3, #-536870901	; 0xe000000b
    1a60:	e2833626 	add	r3, r3, #39845888	; 0x2600000
    1a64:	e2833c63 	add	r3, r3, #25344	; 0x6300
    1a68:	e0831392 	umull	r1, r3, r2, r3
    1a6c:	e1a034a3 	mov	r3, r3, lsr #9
    1a70:	e0842003 	add	r2, r4, r3
    1a74:	e59f319c 	ldr	r3, [pc, #412]	; 1c18 <.text+0x1c18>
    1a78:	e0831392 	umull	r1, r3, r2, r3
    1a7c:	e1a03223 	mov	r3, r3, lsr #4
    1a80:	e1a02003 	mov	r2, r3
    1a84:	e59f3188 	ldr	r3, [pc, #392]	; 1c14 <.text+0x1c14>
    1a88:	e5832000 	str	r2, [r3]

		HL_Status.battery_voltage_1=vbat1;
    1a8c:	e59f3180 	ldr	r3, [pc, #384]	; 1c14 <.text+0x1c14>
    1a90:	e5933000 	ldr	r3, [r3]
    1a94:	e1a03803 	mov	r3, r3, lsl #16
    1a98:	e1a02823 	mov	r2, r3, lsr #16
    1a9c:	e59f3140 	ldr	r3, [pc, #320]	; 1be4 <.text+0x1be4>
    1aa0:	e1c320b0 	strh	r2, [r3]
		HL_Status.battery_voltage_2=vbat2;
    1aa4:	e59f3170 	ldr	r3, [pc, #368]	; 1c1c <.text+0x1c1c>
    1aa8:	e5933000 	ldr	r3, [r3]
    1aac:	e1a03803 	mov	r3, r3, lsl #16
    1ab0:	e1a02823 	mov	r2, r3, lsr #16
    1ab4:	e59f3128 	ldr	r3, [pc, #296]	; 1be4 <.text+0x1be4>
    1ab8:	e1c320b2 	strh	r2, [r3, #2]

		vbat=vbat1;
    1abc:	e59f3150 	ldr	r3, [pc, #336]	; 1c14 <.text+0x1c14>
    1ac0:	e5933000 	ldr	r3, [r3]
    1ac4:	e50b3014 	str	r3, [fp, #-20]

		if(vbat<BATTERY_WARNING_VOLTAGE)	//decide if it's really an empty battery
    1ac8:	e51b2014 	ldr	r2, [fp, #-20]
    1acc:	e3a03c27 	mov	r3, #9984	; 0x2700
    1ad0:	e283300f 	add	r3, r3, #15	; 0xf
    1ad4:	e1520003 	cmp	r2, r3
    1ad8:	ca00000f 	bgt	1b1c <main+0x27c>
		{
			if(bat_warning<ControllerCyclesPerSecond*2) bat_warning++;
    1adc:	e59f313c 	ldr	r3, [pc, #316]	; 1c20 <.text+0x1c20>
    1ae0:	e5932000 	ldr	r2, [r3]
    1ae4:	e3a03d1f 	mov	r3, #1984	; 0x7c0
    1ae8:	e283300f 	add	r3, r3, #15	; 0xf
    1aec:	e1520003 	cmp	r2, r3
    1af0:	ca000005 	bgt	1b0c <main+0x26c>
    1af4:	e59f3124 	ldr	r3, [pc, #292]	; 1c20 <.text+0x1c20>
    1af8:	e5933000 	ldr	r3, [r3]
    1afc:	e2832001 	add	r2, r3, #1	; 0x1
    1b00:	e59f3118 	ldr	r3, [pc, #280]	; 1c20 <.text+0x1c20>
    1b04:	e5832000 	str	r2, [r3]
    1b08:	ea000012 	b	1b58 <main+0x2b8>
			else bat_warning_enabled=1;
    1b0c:	e59f3110 	ldr	r3, [pc, #272]	; 1c24 <.text+0x1c24>
    1b10:	e3a02001 	mov	r2, #1	; 0x1
    1b14:	e5c32000 	strb	r2, [r3]
    1b18:	ea00000e 	b	1b58 <main+0x2b8>
		}
		else
		{
			if(bat_warning>10) bat_warning-=5;
    1b1c:	e59f30fc 	ldr	r3, [pc, #252]	; 1c20 <.text+0x1c20>
    1b20:	e5933000 	ldr	r3, [r3]
    1b24:	e353000a 	cmp	r3, #10	; 0xa
    1b28:	da000005 	ble	1b44 <main+0x2a4>
    1b2c:	e59f30ec 	ldr	r3, [pc, #236]	; 1c20 <.text+0x1c20>
    1b30:	e5933000 	ldr	r3, [r3]
    1b34:	e2432005 	sub	r2, r3, #5	; 0x5
    1b38:	e59f30e0 	ldr	r3, [pc, #224]	; 1c20 <.text+0x1c20>
    1b3c:	e5832000 	str	r2, [r3]
    1b40:	ea000004 	b	1b58 <main+0x2b8>
			else
			{
				bat_warning_enabled=0;
    1b44:	e59f30d8 	ldr	r3, [pc, #216]	; 1c24 <.text+0x1c24>
    1b48:	e3a02000 	mov	r2, #0	; 0x0
    1b4c:	e5c32000 	strb	r2, [r3]
				beeper(OFF);//IOCLR1 = (1<<17);	//Beeper off
    1b50:	e3a00000 	mov	r0, #0	; 0x0
    1b54:	eb000034 	bl	1c2c <beeper>
			}
		}
		if(bat_warning_enabled)
    1b58:	e59f30c4 	ldr	r3, [pc, #196]	; 1c24 <.text+0x1c24>
    1b5c:	e5d33000 	ldrb	r3, [r3]
    1b60:	e3530000 	cmp	r3, #0	; 0x0
    1b64:	0a000010 	beq	1bac <main+0x30c>
		{
			if(bat_cnt>((vbat-9000)/BAT_DIV)) beeper(ON);//IOSET1 = (1<<17);	//Beeper on
    1b68:	e51b3014 	ldr	r3, [fp, #-20]
    1b6c:	e2433c23 	sub	r3, r3, #8960	; 0x2300
    1b70:	e2433028 	sub	r3, r3, #40	; 0x28
    1b74:	e59f20ac 	ldr	r2, [pc, #172]	; 1c28 <.text+0x1c28>
    1b78:	e0c21293 	smull	r1, r2, r3, r2
    1b7c:	e1a02142 	mov	r2, r2, asr #2
    1b80:	e1a03fc3 	mov	r3, r3, asr #31
    1b84:	e0632002 	rsb	r2, r3, r2
    1b88:	e59f3080 	ldr	r3, [pc, #128]	; 1c10 <.text+0x1c10>
    1b8c:	e5933000 	ldr	r3, [r3]
    1b90:	e1520003 	cmp	r2, r3
    1b94:	aa000002 	bge	1ba4 <main+0x304>
    1b98:	e3a00001 	mov	r0, #1	; 0x1
    1b9c:	eb000022 	bl	1c2c <beeper>
    1ba0:	ea000001 	b	1bac <main+0x30c>
			else beeper(OFF);//IOCLR1 = (1<<17);		//Beeper off
    1ba4:	e3a00000 	mov	r0, #0	; 0x0
    1ba8:	eb00001f 	bl	1c2c <beeper>
		}

#ifdef GPS_BEEP
		//GPS_Beep
		if((GPS_Data.status&0xFF)!=3)	//no lock
		{
			gps_beep_cnt++;
			if(gps_beep_cnt>=1500) gps_beep_cnt=0;
			if(gps_beep_cnt<20) beeper(ON);	//IOSET1 = (1<<17);	//Beeper on
			else if(gps_beep_cnt==40) beeper(OFF);// IOCLR1 = (1<<17); //Beeper off
		}
#endif

	    if(mainloop_trigger) mainloop_trigger--;
    1bac:	e59f304c 	ldr	r3, [pc, #76]	; 1c00 <.text+0x1c00>
    1bb0:	e5d33000 	ldrb	r3, [r3]
    1bb4:	e20330ff 	and	r3, r3, #255	; 0xff
    1bb8:	e3530000 	cmp	r3, #0	; 0x0
    1bbc:	0a000006 	beq	1bdc <main+0x33c>
    1bc0:	e59f3038 	ldr	r3, [pc, #56]	; 1c00 <.text+0x1c00>
    1bc4:	e5d33000 	ldrb	r3, [r3]
    1bc8:	e20330ff 	and	r3, r3, #255	; 0xff
    1bcc:	e2433001 	sub	r3, r3, #1	; 0x1
    1bd0:	e20330ff 	and	r3, r3, #255	; 0xff
    1bd4:	e59f2024 	ldr	r2, [pc, #36]	; 1c00 <.text+0x1c00>
    1bd8:	e5c23000 	strb	r3, [r2]
        mainloop();
    1bdc:	eb000029 	bl	1c88 <mainloop>
      }
  }
    1be0:	eaffff50 	b	1928 <main+0x88>
    1be4:	40000f4c 	andmi	r0, r0, ip, asr #30
    1be8:	0000d0f0 	streqd	sp, [r0], -r0
    1bec:	0000d10c 	andeq	sp, r0, ip, lsl #2
    1bf0:	0000d130 	andeq	sp, r0, r0, lsr r1
    1bf4:	40000894 	mulmi	r0, r4, r8
    1bf8:	40000f48 	andmi	r0, r0, r8, asr #30
    1bfc:	40000df0 	strmid	r0, [r0], -r0
    1c00:	40000880 	andmi	r0, r0, r0, lsl #17
    1c04:	40000884 	andmi	r0, r0, r4, lsl #17
    1c08:	40000e2c 	andmi	r0, r0, ip, lsr #28
    1c0c:	4000087c 	andmi	r0, r0, ip, ror r8
    1c10:	4000089c 	mulmi	r0, ip, r8
    1c14:	400008a4 	andmi	r0, r0, r4, lsr #17
    1c18:	88888889 	stmhiia	r8, {r0, r3, r7, fp, pc}
    1c1c:	400008a0 	andmi	r0, r0, r0, lsr #17
    1c20:	40000008 	andmi	r0, r0, r8
    1c24:	40000005 	andmi	r0, r0, r5
    1c28:	66666667 	strvsbt	r6, [r6], -r7, ror #12

00001c2c <beeper>:
  return 0;
}

void beeper (unsigned char offon)
{
    1c2c:	e1a0c00d 	mov	ip, sp
    1c30:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    1c34:	e24cb004 	sub	fp, ip, #4	; 0x4
    1c38:	e24dd004 	sub	sp, sp, #4	; 0x4
    1c3c:	e1a03000 	mov	r3, r0
    1c40:	e54b3010 	strb	r3, [fp, #-16]
	if(offon)	//beeper on
    1c44:	e55b3010 	ldrb	r3, [fp, #-16]
    1c48:	e3530000 	cmp	r3, #0	; 0x0
    1c4c:	0a000005 	beq	1c68 <beeper+0x3c>
	{
		IOSET1 = (1<<17);
    1c50:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    1c54:	e283390a 	add	r3, r3, #163840	; 0x28000
    1c58:	e2833014 	add	r3, r3, #20	; 0x14
    1c5c:	e3a02802 	mov	r2, #131072	; 0x20000
    1c60:	e5832000 	str	r2, [r3]
    1c64:	ea000004 	b	1c7c <beeper+0x50>
	}
	else
	{
		IOCLR1 = (1<<17);
    1c68:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    1c6c:	e283390a 	add	r3, r3, #163840	; 0x28000
    1c70:	e283301c 	add	r3, r3, #28	; 0x1c
    1c74:	e3a02802 	mov	r2, #131072	; 0x20000
    1c78:	e5832000 	str	r2, [r3]
	}
}
    1c7c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    1c80:	e89d6800 	ldmia	sp, {fp, sp, lr}
    1c84:	e12fff1e 	bx	lr

00001c88 <mainloop>:

void mainloop(void)
{
    1c88:	e1a0c00d 	mov	ip, sp
    1c8c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    1c90:	e24cb004 	sub	fp, ip, #4	; 0x4
    1c94:	e24dd010 	sub	sp, sp, #16	; 0x10
    static unsigned char led_cnt=0, led_state=1;
	unsigned char * dataptr, * dataptr2;
	unsigned char t,i;

    led_cnt++;
    1c98:	e59f3260 	ldr	r3, [pc, #608]	; 1f00 <.text+0x1f00>
    1c9c:	e5d33000 	ldrb	r3, [r3]
    1ca0:	e2833001 	add	r3, r3, #1	; 0x1
    1ca4:	e20330ff 	and	r3, r3, #255	; 0xff
    1ca8:	e59f2250 	ldr	r2, [pc, #592]	; 1f00 <.text+0x1f00>
    1cac:	e5c23000 	strb	r3, [r2]


	if((GPS_Data.status&0xFF)==0x03)
    1cb0:	e59f324c 	ldr	r3, [pc, #588]	; 1f04 <.text+0x1f04>
    1cb4:	e5933028 	ldr	r3, [r3, #40]
    1cb8:	e20330ff 	and	r3, r3, #255	; 0xff
    1cbc:	e3530003 	cmp	r3, #3	; 0x3
    1cc0:	1a000003 	bne	1cd4 <mainloop+0x4c>
	{
		LED(0,OFF);
    1cc4:	e3a00000 	mov	r0, #0	; 0x0
    1cc8:	e3a01000 	mov	r1, #0	; 0x0
    1ccc:	eb000097 	bl	1f30 <LED>
    1cd0:	ea000011 	b	1d1c <mainloop+0x94>
	}
	else
	{
	    if(led_cnt==150)
    1cd4:	e59f3224 	ldr	r3, [pc, #548]	; 1f00 <.text+0x1f00>
    1cd8:	e5d33000 	ldrb	r3, [r3]
    1cdc:	e3530096 	cmp	r3, #150	; 0x96
    1ce0:	1a000003 	bne	1cf4 <mainloop+0x6c>
	    {
	      LED(0,ON);
    1ce4:	e3a00000 	mov	r0, #0	; 0x0
    1ce8:	e3a01001 	mov	r1, #1	; 0x1
    1cec:	eb00008f 	bl	1f30 <LED>
    1cf0:	ea000009 	b	1d1c <mainloop+0x94>
	    }
	    else if(led_cnt==200)
    1cf4:	e59f3204 	ldr	r3, [pc, #516]	; 1f00 <.text+0x1f00>
    1cf8:	e5d33000 	ldrb	r3, [r3]
    1cfc:	e35300c8 	cmp	r3, #200	; 0xc8
    1d00:	1a000005 	bne	1d1c <mainloop+0x94>
	    {
	      led_cnt=0;
    1d04:	e59f31f4 	ldr	r3, [pc, #500]	; 1f00 <.text+0x1f00>
    1d08:	e3a02000 	mov	r2, #0	; 0x0
    1d0c:	e5c32000 	strb	r2, [r3]
	      LED(0,OFF);
    1d10:	e3a00000 	mov	r0, #0	; 0x0
    1d14:	e3a01000 	mov	r1, #0	; 0x0
    1d18:	eb000084 	bl	1f30 <LED>
	    }
	}

	if(trigger_transmission)
    1d1c:	e59f31e4 	ldr	r3, [pc, #484]	; 1f08 <.text+0x1f08>
    1d20:	e5d33000 	ldrb	r3, [r3]
    1d24:	e3530000 	cmp	r3, #0	; 0x0
    1d28:	0a000016 	beq	1d88 <mainloop+0x100>
	{
		if(!(IOPIN0&(1<<CTS_RADIO)))
    1d2c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    1d30:	e283390a 	add	r3, r3, #163840	; 0x28000
    1d34:	e5933000 	ldr	r3, [r3]
    1d38:	e2033501 	and	r3, r3, #4194304	; 0x400000
    1d3c:	e3530000 	cmp	r3, #0	; 0x0
    1d40:	1a000010 	bne	1d88 <mainloop+0x100>
	  	{
	  		trigger_transmission=0;
    1d44:	e59f21bc 	ldr	r2, [pc, #444]	; 1f08 <.text+0x1f08>
    1d48:	e3a03000 	mov	r3, #0	; 0x0
    1d4c:	e5c23000 	strb	r3, [r2]
		    if(ringbuffer(RBREAD, &t, 1))
    1d50:	e24b3019 	sub	r3, fp, #25	; 0x19
    1d54:	e3a00000 	mov	r0, #0	; 0x0
    1d58:	e1a01003 	mov	r1, r3
    1d5c:	e3a02001 	mov	r2, #1	; 0x1
    1d60:	eb000a6e 	bl	4720 <ringbuffer>
    1d64:	e1a03000 	mov	r3, r0
    1d68:	e3530000 	cmp	r3, #0	; 0x0
    1d6c:	0a000005 	beq	1d88 <mainloop+0x100>
		    {
		      transmission_running=1;
    1d70:	e59f2194 	ldr	r2, [pc, #404]	; 1f0c <.text+0x1f0c>
    1d74:	e3a03001 	mov	r3, #1	; 0x1
    1d78:	e5c23000 	strb	r3, [r2]
		      UARTWriteChar(t);
    1d7c:	e55b3019 	ldrb	r3, [fp, #-25]
    1d80:	e1a00003 	mov	r0, r3
    1d84:	eb0008a8 	bl	402c <UARTWriteChar>
		    }
	  	}
	}

	if(IMU_CalcData_updated)
    1d88:	e59f3180 	ldr	r3, [pc, #384]	; 1f10 <.text+0x1f10>
    1d8c:	e5d33000 	ldrb	r3, [r3]
    1d90:	e3530000 	cmp	r3, #0	; 0x0
    1d94:	0a000019 	beq	1e00 <mainloop+0x178>
	{
		IMU_CalcData_updated=0;
    1d98:	e59f2170 	ldr	r2, [pc, #368]	; 1f10 <.text+0x1f10>
    1d9c:	e3a03000 	mov	r3, #0	; 0x0
    1da0:	e5c23000 	strb	r3, [r2]
		dataptr=(unsigned char *)&IMU_CalcData;
    1da4:	e59f3168 	ldr	r3, [pc, #360]	; 1f14 <.text+0x1f14>
    1da8:	e50b3018 	str	r3, [fp, #-24]
	    dataptr2=(unsigned char *)&IMU_CalcData_tmp;
    1dac:	e59f3164 	ldr	r3, [pc, #356]	; 1f18 <.text+0x1f18>
    1db0:	e50b3014 	str	r3, [fp, #-20]
		for(i=0;i<sizeof(IMU_CalcData);i++)
    1db4:	e3a03000 	mov	r3, #0	; 0x0
    1db8:	e54b300d 	strb	r3, [fp, #-13]
    1dbc:	ea00000c 	b	1df4 <mainloop+0x16c>
		{
	         *dataptr=*dataptr2;
    1dc0:	e51b3014 	ldr	r3, [fp, #-20]
    1dc4:	e5d33000 	ldrb	r3, [r3]
    1dc8:	e51b2018 	ldr	r2, [fp, #-24]
    1dcc:	e5c23000 	strb	r3, [r2]
	         dataptr++;
    1dd0:	e51b3018 	ldr	r3, [fp, #-24]
    1dd4:	e2833001 	add	r3, r3, #1	; 0x1
    1dd8:	e50b3018 	str	r3, [fp, #-24]
	         dataptr2++;
    1ddc:	e51b3014 	ldr	r3, [fp, #-20]
    1de0:	e2833001 	add	r3, r3, #1	; 0x1
    1de4:	e50b3014 	str	r3, [fp, #-20]
    1de8:	e55b300d 	ldrb	r3, [fp, #-13]
    1dec:	e2833001 	add	r3, r3, #1	; 0x1
    1df0:	e54b300d 	strb	r3, [fp, #-13]
    1df4:	e55b300d 	ldrb	r3, [fp, #-13]
    1df8:	e353005b 	cmp	r3, #91	; 0x5b
    1dfc:	9affffef 	bls	1dc0 <mainloop+0x138>
		}
	}

	// packetsTemp=recived_packets();

 /*   if(uart_cnt++==ControllerCyclesPerSecond/DataOutputsPerSecond)
    {


      uart_cnt=0;
        if((packetsTemp&0x01))
        	if((sizeof(HL_Status))<ringbuffer(RBFREE, 0, 0))
        	{
        		UART_SendPacket(&HL_Status, sizeof(HL_Status), PD_HLSTATUS);
        		packetsTemp&=~0x01;

        	}
        if((packetsTemp&0x02)) packetsTemp&=~0x02;
        if((packetsTemp&0x08)) packetsTemp&=~0x08;
        if((packetsTemp&0x10)) packetsTemp&=~0x10;
        if((packetsTemp&0x20)) packetsTemp&=~0x20;
        if((packetsTemp&0x40)) packetsTemp&=~0x40;


        if((packetsTemp==0x04))
        	if((sizeof(IMU_CalcData))<ringbuffer(RBFREE, 0, 0))
        	{

        		UART_SendPacket(&IMU_CalcData, sizeof(IMU_CalcData), PD_IMUCALCDATA);
        		packetsTemp&=~0x04;

        	}
        if((packetsTemp==0x80))
	        if((sizeof(GPS_Data))<ringbuffer(RBFREE, 0, 0))
	        {

	        	UART_SendPacket(&GPS_Data, sizeof(GPS_Data), PD_GPSDATA);
        		packetsTemp&=~0x80;
        	}
        if (!packetsTemp)
        	packetsTemp=packets;
    }
*/
	  SDK_mainloop();
    1e00:	ebfffd82 	bl	1410 <SDK_mainloop>

    HL2LL_write_cycle();	//write data to transmit buffer for immediate transfer to LL processor
    1e04:	ebfff9d0 	bl	54c <HL2LL_write_cycle>

    if (GPS_init_status==GPS_NEEDS_CONFIGURATION)		//configuration SM of GPS at startup
    1e08:	e59f310c 	ldr	r3, [pc, #268]	; 1f1c <.text+0x1f1c>
    1e0c:	e5d33000 	ldrb	r3, [r3]
    1e10:	e3530001 	cmp	r3, #1	; 0x1
    1e14:	1a000000 	bne	1e1c <mainloop+0x194>
    {
    	GPS_configure();
    1e18:	eb000b36 	bl	4af8 <GPS_configure>
    }

    if (gpsDataOkTrigger)
    1e1c:	e59f30fc 	ldr	r3, [pc, #252]	; 1f20 <.text+0x1f20>
    1e20:	e5933000 	ldr	r3, [r3]
    1e24:	e3530000 	cmp	r3, #0	; 0x0
    1e28:	0a000031 	beq	1ef4 <mainloop+0x26c>
    {
			if(GPS_Data.horizontal_accuracy>12000) GPS_Data.status&=~0x03;
    1e2c:	e59f30d0 	ldr	r3, [pc, #208]	; 1f04 <.text+0x1f04>
    1e30:	e5932018 	ldr	r2, [r3, #24]
    1e34:	e3a03dbb 	mov	r3, #11968	; 0x2ec0
    1e38:	e2833020 	add	r3, r3, #32	; 0x20
    1e3c:	e1520003 	cmp	r2, r3
    1e40:	9a000004 	bls	1e58 <mainloop+0x1d0>
    1e44:	e59f30b8 	ldr	r3, [pc, #184]	; 1f04 <.text+0x1f04>
    1e48:	e5933028 	ldr	r3, [r3, #40]
    1e4c:	e3c32003 	bic	r2, r3, #3	; 0x3
    1e50:	e59f30ac 	ldr	r3, [pc, #172]	; 1f04 <.text+0x1f04>
    1e54:	e5832028 	str	r2, [r3, #40]
 			if(GPS_timeout>50)//(GPS_Data.status&0xFF)!=0x03)
    1e58:	e59f30c4 	ldr	r3, [pc, #196]	; 1f24 <.text+0x1f24>
    1e5c:	e5933000 	ldr	r3, [r3]
    1e60:	e3530032 	cmp	r3, #50	; 0x32
    1e64:	9a000010 	bls	1eac <mainloop+0x224>
 			{
    			if(led_state)
    1e68:	e59f30b8 	ldr	r3, [pc, #184]	; 1f28 <.text+0x1f28>
    1e6c:	e5d33000 	ldrb	r3, [r3]
    1e70:	e3530000 	cmp	r3, #0	; 0x0
    1e74:	0a000006 	beq	1e94 <mainloop+0x20c>
    			{
    				led_state=0;
    1e78:	e59f30a8 	ldr	r3, [pc, #168]	; 1f28 <.text+0x1f28>
    1e7c:	e3a02000 	mov	r2, #0	; 0x0
    1e80:	e5c32000 	strb	r2, [r3]
    				LED(1,OFF);
    1e84:	e3a00001 	mov	r0, #1	; 0x1
    1e88:	e3a01000 	mov	r1, #0	; 0x0
    1e8c:	eb000027 	bl	1f30 <LED>
    1e90:	ea000005 	b	1eac <mainloop+0x224>
    			}
				else
				{
  					LED(1,ON);
    1e94:	e3a00001 	mov	r0, #1	; 0x1
    1e98:	e3a01001 	mov	r1, #1	; 0x1
    1e9c:	eb000023 	bl	1f30 <LED>
					led_state=1;
    1ea0:	e59f3080 	ldr	r3, [pc, #128]	; 1f28 <.text+0x1f28>
    1ea4:	e3a02001 	mov	r2, #1	; 0x1
    1ea8:	e5c32000 	strb	r2, [r3]
				}
 			}
			GPS_timeout=0;
    1eac:	e59f2070 	ldr	r2, [pc, #112]	; 1f24 <.text+0x1f24>
    1eb0:	e3a03000 	mov	r3, #0	; 0x0
    1eb4:	e5823000 	str	r3, [r2]
			if (GPS_init_status==GPS_STARTUP) GPS_init_status=GPS_IS_CONFIGURED;		//gps config valid, if received correct packet
    1eb8:	e59f305c 	ldr	r3, [pc, #92]	; 1f1c <.text+0x1f1c>
    1ebc:	e5d33000 	ldrb	r3, [r3]
    1ec0:	e3530000 	cmp	r3, #0	; 0x0
    1ec4:	1a000002 	bne	1ed4 <mainloop+0x24c>
    1ec8:	e59f304c 	ldr	r3, [pc, #76]	; 1f1c <.text+0x1f1c>
    1ecc:	e3a02002 	mov	r2, #2	; 0x2
    1ed0:	e5c32000 	strb	r2, [r3]
    		HL_Status.latitude=GPS_Data.latitude;
    1ed4:	e59f3028 	ldr	r3, [pc, #40]	; 1f04 <.text+0x1f04>
    1ed8:	e5932000 	ldr	r2, [r3]
    1edc:	e59f3048 	ldr	r3, [pc, #72]	; 1f2c <.text+0x1f2c>
    1ee0:	e5832008 	str	r2, [r3, #8]
    		HL_Status.longitude=GPS_Data.longitude;
    1ee4:	e59f3018 	ldr	r3, [pc, #24]	; 1f04 <.text+0x1f04>
    1ee8:	e5932004 	ldr	r2, [r3, #4]
    1eec:	e59f3038 	ldr	r3, [pc, #56]	; 1f2c <.text+0x1f2c>
    1ef0:	e583200c 	str	r2, [r3, #12]

    }

}
    1ef4:	e24bd00c 	sub	sp, fp, #12	; 0xc
    1ef8:	e89d6800 	ldmia	sp, {fp, sp, lr}
    1efc:	e12fff1e 	bx	lr
    1f00:	400008a8 	andmi	r0, r0, r8, lsr #17
    1f04:	40000e2c 	andmi	r0, r0, ip, lsr #28
    1f08:	400008b0 	strmih	r0, [r0], -r0
    1f0c:	400008ae 	andmi	r0, r0, lr, lsr #17
    1f10:	40000c48 	andmi	r0, r0, r8, asr #24
    1f14:	40000ebc 	strmih	r0, [r0], -ip
    1f18:	40000f68 	andmi	r0, r0, r8, ror #30
    1f1c:	40000df0 	strmid	r0, [r0], -r0
    1f20:	40000850 	andmi	r0, r0, r0, asr r8
    1f24:	40000884 	andmi	r0, r0, r4, lsl #17
    1f28:	4000000c 	andmi	r0, r0, ip
    1f2c:	40000f4c 	andmi	r0, r0, ip, asr #30

00001f30 <LED>:
#include "irq.h"


void LED(unsigned char nr, unsigned char onoff) //set or reset LED 0..3
{
    1f30:	e1a0c00d 	mov	ip, sp
    1f34:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    1f38:	e24cb004 	sub	fp, ip, #4	; 0x4
    1f3c:	e24dd008 	sub	sp, sp, #8	; 0x8
    1f40:	e1a03000 	mov	r3, r0
    1f44:	e1a02001 	mov	r2, r1
    1f48:	e54b3010 	strb	r3, [fp, #-16]
    1f4c:	e1a03002 	mov	r3, r2
    1f50:	e54b3014 	strb	r3, [fp, #-20]
  if (nr>=2)
    1f54:	e55b3010 	ldrb	r3, [fp, #-16]
    1f58:	e3530001 	cmp	r3, #1	; 0x1
    1f5c:	8a000013 	bhi	1fb0 <LED+0x80>
  	return;
  if(onoff == OFF)
    1f60:	e55b3014 	ldrb	r3, [fp, #-20]
    1f64:	e3530000 	cmp	r3, #0	; 0x0
    1f68:	1a000008 	bne	1f90 <LED+0x60>
  {
    IOSET1 = (1<<(24+nr));
    1f6c:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    1f70:	e282290a 	add	r2, r2, #163840	; 0x28000
    1f74:	e2822014 	add	r2, r2, #20	; 0x14
    1f78:	e55b3010 	ldrb	r3, [fp, #-16]
    1f7c:	e2831018 	add	r1, r3, #24	; 0x18
    1f80:	e3a03001 	mov	r3, #1	; 0x1
    1f84:	e1a03113 	mov	r3, r3, lsl r1
    1f88:	e5823000 	str	r3, [r2]
    1f8c:	ea000007 	b	1fb0 <LED+0x80>
  }
  else
  {
    IOCLR1 = (1<<(24+nr));
    1f90:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    1f94:	e282290a 	add	r2, r2, #163840	; 0x28000
    1f98:	e282201c 	add	r2, r2, #28	; 0x1c
    1f9c:	e55b3010 	ldrb	r3, [fp, #-16]
    1fa0:	e2831018 	add	r1, r3, #24	; 0x18
    1fa4:	e3a03001 	mov	r3, #1	; 0x1
    1fa8:	e1a03113 	mov	r3, r3, lsl r1
    1fac:	e5823000 	str	r3, [r2]
  }
}
    1fb0:	e24bd00c 	sub	sp, fp, #12	; 0xc
    1fb4:	e89d6800 	ldmia	sp, {fp, sp, lr}
    1fb8:	e12fff1e 	bx	lr

00001fbc <ee_erase>:
    1fbc:	e1a0c00d 	mov	ip, sp
    1fc0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    1fc4:	e24cb004 	sub	fp, ip, #4	; 0x4
    1fc8:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    1fcc:	e50b0034 	str	r0, [fp, #-52]
    1fd0:	e50b1038 	str	r1, [fp, #-56]
    1fd4:	e3a03000 	mov	r3, #0	; 0x0
    1fd8:	e2433eff 	sub	r3, r3, #4080	; 0xff0
    1fdc:	e5933000 	ldr	r3, [r3]
    1fe0:	e50b3010 	str	r3, [fp, #-16]
    1fe4:	e3e03efe 	mvn	r3, #4064	; 0xfe0
    1fe8:	e243300b 	sub	r3, r3, #11	; 0xb
    1fec:	e51b2010 	ldr	r2, [fp, #-16]
    1ff0:	e5832000 	str	r2, [r3]
    1ff4:	e3a03032 	mov	r3, #50	; 0x32
    1ff8:	e50b3024 	str	r3, [fp, #-36]
    1ffc:	e3a0300e 	mov	r3, #14	; 0xe
    2000:	e50b3020 	str	r3, [fp, #-32]
    2004:	e3a0300e 	mov	r3, #14	; 0xe
    2008:	e50b301c 	str	r3, [fp, #-28]
    200c:	e59f20e0 	ldr	r2, [pc, #224]	; 20f4 <.text+0x20f4>
    2010:	e3e0313a 	mvn	r3, #-2147483634	; 0x8000000e
    2014:	e5823000 	str	r3, [r2]
    2018:	e59f30d4 	ldr	r3, [pc, #212]	; 20f4 <.text+0x20f4>
    201c:	e593c000 	ldr	ip, [r3]
    2020:	e24b3024 	sub	r3, fp, #36	; 0x24
    2024:	e24b2030 	sub	r2, fp, #48	; 0x30
    2028:	e1a00003 	mov	r0, r3
    202c:	e1a01002 	mov	r1, r2
    2030:	e1a0e00f 	mov	lr, pc
    2034:	e12fff1c 	bx	ip
    2038:	e3a03034 	mov	r3, #52	; 0x34
    203c:	e50b3024 	str	r3, [fp, #-36]
    2040:	e3a0300e 	mov	r3, #14	; 0xe
    2044:	e50b3020 	str	r3, [fp, #-32]
    2048:	e3a0300e 	mov	r3, #14	; 0xe
    204c:	e50b301c 	str	r3, [fp, #-28]
    2050:	e3a03cea 	mov	r3, #59904	; 0xea00
    2054:	e2833060 	add	r3, r3, #96	; 0x60
    2058:	e50b3018 	str	r3, [fp, #-24]
    205c:	e59f2090 	ldr	r2, [pc, #144]	; 20f4 <.text+0x20f4>
    2060:	e3e0313a 	mvn	r3, #-2147483634	; 0x8000000e
    2064:	e5823000 	str	r3, [r2]
    2068:	e59f3084 	ldr	r3, [pc, #132]	; 20f4 <.text+0x20f4>
    206c:	e593c000 	ldr	ip, [r3]
    2070:	e24b3024 	sub	r3, fp, #36	; 0x24
    2074:	e24b2030 	sub	r2, fp, #48	; 0x30
    2078:	e1a00003 	mov	r0, r3
    207c:	e1a01002 	mov	r1, r2
    2080:	e1a0e00f 	mov	lr, pc
    2084:	e12fff1c 	bx	ip
    2088:	e3a03035 	mov	r3, #53	; 0x35
    208c:	e50b3024 	str	r3, [fp, #-36]
    2090:	e3a0300e 	mov	r3, #14	; 0xe
    2094:	e50b3020 	str	r3, [fp, #-32]
    2098:	e3a0300e 	mov	r3, #14	; 0xe
    209c:	e50b301c 	str	r3, [fp, #-28]
    20a0:	e59f204c 	ldr	r2, [pc, #76]	; 20f4 <.text+0x20f4>
    20a4:	e3e0313a 	mvn	r3, #-2147483634	; 0x8000000e
    20a8:	e5823000 	str	r3, [r2]
    20ac:	e59f3040 	ldr	r3, [pc, #64]	; 20f4 <.text+0x20f4>
    20b0:	e593c000 	ldr	ip, [r3]
    20b4:	e24b3024 	sub	r3, fp, #36	; 0x24
    20b8:	e24b2030 	sub	r2, fp, #48	; 0x30
    20bc:	e1a00003 	mov	r0, r3
    20c0:	e1a01002 	mov	r1, r2
    20c4:	e1a0e00f 	mov	lr, pc
    20c8:	e12fff1c 	bx	ip
    20cc:	e3a03000 	mov	r3, #0	; 0x0
    20d0:	e2433eff 	sub	r3, r3, #4080	; 0xff0
    20d4:	e51b2010 	ldr	r2, [fp, #-16]
    20d8:	e5832000 	str	r2, [r3]
    20dc:	e51b2030 	ldr	r2, [fp, #-48]
    20e0:	e51b3038 	ldr	r3, [fp, #-56]
    20e4:	e5832000 	str	r2, [r3]
    20e8:	e24bd00c 	sub	sp, fp, #12	; 0xc
    20ec:	e89d6800 	ldmia	sp, {fp, sp, lr}
    20f0:	e12fff1e 	bx	lr
    20f4:	40000fc4 	andmi	r0, r0, r4, asr #31

000020f8 <ee_write>:
    20f8:	e1a0c00d 	mov	ip, sp
    20fc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2100:	e24cb004 	sub	fp, ip, #4	; 0x4
    2104:	e24ddf4f 	sub	sp, sp, #316	; 0x13c
    2108:	e50b0144 	str	r0, [fp, #-324]
    210c:	e50b1148 	str	r1, [fp, #-328]
    2110:	eb0000dc 	bl	2488 <ee_locate>
    2114:	e1a03000 	mov	r3, r0
    2118:	e50b3020 	str	r3, [fp, #-32]
    211c:	e51b3020 	ldr	r3, [fp, #-32]
    2120:	e3730001 	cmn	r3, #1	; 0x1
    2124:	1a000004 	bne	213c <ee_write+0x44>
    2128:	e51b2148 	ldr	r2, [fp, #-328]
    212c:	e3a03f7d 	mov	r3, #500	; 0x1f4
    2130:	e2833001 	add	r3, r3, #1	; 0x1
    2134:	e5823000 	str	r3, [r2]
    2138:	ea000073 	b	230c <ee_write+0x214>
    213c:	e3a03000 	mov	r3, #0	; 0x0
    2140:	e50b3014 	str	r3, [fp, #-20]
    2144:	ea00000a 	b	2174 <ee_write+0x7c>
    2148:	e51b2014 	ldr	r2, [fp, #-20]
    214c:	e3a034bb 	mov	r3, #-1157627904	; 0xbb000000
    2150:	e1a03b43 	mov	r3, r3, asr #22
    2154:	e24b100c 	sub	r1, fp, #12	; 0xc
    2158:	e0812002 	add	r2, r1, r2
    215c:	e0822003 	add	r2, r2, r3
    2160:	e3e03000 	mvn	r3, #0	; 0x0
    2164:	e5c23000 	strb	r3, [r2]
    2168:	e51b3014 	ldr	r3, [fp, #-20]
    216c:	e2833001 	add	r3, r3, #1	; 0x1
    2170:	e50b3014 	str	r3, [fp, #-20]
    2174:	e51b3014 	ldr	r3, [fp, #-20]
    2178:	e35300ff 	cmp	r3, #255	; 0xff
    217c:	9afffff1 	bls	2148 <ee_write+0x50>
    2180:	e24b3e12 	sub	r3, fp, #288	; 0x120
    2184:	e50b3018 	str	r3, [fp, #-24]
    2188:	e51b3144 	ldr	r3, [fp, #-324]
    218c:	e50b301c 	str	r3, [fp, #-28]
    2190:	e3a03000 	mov	r3, #0	; 0x0
    2194:	e50b3014 	str	r3, [fp, #-20]
    2198:	ea00000e 	b	21d8 <ee_write+0xe0>
    219c:	e51b3014 	ldr	r3, [fp, #-20]
    21a0:	e1a03103 	mov	r3, r3, lsl #2
    21a4:	e1a02003 	mov	r2, r3
    21a8:	e51b3018 	ldr	r3, [fp, #-24]
    21ac:	e0821003 	add	r1, r2, r3
    21b0:	e51b3014 	ldr	r3, [fp, #-20]
    21b4:	e1a03103 	mov	r3, r3, lsl #2
    21b8:	e1a02003 	mov	r2, r3
    21bc:	e51b301c 	ldr	r3, [fp, #-28]
    21c0:	e0823003 	add	r3, r2, r3
    21c4:	e5933000 	ldr	r3, [r3]
    21c8:	e5813000 	str	r3, [r1]
    21cc:	e51b3014 	ldr	r3, [fp, #-20]
    21d0:	e2833001 	add	r3, r3, #1	; 0x1
    21d4:	e50b3014 	str	r3, [fp, #-20]
    21d8:	e51b3014 	ldr	r3, [fp, #-20]
    21dc:	e3530040 	cmp	r3, #64	; 0x40
    21e0:	1affffed 	bne	219c <ee_write+0xa4>
    21e4:	e3a03000 	mov	r3, #0	; 0x0
    21e8:	e2433eff 	sub	r3, r3, #4080	; 0xff0
    21ec:	e5933000 	ldr	r3, [r3]
    21f0:	e50b3010 	str	r3, [fp, #-16]
    21f4:	e3e03efe 	mvn	r3, #4064	; 0xfe0
    21f8:	e243300b 	sub	r3, r3, #11	; 0xb
    21fc:	e51b2010 	ldr	r2, [fp, #-16]
    2200:	e5832000 	str	r2, [r3]
    2204:	e3a03032 	mov	r3, #50	; 0x32
    2208:	e50b3134 	str	r3, [fp, #-308]
    220c:	e3a0300e 	mov	r3, #14	; 0xe
    2210:	e50b3130 	str	r3, [fp, #-304]
    2214:	e3a0300e 	mov	r3, #14	; 0xe
    2218:	e50b312c 	str	r3, [fp, #-300]
    221c:	e59f20f4 	ldr	r2, [pc, #244]	; 2318 <.text+0x2318>
    2220:	e3e0313a 	mvn	r3, #-2147483634	; 0x8000000e
    2224:	e5823000 	str	r3, [r2]
    2228:	e59f30e8 	ldr	r3, [pc, #232]	; 2318 <.text+0x2318>
    222c:	e593c000 	ldr	ip, [r3]
    2230:	e24b3f4d 	sub	r3, fp, #308	; 0x134
    2234:	e24b2d05 	sub	r2, fp, #320	; 0x140
    2238:	e1a00003 	mov	r0, r3
    223c:	e1a01002 	mov	r1, r2
    2240:	e1a0e00f 	mov	lr, pc
    2244:	e12fff1c 	bx	ip
    2248:	e3a03033 	mov	r3, #51	; 0x33
    224c:	e50b3134 	str	r3, [fp, #-308]
    2250:	e51b3020 	ldr	r3, [fp, #-32]
    2254:	e3c330ff 	bic	r3, r3, #255	; 0xff
    2258:	e50b3130 	str	r3, [fp, #-304]
    225c:	e24b3e12 	sub	r3, fp, #288	; 0x120
    2260:	e50b312c 	str	r3, [fp, #-300]
    2264:	e3a03c01 	mov	r3, #256	; 0x100
    2268:	e50b3128 	str	r3, [fp, #-296]
    226c:	e3a03cea 	mov	r3, #59904	; 0xea00
    2270:	e2833060 	add	r3, r3, #96	; 0x60
    2274:	e50b3124 	str	r3, [fp, #-292]
    2278:	e59f2098 	ldr	r2, [pc, #152]	; 2318 <.text+0x2318>
    227c:	e3e0313a 	mvn	r3, #-2147483634	; 0x8000000e
    2280:	e5823000 	str	r3, [r2]
    2284:	e59f308c 	ldr	r3, [pc, #140]	; 2318 <.text+0x2318>
    2288:	e593c000 	ldr	ip, [r3]
    228c:	e24b3f4d 	sub	r3, fp, #308	; 0x134
    2290:	e24b2d05 	sub	r2, fp, #320	; 0x140
    2294:	e1a00003 	mov	r0, r3
    2298:	e1a01002 	mov	r1, r2
    229c:	e1a0e00f 	mov	lr, pc
    22a0:	e12fff1c 	bx	ip
    22a4:	e3a03038 	mov	r3, #56	; 0x38
    22a8:	e50b3134 	str	r3, [fp, #-308]
    22ac:	e51b301c 	ldr	r3, [fp, #-28]
    22b0:	e50b3130 	str	r3, [fp, #-304]
    22b4:	e51b3020 	ldr	r3, [fp, #-32]
    22b8:	e50b312c 	str	r3, [fp, #-300]
    22bc:	e3a03c01 	mov	r3, #256	; 0x100
    22c0:	e50b3128 	str	r3, [fp, #-296]
    22c4:	e59f204c 	ldr	r2, [pc, #76]	; 2318 <.text+0x2318>
    22c8:	e3e0313a 	mvn	r3, #-2147483634	; 0x8000000e
    22cc:	e5823000 	str	r3, [r2]
    22d0:	e59f3040 	ldr	r3, [pc, #64]	; 2318 <.text+0x2318>
    22d4:	e593c000 	ldr	ip, [r3]
    22d8:	e24b3f4d 	sub	r3, fp, #308	; 0x134
    22dc:	e24b2d05 	sub	r2, fp, #320	; 0x140
    22e0:	e1a00003 	mov	r0, r3
    22e4:	e1a01002 	mov	r1, r2
    22e8:	e1a0e00f 	mov	lr, pc
    22ec:	e12fff1c 	bx	ip
    22f0:	e3a03000 	mov	r3, #0	; 0x0
    22f4:	e2433eff 	sub	r3, r3, #4080	; 0xff0
    22f8:	e51b2010 	ldr	r2, [fp, #-16]
    22fc:	e5832000 	str	r2, [r3]
    2300:	e51b2140 	ldr	r2, [fp, #-320]
    2304:	e51b3148 	ldr	r3, [fp, #-328]
    2308:	e5832000 	str	r2, [r3]
    230c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2310:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2314:	e12fff1e 	bx	lr
    2318:	40000fc4 	andmi	r0, r0, r4, asr #31

0000231c <ee_read>:
    231c:	e1a0c00d 	mov	ip, sp
    2320:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2324:	e24cb004 	sub	fp, ip, #4	; 0x4
    2328:	e24dd00c 	sub	sp, sp, #12	; 0xc
    232c:	e50b0014 	str	r0, [fp, #-20]
    2330:	e50b1018 	str	r1, [fp, #-24]
    2334:	eb000053 	bl	2488 <ee_locate>
    2338:	e1a03000 	mov	r3, r0
    233c:	e50b3010 	str	r3, [fp, #-16]
    2340:	e51b3010 	ldr	r3, [fp, #-16]
    2344:	e353090e 	cmp	r3, #229376	; 0x38000
    2348:	1a000003 	bne	235c <ee_read+0x40>
    234c:	e51b2018 	ldr	r2, [fp, #-24]
    2350:	e3a03f7d 	mov	r3, #500	; 0x1f4
    2354:	e5823000 	str	r3, [r2]
    2358:	ea000010 	b	23a0 <ee_read+0x84>
    235c:	e51b3018 	ldr	r3, [fp, #-24]
    2360:	e3a02000 	mov	r2, #0	; 0x0
    2364:	e5832000 	str	r2, [r3]
    2368:	e51b3010 	ldr	r3, [fp, #-16]
    236c:	e3730001 	cmn	r3, #1	; 0x1
    2370:	1a000005 	bne	238c <ee_read+0x70>
    2374:	e51b3018 	ldr	r3, [fp, #-24]
    2378:	e2832004 	add	r2, r3, #4	; 0x4
    237c:	e3a03bff 	mov	r3, #261120	; 0x3fc00
    2380:	e2833c03 	add	r3, r3, #768	; 0x300
    2384:	e5823000 	str	r3, [r2]
    2388:	ea000004 	b	23a0 <ee_read+0x84>
    238c:	e51b3018 	ldr	r3, [fp, #-24]
    2390:	e2832004 	add	r2, r3, #4	; 0x4
    2394:	e51b3010 	ldr	r3, [fp, #-16]
    2398:	e2433c01 	sub	r3, r3, #256	; 0x100
    239c:	e5823000 	str	r3, [r2]
    23a0:	e24bd00c 	sub	sp, fp, #12	; 0xc
    23a4:	e89d6800 	ldmia	sp, {fp, sp, lr}
    23a8:	e12fff1e 	bx	lr

000023ac <ee_readn>:
    23ac:	e1a0c00d 	mov	ip, sp
    23b0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    23b4:	e24cb004 	sub	fp, ip, #4	; 0x4
    23b8:	e24dd008 	sub	sp, sp, #8	; 0x8
    23bc:	e50b0010 	str	r0, [fp, #-16]
    23c0:	e50b1014 	str	r1, [fp, #-20]
    23c4:	e51b3010 	ldr	r3, [fp, #-16]
    23c8:	e3530080 	cmp	r3, #128	; 0x80
    23cc:	9a000004 	bls	23e4 <ee_readn+0x38>
    23d0:	e51b2014 	ldr	r2, [fp, #-20]
    23d4:	e3a03f7d 	mov	r3, #500	; 0x1f4
    23d8:	e2833002 	add	r3, r3, #2	; 0x2
    23dc:	e5823000 	str	r3, [r2]
    23e0:	ea000008 	b	2408 <ee_readn+0x5c>
    23e4:	e51b2014 	ldr	r2, [fp, #-20]
    23e8:	e3a03000 	mov	r3, #0	; 0x0
    23ec:	e5823000 	str	r3, [r2]
    23f0:	e51b3014 	ldr	r3, [fp, #-20]
    23f4:	e2832004 	add	r2, r3, #4	; 0x4
    23f8:	e51b3010 	ldr	r3, [fp, #-16]
    23fc:	e1a03403 	mov	r3, r3, lsl #8
    2400:	e283390e 	add	r3, r3, #229376	; 0x38000
    2404:	e5823000 	str	r3, [r2]
    2408:	e24bd00c 	sub	sp, fp, #12	; 0xc
    240c:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2410:	e12fff1e 	bx	lr

00002414 <ee_count>:
    2414:	e1a0c00d 	mov	ip, sp
    2418:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    241c:	e24cb004 	sub	fp, ip, #4	; 0x4
    2420:	e24dd00c 	sub	sp, sp, #12	; 0xc
    2424:	e50b0014 	str	r0, [fp, #-20]
    2428:	e50b1018 	str	r1, [fp, #-24]
    242c:	e51b2018 	ldr	r2, [fp, #-24]
    2430:	e3a03000 	mov	r3, #0	; 0x0
    2434:	e5823000 	str	r3, [r2]
    2438:	eb000012 	bl	2488 <ee_locate>
    243c:	e1a03000 	mov	r3, r0
    2440:	e50b3010 	str	r3, [fp, #-16]
    2444:	e51b3010 	ldr	r3, [fp, #-16]
    2448:	e3730001 	cmn	r3, #1	; 0x1
    244c:	1a000001 	bne	2458 <ee_count+0x44>
    2450:	e3a03701 	mov	r3, #262144	; 0x40000
    2454:	e50b3010 	str	r3, [fp, #-16]
    2458:	e51b3018 	ldr	r3, [fp, #-24]
    245c:	e2831004 	add	r1, r3, #4	; 0x4
    2460:	e51b3010 	ldr	r3, [fp, #-16]
    2464:	e243390e 	sub	r3, r3, #229376	; 0x38000
    2468:	e28320ff 	add	r2, r3, #255	; 0xff
    246c:	e3530000 	cmp	r3, #0	; 0x0
    2470:	b1a03002 	movlt	r3, r2
    2474:	e1a03443 	mov	r3, r3, asr #8
    2478:	e5813000 	str	r3, [r1]
    247c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2480:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2484:	e12fff1e 	bx	lr

00002488 <ee_locate>:
    2488:	e1a0c00d 	mov	ip, sp
    248c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2490:	e24cb004 	sub	fp, ip, #4	; 0x4
    2494:	e24dd018 	sub	sp, sp, #24	; 0x18
    2498:	e3a0390e 	mov	r3, #229376	; 0x38000
    249c:	e50b3020 	str	r3, [fp, #-32]
    24a0:	e51b3020 	ldr	r3, [fp, #-32]
    24a4:	e5d33000 	ldrb	r3, [r3]
    24a8:	e35300ff 	cmp	r3, #255	; 0xff
    24ac:	1a000002 	bne	24bc <ee_locate+0x34>
    24b0:	e51b3020 	ldr	r3, [fp, #-32]
    24b4:	e50b3024 	str	r3, [fp, #-36]
    24b8:	ea00003f 	b	25bc <ee_locate+0x134>
    24bc:	e3a03701 	mov	r3, #262144	; 0x40000
    24c0:	e50b3018 	str	r3, [fp, #-24]
    24c4:	e51b3018 	ldr	r3, [fp, #-24]
    24c8:	e2433c01 	sub	r3, r3, #256	; 0x100
    24cc:	e5d33000 	ldrb	r3, [r3]
    24d0:	e35300aa 	cmp	r3, #170	; 0xaa
    24d4:	1a000002 	bne	24e4 <ee_locate+0x5c>
    24d8:	e3e03000 	mvn	r3, #0	; 0x0
    24dc:	e50b3024 	str	r3, [fp, #-36]
    24e0:	ea000035 	b	25bc <ee_locate+0x134>
    24e4:	e51b2018 	ldr	r2, [fp, #-24]
    24e8:	e51b3020 	ldr	r3, [fp, #-32]
    24ec:	e0633002 	rsb	r3, r3, r2
    24f0:	e50b3014 	str	r3, [fp, #-20]
    24f4:	e3a030ff 	mov	r3, #255	; 0xff
    24f8:	e50b3010 	str	r3, [fp, #-16]
    24fc:	ea000029 	b	25a8 <ee_locate+0x120>
    2500:	e51b2018 	ldr	r2, [fp, #-24]
    2504:	e51b3020 	ldr	r3, [fp, #-32]
    2508:	e0823003 	add	r3, r2, r3
    250c:	e1a030a3 	mov	r3, r3, lsr #1
    2510:	e50b301c 	str	r3, [fp, #-28]
    2514:	e51b201c 	ldr	r2, [fp, #-28]
    2518:	e51b3010 	ldr	r3, [fp, #-16]
    251c:	e0023003 	and	r3, r2, r3
    2520:	e3530000 	cmp	r3, #0	; 0x0
    2524:	0a000013 	beq	2578 <ee_locate+0xf0>
    2528:	e51b3018 	ldr	r3, [fp, #-24]
    252c:	e2433c01 	sub	r3, r3, #256	; 0x100
    2530:	e5d33000 	ldrb	r3, [r3]
    2534:	e35300ff 	cmp	r3, #255	; 0xff
    2538:	1a000003 	bne	254c <ee_locate+0xc4>
    253c:	e51b3018 	ldr	r3, [fp, #-24]
    2540:	e2433c01 	sub	r3, r3, #256	; 0x100
    2544:	e50b3018 	str	r3, [fp, #-24]
    2548:	ea000002 	b	2558 <ee_locate+0xd0>
    254c:	e51b3020 	ldr	r3, [fp, #-32]
    2550:	e2833c01 	add	r3, r3, #256	; 0x100
    2554:	e50b3020 	str	r3, [fp, #-32]
    2558:	e51b2018 	ldr	r2, [fp, #-24]
    255c:	e51b3020 	ldr	r3, [fp, #-32]
    2560:	e0823003 	add	r3, r2, r3
    2564:	e1a030a3 	mov	r3, r3, lsr #1
    2568:	e50b301c 	str	r3, [fp, #-28]
    256c:	e51b3014 	ldr	r3, [fp, #-20]
    2570:	e2433c01 	sub	r3, r3, #256	; 0x100
    2574:	e50b3014 	str	r3, [fp, #-20]
    2578:	e51b301c 	ldr	r3, [fp, #-28]
    257c:	e5d33000 	ldrb	r3, [r3]
    2580:	e35300ff 	cmp	r3, #255	; 0xff
    2584:	1a000002 	bne	2594 <ee_locate+0x10c>
    2588:	e51b301c 	ldr	r3, [fp, #-28]
    258c:	e50b3018 	str	r3, [fp, #-24]
    2590:	ea000001 	b	259c <ee_locate+0x114>
    2594:	e51b301c 	ldr	r3, [fp, #-28]
    2598:	e50b3020 	str	r3, [fp, #-32]
    259c:	e51b3014 	ldr	r3, [fp, #-20]
    25a0:	e1a030a3 	mov	r3, r3, lsr #1
    25a4:	e50b3014 	str	r3, [fp, #-20]
    25a8:	e51b3014 	ldr	r3, [fp, #-20]
    25ac:	e3530c01 	cmp	r3, #256	; 0x100
    25b0:	1affffd2 	bne	2500 <ee_locate+0x78>
    25b4:	e51b3018 	ldr	r3, [fp, #-24]
    25b8:	e50b3024 	str	r3, [fp, #-36]
    25bc:	e51b3024 	ldr	r3, [fp, #-36]
    25c0:	e1a00003 	mov	r0, r3
    25c4:	e24bd00c 	sub	sp, fp, #12	; 0xc
    25c8:	e89d6800 	ldmia	sp, {fp, sp, lr}
    25cc:	e12fff1e 	bx	lr

000025d0 <init>:
#include "ssp.h"
#include "adc.h"

void init(void)
{
    25d0:	e1a0c00d 	mov	ip, sp
    25d4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    25d8:	e24cb004 	sub	fp, ip, #4	; 0x4
  MAMCR = 0x02;  //Memory Acceleration enabled
    25dc:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    25e0:	e283397f 	add	r3, r3, #2080768	; 0x1fc000
    25e4:	e3a02002 	mov	r2, #2	; 0x2
    25e8:	e5832000 	str	r2, [r3]
  MAMTIM = 0x04;
    25ec:	e3a0324e 	mov	r3, #-536870908	; 0xe0000004
    25f0:	e283397f 	add	r3, r3, #2080768	; 0x1fc000
    25f4:	e3a02004 	mov	r2, #4	; 0x4
    25f8:	e5832000 	str	r2, [r3]
  VPBDIV = 0x01;  //0x01: peripheral frequency == cpu frequency, 0x00: per. freq. = crystal freq.
    25fc:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    2600:	e283397f 	add	r3, r3, #2080768	; 0x1fc000
    2604:	e2833c01 	add	r3, r3, #256	; 0x100
    2608:	e3a02001 	mov	r2, #1	; 0x1
    260c:	e5832000 	str	r2, [r3]
  pll_init();
    2610:	eb0000f2 	bl	29e0 <pll_init>
  pll_feed();
    2614:	eb000101 	bl	2a20 <pll_feed>
  init_ports();
    2618:	eb00003a 	bl	2708 <init_ports>
  UARTInitialize(115200);	//debug / command
    261c:	e3a00907 	mov	r0, #114688	; 0x1c000
    2620:	e2800c02 	add	r0, r0, #512	; 0x200
    2624:	eb00062a 	bl	3ed4 <UARTInitialize>
  UART1Initialize(57600);	//57600 Servo / GPS, 38400 "indoor GPS"
    2628:	e3a00ce1 	mov	r0, #57600	; 0xe100
    262c:	eb000653 	bl	3f80 <UART1Initialize>
  init_spi();
    2630:	eb0000b5 	bl	290c <init_spi>
  init_spi1();
    2634:	eb0000c2 	bl	2944 <init_spi1>
  init_timer0();
    2638:	eb00005c 	bl	27b0 <init_timer0>
//  I2CInit(I2CMASTER);
  PWM_Init();
    263c:	eb000085 	bl	2858 <PWM_Init>
  ADCInit(ADC_CLK);
    2640:	e3a0093d 	mov	r0, #999424	; 0xf4000
    2644:	e2800d09 	add	r0, r0, #576	; 0x240
    2648:	eb000df6 	bl	5e28 <ADCInit>
  init_interrupts();
    264c:	eb000002 	bl	265c <init_interrupts>
 }
    2650:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2654:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2658:	e12fff1e 	bx	lr

0000265c <init_interrupts>:

void init_interrupts(void)
{
    265c:	e1a0c00d 	mov	ip, sp
    2660:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2664:	e24cb004 	sub	fp, ip, #4	; 0x4
  init_VIC();
    2668:	eb000d42 	bl	5b78 <init_VIC>

  //Timer0 interrupt
  install_irq( TIMER0_INT, (void *) timer0ISR );
    266c:	e3a00004 	mov	r0, #4	; 0x4
    2670:	e59f1080 	ldr	r1, [pc, #128]	; 26f8 <.text+0x26f8>
    2674:	eb000d70 	bl	5c3c <install_irq>

  //UART1 interrupt
  install_irq( UART1_INT, (void *) uart1ISR );
    2678:	e3a00007 	mov	r0, #7	; 0x7
    267c:	e59f1078 	ldr	r1, [pc, #120]	; 26fc <.text+0x26fc>
    2680:	eb000d6d 	bl	5c3c <install_irq>
  U1IER = 3; //=3; enable THRE and RX interrupt
    2684:	e3a0324e 	mov	r3, #-536870908	; 0xe0000004
    2688:	e2833801 	add	r3, r3, #65536	; 0x10000
    268c:	e3a02003 	mov	r2, #3	; 0x3
    2690:	e5832000 	str	r2, [r3]

  //UART0 interrupt
  install_irq( UART0_INT, (void *) uart0ISR );
    2694:	e3a00006 	mov	r0, #6	; 0x6
    2698:	e59f1060 	ldr	r1, [pc, #96]	; 2700 <.text+0x2700>
    269c:	eb000d66 	bl	5c3c <install_irq>
  U0IER = 3; //=3; enable THRE and RX interrupt
    26a0:	e3a03903 	mov	r3, #49152	; 0xc000
    26a4:	e283324e 	add	r3, r3, #-536870908	; 0xe0000004
    26a8:	e3a02003 	mov	r2, #3	; 0x3
    26ac:	e5832000 	str	r2, [r3]

  //I2C0 interrupt
//  install_irq( I2C0_INT, (void *) I2C0MasterHandler );
//  I20CONSET = I2CONSET_I2EN;

  //SSP interrupt
  install_irq( SPI1_INT, (void *) SSPHandler );
    26b0:	e3a0000b 	mov	r0, #11	; 0xb
    26b4:	e59f1048 	ldr	r1, [pc, #72]	; 2704 <.text+0x2704>
    26b8:	eb000d5f 	bl	5c3c <install_irq>
  /* Set SSPINMS registers to enable interrupts */
  /* enable all interrupts, Rx overrun, Rx timeout, RX FIFO half full int,
  TX FIFO half empty int */
  SSPIMSC = SSPIMSC_TXIM | SSPIMSC_RXIM | SSPIMSC_RORIM;// | SSPIMSC_RTIM;
    26bc:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    26c0:	e283391a 	add	r3, r3, #425984	; 0x68000
    26c4:	e2833014 	add	r3, r3, #20	; 0x14
    26c8:	e3a0200d 	mov	r2, #13	; 0xd
    26cc:	e5832000 	str	r2, [r3]
  /* SSP Enabled */
  SSPCR1 |= SSPCR1_SSE;
    26d0:	e3a0224e 	mov	r2, #-536870908	; 0xe0000004
    26d4:	e282291a 	add	r2, r2, #425984	; 0x68000
    26d8:	e3a0324e 	mov	r3, #-536870908	; 0xe0000004
    26dc:	e283391a 	add	r3, r3, #425984	; 0x68000
    26e0:	e5933000 	ldr	r3, [r3]
    26e4:	e3833002 	orr	r3, r3, #2	; 0x2
    26e8:	e5823000 	str	r3, [r2]
}
    26ec:	e24bd00c 	sub	sp, fp, #12	; 0xc
    26f0:	e89d6800 	ldmia	sp, {fp, sp, lr}
    26f4:	e12fff1e 	bx	lr
    26f8:	000017a0 	andeq	r1, r0, r0, lsr #15
    26fc:	00003878 	andeq	r3, r0, r8, ror r8
    2700:	00003dc8 	andeq	r3, r0, r8, asr #27
    2704:	000060f4 	streqd	r6, [r0], -r4

00002708 <init_ports>:


void init_ports(void)
{
    2708:	e1a0c00d 	mov	ip, sp
    270c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2710:	e24cb004 	sub	fp, ip, #4	; 0x4
/* PINSEL0
 *
 * PORT0:
 * P0.0: TXD0 -> 01
 * P0.1: RXD0 -> 01
 * P0.2: SCO0 -> 01
 * P0.3: SDA0 -> 01
 * Byte0_sel = 0b01010101 = 0x55
 *
 * P0.4: SCK0 -> 01
 * P0.5: MISO0 -> 01
 * P0.6: MOSI0 -> 01
 * P0.7: LL_NCS/IO_out -> 00
 * or: PWM2 -> 10
 * Byte1_sel = 0x00010101 = 0x15
 * Byte0_io_dir = 0x80
 *
 * P0.8: TXD1 -> 01
 * P0.9: RXD1 -> 01
 * P0.10: IO_in -> 00
 * P0.11: SCL1 -> 11
 * or Falcon8: IO_out -> 00
 * Byte2_sel = 0b11000101 = 0xC5
 *
 * P0.12: IO_in -> 00
 * P0.13: IO_in -> 00
 * P0.14: SDA1 -> 11
 * or IO_out (CS SD-Card) => SD_Logging
 * P0.15: IO_in -> 00
 * Byte3_sel = 0b00110000 = 0x30
 * Byte1_io_dir = 0x00
 * or SD_Logging => Byte1_io_dir=0x40
 */

 	PINSEL0=0x30C51555;
    2714:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    2718:	e283390b 	add	r3, r3, #180224	; 0x2c000
    271c:	e59f2084 	ldr	r2, [pc, #132]	; 27a8 <.text+0x27a8>
    2720:	e5832000 	str	r2, [r3]

 /* PINSEL1
  *
  * P0.16: IO_in -> 00
  * P0.17: SCK1 -> 10
  * P0.18: MISO1 -> 10
  * P0.19: MOSI1-> 10
  * Byte0: 0b10101000 = 0xA8
  *
  * P0.20: SSEL1 -> 10
  * P0.21: PWM5 -> 01
  * P0.22: IO_in -> 00
  * P0.23: IO_in -> 00
  * Byte1: 0b00000110 = 0x06
  * Byte2_io_dir: 0x30 //0x11
  *
  * P0.24: 00
  * P0.25: VOLTAGE_2: -> 01
  * or IO_in (FALCON) -> 00
  * P0.26: 00
  * P0.27: 00
  * Byte2: 0b00000100 = 0x04
  *
  * P0.28: CURRENT_2: -> 01
  * P0.29: VOLTAGE_1: -> 01
  * P0.30: CURRENT_1: -> 01
  * P0.31: IO_in -> 00
  * Byte3: 0b00010101 = 0x15
  * Byte3_io_dir=0x00
  */
 PINSEL1 = 0x150406A8;
    2724:	e3a0324e 	mov	r3, #-536870908	; 0xe0000004
    2728:	e283390b 	add	r3, r3, #180224	; 0x2c000
    272c:	e59f2078 	ldr	r2, [pc, #120]	; 27ac <.text+0x27ac>
    2730:	e5832000 	str	r2, [r3]

 PINSEL2 = 0x00000004;
    2734:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    2738:	e283390b 	add	r3, r3, #180224	; 0x2c000
    273c:	e2833014 	add	r3, r3, #20	; 0x14
    2740:	e3a02004 	mov	r2, #4	; 0x4
    2744:	e5832000 	str	r2, [r3]

 IODIR0 = 0x0030B480;
    2748:	e3a0228e 	mov	r2, #-536870904	; 0xe0000008
    274c:	e282290a 	add	r2, r2, #163840	; 0x28000
    2750:	e3a039c2 	mov	r3, #3178496	; 0x308000
    2754:	e2833dd2 	add	r3, r3, #13440	; 0x3480
    2758:	e5823000 	str	r3, [r2]

 IOSET0 = (1<<EXT_NCS)|(1<<11); //all nCS high
    275c:	e3a0324e 	mov	r3, #-536870908	; 0xe0000004
    2760:	e283390a 	add	r3, r3, #163840	; 0x28000
    2764:	e3a02d22 	mov	r2, #2176	; 0x880
    2768:	e5832000 	str	r2, [r3]
 //IOSET0 = (1<<LL_nCS);	//CS LL_Controller

/* P1.16: IO_1/IO_out	=> FET for camera power supply
 * P1.17: Beeper/IO_out
 * .
 * .
 * P1.24: LED1/IO_out
 * P1.25: LED2/IO_out
 *
 */

 IODIR1 = 0x03030000;
    276c:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    2770:	e282290a 	add	r2, r2, #163840	; 0x28000
    2774:	e2822018 	add	r2, r2, #24	; 0x18
    2778:	e3a03403 	mov	r3, #50331648	; 0x3000000
    277c:	e2833803 	add	r3, r3, #196608	; 0x30000
    2780:	e5823000 	str	r3, [r2]
 IOSET1 = ((1<<24)|(1<<16)); //turn off LED1, turn beeper off
    2784:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    2788:	e282290a 	add	r2, r2, #163840	; 0x28000
    278c:	e2822014 	add	r2, r2, #20	; 0x14
    2790:	e3a03401 	mov	r3, #16777216	; 0x1000000
    2794:	e2833801 	add	r3, r3, #65536	; 0x10000
    2798:	e5823000 	str	r3, [r2]

}
    279c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    27a0:	e89d6800 	ldmia	sp, {fp, sp, lr}
    27a4:	e12fff1e 	bx	lr
    27a8:	30c51555 	sbccc	r1, r5, r5, asr r5
    27ac:	150406a8 	strne	r0, [r4, #-1704]

000027b0 <init_timer0>:

void init_timer0(void)
{
    27b0:	e1a0c00d 	mov	ip, sp
    27b4:	e92dd810 	stmdb	sp!, {r4, fp, ip, lr, pc}
    27b8:	e24cb004 	sub	fp, ip, #4	; 0x4
  T0TC=0;
    27bc:	e3a03901 	mov	r3, #16384	; 0x4000
    27c0:	e283328e 	add	r3, r3, #-536870904	; 0xe0000008
    27c4:	e3a02000 	mov	r2, #0	; 0x0
    27c8:	e5832000 	str	r2, [r3]
  T0TCR=0x0;    //Reset timer0
    27cc:	e3a03901 	mov	r3, #16384	; 0x4000
    27d0:	e283324e 	add	r3, r3, #-536870908	; 0xe0000004
    27d4:	e3a02000 	mov	r2, #0	; 0x0
    27d8:	e5832000 	str	r2, [r3]
  T0MCR=0x3;    //Interrupt on match MR0 and reset counter
    27dc:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    27e0:	e2833901 	add	r3, r3, #16384	; 0x4000
    27e4:	e2833014 	add	r3, r3, #20	; 0x14
    27e8:	e3a02003 	mov	r2, #3	; 0x3
    27ec:	e5832000 	str	r2, [r3]
  T0PR=0;
    27f0:	e3a03901 	mov	r3, #16384	; 0x4000
    27f4:	e28332ce 	add	r3, r3, #-536870900	; 0xe000000c
    27f8:	e3a02000 	mov	r2, #0	; 0x0
    27fc:	e5832000 	str	r2, [r3]
  T0PC=0;     //Prescale Counter = 0
    2800:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    2804:	e2833901 	add	r3, r3, #16384	; 0x4000
    2808:	e2833010 	add	r3, r3, #16	; 0x10
    280c:	e3a02000 	mov	r2, #0	; 0x0
    2810:	e5832000 	str	r2, [r3]
  T0MR0=peripheralClockFrequency()/ControllerCyclesPerSecond; // /200 => 200 Hz Period
    2814:	e3a0420e 	mov	r4, #-536870912	; 0xe0000000
    2818:	e2844901 	add	r4, r4, #16384	; 0x4000
    281c:	e2844018 	add	r4, r4, #24	; 0x18
    2820:	eb000096 	bl	2a80 <peripheralClockFrequency>
    2824:	e1a02000 	mov	r2, r0
    2828:	e59f3024 	ldr	r3, [pc, #36]	; 2854 <.text+0x2854>
    282c:	e0831392 	umull	r1, r3, r2, r3
    2830:	e1a03323 	mov	r3, r3, lsr #6
    2834:	e5843000 	str	r3, [r4]
  T0TCR=0x1;   //Set timer0
    2838:	e3a03901 	mov	r3, #16384	; 0x4000
    283c:	e283324e 	add	r3, r3, #-536870908	; 0xe0000004
    2840:	e3a02001 	mov	r2, #1	; 0x1
    2844:	e5832000 	str	r2, [r3]

}
    2848:	e24bd010 	sub	sp, fp, #16	; 0x10
    284c:	e89d6810 	ldmia	sp, {r4, fp, sp, lr}
    2850:	e12fff1e 	bx	lr
    2854:	10624dd3 	ldrned	r4, [r2], #-211

00002858 <PWM_Init>:

void PWM_Init( void )
{
    2858:	e1a0c00d 	mov	ip, sp
    285c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2860:	e24cb004 	sub	fp, ip, #4	; 0x4
  //  match_counter = 0;
  //  PINSEL0 = 0x000A800A;	/* set GPIOs for all PWMs */
  //  PINSEL1 = 0x00000400;
    PWMTCR = TCR_RESET;		/* Counter Reset */
    2864:	e3a0324e 	mov	r3, #-536870908	; 0xe0000004
    2868:	e2833905 	add	r3, r3, #81920	; 0x14000
    286c:	e3a02002 	mov	r2, #2	; 0x2
    2870:	e5832000 	str	r2, [r3]

    PWMPR = 0x00;		/* count frequency:Fpclk */
    2874:	e3a032ce 	mov	r3, #-536870900	; 0xe000000c
    2878:	e2833905 	add	r3, r3, #81920	; 0x14000
    287c:	e3a02000 	mov	r2, #0	; 0x0
    2880:	e5832000 	str	r2, [r3]
    PWMMCR = PWMMR0R;	/* interrupt on PWMMR0, reset on PWMMR0, reset
    2884:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    2888:	e2833905 	add	r3, r3, #81920	; 0x14000
    288c:	e2833014 	add	r3, r3, #20	; 0x14
    2890:	e3a02002 	mov	r2, #2	; 0x2
    2894:	e5832000 	str	r2, [r3]
				TC if PWM0 matches */
    PWMMR0 = 1179648 ;
    2898:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    289c:	e2833905 	add	r3, r3, #81920	; 0x14000
    28a0:	e2833018 	add	r3, r3, #24	; 0x18
    28a4:	e3a02812 	mov	r2, #1179648	; 0x120000
    28a8:	e5832000 	str	r2, [r3]
    PWMMR5 = 88470;
    28ac:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    28b0:	e2822905 	add	r2, r2, #81920	; 0x14000
    28b4:	e2822044 	add	r2, r2, #68	; 0x44
    28b8:	e3a03b56 	mov	r3, #88064	; 0x15800
    28bc:	e2833f65 	add	r3, r3, #404	; 0x194
    28c0:	e2833002 	add	r3, r3, #2	; 0x2
    28c4:	e5823000 	str	r3, [r2]

    /* all PWM latch enabled */
    PWMLER = LER5_EN;
    28c8:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    28cc:	e2833905 	add	r3, r3, #81920	; 0x14000
    28d0:	e2833050 	add	r3, r3, #80	; 0x50
    28d4:	e3a02020 	mov	r2, #32	; 0x20
    28d8:	e5832000 	str	r2, [r3]

        /* All single edge, all enable */
    PWMPCR = PWMENA1 | PWMENA2 | PWMENA3 | PWMENA4 | PWMENA5 | PWMENA6;
    28dc:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    28e0:	e2833905 	add	r3, r3, #81920	; 0x14000
    28e4:	e283304c 	add	r3, r3, #76	; 0x4c
    28e8:	e3a02c7e 	mov	r2, #32256	; 0x7e00
    28ec:	e5832000 	str	r2, [r3]
    PWMTCR = TCR_CNT_EN | TCR_PWM_EN;	/* counter enable, PWM enable */
    28f0:	e3a0324e 	mov	r3, #-536870908	; 0xe0000004
    28f4:	e2833905 	add	r3, r3, #81920	; 0x14000
    28f8:	e3a02009 	mov	r2, #9	; 0x9
    28fc:	e5832000 	str	r2, [r3]
}
    2900:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2904:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2908:	e12fff1e 	bx	lr

0000290c <init_spi>:


void init_spi(void)
{
    290c:	e1a0c00d 	mov	ip, sp
    2910:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2914:	e24cb004 	sub	fp, ip, #4	; 0x4
  S0SPCCR=0x04; //30 clock-cycles (~60MHz) = 1 SPI cycle => SPI @ 2MHz
    2918:	e3a032ce 	mov	r3, #-536870900	; 0xe000000c
    291c:	e2833802 	add	r3, r3, #131072	; 0x20000
    2920:	e3a02004 	mov	r2, #4	; 0x4
    2924:	e5832000 	str	r2, [r3]
  S0SPCR=0x20;  //LPC is Master
    2928:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    292c:	e2833802 	add	r3, r3, #131072	; 0x20000
    2930:	e3a02020 	mov	r2, #32	; 0x20
    2934:	e5832000 	str	r2, [r3]
}
    2938:	e24bd00c 	sub	sp, fp, #12	; 0xc
    293c:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2940:	e12fff1e 	bx	lr

00002944 <init_spi1>:

void init_spi1(void)
{
    2944:	e1a0c00d 	mov	ip, sp
    2948:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    294c:	e24cb004 	sub	fp, ip, #4	; 0x4
    2950:	e24dd004 	sub	sp, sp, #4	; 0x4
	unsigned char i, Dummy;

    /* Set DSS data to 8-bit, Frame format SPI, CPOL = 0, CPHA = 0, and SCR is 3 */
    SSPCR0 = 0x040F;
    2954:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    2958:	e282291a 	add	r2, r2, #425984	; 0x68000
    295c:	e3a03b01 	mov	r3, #1024	; 0x400
    2960:	e283300f 	add	r3, r3, #15	; 0xf
    2964:	e5823000 	str	r3, [r2]

    /* SSPCPSR clock prescale register, master mode, minimum divisor is 0x02 */
    SSPCPSR = 0x1B;
    2968:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    296c:	e283391a 	add	r3, r3, #425984	; 0x68000
    2970:	e2833010 	add	r3, r3, #16	; 0x10
    2974:	e3a0201b 	mov	r2, #27	; 0x1b
    2978:	e5832000 	str	r2, [r3]

    for ( i = 0; i < FIFOSIZE; i++ )
    297c:	e3a03000 	mov	r3, #0	; 0x0
    2980:	e54b300e 	strb	r3, [fp, #-14]
    2984:	ea000006 	b	29a4 <init_spi1+0x60>
    {
	Dummy = SSPDR;		/* clear the RxFIFO */
    2988:	e3a0328e 	mov	r3, #-536870904	; 0xe0000008
    298c:	e283391a 	add	r3, r3, #425984	; 0x68000
    2990:	e5933000 	ldr	r3, [r3]
    2994:	e54b300d 	strb	r3, [fp, #-13]
    2998:	e55b300e 	ldrb	r3, [fp, #-14]
    299c:	e2833001 	add	r3, r3, #1	; 0x1
    29a0:	e54b300e 	strb	r3, [fp, #-14]
    29a4:	e55b300e 	ldrb	r3, [fp, #-14]
    29a8:	e3530007 	cmp	r3, #7	; 0x7
    29ac:	9afffff5 	bls	2988 <init_spi1+0x44>
    }

    /*all ints deactivated*/
	SSPIMSC = 0;
    29b0:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    29b4:	e283391a 	add	r3, r3, #425984	; 0x68000
    29b8:	e2833014 	add	r3, r3, #20	; 0x14
    29bc:	e3a02000 	mov	r2, #0	; 0x0
    29c0:	e5832000 	str	r2, [r3]

    /* Device select as master, SSP Enabled */
    SSPCR1 = 0x00;// | SSPCR1_SSE;
    29c4:	e3a0324e 	mov	r3, #-536870908	; 0xe0000004
    29c8:	e283391a 	add	r3, r3, #425984	; 0x68000
    29cc:	e3a02000 	mov	r2, #0	; 0x0
    29d0:	e5832000 	str	r2, [r3]

    return;


}
    29d4:	e24bd00c 	sub	sp, fp, #12	; 0xc
    29d8:	e89d6800 	ldmia	sp, {fp, sp, lr}
    29dc:	e12fff1e 	bx	lr

000029e0 <pll_init>:

void pll_init(void)
{
    29e0:	e1a0c00d 	mov	ip, sp
    29e4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    29e8:	e24cb004 	sub	fp, ip, #4	; 0x4
  PLLCFG=0x23;    //0b00100011; => M=4,0690; P=2;
    29ec:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    29f0:	e283397f 	add	r3, r3, #2080768	; 0x1fc000
    29f4:	e2833084 	add	r3, r3, #132	; 0x84
    29f8:	e3a02023 	mov	r2, #35	; 0x23
    29fc:	e5832000 	str	r2, [r3]
  PLLCON=0x03;    //PLLE=1, PLLC=1 => PLL enabled as system clock
    2a00:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    2a04:	e283397f 	add	r3, r3, #2080768	; 0x1fc000
    2a08:	e2833080 	add	r3, r3, #128	; 0x80
    2a0c:	e3a02003 	mov	r2, #3	; 0x3
    2a10:	e5832000 	str	r2, [r3]
}
    2a14:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2a18:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2a1c:	e12fff1e 	bx	lr

00002a20 <pll_feed>:

void pll_feed(void)
{
    2a20:	e1a0c00d 	mov	ip, sp
    2a24:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2a28:	e24cb004 	sub	fp, ip, #4	; 0x4
  PLLFEED=0xAA;
    2a2c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    2a30:	e283397f 	add	r3, r3, #2080768	; 0x1fc000
    2a34:	e283308c 	add	r3, r3, #140	; 0x8c
    2a38:	e3a020aa 	mov	r2, #170	; 0xaa
    2a3c:	e5832000 	str	r2, [r3]
  PLLFEED=0x55;
    2a40:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    2a44:	e283397f 	add	r3, r3, #2080768	; 0x1fc000
    2a48:	e283308c 	add	r3, r3, #140	; 0x8c
    2a4c:	e3a02055 	mov	r2, #85	; 0x55
    2a50:	e5832000 	str	r2, [r3]
}
    2a54:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2a58:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2a5c:	e12fff1e 	bx	lr

00002a60 <processorClockFrequency>:

unsigned int processorClockFrequency(void)
{
    2a60:	e1a0c00d 	mov	ip, sp
    2a64:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2a68:	e24cb004 	sub	fp, ip, #4	; 0x4
  return 58982400;
    2a6c:	e3a037e1 	mov	r3, #58982400	; 0x3840000
}
    2a70:	e1a00003 	mov	r0, r3
    2a74:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2a78:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2a7c:	e12fff1e 	bx	lr

00002a80 <peripheralClockFrequency>:

unsigned int peripheralClockFrequency(void)
{
    2a80:	e1a0c00d 	mov	ip, sp
    2a84:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2a88:	e24cb004 	sub	fp, ip, #4	; 0x4
    2a8c:	e24dd008 	sub	sp, sp, #8	; 0x8
  unsigned int divider;
  switch (VPBDIV & 3)
    2a90:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    2a94:	e283397f 	add	r3, r3, #2080768	; 0x1fc000
    2a98:	e2833c01 	add	r3, r3, #256	; 0x100
    2a9c:	e5933000 	ldr	r3, [r3]
    2aa0:	e2033003 	and	r3, r3, #3	; 0x3
    2aa4:	e50b3014 	str	r3, [fp, #-20]
    2aa8:	e51b3014 	ldr	r3, [fp, #-20]
    2aac:	e3530001 	cmp	r3, #1	; 0x1
    2ab0:	0a000009 	beq	2adc <peripheralClockFrequency+0x5c>
    2ab4:	e51b3014 	ldr	r3, [fp, #-20]
    2ab8:	e3530001 	cmp	r3, #1	; 0x1
    2abc:	3a000003 	bcc	2ad0 <peripheralClockFrequency+0x50>
    2ac0:	e51b3014 	ldr	r3, [fp, #-20]
    2ac4:	e3530002 	cmp	r3, #2	; 0x2
    2ac8:	0a000006 	beq	2ae8 <peripheralClockFrequency+0x68>
    2acc:	ea000007 	b	2af0 <peripheralClockFrequency+0x70>
    {
      case 0:
        divider = 4;
    2ad0:	e3a03004 	mov	r3, #4	; 0x4
    2ad4:	e50b3010 	str	r3, [fp, #-16]
        break;
    2ad8:	ea000004 	b	2af0 <peripheralClockFrequency+0x70>
      case 1:
        divider = 1;
    2adc:	e3a03001 	mov	r3, #1	; 0x1
    2ae0:	e50b3010 	str	r3, [fp, #-16]
        break;
    2ae4:	ea000001 	b	2af0 <peripheralClockFrequency+0x70>
      case 2:
        divider = 2;
    2ae8:	e3a03002 	mov	r3, #2	; 0x2
    2aec:	e50b3010 	str	r3, [fp, #-16]
        break;
    }
  return processorClockFrequency() / divider;
    2af0:	ebffffda 	bl	2a60 <processorClockFrequency>
    2af4:	e1a03000 	mov	r3, r0
    2af8:	e1a00003 	mov	r0, r3
    2afc:	e51b1010 	ldr	r1, [fp, #-16]
    2b00:	eb002951 	bl	d04c <____udivsi3_from_arm>
    2b04:	e1a03000 	mov	r3, r0
}
    2b08:	e1a00003 	mov	r0, r3
    2b0c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2b10:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2b14:	e12fff1e 	bx	lr

00002b18 <delay>:

void delay(int n)
{
    2b18:	e1a0c00d 	mov	ip, sp
    2b1c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2b20:	e24cb004 	sub	fp, ip, #4	; 0x4
    2b24:	e24dd008 	sub	sp, sp, #8	; 0x8
    2b28:	e50b0014 	str	r0, [fp, #-20]
  volatile int i;
  for (i = 0; i < n; ++i);
    2b2c:	e3a03000 	mov	r3, #0	; 0x0
    2b30:	e50b3010 	str	r3, [fp, #-16]
    2b34:	ea000002 	b	2b44 <delay+0x2c>
    2b38:	e51b3010 	ldr	r3, [fp, #-16]
    2b3c:	e2833001 	add	r3, r3, #1	; 0x1
    2b40:	e50b3010 	str	r3, [fp, #-16]
    2b44:	e51b2010 	ldr	r2, [fp, #-16]
    2b48:	e51b3014 	ldr	r3, [fp, #-20]
    2b4c:	e1520003 	cmp	r2, r3
    2b50:	bafffff8 	blt	2b38 <delay+0x20>
}
    2b54:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2b58:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2b5c:	e12fff1e 	bx	lr

00002b60 <check_chksum>:
void parse_STATUS(unsigned char, unsigned char);
void parse_NAVSOL(unsigned char, unsigned char);

void check_chksum(void)
{
    2b60:	e1a0c00d 	mov	ip, sp
    2b64:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2b68:	e24cb004 	sub	fp, ip, #4	; 0x4
//	unsigned short local_chksum;
	/*if(chksum_to_check==PD_FLIGHTPARAMS)
	{

	}
*/
	chksum_to_check=0;
    2b6c:	e59f201c 	ldr	r2, [pc, #28]	; 2b90 <.text+0x2b90>
    2b70:	e3a03000 	mov	r3, #0	; 0x0
    2b74:	e5c23000 	strb	r3, [r2]
	chksum_trigger=0;
    2b78:	e59f2014 	ldr	r2, [pc, #20]	; 2b94 <.text+0x2b94>
    2b7c:	e3a03000 	mov	r3, #0	; 0x0
    2b80:	e5c23000 	strb	r3, [r2]
}
    2b84:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2b88:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2b8c:	e12fff1e 	bx	lr
    2b90:	400008ad 	andmi	r0, r0, sp, lsr #17
    2b94:	40000010 	andmi	r0, r0, r0, lsl r0

00002b98 <parse_VELNED>:

inline void parse_VELNED(unsigned char c, unsigned char reset)
{
    2b98:	e1a0c00d 	mov	ip, sp
    2b9c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2ba0:	e24cb004 	sub	fp, ip, #4	; 0x4
    2ba4:	e24dd008 	sub	sp, sp, #8	; 0x8
    2ba8:	e1a03000 	mov	r3, r0
    2bac:	e1a02001 	mov	r2, r1
    2bb0:	e54b3010 	strb	r3, [fp, #-16]
    2bb4:	e1a03002 	mov	r3, r2
    2bb8:	e54b3014 	strb	r3, [fp, #-20]
	static unsigned char cnt=0;
	static int VE, VN, heading;
	static unsigned int sacc;

	if(reset) cnt=0;
    2bbc:	e55b3014 	ldrb	r3, [fp, #-20]
    2bc0:	e3530000 	cmp	r3, #0	; 0x0
    2bc4:	0a000003 	beq	2bd8 <parse_VELNED+0x40>
    2bc8:	e59f3390 	ldr	r3, [pc, #912]	; 2f60 <.text+0x2f60>
    2bcc:	e3a02000 	mov	r2, #0	; 0x0
    2bd0:	e5c32000 	strb	r2, [r3]
    2bd4:	ea0000de 	b	2f54 <parse_VELNED+0x3bc>
	else
	{
		if(cnt==0) VN=c;
    2bd8:	e59f3380 	ldr	r3, [pc, #896]	; 2f60 <.text+0x2f60>
    2bdc:	e5d33000 	ldrb	r3, [r3]
    2be0:	e3530000 	cmp	r3, #0	; 0x0
    2be4:	1a000003 	bne	2bf8 <parse_VELNED+0x60>
    2be8:	e55b2010 	ldrb	r2, [fp, #-16]
    2bec:	e59f3370 	ldr	r3, [pc, #880]	; 2f64 <.text+0x2f64>
    2bf0:	e5832000 	str	r2, [r3]
    2bf4:	ea0000d0 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==1) VN+=c<<8;
    2bf8:	e59f3360 	ldr	r3, [pc, #864]	; 2f60 <.text+0x2f60>
    2bfc:	e5d33000 	ldrb	r3, [r3]
    2c00:	e3530001 	cmp	r3, #1	; 0x1
    2c04:	1a000007 	bne	2c28 <parse_VELNED+0x90>
    2c08:	e55b3010 	ldrb	r3, [fp, #-16]
    2c0c:	e1a02403 	mov	r2, r3, lsl #8
    2c10:	e59f334c 	ldr	r3, [pc, #844]	; 2f64 <.text+0x2f64>
    2c14:	e5933000 	ldr	r3, [r3]
    2c18:	e0822003 	add	r2, r2, r3
    2c1c:	e59f3340 	ldr	r3, [pc, #832]	; 2f64 <.text+0x2f64>
    2c20:	e5832000 	str	r2, [r3]
    2c24:	ea0000c4 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==2) VN+=c<<16;
    2c28:	e59f3330 	ldr	r3, [pc, #816]	; 2f60 <.text+0x2f60>
    2c2c:	e5d33000 	ldrb	r3, [r3]
    2c30:	e3530002 	cmp	r3, #2	; 0x2
    2c34:	1a000007 	bne	2c58 <parse_VELNED+0xc0>
    2c38:	e55b3010 	ldrb	r3, [fp, #-16]
    2c3c:	e1a02803 	mov	r2, r3, lsl #16
    2c40:	e59f331c 	ldr	r3, [pc, #796]	; 2f64 <.text+0x2f64>
    2c44:	e5933000 	ldr	r3, [r3]
    2c48:	e0822003 	add	r2, r2, r3
    2c4c:	e59f3310 	ldr	r3, [pc, #784]	; 2f64 <.text+0x2f64>
    2c50:	e5832000 	str	r2, [r3]
    2c54:	ea0000b8 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==3) VN+=c<<24;
    2c58:	e59f3300 	ldr	r3, [pc, #768]	; 2f60 <.text+0x2f60>
    2c5c:	e5d33000 	ldrb	r3, [r3]
    2c60:	e3530003 	cmp	r3, #3	; 0x3
    2c64:	1a000007 	bne	2c88 <parse_VELNED+0xf0>
    2c68:	e55b3010 	ldrb	r3, [fp, #-16]
    2c6c:	e1a02c03 	mov	r2, r3, lsl #24
    2c70:	e59f32ec 	ldr	r3, [pc, #748]	; 2f64 <.text+0x2f64>
    2c74:	e5933000 	ldr	r3, [r3]
    2c78:	e0822003 	add	r2, r2, r3
    2c7c:	e59f32e0 	ldr	r3, [pc, #736]	; 2f64 <.text+0x2f64>
    2c80:	e5832000 	str	r2, [r3]
    2c84:	ea0000ac 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==4) VE=c;
    2c88:	e59f32d0 	ldr	r3, [pc, #720]	; 2f60 <.text+0x2f60>
    2c8c:	e5d33000 	ldrb	r3, [r3]
    2c90:	e3530004 	cmp	r3, #4	; 0x4
    2c94:	1a000003 	bne	2ca8 <parse_VELNED+0x110>
    2c98:	e55b2010 	ldrb	r2, [fp, #-16]
    2c9c:	e59f32c4 	ldr	r3, [pc, #708]	; 2f68 <.text+0x2f68>
    2ca0:	e5832000 	str	r2, [r3]
    2ca4:	ea0000a4 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==5) VE+=c<<8;
    2ca8:	e59f32b0 	ldr	r3, [pc, #688]	; 2f60 <.text+0x2f60>
    2cac:	e5d33000 	ldrb	r3, [r3]
    2cb0:	e3530005 	cmp	r3, #5	; 0x5
    2cb4:	1a000007 	bne	2cd8 <parse_VELNED+0x140>
    2cb8:	e55b3010 	ldrb	r3, [fp, #-16]
    2cbc:	e1a02403 	mov	r2, r3, lsl #8
    2cc0:	e59f32a0 	ldr	r3, [pc, #672]	; 2f68 <.text+0x2f68>
    2cc4:	e5933000 	ldr	r3, [r3]
    2cc8:	e0822003 	add	r2, r2, r3
    2ccc:	e59f3294 	ldr	r3, [pc, #660]	; 2f68 <.text+0x2f68>
    2cd0:	e5832000 	str	r2, [r3]
    2cd4:	ea000098 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==6) VE+=c<<16;
    2cd8:	e59f3280 	ldr	r3, [pc, #640]	; 2f60 <.text+0x2f60>
    2cdc:	e5d33000 	ldrb	r3, [r3]
    2ce0:	e3530006 	cmp	r3, #6	; 0x6
    2ce4:	1a000007 	bne	2d08 <parse_VELNED+0x170>
    2ce8:	e55b3010 	ldrb	r3, [fp, #-16]
    2cec:	e1a02803 	mov	r2, r3, lsl #16
    2cf0:	e59f3270 	ldr	r3, [pc, #624]	; 2f68 <.text+0x2f68>
    2cf4:	e5933000 	ldr	r3, [r3]
    2cf8:	e0822003 	add	r2, r2, r3
    2cfc:	e59f3264 	ldr	r3, [pc, #612]	; 2f68 <.text+0x2f68>
    2d00:	e5832000 	str	r2, [r3]
    2d04:	ea00008c 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==7) VE+=c<<24;
    2d08:	e59f3250 	ldr	r3, [pc, #592]	; 2f60 <.text+0x2f60>
    2d0c:	e5d33000 	ldrb	r3, [r3]
    2d10:	e3530007 	cmp	r3, #7	; 0x7
    2d14:	1a000007 	bne	2d38 <parse_VELNED+0x1a0>
    2d18:	e55b3010 	ldrb	r3, [fp, #-16]
    2d1c:	e1a02c03 	mov	r2, r3, lsl #24
    2d20:	e59f3240 	ldr	r3, [pc, #576]	; 2f68 <.text+0x2f68>
    2d24:	e5933000 	ldr	r3, [r3]
    2d28:	e0822003 	add	r2, r2, r3
    2d2c:	e59f3234 	ldr	r3, [pc, #564]	; 2f68 <.text+0x2f68>
    2d30:	e5832000 	str	r2, [r3]
    2d34:	ea000080 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==20) heading=c;
    2d38:	e59f3220 	ldr	r3, [pc, #544]	; 2f60 <.text+0x2f60>
    2d3c:	e5d33000 	ldrb	r3, [r3]
    2d40:	e3530014 	cmp	r3, #20	; 0x14
    2d44:	1a000003 	bne	2d58 <parse_VELNED+0x1c0>
    2d48:	e55b2010 	ldrb	r2, [fp, #-16]
    2d4c:	e59f3218 	ldr	r3, [pc, #536]	; 2f6c <.text+0x2f6c>
    2d50:	e5832000 	str	r2, [r3]
    2d54:	ea000078 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==21) heading+=c<<8;
    2d58:	e59f3200 	ldr	r3, [pc, #512]	; 2f60 <.text+0x2f60>
    2d5c:	e5d33000 	ldrb	r3, [r3]
    2d60:	e3530015 	cmp	r3, #21	; 0x15
    2d64:	1a000007 	bne	2d88 <parse_VELNED+0x1f0>
    2d68:	e55b3010 	ldrb	r3, [fp, #-16]
    2d6c:	e1a02403 	mov	r2, r3, lsl #8
    2d70:	e59f31f4 	ldr	r3, [pc, #500]	; 2f6c <.text+0x2f6c>
    2d74:	e5933000 	ldr	r3, [r3]
    2d78:	e0822003 	add	r2, r2, r3
    2d7c:	e59f31e8 	ldr	r3, [pc, #488]	; 2f6c <.text+0x2f6c>
    2d80:	e5832000 	str	r2, [r3]
    2d84:	ea00006c 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==22) heading+=c<<16;
    2d88:	e59f31d0 	ldr	r3, [pc, #464]	; 2f60 <.text+0x2f60>
    2d8c:	e5d33000 	ldrb	r3, [r3]
    2d90:	e3530016 	cmp	r3, #22	; 0x16
    2d94:	1a000007 	bne	2db8 <parse_VELNED+0x220>
    2d98:	e55b3010 	ldrb	r3, [fp, #-16]
    2d9c:	e1a02803 	mov	r2, r3, lsl #16
    2da0:	e59f31c4 	ldr	r3, [pc, #452]	; 2f6c <.text+0x2f6c>
    2da4:	e5933000 	ldr	r3, [r3]
    2da8:	e0822003 	add	r2, r2, r3
    2dac:	e59f31b8 	ldr	r3, [pc, #440]	; 2f6c <.text+0x2f6c>
    2db0:	e5832000 	str	r2, [r3]
    2db4:	ea000060 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==23) heading+=c<<24;
    2db8:	e59f31a0 	ldr	r3, [pc, #416]	; 2f60 <.text+0x2f60>
    2dbc:	e5d33000 	ldrb	r3, [r3]
    2dc0:	e3530017 	cmp	r3, #23	; 0x17
    2dc4:	1a000007 	bne	2de8 <parse_VELNED+0x250>
    2dc8:	e55b3010 	ldrb	r3, [fp, #-16]
    2dcc:	e1a02c03 	mov	r2, r3, lsl #24
    2dd0:	e59f3194 	ldr	r3, [pc, #404]	; 2f6c <.text+0x2f6c>
    2dd4:	e5933000 	ldr	r3, [r3]
    2dd8:	e0822003 	add	r2, r2, r3
    2ddc:	e59f3188 	ldr	r3, [pc, #392]	; 2f6c <.text+0x2f6c>
    2de0:	e5832000 	str	r2, [r3]
    2de4:	ea000054 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==24) sacc=c;
    2de8:	e59f3170 	ldr	r3, [pc, #368]	; 2f60 <.text+0x2f60>
    2dec:	e5d33000 	ldrb	r3, [r3]
    2df0:	e3530018 	cmp	r3, #24	; 0x18
    2df4:	1a000003 	bne	2e08 <parse_VELNED+0x270>
    2df8:	e55b2010 	ldrb	r2, [fp, #-16]
    2dfc:	e59f316c 	ldr	r3, [pc, #364]	; 2f70 <.text+0x2f70>
    2e00:	e5832000 	str	r2, [r3]
    2e04:	ea00004c 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==25) sacc+=c<<8;
    2e08:	e59f3150 	ldr	r3, [pc, #336]	; 2f60 <.text+0x2f60>
    2e0c:	e5d33000 	ldrb	r3, [r3]
    2e10:	e3530019 	cmp	r3, #25	; 0x19
    2e14:	1a000008 	bne	2e3c <parse_VELNED+0x2a4>
    2e18:	e55b3010 	ldrb	r3, [fp, #-16]
    2e1c:	e1a03403 	mov	r3, r3, lsl #8
    2e20:	e1a02003 	mov	r2, r3
    2e24:	e59f3144 	ldr	r3, [pc, #324]	; 2f70 <.text+0x2f70>
    2e28:	e5933000 	ldr	r3, [r3]
    2e2c:	e0822003 	add	r2, r2, r3
    2e30:	e59f3138 	ldr	r3, [pc, #312]	; 2f70 <.text+0x2f70>
    2e34:	e5832000 	str	r2, [r3]
    2e38:	ea00003f 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==26) sacc+=c<<16;
    2e3c:	e59f311c 	ldr	r3, [pc, #284]	; 2f60 <.text+0x2f60>
    2e40:	e5d33000 	ldrb	r3, [r3]
    2e44:	e353001a 	cmp	r3, #26	; 0x1a
    2e48:	1a000008 	bne	2e70 <parse_VELNED+0x2d8>
    2e4c:	e55b3010 	ldrb	r3, [fp, #-16]
    2e50:	e1a03803 	mov	r3, r3, lsl #16
    2e54:	e1a02003 	mov	r2, r3
    2e58:	e59f3110 	ldr	r3, [pc, #272]	; 2f70 <.text+0x2f70>
    2e5c:	e5933000 	ldr	r3, [r3]
    2e60:	e0822003 	add	r2, r2, r3
    2e64:	e59f3104 	ldr	r3, [pc, #260]	; 2f70 <.text+0x2f70>
    2e68:	e5832000 	str	r2, [r3]
    2e6c:	ea000032 	b	2f3c <parse_VELNED+0x3a4>
		else if(cnt==27)
    2e70:	e59f30e8 	ldr	r3, [pc, #232]	; 2f60 <.text+0x2f60>
    2e74:	e5d33000 	ldrb	r3, [r3]
    2e78:	e353001b 	cmp	r3, #27	; 0x1b
    2e7c:	1a00002e 	bne	2f3c <parse_VELNED+0x3a4>
		{
			sacc+=c<<24;
    2e80:	e55b3010 	ldrb	r3, [fp, #-16]
    2e84:	e1a03c03 	mov	r3, r3, lsl #24
    2e88:	e1a02003 	mov	r2, r3
    2e8c:	e59f30dc 	ldr	r3, [pc, #220]	; 2f70 <.text+0x2f70>
    2e90:	e5933000 	ldr	r3, [r3]
    2e94:	e0822003 	add	r2, r2, r3
    2e98:	e59f30d0 	ldr	r3, [pc, #208]	; 2f70 <.text+0x2f70>
    2e9c:	e5832000 	str	r2, [r3]
			GPS_Data.speed_x=VE*10;	//convert to mm/s
    2ea0:	e59f30c0 	ldr	r3, [pc, #192]	; 2f68 <.text+0x2f68>
    2ea4:	e5932000 	ldr	r2, [r3]
    2ea8:	e1a03002 	mov	r3, r2
    2eac:	e1a03103 	mov	r3, r3, lsl #2
    2eb0:	e0833002 	add	r3, r3, r2
    2eb4:	e1a03083 	mov	r3, r3, lsl #1
    2eb8:	e1a02003 	mov	r2, r3
    2ebc:	e59f30b0 	ldr	r3, [pc, #176]	; 2f74 <.text+0x2f74>
    2ec0:	e583200c 	str	r2, [r3, #12]
			GPS_Data.speed_y=VN*10; //convert to mm/s
    2ec4:	e59f3098 	ldr	r3, [pc, #152]	; 2f64 <.text+0x2f64>
    2ec8:	e5932000 	ldr	r2, [r3]
    2ecc:	e1a03002 	mov	r3, r2
    2ed0:	e1a03103 	mov	r3, r3, lsl #2
    2ed4:	e0833002 	add	r3, r3, r2
    2ed8:	e1a03083 	mov	r3, r3, lsl #1
    2edc:	e1a02003 	mov	r2, r3
    2ee0:	e59f308c 	ldr	r3, [pc, #140]	; 2f74 <.text+0x2f74>
    2ee4:	e5832010 	str	r2, [r3, #16]
			GPS_Data.heading=heading/100;	//convert to deg * 1000
    2ee8:	e59f307c 	ldr	r3, [pc, #124]	; 2f6c <.text+0x2f6c>
    2eec:	e5931000 	ldr	r1, [r3]
    2ef0:	e59f3080 	ldr	r3, [pc, #128]	; 2f78 <.text+0x2f78>
    2ef4:	e0c32391 	smull	r2, r3, r1, r3
    2ef8:	e1a022c3 	mov	r2, r3, asr #5
    2efc:	e1a03fc1 	mov	r3, r1, asr #31
    2f00:	e0632002 	rsb	r2, r3, r2
    2f04:	e59f3068 	ldr	r3, [pc, #104]	; 2f74 <.text+0x2f74>
    2f08:	e5832014 	str	r2, [r3, #20]
			GPS_Data.speed_accuracy=sacc*10;	//convert to mm/s
    2f0c:	e59f305c 	ldr	r3, [pc, #92]	; 2f70 <.text+0x2f70>
    2f10:	e5932000 	ldr	r2, [r3]
    2f14:	e1a03002 	mov	r3, r2
    2f18:	e1a03103 	mov	r3, r3, lsl #2
    2f1c:	e0833002 	add	r3, r3, r2
    2f20:	e1a03083 	mov	r3, r3, lsl #1
    2f24:	e1a02003 	mov	r2, r3
    2f28:	e59f3044 	ldr	r3, [pc, #68]	; 2f74 <.text+0x2f74>
    2f2c:	e5832020 	str	r2, [r3, #32]
			gpsDataOkTrigger=1;
    2f30:	e59f2044 	ldr	r2, [pc, #68]	; 2f7c <.text+0x2f7c>
    2f34:	e3a03001 	mov	r3, #1	; 0x1
    2f38:	e5823000 	str	r3, [r2]
		}
		cnt++;
    2f3c:	e59f301c 	ldr	r3, [pc, #28]	; 2f60 <.text+0x2f60>
    2f40:	e5d33000 	ldrb	r3, [r3]
    2f44:	e2833001 	add	r3, r3, #1	; 0x1
    2f48:	e20330ff 	and	r3, r3, #255	; 0xff
    2f4c:	e59f200c 	ldr	r2, [pc, #12]	; 2f60 <.text+0x2f60>
    2f50:	e5c23000 	strb	r3, [r2]
	}
}
    2f54:	e24bd00c 	sub	sp, fp, #12	; 0xc
    2f58:	e89d6800 	ldmia	sp, {fp, sp, lr}
    2f5c:	e12fff1e 	bx	lr
    2f60:	400008d0 	ldrmid	r0, [r0], -r0
    2f64:	400008c8 	andmi	r0, r0, r8, asr #17
    2f68:	400008cc 	andmi	r0, r0, ip, asr #17
    2f6c:	400008c4 	andmi	r0, r0, r4, asr #17
    2f70:	400008c0 	andmi	r0, r0, r0, asr #17
    2f74:	40000e2c 	andmi	r0, r0, ip, lsr #28
    2f78:	51eb851f 	mvnpl	r8, pc, lsl r5
    2f7c:	40000850 	andmi	r0, r0, r0, asr r8

00002f80 <parse_POSLLH>:
inline void parse_POSLLH(unsigned char c, unsigned char reset)
{
    2f80:	e1a0c00d 	mov	ip, sp
    2f84:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    2f88:	e24cb004 	sub	fp, ip, #4	; 0x4
    2f8c:	e24dd008 	sub	sp, sp, #8	; 0x8
    2f90:	e1a03000 	mov	r3, r0
    2f94:	e1a02001 	mov	r2, r1
    2f98:	e54b3010 	strb	r3, [fp, #-16]
    2f9c:	e1a03002 	mov	r3, r2
    2fa0:	e54b3014 	strb	r3, [fp, #-20]
	static unsigned char cnt=0;
	static int lat, lon, height;
	static unsigned int hacc, vacc;

	if(reset) cnt=0;
    2fa4:	e55b3014 	ldrb	r3, [fp, #-20]
    2fa8:	e3530000 	cmp	r3, #0	; 0x0
    2fac:	0a000003 	beq	2fc0 <parse_POSLLH+0x40>
    2fb0:	e59f3400 	ldr	r3, [pc, #1024]	; 33b8 <.text+0x33b8>
    2fb4:	e3a02000 	mov	r2, #0	; 0x0
    2fb8:	e5c32000 	strb	r2, [r3]
    2fbc:	ea0000fa 	b	33ac <parse_POSLLH+0x42c>
	else
	{
		if(cnt==0) lon=c;
    2fc0:	e59f33f0 	ldr	r3, [pc, #1008]	; 33b8 <.text+0x33b8>
    2fc4:	e5d33000 	ldrb	r3, [r3]
    2fc8:	e3530000 	cmp	r3, #0	; 0x0
    2fcc:	1a000003 	bne	2fe0 <parse_POSLLH+0x60>
    2fd0:	e55b2010 	ldrb	r2, [fp, #-16]
    2fd4:	e59f33e0 	ldr	r3, [pc, #992]	; 33bc <.text+0x33bc>
    2fd8:	e5832000 	str	r2, [r3]
    2fdc:	ea0000ec 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==1) lon+=c<<8;
    2fe0:	e59f33d0 	ldr	r3, [pc, #976]	; 33b8 <.text+0x33b8>
    2fe4:	e5d33000 	ldrb	r3, [r3]
    2fe8:	e3530001 	cmp	r3, #1	; 0x1
    2fec:	1a000007 	bne	3010 <parse_POSLLH+0x90>
    2ff0:	e55b3010 	ldrb	r3, [fp, #-16]
    2ff4:	e1a02403 	mov	r2, r3, lsl #8
    2ff8:	e59f33bc 	ldr	r3, [pc, #956]	; 33bc <.text+0x33bc>
    2ffc:	e5933000 	ldr	r3, [r3]
    3000:	e0822003 	add	r2, r2, r3
    3004:	e59f33b0 	ldr	r3, [pc, #944]	; 33bc <.text+0x33bc>
    3008:	e5832000 	str	r2, [r3]
    300c:	ea0000e0 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==2) lon+=c<<16;
    3010:	e59f33a0 	ldr	r3, [pc, #928]	; 33b8 <.text+0x33b8>
    3014:	e5d33000 	ldrb	r3, [r3]
    3018:	e3530002 	cmp	r3, #2	; 0x2
    301c:	1a000007 	bne	3040 <parse_POSLLH+0xc0>
    3020:	e55b3010 	ldrb	r3, [fp, #-16]
    3024:	e1a02803 	mov	r2, r3, lsl #16
    3028:	e59f338c 	ldr	r3, [pc, #908]	; 33bc <.text+0x33bc>
    302c:	e5933000 	ldr	r3, [r3]
    3030:	e0822003 	add	r2, r2, r3
    3034:	e59f3380 	ldr	r3, [pc, #896]	; 33bc <.text+0x33bc>
    3038:	e5832000 	str	r2, [r3]
    303c:	ea0000d4 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==3) lon+=c<<24;
    3040:	e59f3370 	ldr	r3, [pc, #880]	; 33b8 <.text+0x33b8>
    3044:	e5d33000 	ldrb	r3, [r3]
    3048:	e3530003 	cmp	r3, #3	; 0x3
    304c:	1a000007 	bne	3070 <parse_POSLLH+0xf0>
    3050:	e55b3010 	ldrb	r3, [fp, #-16]
    3054:	e1a02c03 	mov	r2, r3, lsl #24
    3058:	e59f335c 	ldr	r3, [pc, #860]	; 33bc <.text+0x33bc>
    305c:	e5933000 	ldr	r3, [r3]
    3060:	e0822003 	add	r2, r2, r3
    3064:	e59f3350 	ldr	r3, [pc, #848]	; 33bc <.text+0x33bc>
    3068:	e5832000 	str	r2, [r3]
    306c:	ea0000c8 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==4) lat=c;
    3070:	e59f3340 	ldr	r3, [pc, #832]	; 33b8 <.text+0x33b8>
    3074:	e5d33000 	ldrb	r3, [r3]
    3078:	e3530004 	cmp	r3, #4	; 0x4
    307c:	1a000003 	bne	3090 <parse_POSLLH+0x110>
    3080:	e55b2010 	ldrb	r2, [fp, #-16]
    3084:	e59f3334 	ldr	r3, [pc, #820]	; 33c0 <.text+0x33c0>
    3088:	e5832000 	str	r2, [r3]
    308c:	ea0000c0 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==5) lat+=c<<8;
    3090:	e59f3320 	ldr	r3, [pc, #800]	; 33b8 <.text+0x33b8>
    3094:	e5d33000 	ldrb	r3, [r3]
    3098:	e3530005 	cmp	r3, #5	; 0x5
    309c:	1a000007 	bne	30c0 <parse_POSLLH+0x140>
    30a0:	e55b3010 	ldrb	r3, [fp, #-16]
    30a4:	e1a02403 	mov	r2, r3, lsl #8
    30a8:	e59f3310 	ldr	r3, [pc, #784]	; 33c0 <.text+0x33c0>
    30ac:	e5933000 	ldr	r3, [r3]
    30b0:	e0822003 	add	r2, r2, r3
    30b4:	e59f3304 	ldr	r3, [pc, #772]	; 33c0 <.text+0x33c0>
    30b8:	e5832000 	str	r2, [r3]
    30bc:	ea0000b4 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==6) lat+=c<<16;
    30c0:	e59f32f0 	ldr	r3, [pc, #752]	; 33b8 <.text+0x33b8>
    30c4:	e5d33000 	ldrb	r3, [r3]
    30c8:	e3530006 	cmp	r3, #6	; 0x6
    30cc:	1a000007 	bne	30f0 <parse_POSLLH+0x170>
    30d0:	e55b3010 	ldrb	r3, [fp, #-16]
    30d4:	e1a02803 	mov	r2, r3, lsl #16
    30d8:	e59f32e0 	ldr	r3, [pc, #736]	; 33c0 <.text+0x33c0>
    30dc:	e5933000 	ldr	r3, [r3]
    30e0:	e0822003 	add	r2, r2, r3
    30e4:	e59f32d4 	ldr	r3, [pc, #724]	; 33c0 <.text+0x33c0>
    30e8:	e5832000 	str	r2, [r3]
    30ec:	ea0000a8 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==7) lat+=c<<24;
    30f0:	e59f32c0 	ldr	r3, [pc, #704]	; 33b8 <.text+0x33b8>
    30f4:	e5d33000 	ldrb	r3, [r3]
    30f8:	e3530007 	cmp	r3, #7	; 0x7
    30fc:	1a000007 	bne	3120 <parse_POSLLH+0x1a0>
    3100:	e55b3010 	ldrb	r3, [fp, #-16]
    3104:	e1a02c03 	mov	r2, r3, lsl #24
    3108:	e59f32b0 	ldr	r3, [pc, #688]	; 33c0 <.text+0x33c0>
    310c:	e5933000 	ldr	r3, [r3]
    3110:	e0822003 	add	r2, r2, r3
    3114:	e59f32a4 	ldr	r3, [pc, #676]	; 33c0 <.text+0x33c0>
    3118:	e5832000 	str	r2, [r3]
    311c:	ea00009c 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==12) height=c;
    3120:	e59f3290 	ldr	r3, [pc, #656]	; 33b8 <.text+0x33b8>
    3124:	e5d33000 	ldrb	r3, [r3]
    3128:	e353000c 	cmp	r3, #12	; 0xc
    312c:	1a000003 	bne	3140 <parse_POSLLH+0x1c0>
    3130:	e55b2010 	ldrb	r2, [fp, #-16]
    3134:	e59f3288 	ldr	r3, [pc, #648]	; 33c4 <.text+0x33c4>
    3138:	e5832000 	str	r2, [r3]
    313c:	ea000094 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==13) height+=c<<8;
    3140:	e59f3270 	ldr	r3, [pc, #624]	; 33b8 <.text+0x33b8>
    3144:	e5d33000 	ldrb	r3, [r3]
    3148:	e353000d 	cmp	r3, #13	; 0xd
    314c:	1a000007 	bne	3170 <parse_POSLLH+0x1f0>
    3150:	e55b3010 	ldrb	r3, [fp, #-16]
    3154:	e1a02403 	mov	r2, r3, lsl #8
    3158:	e59f3264 	ldr	r3, [pc, #612]	; 33c4 <.text+0x33c4>
    315c:	e5933000 	ldr	r3, [r3]
    3160:	e0822003 	add	r2, r2, r3
    3164:	e59f3258 	ldr	r3, [pc, #600]	; 33c4 <.text+0x33c4>
    3168:	e5832000 	str	r2, [r3]
    316c:	ea000088 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==14) height+=c<<16;
    3170:	e59f3240 	ldr	r3, [pc, #576]	; 33b8 <.text+0x33b8>
    3174:	e5d33000 	ldrb	r3, [r3]
    3178:	e353000e 	cmp	r3, #14	; 0xe
    317c:	1a000007 	bne	31a0 <parse_POSLLH+0x220>
    3180:	e55b3010 	ldrb	r3, [fp, #-16]
    3184:	e1a02803 	mov	r2, r3, lsl #16
    3188:	e59f3234 	ldr	r3, [pc, #564]	; 33c4 <.text+0x33c4>
    318c:	e5933000 	ldr	r3, [r3]
    3190:	e0822003 	add	r2, r2, r3
    3194:	e59f3228 	ldr	r3, [pc, #552]	; 33c4 <.text+0x33c4>
    3198:	e5832000 	str	r2, [r3]
    319c:	ea00007c 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==15) height+=c<<24;
    31a0:	e59f3210 	ldr	r3, [pc, #528]	; 33b8 <.text+0x33b8>
    31a4:	e5d33000 	ldrb	r3, [r3]
    31a8:	e353000f 	cmp	r3, #15	; 0xf
    31ac:	1a000007 	bne	31d0 <parse_POSLLH+0x250>
    31b0:	e55b3010 	ldrb	r3, [fp, #-16]
    31b4:	e1a02c03 	mov	r2, r3, lsl #24
    31b8:	e59f3204 	ldr	r3, [pc, #516]	; 33c4 <.text+0x33c4>
    31bc:	e5933000 	ldr	r3, [r3]
    31c0:	e0822003 	add	r2, r2, r3
    31c4:	e59f31f8 	ldr	r3, [pc, #504]	; 33c4 <.text+0x33c4>
    31c8:	e5832000 	str	r2, [r3]
    31cc:	ea000070 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==16) hacc=c;
    31d0:	e59f31e0 	ldr	r3, [pc, #480]	; 33b8 <.text+0x33b8>
    31d4:	e5d33000 	ldrb	r3, [r3]
    31d8:	e3530010 	cmp	r3, #16	; 0x10
    31dc:	1a000003 	bne	31f0 <parse_POSLLH+0x270>
    31e0:	e55b2010 	ldrb	r2, [fp, #-16]
    31e4:	e59f31dc 	ldr	r3, [pc, #476]	; 33c8 <.text+0x33c8>
    31e8:	e5832000 	str	r2, [r3]
    31ec:	ea000068 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==17) hacc+=c<<8;
    31f0:	e59f31c0 	ldr	r3, [pc, #448]	; 33b8 <.text+0x33b8>
    31f4:	e5d33000 	ldrb	r3, [r3]
    31f8:	e3530011 	cmp	r3, #17	; 0x11
    31fc:	1a000008 	bne	3224 <parse_POSLLH+0x2a4>
    3200:	e55b3010 	ldrb	r3, [fp, #-16]
    3204:	e1a03403 	mov	r3, r3, lsl #8
    3208:	e1a02003 	mov	r2, r3
    320c:	e59f31b4 	ldr	r3, [pc, #436]	; 33c8 <.text+0x33c8>
    3210:	e5933000 	ldr	r3, [r3]
    3214:	e0822003 	add	r2, r2, r3
    3218:	e59f31a8 	ldr	r3, [pc, #424]	; 33c8 <.text+0x33c8>
    321c:	e5832000 	str	r2, [r3]
    3220:	ea00005b 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==18) hacc+=c<<16;
    3224:	e59f318c 	ldr	r3, [pc, #396]	; 33b8 <.text+0x33b8>
    3228:	e5d33000 	ldrb	r3, [r3]
    322c:	e3530012 	cmp	r3, #18	; 0x12
    3230:	1a000008 	bne	3258 <parse_POSLLH+0x2d8>
    3234:	e55b3010 	ldrb	r3, [fp, #-16]
    3238:	e1a03803 	mov	r3, r3, lsl #16
    323c:	e1a02003 	mov	r2, r3
    3240:	e59f3180 	ldr	r3, [pc, #384]	; 33c8 <.text+0x33c8>
    3244:	e5933000 	ldr	r3, [r3]
    3248:	e0822003 	add	r2, r2, r3
    324c:	e59f3174 	ldr	r3, [pc, #372]	; 33c8 <.text+0x33c8>
    3250:	e5832000 	str	r2, [r3]
    3254:	ea00004e 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==19) hacc+=c<<24;
    3258:	e59f3158 	ldr	r3, [pc, #344]	; 33b8 <.text+0x33b8>
    325c:	e5d33000 	ldrb	r3, [r3]
    3260:	e3530013 	cmp	r3, #19	; 0x13
    3264:	1a000008 	bne	328c <parse_POSLLH+0x30c>
    3268:	e55b3010 	ldrb	r3, [fp, #-16]
    326c:	e1a03c03 	mov	r3, r3, lsl #24
    3270:	e1a02003 	mov	r2, r3
    3274:	e59f314c 	ldr	r3, [pc, #332]	; 33c8 <.text+0x33c8>
    3278:	e5933000 	ldr	r3, [r3]
    327c:	e0822003 	add	r2, r2, r3
    3280:	e59f3140 	ldr	r3, [pc, #320]	; 33c8 <.text+0x33c8>
    3284:	e5832000 	str	r2, [r3]
    3288:	ea000041 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==20) vacc=c;
    328c:	e59f3124 	ldr	r3, [pc, #292]	; 33b8 <.text+0x33b8>
    3290:	e5d33000 	ldrb	r3, [r3]
    3294:	e3530014 	cmp	r3, #20	; 0x14
    3298:	1a000003 	bne	32ac <parse_POSLLH+0x32c>
    329c:	e55b2010 	ldrb	r2, [fp, #-16]
    32a0:	e59f3124 	ldr	r3, [pc, #292]	; 33cc <.text+0x33cc>
    32a4:	e5832000 	str	r2, [r3]
    32a8:	ea000039 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==21) vacc+=c<<8;
    32ac:	e59f3104 	ldr	r3, [pc, #260]	; 33b8 <.text+0x33b8>
    32b0:	e5d33000 	ldrb	r3, [r3]
    32b4:	e3530015 	cmp	r3, #21	; 0x15
    32b8:	1a000008 	bne	32e0 <parse_POSLLH+0x360>
    32bc:	e55b3010 	ldrb	r3, [fp, #-16]
    32c0:	e1a03403 	mov	r3, r3, lsl #8
    32c4:	e1a02003 	mov	r2, r3
    32c8:	e59f30fc 	ldr	r3, [pc, #252]	; 33cc <.text+0x33cc>
    32cc:	e5933000 	ldr	r3, [r3]
    32d0:	e0822003 	add	r2, r2, r3
    32d4:	e59f30f0 	ldr	r3, [pc, #240]	; 33cc <.text+0x33cc>
    32d8:	e5832000 	str	r2, [r3]
    32dc:	ea00002c 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==22) vacc+=c<<16;
    32e0:	e59f30d0 	ldr	r3, [pc, #208]	; 33b8 <.text+0x33b8>
    32e4:	e5d33000 	ldrb	r3, [r3]
    32e8:	e3530016 	cmp	r3, #22	; 0x16
    32ec:	1a000008 	bne	3314 <parse_POSLLH+0x394>
    32f0:	e55b3010 	ldrb	r3, [fp, #-16]
    32f4:	e1a03803 	mov	r3, r3, lsl #16
    32f8:	e1a02003 	mov	r2, r3
    32fc:	e59f30c8 	ldr	r3, [pc, #200]	; 33cc <.text+0x33cc>
    3300:	e5933000 	ldr	r3, [r3]
    3304:	e0822003 	add	r2, r2, r3
    3308:	e59f30bc 	ldr	r3, [pc, #188]	; 33cc <.text+0x33cc>
    330c:	e5832000 	str	r2, [r3]
    3310:	ea00001f 	b	3394 <parse_POSLLH+0x414>
		else if(cnt==23)
    3314:	e59f309c 	ldr	r3, [pc, #156]	; 33b8 <.text+0x33b8>
    3318:	e5d33000 	ldrb	r3, [r3]
    331c:	e3530017 	cmp	r3, #23	; 0x17
    3320:	1a00001b 	bne	3394 <parse_POSLLH+0x414>
		{
			vacc+=c<<24;
    3324:	e55b3010 	ldrb	r3, [fp, #-16]
    3328:	e1a03c03 	mov	r3, r3, lsl #24
    332c:	e1a02003 	mov	r2, r3
    3330:	e59f3094 	ldr	r3, [pc, #148]	; 33cc <.text+0x33cc>
    3334:	e5933000 	ldr	r3, [r3]
    3338:	e0822003 	add	r2, r2, r3
    333c:	e59f3088 	ldr	r3, [pc, #136]	; 33cc <.text+0x33cc>
    3340:	e5832000 	str	r2, [r3]
			GPS_Data.latitude=lat;
    3344:	e59f3074 	ldr	r3, [pc, #116]	; 33c0 <.text+0x33c0>
    3348:	e5932000 	ldr	r2, [r3]
    334c:	e59f307c 	ldr	r3, [pc, #124]	; 33d0 <.text+0x33d0>
    3350:	e5832000 	str	r2, [r3]
			GPS_Data.longitude=lon;
    3354:	e59f3060 	ldr	r3, [pc, #96]	; 33bc <.text+0x33bc>
    3358:	e5932000 	ldr	r2, [r3]
    335c:	e59f306c 	ldr	r3, [pc, #108]	; 33d0 <.text+0x33d0>
    3360:	e5832004 	str	r2, [r3, #4]
			GPS_Data.height=height;
    3364:	e59f3058 	ldr	r3, [pc, #88]	; 33c4 <.text+0x33c4>
    3368:	e5932000 	ldr	r2, [r3]
    336c:	e59f305c 	ldr	r3, [pc, #92]	; 33d0 <.text+0x33d0>
    3370:	e5832008 	str	r2, [r3, #8]
			GPS_Data.horizontal_accuracy=hacc;
    3374:	e59f304c 	ldr	r3, [pc, #76]	; 33c8 <.text+0x33c8>
    3378:	e5932000 	ldr	r2, [r3]
    337c:	e59f304c 	ldr	r3, [pc, #76]	; 33d0 <.text+0x33d0>
    3380:	e5832018 	str	r2, [r3, #24]
			GPS_Data.vertical_accuracy=vacc;
    3384:	e59f3040 	ldr	r3, [pc, #64]	; 33cc <.text+0x33cc>
    3388:	e5932000 	ldr	r2, [r3]
    338c:	e59f303c 	ldr	r3, [pc, #60]	; 33d0 <.text+0x33d0>
    3390:	e583201c 	str	r2, [r3, #28]
		}
		cnt++;
    3394:	e59f301c 	ldr	r3, [pc, #28]	; 33b8 <.text+0x33b8>
    3398:	e5d33000 	ldrb	r3, [r3]
    339c:	e2833001 	add	r3, r3, #1	; 0x1
    33a0:	e20330ff 	and	r3, r3, #255	; 0xff
    33a4:	e59f200c 	ldr	r2, [pc, #12]	; 33b8 <.text+0x33b8>
    33a8:	e5c23000 	strb	r3, [r2]
	}
}
    33ac:	e24bd00c 	sub	sp, fp, #12	; 0xc
    33b0:	e89d6800 	ldmia	sp, {fp, sp, lr}
    33b4:	e12fff1e 	bx	lr
    33b8:	400008e8 	andmi	r0, r0, r8, ror #17
    33bc:	400008e0 	andmi	r0, r0, r0, ror #17
    33c0:	400008e4 	andmi	r0, r0, r4, ror #17
    33c4:	400008dc 	ldrmid	r0, [r0], -ip
    33c8:	400008d8 	ldrmid	r0, [r0], -r8
    33cc:	400008d4 	ldrmid	r0, [r0], -r4
    33d0:	40000e2c 	andmi	r0, r0, ip, lsr #28

000033d4 <parse_POSUTM>:
inline void parse_POSUTM(unsigned char c, unsigned char reset)
{
    33d4:	e1a0c00d 	mov	ip, sp
    33d8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    33dc:	e24cb004 	sub	fp, ip, #4	; 0x4
    33e0:	e24dd008 	sub	sp, sp, #8	; 0x8
    33e4:	e1a03000 	mov	r3, r0
    33e8:	e1a02001 	mov	r2, r1
    33ec:	e54b3010 	strb	r3, [fp, #-16]
    33f0:	e1a03002 	mov	r3, r2
    33f4:	e54b3014 	strb	r3, [fp, #-20]
	static unsigned char cnt=0;
	static int E, N;

	if(reset) cnt=0;
    33f8:	e55b3014 	ldrb	r3, [fp, #-20]
    33fc:	e3530000 	cmp	r3, #0	; 0x0
    3400:	0a000003 	beq	3414 <parse_POSUTM+0x40>
    3404:	e59f3188 	ldr	r3, [pc, #392]	; 3594 <.text+0x3594>
    3408:	e3a02000 	mov	r2, #0	; 0x0
    340c:	e5c32000 	strb	r2, [r3]
    3410:	ea00005c 	b	3588 <parse_POSUTM+0x1b4>
	else
	{
		if(cnt==0) E=c;
    3414:	e59f3178 	ldr	r3, [pc, #376]	; 3594 <.text+0x3594>
    3418:	e5d33000 	ldrb	r3, [r3]
    341c:	e3530000 	cmp	r3, #0	; 0x0
    3420:	1a000003 	bne	3434 <parse_POSUTM+0x60>
    3424:	e55b2010 	ldrb	r2, [fp, #-16]
    3428:	e59f3168 	ldr	r3, [pc, #360]	; 3598 <.text+0x3598>
    342c:	e5832000 	str	r2, [r3]
    3430:	ea00004e 	b	3570 <parse_POSUTM+0x19c>
		else if(cnt==1) E+=c<<8;
    3434:	e59f3158 	ldr	r3, [pc, #344]	; 3594 <.text+0x3594>
    3438:	e5d33000 	ldrb	r3, [r3]
    343c:	e3530001 	cmp	r3, #1	; 0x1
    3440:	1a000007 	bne	3464 <parse_POSUTM+0x90>
    3444:	e55b3010 	ldrb	r3, [fp, #-16]
    3448:	e1a02403 	mov	r2, r3, lsl #8
    344c:	e59f3144 	ldr	r3, [pc, #324]	; 3598 <.text+0x3598>
    3450:	e5933000 	ldr	r3, [r3]
    3454:	e0822003 	add	r2, r2, r3
    3458:	e59f3138 	ldr	r3, [pc, #312]	; 3598 <.text+0x3598>
    345c:	e5832000 	str	r2, [r3]
    3460:	ea000042 	b	3570 <parse_POSUTM+0x19c>
		else if(cnt==2) E+=c<<16;
    3464:	e59f3128 	ldr	r3, [pc, #296]	; 3594 <.text+0x3594>
    3468:	e5d33000 	ldrb	r3, [r3]
    346c:	e3530002 	cmp	r3, #2	; 0x2
    3470:	1a000007 	bne	3494 <parse_POSUTM+0xc0>
    3474:	e55b3010 	ldrb	r3, [fp, #-16]
    3478:	e1a02803 	mov	r2, r3, lsl #16
    347c:	e59f3114 	ldr	r3, [pc, #276]	; 3598 <.text+0x3598>
    3480:	e5933000 	ldr	r3, [r3]
    3484:	e0822003 	add	r2, r2, r3
    3488:	e59f3108 	ldr	r3, [pc, #264]	; 3598 <.text+0x3598>
    348c:	e5832000 	str	r2, [r3]
    3490:	ea000036 	b	3570 <parse_POSUTM+0x19c>
		else if(cnt==3) E+=c<<24;
    3494:	e59f30f8 	ldr	r3, [pc, #248]	; 3594 <.text+0x3594>
    3498:	e5d33000 	ldrb	r3, [r3]
    349c:	e3530003 	cmp	r3, #3	; 0x3
    34a0:	1a000007 	bne	34c4 <parse_POSUTM+0xf0>
    34a4:	e55b3010 	ldrb	r3, [fp, #-16]
    34a8:	e1a02c03 	mov	r2, r3, lsl #24
    34ac:	e59f30e4 	ldr	r3, [pc, #228]	; 3598 <.text+0x3598>
    34b0:	e5933000 	ldr	r3, [r3]
    34b4:	e0822003 	add	r2, r2, r3
    34b8:	e59f30d8 	ldr	r3, [pc, #216]	; 3598 <.text+0x3598>
    34bc:	e5832000 	str	r2, [r3]
    34c0:	ea00002a 	b	3570 <parse_POSUTM+0x19c>
		else if(cnt==4) N=c;
    34c4:	e59f30c8 	ldr	r3, [pc, #200]	; 3594 <.text+0x3594>
    34c8:	e5d33000 	ldrb	r3, [r3]
    34cc:	e3530004 	cmp	r3, #4	; 0x4
    34d0:	1a000003 	bne	34e4 <parse_POSUTM+0x110>
    34d4:	e55b2010 	ldrb	r2, [fp, #-16]
    34d8:	e59f30bc 	ldr	r3, [pc, #188]	; 359c <.text+0x359c>
    34dc:	e5832000 	str	r2, [r3]
    34e0:	ea000022 	b	3570 <parse_POSUTM+0x19c>
		else if(cnt==5) N+=c<<8;
    34e4:	e59f30a8 	ldr	r3, [pc, #168]	; 3594 <.text+0x3594>
    34e8:	e5d33000 	ldrb	r3, [r3]
    34ec:	e3530005 	cmp	r3, #5	; 0x5
    34f0:	1a000007 	bne	3514 <parse_POSUTM+0x140>
    34f4:	e55b3010 	ldrb	r3, [fp, #-16]
    34f8:	e1a02403 	mov	r2, r3, lsl #8
    34fc:	e59f3098 	ldr	r3, [pc, #152]	; 359c <.text+0x359c>
    3500:	e5933000 	ldr	r3, [r3]
    3504:	e0822003 	add	r2, r2, r3
    3508:	e59f308c 	ldr	r3, [pc, #140]	; 359c <.text+0x359c>
    350c:	e5832000 	str	r2, [r3]
    3510:	ea000016 	b	3570 <parse_POSUTM+0x19c>
		else if(cnt==6) N+=c<<16;
    3514:	e59f3078 	ldr	r3, [pc, #120]	; 3594 <.text+0x3594>
    3518:	e5d33000 	ldrb	r3, [r3]
    351c:	e3530006 	cmp	r3, #6	; 0x6
    3520:	1a000007 	bne	3544 <parse_POSUTM+0x170>
    3524:	e55b3010 	ldrb	r3, [fp, #-16]
    3528:	e1a02803 	mov	r2, r3, lsl #16
    352c:	e59f3068 	ldr	r3, [pc, #104]	; 359c <.text+0x359c>
    3530:	e5933000 	ldr	r3, [r3]
    3534:	e0822003 	add	r2, r2, r3
    3538:	e59f305c 	ldr	r3, [pc, #92]	; 359c <.text+0x359c>
    353c:	e5832000 	str	r2, [r3]
    3540:	ea00000a 	b	3570 <parse_POSUTM+0x19c>
		else if(cnt==7)
    3544:	e59f3048 	ldr	r3, [pc, #72]	; 3594 <.text+0x3594>
    3548:	e5d33000 	ldrb	r3, [r3]
    354c:	e3530007 	cmp	r3, #7	; 0x7
    3550:	1a000006 	bne	3570 <parse_POSUTM+0x19c>
		{
			N+=c<<24;
    3554:	e55b3010 	ldrb	r3, [fp, #-16]
    3558:	e1a02c03 	mov	r2, r3, lsl #24
    355c:	e59f3038 	ldr	r3, [pc, #56]	; 359c <.text+0x359c>
    3560:	e5933000 	ldr	r3, [r3]
    3564:	e0822003 	add	r2, r2, r3
    3568:	e59f302c 	ldr	r3, [pc, #44]	; 359c <.text+0x359c>
    356c:	e5832000 	str	r2, [r3]
//			GPS_Data.x=E;
//			GPS_Data.y=N;
		}
		cnt++;
    3570:	e59f301c 	ldr	r3, [pc, #28]	; 3594 <.text+0x3594>
    3574:	e5d33000 	ldrb	r3, [r3]
    3578:	e2833001 	add	r3, r3, #1	; 0x1
    357c:	e20330ff 	and	r3, r3, #255	; 0xff
    3580:	e59f200c 	ldr	r2, [pc, #12]	; 3594 <.text+0x3594>
    3584:	e5c23000 	strb	r3, [r2]
	}
}
    3588:	e24bd00c 	sub	sp, fp, #12	; 0xc
    358c:	e89d6800 	ldmia	sp, {fp, sp, lr}
    3590:	e12fff1e 	bx	lr
    3594:	400008f4 	strmid	r0, [r0], -r4
    3598:	400008f0 	strmid	r0, [r0], -r0
    359c:	400008ec 	andmi	r0, r0, ip, ror #17

000035a0 <parse_NAVSOL>:

//NAVSOL is the only packet where the first 4 bytes need to be parsed. Any other packet discardes the first 4 bytes!!!
inline void parse_NAVSOL(unsigned char c, unsigned char reset)
{
    35a0:	e1a0c00d 	mov	ip, sp
    35a4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    35a8:	e24cb004 	sub	fp, ip, #4	; 0x4
    35ac:	e24dd008 	sub	sp, sp, #8	; 0x8
    35b0:	e1a03000 	mov	r3, r0
    35b4:	e1a02001 	mov	r2, r1
    35b8:	e54b3010 	strb	r3, [fp, #-16]
    35bc:	e1a03002 	mov	r3, r2
    35c0:	e54b3014 	strb	r3, [fp, #-20]
	static unsigned char cnt=0;
	static unsigned int tow;
	static unsigned short week;

	if(reset) cnt=0;
    35c4:	e55b3014 	ldrb	r3, [fp, #-20]
    35c8:	e3530000 	cmp	r3, #0	; 0x0
    35cc:	0a000003 	beq	35e0 <parse_NAVSOL+0x40>
    35d0:	e59f3184 	ldr	r3, [pc, #388]	; 375c <.text+0x375c>
    35d4:	e3a02000 	mov	r2, #0	; 0x0
    35d8:	e5c32000 	strb	r2, [r3]
    35dc:	ea00005b 	b	3750 <parse_NAVSOL+0x1b0>
	else
	{
		if(cnt==0) tow=c;
    35e0:	e59f3174 	ldr	r3, [pc, #372]	; 375c <.text+0x375c>
    35e4:	e5d33000 	ldrb	r3, [r3]
    35e8:	e3530000 	cmp	r3, #0	; 0x0
    35ec:	1a000003 	bne	3600 <parse_NAVSOL+0x60>
    35f0:	e55b2010 	ldrb	r2, [fp, #-16]
    35f4:	e59f3164 	ldr	r3, [pc, #356]	; 3760 <.text+0x3760>
    35f8:	e5832000 	str	r2, [r3]
    35fc:	ea00004d 	b	3738 <parse_NAVSOL+0x198>
		else if(cnt==1)	tow+=c<<8;
    3600:	e59f3154 	ldr	r3, [pc, #340]	; 375c <.text+0x375c>
    3604:	e5d33000 	ldrb	r3, [r3]
    3608:	e3530001 	cmp	r3, #1	; 0x1
    360c:	1a000008 	bne	3634 <parse_NAVSOL+0x94>
    3610:	e55b3010 	ldrb	r3, [fp, #-16]
    3614:	e1a03403 	mov	r3, r3, lsl #8
    3618:	e1a02003 	mov	r2, r3
    361c:	e59f313c 	ldr	r3, [pc, #316]	; 3760 <.text+0x3760>
    3620:	e5933000 	ldr	r3, [r3]
    3624:	e0822003 	add	r2, r2, r3
    3628:	e59f3130 	ldr	r3, [pc, #304]	; 3760 <.text+0x3760>
    362c:	e5832000 	str	r2, [r3]
    3630:	ea000040 	b	3738 <parse_NAVSOL+0x198>
		else if(cnt==2)	tow+=c<<16;
    3634:	e59f3120 	ldr	r3, [pc, #288]	; 375c <.text+0x375c>
    3638:	e5d33000 	ldrb	r3, [r3]
    363c:	e3530002 	cmp	r3, #2	; 0x2
    3640:	1a000008 	bne	3668 <parse_NAVSOL+0xc8>
    3644:	e55b3010 	ldrb	r3, [fp, #-16]
    3648:	e1a03803 	mov	r3, r3, lsl #16
    364c:	e1a02003 	mov	r2, r3
    3650:	e59f3108 	ldr	r3, [pc, #264]	; 3760 <.text+0x3760>
    3654:	e5933000 	ldr	r3, [r3]
    3658:	e0822003 	add	r2, r2, r3
    365c:	e59f30fc 	ldr	r3, [pc, #252]	; 3760 <.text+0x3760>
    3660:	e5832000 	str	r2, [r3]
    3664:	ea000033 	b	3738 <parse_NAVSOL+0x198>
		else if(cnt==3) tow+=c<<24;
    3668:	e59f30ec 	ldr	r3, [pc, #236]	; 375c <.text+0x375c>
    366c:	e5d33000 	ldrb	r3, [r3]
    3670:	e3530003 	cmp	r3, #3	; 0x3
    3674:	1a000008 	bne	369c <parse_NAVSOL+0xfc>
    3678:	e55b3010 	ldrb	r3, [fp, #-16]
    367c:	e1a03c03 	mov	r3, r3, lsl #24
    3680:	e1a02003 	mov	r2, r3
    3684:	e59f30d4 	ldr	r3, [pc, #212]	; 3760 <.text+0x3760>
    3688:	e5933000 	ldr	r3, [r3]
    368c:	e0822003 	add	r2, r2, r3
    3690:	e59f30c8 	ldr	r3, [pc, #200]	; 3760 <.text+0x3760>
    3694:	e5832000 	str	r2, [r3]
    3698:	ea000026 	b	3738 <parse_NAVSOL+0x198>
		else if(cnt==8) week=c;
    369c:	e59f30b8 	ldr	r3, [pc, #184]	; 375c <.text+0x375c>
    36a0:	e5d33000 	ldrb	r3, [r3]
    36a4:	e3530008 	cmp	r3, #8	; 0x8
    36a8:	1a000003 	bne	36bc <parse_NAVSOL+0x11c>
    36ac:	e55b2010 	ldrb	r2, [fp, #-16]
    36b0:	e59f30ac 	ldr	r3, [pc, #172]	; 3764 <.text+0x3764>
    36b4:	e1c320b0 	strh	r2, [r3]
    36b8:	ea00001e 	b	3738 <parse_NAVSOL+0x198>
		else if(cnt==9)
    36bc:	e59f3098 	ldr	r3, [pc, #152]	; 375c <.text+0x375c>
    36c0:	e5d33000 	ldrb	r3, [r3]
    36c4:	e3530009 	cmp	r3, #9	; 0x9
    36c8:	1a000013 	bne	371c <parse_NAVSOL+0x17c>
		{
			week+=c<<8;
    36cc:	e55b3010 	ldrb	r3, [fp, #-16]
    36d0:	e1a03403 	mov	r3, r3, lsl #8
    36d4:	e1a03803 	mov	r3, r3, lsl #16
    36d8:	e1a02823 	mov	r2, r3, lsr #16
    36dc:	e59f3080 	ldr	r3, [pc, #128]	; 3764 <.text+0x3764>
    36e0:	e1d330b0 	ldrh	r3, [r3]
    36e4:	e0823003 	add	r3, r2, r3
    36e8:	e1a03803 	mov	r3, r3, lsl #16
    36ec:	e1a02823 	mov	r2, r3, lsr #16
    36f0:	e59f306c 	ldr	r3, [pc, #108]	; 3764 <.text+0x3764>
    36f4:	e1c320b0 	strh	r2, [r3]
			GPS_Time.time_of_week=tow;
    36f8:	e59f3060 	ldr	r3, [pc, #96]	; 3760 <.text+0x3760>
    36fc:	e5932000 	ldr	r2, [r3]
    3700:	e59f3060 	ldr	r3, [pc, #96]	; 3768 <.text+0x3768>
    3704:	e5832000 	str	r2, [r3]
			GPS_Time.week=week;
    3708:	e59f3054 	ldr	r3, [pc, #84]	; 3764 <.text+0x3764>
    370c:	e1d320b0 	ldrh	r2, [r3]
    3710:	e59f3050 	ldr	r3, [pc, #80]	; 3768 <.text+0x3768>
    3714:	e1c320b4 	strh	r2, [r3, #4]
    3718:	ea000006 	b	3738 <parse_NAVSOL+0x198>
		}
		else if(cnt==47)
    371c:	e59f3038 	ldr	r3, [pc, #56]	; 375c <.text+0x375c>
    3720:	e5d33000 	ldrb	r3, [r3]
    3724:	e353002f 	cmp	r3, #47	; 0x2f
    3728:	1a000002 	bne	3738 <parse_NAVSOL+0x198>
		{
			GPS_Data.numSV=c;
    372c:	e55b2010 	ldrb	r2, [fp, #-16]
    3730:	e59f3034 	ldr	r3, [pc, #52]	; 376c <.text+0x376c>
    3734:	e5832024 	str	r2, [r3, #36]
		}
		cnt++;
    3738:	e59f301c 	ldr	r3, [pc, #28]	; 375c <.text+0x375c>
    373c:	e5d33000 	ldrb	r3, [r3]
    3740:	e2833001 	add	r3, r3, #1	; 0x1
    3744:	e20330ff 	and	r3, r3, #255	; 0xff
    3748:	e59f200c 	ldr	r2, [pc, #12]	; 375c <.text+0x375c>
    374c:	e5c23000 	strb	r3, [r2]
	}
}
    3750:	e24bd00c 	sub	sp, fp, #12	; 0xc
    3754:	e89d6800 	ldmia	sp, {fp, sp, lr}
    3758:	e12fff1e 	bx	lr
    375c:	400008fc 	strmid	r0, [r0], -ip
    3760:	400008f8 	strmid	r0, [r0], -r8
    3764:	400008f6 	strmid	r0, [r0], -r6
    3768:	40000eb4 	strmih	r0, [r0], -r4
    376c:	40000e2c 	andmi	r0, r0, ip, lsr #28

00003770 <parse_STATUS>:

inline void parse_STATUS(unsigned char c, unsigned char reset)
{
    3770:	e1a0c00d 	mov	ip, sp
    3774:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    3778:	e24cb004 	sub	fp, ip, #4	; 0x4
    377c:	e24dd008 	sub	sp, sp, #8	; 0x8
    3780:	e1a03000 	mov	r3, r0
    3784:	e1a02001 	mov	r2, r1
    3788:	e54b3010 	strb	r3, [fp, #-16]
    378c:	e1a03002 	mov	r3, r2
    3790:	e54b3014 	strb	r3, [fp, #-20]
	static unsigned char cnt=0;
	static unsigned char GPSfix, flags, diffs;

	if(reset) cnt=0;
    3794:	e55b3014 	ldrb	r3, [fp, #-20]
    3798:	e3530000 	cmp	r3, #0	; 0x0
    379c:	0a000003 	beq	37b0 <parse_STATUS+0x40>
    37a0:	e59f30bc 	ldr	r3, [pc, #188]	; 3864 <.text+0x3864>
    37a4:	e3a02000 	mov	r2, #0	; 0x0
    37a8:	e5c32000 	strb	r2, [r3]
    37ac:	ea000029 	b	3858 <parse_STATUS+0xe8>
	else
	{
		if(cnt==0) GPSfix=c;
    37b0:	e59f30ac 	ldr	r3, [pc, #172]	; 3864 <.text+0x3864>
    37b4:	e5d33000 	ldrb	r3, [r3]
    37b8:	e3530000 	cmp	r3, #0	; 0x0
    37bc:	1a000003 	bne	37d0 <parse_STATUS+0x60>
    37c0:	e59f20a0 	ldr	r2, [pc, #160]	; 3868 <.text+0x3868>
    37c4:	e55b3010 	ldrb	r3, [fp, #-16]
    37c8:	e5c23000 	strb	r3, [r2]
    37cc:	ea00001b 	b	3840 <parse_STATUS+0xd0>
		else if(cnt==1) flags=c;
    37d0:	e59f308c 	ldr	r3, [pc, #140]	; 3864 <.text+0x3864>
    37d4:	e5d33000 	ldrb	r3, [r3]
    37d8:	e3530001 	cmp	r3, #1	; 0x1
    37dc:	1a000003 	bne	37f0 <parse_STATUS+0x80>
    37e0:	e59f2084 	ldr	r2, [pc, #132]	; 386c <.text+0x386c>
    37e4:	e55b3010 	ldrb	r3, [fp, #-16]
    37e8:	e5c23000 	strb	r3, [r2]
    37ec:	ea000013 	b	3840 <parse_STATUS+0xd0>
		else if(cnt==2)
    37f0:	e59f306c 	ldr	r3, [pc, #108]	; 3864 <.text+0x3864>
    37f4:	e5d33000 	ldrb	r3, [r3]
    37f8:	e3530002 	cmp	r3, #2	; 0x2
    37fc:	1a00000f 	bne	3840 <parse_STATUS+0xd0>
		{
			diffs=c;
    3800:	e59f2068 	ldr	r2, [pc, #104]	; 3870 <.text+0x3870>
    3804:	e55b3010 	ldrb	r3, [fp, #-16]
    3808:	e5c23000 	strb	r3, [r2]
			GPS_Data.status=GPSfix|(flags<<8)|(diffs<<16);
    380c:	e59f3054 	ldr	r3, [pc, #84]	; 3868 <.text+0x3868>
    3810:	e5d33000 	ldrb	r3, [r3]
    3814:	e1a02003 	mov	r2, r3
    3818:	e59f304c 	ldr	r3, [pc, #76]	; 386c <.text+0x386c>
    381c:	e5d33000 	ldrb	r3, [r3]
    3820:	e1a03403 	mov	r3, r3, lsl #8
    3824:	e1822003 	orr	r2, r2, r3
    3828:	e59f3040 	ldr	r3, [pc, #64]	; 3870 <.text+0x3870>
    382c:	e5d33000 	ldrb	r3, [r3]
    3830:	e1a03803 	mov	r3, r3, lsl #16
    3834:	e1822003 	orr	r2, r2, r3
    3838:	e59f3034 	ldr	r3, [pc, #52]	; 3874 <.text+0x3874>
    383c:	e5832028 	str	r2, [r3, #40]
		}
		cnt++;
    3840:	e59f301c 	ldr	r3, [pc, #28]	; 3864 <.text+0x3864>
    3844:	e5d33000 	ldrb	r3, [r3]
    3848:	e2833001 	add	r3, r3, #1	; 0x1
    384c:	e20330ff 	and	r3, r3, #255	; 0xff
    3850:	e59f200c 	ldr	r2, [pc, #12]	; 3864 <.text+0x3864>
    3854:	e5c23000 	strb	r3, [r2]
	}
}
    3858:	e24bd00c 	sub	sp, fp, #12	; 0xc
    385c:	e89d6800 	ldmia	sp, {fp, sp, lr}
    3860:	e12fff1e 	bx	lr
    3864:	40000900 	andmi	r0, r0, r0, lsl #18
    3868:	400008ff 	strmid	r0, [r0], -pc
    386c:	400008fe 	strmid	r0, [r0], -lr
    3870:	400008fd 	strmid	r0, [r0], -sp
    3874:	40000e2c 	andmi	r0, r0, ip, lsr #28

00003878 <uart1ISR>:

void uart1ISR(void) __irq
{
    3878:	e1a0c00d 	mov	ip, sp
    387c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    3880:	e24cb004 	sub	fp, ip, #4	; 0x4
    3884:	e24dd00c 	sub	sp, sp, #12	; 0xc
  static unsigned char state;
  static unsigned char current_packet;
  static unsigned short cnt, length;
  unsigned char t;
  unsigned char c;
  IENABLE;
  unsigned iir = U1IIR;
    3888:	e3a0328e 	mov	r3, #-536870904	; 0xe0000008
    388c:	e2833801 	add	r3, r3, #65536	; 0x10000
    3890:	e5933000 	ldr	r3, [r3]
    3894:	e50b3010 	str	r3, [fp, #-16]
  // Handle UART interrupt
  switch ((iir >> 1) & 0x7)
    3898:	e51b3010 	ldr	r3, [fp, #-16]
    389c:	e1a030a3 	mov	r3, r3, lsr #1
    38a0:	e2033007 	and	r3, r3, #7	; 0x7
    38a4:	e50b3018 	str	r3, [fp, #-24]
    38a8:	e51b3018 	ldr	r3, [fp, #-24]
    38ac:	e3530001 	cmp	r3, #1	; 0x1
    38b0:	0a000003 	beq	38c4 <uart1ISR+0x4c>
    38b4:	e51b3018 	ldr	r3, [fp, #-24]
    38b8:	e3530002 	cmp	r3, #2	; 0x2
    38bc:	0a00001d 	beq	3938 <uart1ISR+0xc0>
    38c0:	ea000132 	b	3d90 <.text+0x3d90>
    {
      case 1:
		  // THRE interrupt

		 if (ringbuffer1(RBREAD, &t, 1))
    38c4:	e24b3012 	sub	r3, fp, #18	; 0x12
    38c8:	e3a00000 	mov	r0, #0	; 0x0
    38cc:	e1a01003 	mov	r1, r3
    38d0:	e3a02001 	mov	r2, #1	; 0x1
    38d4:	eb00040c 	bl	490c <ringbuffer1>
    38d8:	e1a03000 	mov	r3, r0
    38dc:	e3530000 	cmp	r3, #0	; 0x0
    38e0:	0a000006 	beq	3900 <uart1ISR+0x88>
		 {
		   transmission1_running=1;
    38e4:	e59f24c0 	ldr	r2, [pc, #1216]	; 3dac <.text+0x3dac>
    38e8:	e3a03001 	mov	r3, #1	; 0x1
    38ec:	e5c23000 	strb	r3, [r2]
		   UART1WriteChar(t);
    38f0:	e55b3012 	ldrb	r3, [fp, #-18]
    38f4:	e1a00003 	mov	r0, r3
    38f8:	eb0001df 	bl	407c <UART1WriteChar>
    38fc:	ea000123 	b	3d90 <.text+0x3d90>
		 }
		 else
		 {
		   transmission1_running=0;
    3900:	e59f24a4 	ldr	r2, [pc, #1188]	; 3dac <.text+0x3dac>
    3904:	e3a03000 	mov	r3, #0	; 0x0
    3908:	e5c23000 	strb	r3, [r2]
		   if (baudrate1_change)		//baudrate change after first GPS config command
    390c:	e59f349c 	ldr	r3, [pc, #1180]	; 3db0 <.text+0x3db0>
    3910:	e5d33000 	ldrb	r3, [r3]
    3914:	e20330ff 	and	r3, r3, #255	; 0xff
    3918:	e3530000 	cmp	r3, #0	; 0x0
    391c:	0a00011b 	beq	3d90 <.text+0x3d90>
		   {
			   UART1Initialize(57600);
    3920:	e3a00ce1 	mov	r0, #57600	; 0xe100
    3924:	eb000195 	bl	3f80 <UART1Initialize>
			   baudrate1_change=0;
    3928:	e59f3480 	ldr	r3, [pc, #1152]	; 3db0 <.text+0x3db0>
    392c:	e3a02000 	mov	r2, #0	; 0x0
    3930:	e5c32000 	strb	r2, [r3]
		   }
		 }
        break;
    3934:	ea000115 	b	3d90 <.text+0x3d90>
      case 2:
		c=U1RBR;
    3938:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    393c:	e2833801 	add	r3, r3, #65536	; 0x10000
    3940:	e5933000 	ldr	r3, [r3]
    3944:	e54b3011 	strb	r3, [fp, #-17]

		//UARTWriteChar(c);

#ifndef INDOOR_GPS	//run GPS statemachine

        //parse UBX (U0RBR);

	//SSP_trans_cnt++;
		switch (state)
    3948:	e59f3464 	ldr	r3, [pc, #1124]	; 3db4 <.text+0x3db4>
    394c:	e5d33000 	ldrb	r3, [r3]
    3950:	e353000e 	cmp	r3, #14	; 0xe
    3954:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    3958:	ea000109 	b	3d84 <.text+0x3d84>
    395c:	00003998 	muleq	r0, r8, r9
    3960:	000039b4 	streqh	r3, [r0], -r4
    3964:	000039e0 	andeq	r3, r0, r0, ror #19
    3968:	00003a28 	andeq	r3, r0, r8, lsr #20
    396c:	00003a50 	andeq	r3, r0, r0, asr sl
    3970:	00003ad0 	ldreqd	r3, [r0], -r0
    3974:	00003b94 	muleq	r0, r4, fp
    3978:	00003d84 	andeq	r3, r0, r4, lsl #27
    397c:	00003d84 	andeq	r3, r0, r4, lsl #27
    3980:	00003d84 	andeq	r3, r0, r4, lsl #27
    3984:	00003c7c 	andeq	r3, r0, ip, ror ip
    3988:	00003cb4 	streqh	r3, [r0], -r4
    398c:	00003d18 	andeq	r3, r0, r8, lsl sp
    3990:	00003d44 	andeq	r3, r0, r4, asr #26
    3994:	00003d54 	andeq	r3, r0, r4, asr sp
		{
			case 0:
				if(c==0xB5)
    3998:	e55b3011 	ldrb	r3, [fp, #-17]
    399c:	e35300b5 	cmp	r3, #181	; 0xb5
    39a0:	1a0000fa 	bne	3d90 <.text+0x3d90>
				{
					state=1;
    39a4:	e59f3408 	ldr	r3, [pc, #1032]	; 3db4 <.text+0x3db4>
    39a8:	e3a02001 	mov	r2, #1	; 0x1
    39ac:	e5c32000 	strb	r2, [r3]
				}
			break;
    39b0:	ea0000f6 	b	3d90 <.text+0x3d90>
			case 1:
				if(c==0x62)
    39b4:	e55b3011 	ldrb	r3, [fp, #-17]
    39b8:	e3530062 	cmp	r3, #98	; 0x62
    39bc:	1a000003 	bne	39d0 <.text+0x39d0>
				{
					state=2;
    39c0:	e59f33ec 	ldr	r3, [pc, #1004]	; 3db4 <.text+0x3db4>
    39c4:	e3a02002 	mov	r2, #2	; 0x2
    39c8:	e5c32000 	strb	r2, [r3]
    39cc:	ea0000ef 	b	3d90 <.text+0x3d90>
				}
				else state=0;
    39d0:	e59f33dc 	ldr	r3, [pc, #988]	; 3db4 <.text+0x3db4>
    39d4:	e3a02000 	mov	r2, #0	; 0x0
    39d8:	e5c32000 	strb	r2, [r3]
			break;
    39dc:	ea0000eb 	b	3d90 <.text+0x3d90>
			case 2:
				if(c==0x01)	//NAV message
    39e0:	e55b3011 	ldrb	r3, [fp, #-17]
    39e4:	e3530001 	cmp	r3, #1	; 0x1
    39e8:	1a000003 	bne	39fc <.text+0x39fc>
				{
				 	state=3;
    39ec:	e59f33c0 	ldr	r3, [pc, #960]	; 3db4 <.text+0x3db4>
    39f0:	e3a02003 	mov	r2, #3	; 0x3
    39f4:	e5c32000 	strb	r2, [r3]
    39f8:	ea0000e4 	b	3d90 <.text+0x3d90>
				}
				else if (c==0x05)	//ACK message
    39fc:	e55b3011 	ldrb	r3, [fp, #-17]
    3a00:	e3530005 	cmp	r3, #5	; 0x5
    3a04:	1a000003 	bne	3a18 <.text+0x3a18>
					{
						state=10;
    3a08:	e59f33a4 	ldr	r3, [pc, #932]	; 3db4 <.text+0x3db4>
    3a0c:	e3a0200a 	mov	r2, #10	; 0xa
    3a10:	e5c32000 	strb	r2, [r3]
    3a14:	ea0000dd 	b	3d90 <.text+0x3d90>
					}
				else state=0;
    3a18:	e59f3394 	ldr	r3, [pc, #916]	; 3db4 <.text+0x3db4>
    3a1c:	e3a02000 	mov	r2, #0	; 0x0
    3a20:	e5c32000 	strb	r2, [r3]
			break;
    3a24:	ea0000d9 	b	3d90 <.text+0x3d90>
			case 3:
				current_packet=c;
    3a28:	e59f2388 	ldr	r2, [pc, #904]	; 3db8 <.text+0x3db8>
    3a2c:	e55b3011 	ldrb	r3, [fp, #-17]
    3a30:	e5c23000 	strb	r3, [r2]
				cnt=0;
    3a34:	e59f2380 	ldr	r2, [pc, #896]	; 3dbc <.text+0x3dbc>
    3a38:	e3a03000 	mov	r3, #0	; 0x0
    3a3c:	e1c230b0 	strh	r3, [r2]
				state=4;
    3a40:	e59f236c 	ldr	r2, [pc, #876]	; 3db4 <.text+0x3db4>
    3a44:	e3a03004 	mov	r3, #4	; 0x4
    3a48:	e5c23000 	strb	r3, [r2]
			break;
    3a4c:	ea0000cf 	b	3d90 <.text+0x3d90>
			case 4:
				if(!cnt) length=c;
    3a50:	e59f3364 	ldr	r3, [pc, #868]	; 3dbc <.text+0x3dbc>
    3a54:	e1d330b0 	ldrh	r3, [r3]
    3a58:	e3530000 	cmp	r3, #0	; 0x0
    3a5c:	1a000002 	bne	3a6c <.text+0x3a6c>
    3a60:	e55b2011 	ldrb	r2, [fp, #-17]
    3a64:	e59f3354 	ldr	r3, [pc, #852]	; 3dc0 <.text+0x3dc0>
    3a68:	e1c320b0 	strh	r2, [r3]
				if(current_packet==0x06) parse_NAVSOL(0,1);
    3a6c:	e59f3344 	ldr	r3, [pc, #836]	; 3db8 <.text+0x3db8>
    3a70:	e5d33000 	ldrb	r3, [r3]
    3a74:	e3530006 	cmp	r3, #6	; 0x6
    3a78:	1a000002 	bne	3a88 <.text+0x3a88>
    3a7c:	e3a00000 	mov	r0, #0	; 0x0
    3a80:	e3a01001 	mov	r1, #1	; 0x1
    3a84:	ebfffec5 	bl	35a0 <parse_NAVSOL>
				if(++cnt==2)
    3a88:	e59f332c 	ldr	r3, [pc, #812]	; 3dbc <.text+0x3dbc>
    3a8c:	e1d330b0 	ldrh	r3, [r3]
    3a90:	e2833001 	add	r3, r3, #1	; 0x1
    3a94:	e1a03803 	mov	r3, r3, lsl #16
    3a98:	e1a02823 	mov	r2, r3, lsr #16
    3a9c:	e59f3318 	ldr	r3, [pc, #792]	; 3dbc <.text+0x3dbc>
    3aa0:	e1c320b0 	strh	r2, [r3]
    3aa4:	e59f3310 	ldr	r3, [pc, #784]	; 3dbc <.text+0x3dbc>
    3aa8:	e1d330b0 	ldrh	r3, [r3]
    3aac:	e3530002 	cmp	r3, #2	; 0x2
    3ab0:	1a0000b6 	bne	3d90 <.text+0x3d90>
				{
					cnt=0;
    3ab4:	e59f2300 	ldr	r2, [pc, #768]	; 3dbc <.text+0x3dbc>
    3ab8:	e3a03000 	mov	r3, #0	; 0x0
    3abc:	e1c230b0 	strh	r3, [r2]
					state=5;
    3ac0:	e59f22ec 	ldr	r2, [pc, #748]	; 3db4 <.text+0x3db4>
    3ac4:	e3a03005 	mov	r3, #5	; 0x5
    3ac8:	e5c23000 	strb	r3, [r2]
				}
			break;
    3acc:	ea0000af 	b	3d90 <.text+0x3d90>
			case 5:	//Four bytes ITOW
				//NAVSOL is the only packets where the first 4 bytes need to be parsed. Any other packet discardes the first 4 bytes!!!
				if(current_packet==0x06) parse_NAVSOL(c,0);
    3ad0:	e59f32e0 	ldr	r3, [pc, #736]	; 3db8 <.text+0x3db8>
    3ad4:	e5d33000 	ldrb	r3, [r3]
    3ad8:	e3530006 	cmp	r3, #6	; 0x6
    3adc:	1a000003 	bne	3af0 <.text+0x3af0>
    3ae0:	e55b3011 	ldrb	r3, [fp, #-17]
    3ae4:	e1a00003 	mov	r0, r3
    3ae8:	e3a01000 	mov	r1, #0	; 0x0
    3aec:	ebfffeab 	bl	35a0 <parse_NAVSOL>
				if(++cnt==4)
    3af0:	e59f32c4 	ldr	r3, [pc, #708]	; 3dbc <.text+0x3dbc>
    3af4:	e1d330b0 	ldrh	r3, [r3]
    3af8:	e2833001 	add	r3, r3, #1	; 0x1
    3afc:	e1a03803 	mov	r3, r3, lsl #16
    3b00:	e1a02823 	mov	r2, r3, lsr #16
    3b04:	e59f32b0 	ldr	r3, [pc, #688]	; 3dbc <.text+0x3dbc>
    3b08:	e1c320b0 	strh	r2, [r3]
    3b0c:	e59f32a8 	ldr	r3, [pc, #680]	; 3dbc <.text+0x3dbc>
    3b10:	e1d330b0 	ldrh	r3, [r3]
    3b14:	e3530004 	cmp	r3, #4	; 0x4
    3b18:	1a00009c 	bne	3d90 <.text+0x3d90>
				{
					cnt=0;
    3b1c:	e59f2298 	ldr	r2, [pc, #664]	; 3dbc <.text+0x3dbc>
    3b20:	e3a03000 	mov	r3, #0	; 0x0
    3b24:	e1c230b0 	strh	r3, [r2]
					state=6;
    3b28:	e59f2284 	ldr	r2, [pc, #644]	; 3db4 <.text+0x3db4>
    3b2c:	e3a03006 	mov	r3, #6	; 0x6
    3b30:	e5c23000 	strb	r3, [r2]
					if(current_packet==0x02) parse_POSLLH(0,1);
    3b34:	e59f327c 	ldr	r3, [pc, #636]	; 3db8 <.text+0x3db8>
    3b38:	e5d33000 	ldrb	r3, [r3]
    3b3c:	e3530002 	cmp	r3, #2	; 0x2
    3b40:	1a000003 	bne	3b54 <.text+0x3b54>
    3b44:	e3a00000 	mov	r0, #0	; 0x0
    3b48:	e3a01001 	mov	r1, #1	; 0x1
    3b4c:	ebfffd0b 	bl	2f80 <parse_POSLLH>
    3b50:	ea00008e 	b	3d90 <.text+0x3d90>
					//else if(current_packet==0x08) parse_POSUTM(0,1);
					else if(current_packet==0x03) parse_STATUS(0,1);
    3b54:	e59f325c 	ldr	r3, [pc, #604]	; 3db8 <.text+0x3db8>
    3b58:	e5d33000 	ldrb	r3, [r3]
    3b5c:	e3530003 	cmp	r3, #3	; 0x3
    3b60:	1a000003 	bne	3b74 <.text+0x3b74>
    3b64:	e3a00000 	mov	r0, #0	; 0x0
    3b68:	e3a01001 	mov	r1, #1	; 0x1
    3b6c:	ebfffeff 	bl	3770 <parse_STATUS>
    3b70:	ea000086 	b	3d90 <.text+0x3d90>
					else if(current_packet==0x12) parse_VELNED(0,1);
    3b74:	e59f323c 	ldr	r3, [pc, #572]	; 3db8 <.text+0x3db8>
    3b78:	e5d33000 	ldrb	r3, [r3]
    3b7c:	e3530012 	cmp	r3, #18	; 0x12
    3b80:	1a000082 	bne	3d90 <.text+0x3d90>
    3b84:	e3a00000 	mov	r0, #0	; 0x0
    3b88:	e3a01001 	mov	r1, #1	; 0x1
    3b8c:	ebfffc01 	bl	2b98 <parse_VELNED>
				}
			break;
    3b90:	ea00007e 	b	3d90 <.text+0x3d90>
			case 6:
				if(current_packet==0x02)
    3b94:	e59f321c 	ldr	r3, [pc, #540]	; 3db8 <.text+0x3db8>
    3b98:	e5d33000 	ldrb	r3, [r3]
    3b9c:	e3530002 	cmp	r3, #2	; 0x2
    3ba0:	1a000004 	bne	3bb8 <.text+0x3bb8>
				{
					parse_POSLLH(c,0);
    3ba4:	e55b3011 	ldrb	r3, [fp, #-17]
    3ba8:	e1a00003 	mov	r0, r3
    3bac:	e3a01000 	mov	r1, #0	; 0x0
    3bb0:	ebfffcf2 	bl	2f80 <parse_POSLLH>
    3bb4:	ea00001d 	b	3c30 <.text+0x3c30>
				}
		/*		else if(current_packet==0x08	//POSUTM currently not used
				{
					parse_POSUTM(c,0);
				}
			*/	else if(current_packet==0x03)
    3bb8:	e59f31f8 	ldr	r3, [pc, #504]	; 3db8 <.text+0x3db8>
    3bbc:	e5d33000 	ldrb	r3, [r3]
    3bc0:	e3530003 	cmp	r3, #3	; 0x3
    3bc4:	1a000004 	bne	3bdc <.text+0x3bdc>
				{
					parse_STATUS(c,0);
    3bc8:	e55b3011 	ldrb	r3, [fp, #-17]
    3bcc:	e1a00003 	mov	r0, r3
    3bd0:	e3a01000 	mov	r1, #0	; 0x0
    3bd4:	ebfffee5 	bl	3770 <parse_STATUS>
    3bd8:	ea000014 	b	3c30 <.text+0x3c30>
				}
				else if(current_packet==0x12)
    3bdc:	e59f31d4 	ldr	r3, [pc, #468]	; 3db8 <.text+0x3db8>
    3be0:	e5d33000 	ldrb	r3, [r3]
    3be4:	e3530012 	cmp	r3, #18	; 0x12
    3be8:	1a000004 	bne	3c00 <.text+0x3c00>
				{
					parse_VELNED(c,0);
    3bec:	e55b3011 	ldrb	r3, [fp, #-17]
    3bf0:	e1a00003 	mov	r0, r3
    3bf4:	e3a01000 	mov	r1, #0	; 0x0
    3bf8:	ebfffbe6 	bl	2b98 <parse_VELNED>
    3bfc:	ea00000b 	b	3c30 <.text+0x3c30>
				}
				else if(current_packet==0x06)
    3c00:	e59f31b0 	ldr	r3, [pc, #432]	; 3db8 <.text+0x3db8>
    3c04:	e5d33000 	ldrb	r3, [r3]
    3c08:	e3530006 	cmp	r3, #6	; 0x6
    3c0c:	1a000004 	bne	3c24 <.text+0x3c24>
				{
					parse_NAVSOL(c,0);
    3c10:	e55b3011 	ldrb	r3, [fp, #-17]
    3c14:	e1a00003 	mov	r0, r3
    3c18:	e3a01000 	mov	r1, #0	; 0x0
    3c1c:	ebfffe5f 	bl	35a0 <parse_NAVSOL>
    3c20:	ea000002 	b	3c30 <.text+0x3c30>
				}
				else state=0;
    3c24:	e59f3188 	ldr	r3, [pc, #392]	; 3db4 <.text+0x3db4>
    3c28:	e3a02000 	mov	r2, #0	; 0x0
    3c2c:	e5c32000 	strb	r2, [r3]

				if(++cnt>=length-4)
    3c30:	e59f3184 	ldr	r3, [pc, #388]	; 3dbc <.text+0x3dbc>
    3c34:	e1d330b0 	ldrh	r3, [r3]
    3c38:	e2833001 	add	r3, r3, #1	; 0x1
    3c3c:	e1a03803 	mov	r3, r3, lsl #16
    3c40:	e1a02823 	mov	r2, r3, lsr #16
    3c44:	e59f3170 	ldr	r3, [pc, #368]	; 3dbc <.text+0x3dbc>
    3c48:	e1c320b0 	strh	r2, [r3]
    3c4c:	e59f3168 	ldr	r3, [pc, #360]	; 3dbc <.text+0x3dbc>
    3c50:	e1d330b0 	ldrh	r3, [r3]
    3c54:	e1a02003 	mov	r2, r3
    3c58:	e59f3160 	ldr	r3, [pc, #352]	; 3dc0 <.text+0x3dc0>
    3c5c:	e1d330b0 	ldrh	r3, [r3]
    3c60:	e2433004 	sub	r3, r3, #4	; 0x4
    3c64:	e1520003 	cmp	r2, r3
    3c68:	ba000048 	blt	3d90 <.text+0x3d90>
				{
					state=0;
    3c6c:	e59f3140 	ldr	r3, [pc, #320]	; 3db4 <.text+0x3db4>
    3c70:	e3a02000 	mov	r2, #0	; 0x0
    3c74:	e5c32000 	strb	r2, [r3]
				}
			break;
    3c78:	ea000044 	b	3d90 <.text+0x3d90>
			case 10:
				if (c==0x01)
    3c7c:	e55b3011 	ldrb	r3, [fp, #-17]
    3c80:	e3530001 	cmp	r3, #1	; 0x1
    3c84:	1a000006 	bne	3ca4 <.text+0x3ca4>
				{
					cnt=0;
    3c88:	e59f212c 	ldr	r2, [pc, #300]	; 3dbc <.text+0x3dbc>
    3c8c:	e3a03000 	mov	r3, #0	; 0x0
    3c90:	e1c230b0 	strh	r3, [r2]
					state=11;
    3c94:	e59f2118 	ldr	r2, [pc, #280]	; 3db4 <.text+0x3db4>
    3c98:	e3a0300b 	mov	r3, #11	; 0xb
    3c9c:	e5c23000 	strb	r3, [r2]
    3ca0:	ea00003a 	b	3d90 <.text+0x3d90>
				} else
					state=0;
    3ca4:	e59f3108 	ldr	r3, [pc, #264]	; 3db4 <.text+0x3db4>
    3ca8:	e3a02000 	mov	r2, #0	; 0x0
    3cac:	e5c32000 	strb	r2, [r3]
			break;
    3cb0:	ea000036 	b	3d90 <.text+0x3d90>
			case 11:
				if (!cnt) length=c;
    3cb4:	e59f3100 	ldr	r3, [pc, #256]	; 3dbc <.text+0x3dbc>
    3cb8:	e1d330b0 	ldrh	r3, [r3]
    3cbc:	e3530000 	cmp	r3, #0	; 0x0
    3cc0:	1a000002 	bne	3cd0 <.text+0x3cd0>
    3cc4:	e55b2011 	ldrb	r2, [fp, #-17]
    3cc8:	e59f30f0 	ldr	r3, [pc, #240]	; 3dc0 <.text+0x3dc0>
    3ccc:	e1c320b0 	strh	r2, [r3]
				if (cnt++==1)
    3cd0:	e59f30e4 	ldr	r3, [pc, #228]	; 3dbc <.text+0x3dbc>
    3cd4:	e1d330b0 	ldrh	r3, [r3]
    3cd8:	e2833001 	add	r3, r3, #1	; 0x1
    3cdc:	e1a03803 	mov	r3, r3, lsl #16
    3ce0:	e1a02823 	mov	r2, r3, lsr #16
    3ce4:	e59f30d0 	ldr	r3, [pc, #208]	; 3dbc <.text+0x3dbc>
    3ce8:	e1c320b0 	strh	r2, [r3]
    3cec:	e59f30c8 	ldr	r3, [pc, #200]	; 3dbc <.text+0x3dbc>
    3cf0:	e1d330b0 	ldrh	r3, [r3]
    3cf4:	e3530002 	cmp	r3, #2	; 0x2
    3cf8:	1a000024 	bne	3d90 <.text+0x3d90>
				{
					cnt=0;
    3cfc:	e59f20b8 	ldr	r2, [pc, #184]	; 3dbc <.text+0x3dbc>
    3d00:	e3a03000 	mov	r3, #0	; 0x0
    3d04:	e1c230b0 	strh	r3, [r2]
					state=12;
    3d08:	e59f20a4 	ldr	r2, [pc, #164]	; 3db4 <.text+0x3db4>
    3d0c:	e3a0300c 	mov	r3, #12	; 0xc
    3d10:	e5c23000 	strb	r3, [r2]
				}
			break;
    3d14:	ea00001d 	b	3d90 <.text+0x3d90>
			case 12:
				if (c==0x06)		//ACK of a CFG-message
    3d18:	e55b3011 	ldrb	r3, [fp, #-17]
    3d1c:	e3530006 	cmp	r3, #6	; 0x6
    3d20:	1a000003 	bne	3d34 <.text+0x3d34>
				{
					state=13;
    3d24:	e59f3088 	ldr	r3, [pc, #136]	; 3db4 <.text+0x3db4>
    3d28:	e3a0200d 	mov	r2, #13	; 0xd
    3d2c:	e5c32000 	strb	r2, [r3]
    3d30:	ea000016 	b	3d90 <.text+0x3d90>
				} else
					state=0;
    3d34:	e59f3078 	ldr	r3, [pc, #120]	; 3db4 <.text+0x3db4>
    3d38:	e3a02000 	mov	r2, #0	; 0x0
    3d3c:	e5c32000 	strb	r2, [r3]
			break;
    3d40:	ea000012 	b	3d90 <.text+0x3d90>
			case 13:
				state=14;
    3d44:	e59f3068 	ldr	r3, [pc, #104]	; 3db4 <.text+0x3db4>
    3d48:	e3a0200e 	mov	r2, #14	; 0xe
    3d4c:	e5c32000 	strb	r2, [r3]
			break;
    3d50:	ea00000e 	b	3d90 <.text+0x3d90>
			case 14:
				if (!GPS_ACK_received)
    3d54:	e59f3068 	ldr	r3, [pc, #104]	; 3dc4 <.text+0x3dc4>
    3d58:	e5d33000 	ldrb	r3, [r3]
    3d5c:	e20330ff 	and	r3, r3, #255	; 0xff
    3d60:	e3530000 	cmp	r3, #0	; 0x0
    3d64:	1a000009 	bne	3d90 <.text+0x3d90>
				{
					GPS_ACK_received=1;
    3d68:	e59f2054 	ldr	r2, [pc, #84]	; 3dc4 <.text+0x3dc4>
    3d6c:	e3a03001 	mov	r3, #1	; 0x1
    3d70:	e5c23000 	strb	r3, [r2]
					state=0;
    3d74:	e59f2038 	ldr	r2, [pc, #56]	; 3db4 <.text+0x3db4>
    3d78:	e3a03000 	mov	r3, #0	; 0x0
    3d7c:	e5c23000 	strb	r3, [r2]
				}
			break;
    3d80:	ea000002 	b	3d90 <.text+0x3d90>
			default:
				state=0;
    3d84:	e59f3028 	ldr	r3, [pc, #40]	; 3db4 <.text+0x3db4>
    3d88:	e3a02000 	mov	r2, #0	; 0x0
    3d8c:	e5c32000 	strb	r2, [r3]
			break;
		}

#else	//run optical tracking statemachine
		switch (state)
		{
			case 0:
				if(c=='>') state=1;
			break;
			case 1:
				if(c=='*') state=2;
				else state=0;
			break;
			case 2:
				if(c=='>')	//Startstring received
				{
					UART1_rxcount=sizeof(OF_Data);
					UART1_rxptr=(unsigned char *)&OF_Data_e;
				 	state=3;
				}
				else state=0;
			break;
			case 3:
				UART1_rxcount--;
				*UART1_rxptr=c;
				UART1_rxptr++;
				if (UART1_rxcount==0)
	        	{
	             	state=0;
	             	OF_data_updated=0;
	        	}
			break;
			default:
			state=0;
			break;
		}
#endif

        break;
      case 3:
        // RLS interrupt
        break;
      case 6:
        // CTI interrupt
        break;
   }
  IDISABLE;
  VICVectAddr = 0;		/* Acknowledge Interrupt */
    3d90:	e3a03000 	mov	r3, #0	; 0x0
    3d94:	e2433efd 	sub	r3, r3, #4048	; 0xfd0
    3d98:	e3a02000 	mov	r2, #0	; 0x0
    3d9c:	e5832000 	str	r2, [r3]
}
    3da0:	e24bd00c 	sub	sp, fp, #12	; 0xc
    3da4:	e89d6800 	ldmia	sp, {fp, sp, lr}
    3da8:	e12fff1e 	bx	lr
    3dac:	400008af 	andmi	r0, r0, pc, lsr #17
    3db0:	400008b1 	strmih	r0, [r0], -r1
    3db4:	40000907 	andmi	r0, r0, r7, lsl #18
    3db8:	40000906 	andmi	r0, r0, r6, lsl #18
    3dbc:	40000904 	andmi	r0, r0, r4, lsl #18
    3dc0:	40000902 	andmi	r0, r0, r2, lsl #18
    3dc4:	400008be 	strmih	r0, [r0], -lr

00003dc8 <uart0ISR>:



void uart0ISR(void) __irq
{
    3dc8:	e1a0c00d 	mov	ip, sp
    3dcc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    3dd0:	e24cb004 	sub	fp, ip, #4	; 0x4
    3dd4:	e24dd00c 	sub	sp, sp, #12	; 0xc
  unsigned char t;
  unsigned char UART_rxdata;


  // Read IIR to clear interrupt and find out the cause
  IENABLE;
  unsigned iir = U0IIR;
    3dd8:	e3a03903 	mov	r3, #49152	; 0xc000
    3ddc:	e283328e 	add	r3, r3, #-536870904	; 0xe0000008
    3de0:	e5933000 	ldr	r3, [r3]
    3de4:	e50b3010 	str	r3, [fp, #-16]
  // Handle UART interrupt
  switch ((iir >> 1) & 0x7)
    3de8:	e51b3010 	ldr	r3, [fp, #-16]
    3dec:	e1a030a3 	mov	r3, r3, lsr #1
    3df0:	e2033007 	and	r3, r3, #7	; 0x7
    3df4:	e50b3018 	str	r3, [fp, #-24]
    3df8:	e51b3018 	ldr	r3, [fp, #-24]
    3dfc:	e3530001 	cmp	r3, #1	; 0x1
    3e00:	0a000003 	beq	3e14 <uart0ISR+0x4c>
    3e04:	e51b3018 	ldr	r3, [fp, #-24]
    3e08:	e3530002 	cmp	r3, #2	; 0x2
    3e0c:	0a000020 	beq	3e94 <uart0ISR+0xcc>
    3e10:	ea000026 	b	3eb0 <uart0ISR+0xe8>
    {
      case 1:
        // THRE interrupt
		if(!(IOPIN0&(1<<CTS_RADIO)))
    3e14:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    3e18:	e283390a 	add	r3, r3, #163840	; 0x28000
    3e1c:	e5933000 	ldr	r3, [r3]
    3e20:	e2033501 	and	r3, r3, #4194304	; 0x400000
    3e24:	e3530000 	cmp	r3, #0	; 0x0
    3e28:	1a000015 	bne	3e84 <uart0ISR+0xbc>
		{
			trigger_transmission=0;
    3e2c:	e59f2098 	ldr	r2, [pc, #152]	; 3ecc <.text+0x3ecc>
    3e30:	e3a03000 	mov	r3, #0	; 0x0
    3e34:	e5c23000 	strb	r3, [r2]
			 if (ringbuffer(RBREAD, &t, 1))
    3e38:	e24b3012 	sub	r3, fp, #18	; 0x12
    3e3c:	e3a00000 	mov	r0, #0	; 0x0
    3e40:	e1a01003 	mov	r1, r3
    3e44:	e3a02001 	mov	r2, #1	; 0x1
    3e48:	eb000234 	bl	4720 <ringbuffer>
    3e4c:	e1a03000 	mov	r3, r0
    3e50:	e3530000 	cmp	r3, #0	; 0x0
    3e54:	0a000006 	beq	3e74 <uart0ISR+0xac>
		     {
		       transmission_running=1;
    3e58:	e59f2070 	ldr	r2, [pc, #112]	; 3ed0 <.text+0x3ed0>
    3e5c:	e3a03001 	mov	r3, #1	; 0x1
    3e60:	e5c23000 	strb	r3, [r2]
		       UARTWriteChar(t);
    3e64:	e55b3012 	ldrb	r3, [fp, #-18]
    3e68:	e1a00003 	mov	r0, r3
    3e6c:	eb00006e 	bl	402c <UARTWriteChar>
    3e70:	ea00000e 	b	3eb0 <uart0ISR+0xe8>
		     }
		     else
		     {
		       transmission_running=0;
    3e74:	e59f3054 	ldr	r3, [pc, #84]	; 3ed0 <.text+0x3ed0>
    3e78:	e3a02000 	mov	r2, #0	; 0x0
    3e7c:	e5c32000 	strb	r2, [r3]
    3e80:	ea00000a 	b	3eb0 <uart0ISR+0xe8>
		     }
		}
		else
		{
			trigger_transmission=1;
    3e84:	e59f3040 	ldr	r3, [pc, #64]	; 3ecc <.text+0x3ecc>
    3e88:	e3a02001 	mov	r2, #1	; 0x1
    3e8c:	e5c32000 	strb	r2, [r3]
		}
		break;
    3e90:	ea000006 	b	3eb0 <uart0ISR+0xe8>

      case 2:
        // RDA interrupt
        //receive handler
    	UART_rxdata = U0RBR;
    3e94:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    3e98:	e2833903 	add	r3, r3, #49152	; 0xc000
    3e9c:	e5933000 	ldr	r3, [r3]
    3ea0:	e54b3011 	strb	r3, [fp, #-17]
    	//if (HLC_index >= 256) HLC_index = 0;
    	//HLC_buffer[HLC_index++] = U0RBR;
    	HLC_Protocol(UART_rxdata);
    3ea4:	e55b3011 	ldrb	r3, [fp, #-17]
    3ea8:	e1a00003 	mov	r0, r3
    3eac:	ebfff2cf 	bl	9f0 <HLC_Protocol>
        //UARTWriteChar(UART_rxdata);
        /*if (UART_syncstate==0)
		{
			if (UART_rxdata=='>') UART_syncstate++; else UART_syncstate=0;
		}
		else if (UART_syncstate==1)
		{
			if (UART_rxdata=='*') UART_syncstate++; else UART_syncstate=0;
		}
		else if (UART_syncstate==2)
		{
			if (UART_rxdata=='>') UART_syncstate++; else UART_syncstate=0;
		}
		else if (UART_syncstate==3)
		{
			if (UART_rxdata=='d') //data pending (e.g. flight params)
			{
				UART_syncstate=8;
			}
            else if (UART_rxdata=='c') //calibration data
            {
               	UART_syncstate=4;
            }
            else if (UART_rxdata=='p') //select packets
            {
                UART_syncstate=6;
            }
            else if (UART_rxdata=='r')  //select data_output_rate
            {
               	UART_syncstate=7;
            }
            else UART_syncstate=0;
        }
        else if (UART_syncstate==4)
        {
        	UART_syncstate=0;
        }
		else if (UART_syncstate==5)
		{
			UART_rxcount--;
			*UART_rxptr=UART_rxdata;
			UART_rxptr++;
			if (UART_rxcount==0)
        	{
             	UART_syncstate=0;
        	}
		}
		else if(UART_syncstate==8)
		{
			UART_syncstate=0;
		}
		else UART_syncstate=0;*/

        break;
/*      case 3:
        // RLS interrupt
    	  printf("RLS Interrupt\n\r");
        break;
      case 6:
        // CTI interrupt
    	  printf("CTI Interrupt\n\r");
        break;*/
  }
  IDISABLE;
  VICVectAddr = 0;		// Acknowledge Interrupt
    3eb0:	e3a03000 	mov	r3, #0	; 0x0
    3eb4:	e2433efd 	sub	r3, r3, #4048	; 0xfd0
    3eb8:	e3a02000 	mov	r2, #0	; 0x0
    3ebc:	e5832000 	str	r2, [r3]
 }
    3ec0:	e24bd00c 	sub	sp, fp, #12	; 0xc
    3ec4:	e89d6800 	ldmia	sp, {fp, sp, lr}
    3ec8:	e12fff1e 	bx	lr
    3ecc:	400008b0 	strmih	r0, [r0], -r0
    3ed0:	400008ae 	andmi	r0, r0, lr, lsr #17

00003ed4 <UARTInitialize>:

void UARTInitialize(unsigned int baud)
{
    3ed4:	e1a0c00d 	mov	ip, sp
    3ed8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    3edc:	e24cb004 	sub	fp, ip, #4	; 0x4
    3ee0:	e24dd008 	sub	sp, sp, #8	; 0x8
    3ee4:	e50b0014 	str	r0, [fp, #-20]
  unsigned int divisor = peripheralClockFrequency() / (16 * baud);
    3ee8:	ebfffae4 	bl	2a80 <peripheralClockFrequency>
    3eec:	e1a02000 	mov	r2, r0
    3ef0:	e51b3014 	ldr	r3, [fp, #-20]
    3ef4:	e1a03203 	mov	r3, r3, lsl #4
    3ef8:	e1a00002 	mov	r0, r2
    3efc:	e1a01003 	mov	r1, r3
    3f00:	eb002451 	bl	d04c <____udivsi3_from_arm>
    3f04:	e1a03000 	mov	r3, r0
    3f08:	e50b3010 	str	r3, [fp, #-16]

  //UART0
  U0LCR = 0x83; /* 8 bit, 1 stop bit, no parity, enable DLAB */
    3f0c:	e3a03903 	mov	r3, #49152	; 0xc000
    3f10:	e28332ce 	add	r3, r3, #-536870900	; 0xe000000c
    3f14:	e3a02083 	mov	r2, #131	; 0x83
    3f18:	e5832000 	str	r2, [r3]
  U0DLL = divisor & 0xFF;
    3f1c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    3f20:	e2833903 	add	r3, r3, #49152	; 0xc000
    3f24:	e51b2010 	ldr	r2, [fp, #-16]
    3f28:	e20220ff 	and	r2, r2, #255	; 0xff
    3f2c:	e5832000 	str	r2, [r3]
  U0DLM = (divisor >> 8) & 0xFF;
    3f30:	e3a02903 	mov	r2, #49152	; 0xc000
    3f34:	e282224e 	add	r2, r2, #-536870908	; 0xe0000004
    3f38:	e51b3010 	ldr	r3, [fp, #-16]
    3f3c:	e1a03423 	mov	r3, r3, lsr #8
    3f40:	e20330ff 	and	r3, r3, #255	; 0xff
    3f44:	e5823000 	str	r3, [r2]
  U0LCR &= ~0x80; /* Disable DLAB */
    3f48:	e3a02903 	mov	r2, #49152	; 0xc000
    3f4c:	e28222ce 	add	r2, r2, #-536870900	; 0xe000000c
    3f50:	e3a03903 	mov	r3, #49152	; 0xc000
    3f54:	e28332ce 	add	r3, r3, #-536870900	; 0xe000000c
    3f58:	e5933000 	ldr	r3, [r3]
    3f5c:	e3c33080 	bic	r3, r3, #128	; 0x80
    3f60:	e5823000 	str	r3, [r2]
  U0FCR = 1;
    3f64:	e3a03903 	mov	r3, #49152	; 0xc000
    3f68:	e283328e 	add	r3, r3, #-536870904	; 0xe0000008
    3f6c:	e3a02001 	mov	r2, #1	; 0x1
    3f70:	e5832000 	str	r2, [r3]


}
    3f74:	e24bd00c 	sub	sp, fp, #12	; 0xc
    3f78:	e89d6800 	ldmia	sp, {fp, sp, lr}
    3f7c:	e12fff1e 	bx	lr

00003f80 <UART1Initialize>:

void UART1Initialize(unsigned int baud)
{
    3f80:	e1a0c00d 	mov	ip, sp
    3f84:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    3f88:	e24cb004 	sub	fp, ip, #4	; 0x4
    3f8c:	e24dd008 	sub	sp, sp, #8	; 0x8
    3f90:	e50b0014 	str	r0, [fp, #-20]
  unsigned int divisor = peripheralClockFrequency() / (16 * baud);
    3f94:	ebfffab9 	bl	2a80 <peripheralClockFrequency>
    3f98:	e1a02000 	mov	r2, r0
    3f9c:	e51b3014 	ldr	r3, [fp, #-20]
    3fa0:	e1a03203 	mov	r3, r3, lsl #4
    3fa4:	e1a00002 	mov	r0, r2
    3fa8:	e1a01003 	mov	r1, r3
    3fac:	eb002426 	bl	d04c <____udivsi3_from_arm>
    3fb0:	e1a03000 	mov	r3, r0
    3fb4:	e50b3010 	str	r3, [fp, #-16]
//UART1
  U1LCR = 0x83; /* 8 bit, 1 stop bit, no parity, enable DLAB */
    3fb8:	e3a032ce 	mov	r3, #-536870900	; 0xe000000c
    3fbc:	e2833801 	add	r3, r3, #65536	; 0x10000
    3fc0:	e3a02083 	mov	r2, #131	; 0x83
    3fc4:	e5832000 	str	r2, [r3]
  U1DLL = divisor & 0xFF;
    3fc8:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    3fcc:	e2833801 	add	r3, r3, #65536	; 0x10000
    3fd0:	e51b2010 	ldr	r2, [fp, #-16]
    3fd4:	e20220ff 	and	r2, r2, #255	; 0xff
    3fd8:	e5832000 	str	r2, [r3]
  U1DLM = (divisor >> 8) & 0xFF;
    3fdc:	e3a0224e 	mov	r2, #-536870908	; 0xe0000004
    3fe0:	e2822801 	add	r2, r2, #65536	; 0x10000
    3fe4:	e51b3010 	ldr	r3, [fp, #-16]
    3fe8:	e1a03423 	mov	r3, r3, lsr #8
    3fec:	e20330ff 	and	r3, r3, #255	; 0xff
    3ff0:	e5823000 	str	r3, [r2]
  U1LCR &= ~0x80; /* Disable DLAB */
    3ff4:	e3a022ce 	mov	r2, #-536870900	; 0xe000000c
    3ff8:	e2822801 	add	r2, r2, #65536	; 0x10000
    3ffc:	e3a032ce 	mov	r3, #-536870900	; 0xe000000c
    4000:	e2833801 	add	r3, r3, #65536	; 0x10000
    4004:	e5933000 	ldr	r3, [r3]
    4008:	e3c33080 	bic	r3, r3, #128	; 0x80
    400c:	e5823000 	str	r3, [r2]
  U1FCR = 1;
    4010:	e3a0328e 	mov	r3, #-536870904	; 0xe0000008
    4014:	e2833801 	add	r3, r3, #65536	; 0x10000
    4018:	e3a02001 	mov	r2, #1	; 0x1
    401c:	e5832000 	str	r2, [r3]
}
    4020:	e24bd00c 	sub	sp, fp, #12	; 0xc
    4024:	e89d6800 	ldmia	sp, {fp, sp, lr}
    4028:	e12fff1e 	bx	lr

0000402c <UARTWriteChar>:


//Write to UART0
void UARTWriteChar(unsigned char ch)
{
    402c:	e1a0c00d 	mov	ip, sp
    4030:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    4034:	e24cb004 	sub	fp, ip, #4	; 0x4
    4038:	e24dd004 	sub	sp, sp, #4	; 0x4
    403c:	e1a03000 	mov	r3, r0
    4040:	e54b3010 	strb	r3, [fp, #-16]
  while ((U0LSR & 0x20) == 0);
    4044:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    4048:	e2833903 	add	r3, r3, #49152	; 0xc000
    404c:	e2833014 	add	r3, r3, #20	; 0x14
    4050:	e5933000 	ldr	r3, [r3]
    4054:	e2033020 	and	r3, r3, #32	; 0x20
    4058:	e3530000 	cmp	r3, #0	; 0x0
    405c:	0afffff8 	beq	4044 <UARTWriteChar+0x18>
  U0THR = ch;
    4060:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    4064:	e2833903 	add	r3, r3, #49152	; 0xc000
    4068:	e55b2010 	ldrb	r2, [fp, #-16]
    406c:	e5832000 	str	r2, [r3]
}
    4070:	e24bd00c 	sub	sp, fp, #12	; 0xc
    4074:	e89d6800 	ldmia	sp, {fp, sp, lr}
    4078:	e12fff1e 	bx	lr

0000407c <UART1WriteChar>:
//Write to UART1
void UART1WriteChar(unsigned char ch)
{
    407c:	e1a0c00d 	mov	ip, sp
    4080:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    4084:	e24cb004 	sub	fp, ip, #4	; 0x4
    4088:	e24dd004 	sub	sp, sp, #4	; 0x4
    408c:	e1a03000 	mov	r3, r0
    4090:	e54b3010 	strb	r3, [fp, #-16]
  while ((U1LSR & 0x20) == 0);
    4094:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    4098:	e2833801 	add	r3, r3, #65536	; 0x10000
    409c:	e2833014 	add	r3, r3, #20	; 0x14
    40a0:	e5933000 	ldr	r3, [r3]
    40a4:	e2033020 	and	r3, r3, #32	; 0x20
    40a8:	e3530000 	cmp	r3, #0	; 0x0
    40ac:	0afffff8 	beq	4094 <UART1WriteChar+0x18>
  U1THR = ch;
    40b0:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    40b4:	e2833801 	add	r3, r3, #65536	; 0x10000
    40b8:	e55b2010 	ldrb	r2, [fp, #-16]
    40bc:	e5832000 	str	r2, [r3]
}
    40c0:	e24bd00c 	sub	sp, fp, #12	; 0xc
    40c4:	e89d6800 	ldmia	sp, {fp, sp, lr}
    40c8:	e12fff1e 	bx	lr

000040cc <UARTReadChar>:

unsigned char UARTReadChar(void)
{
    40cc:	e1a0c00d 	mov	ip, sp
    40d0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    40d4:	e24cb004 	sub	fp, ip, #4	; 0x4
  while ((U0LSR & 0x01) == 0);
    40d8:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    40dc:	e2833903 	add	r3, r3, #49152	; 0xc000
    40e0:	e2833014 	add	r3, r3, #20	; 0x14
    40e4:	e5933000 	ldr	r3, [r3]
    40e8:	e2033001 	and	r3, r3, #1	; 0x1
    40ec:	e3530000 	cmp	r3, #0	; 0x0
    40f0:	0afffff8 	beq	40d8 <UARTReadChar+0xc>
  return U0RBR;
    40f4:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    40f8:	e2833903 	add	r3, r3, #49152	; 0xc000
    40fc:	e5933000 	ldr	r3, [r3]
    4100:	e20330ff 	and	r3, r3, #255	; 0xff
}
    4104:	e1a00003 	mov	r0, r3
    4108:	e24bd00c 	sub	sp, fp, #12	; 0xc
    410c:	e89d6800 	ldmia	sp, {fp, sp, lr}
    4110:	e12fff1e 	bx	lr

00004114 <UART1ReadChar>:

unsigned char UART1ReadChar(void)
{
    4114:	e1a0c00d 	mov	ip, sp
    4118:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    411c:	e24cb004 	sub	fp, ip, #4	; 0x4
  while ((U1LSR & 0x01) == 0);
    4120:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    4124:	e2833801 	add	r3, r3, #65536	; 0x10000
    4128:	e2833014 	add	r3, r3, #20	; 0x14
    412c:	e5933000 	ldr	r3, [r3]
    4130:	e2033001 	and	r3, r3, #1	; 0x1
    4134:	e3530000 	cmp	r3, #0	; 0x0
    4138:	0afffff8 	beq	4120 <UART1ReadChar+0xc>
  return U1RBR;
    413c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    4140:	e2833801 	add	r3, r3, #65536	; 0x10000
    4144:	e5933000 	ldr	r3, [r3]
    4148:	e20330ff 	and	r3, r3, #255	; 0xff
}
    414c:	e1a00003 	mov	r0, r3
    4150:	e24bd00c 	sub	sp, fp, #12	; 0xc
    4154:	e89d6800 	ldmia	sp, {fp, sp, lr}
    4158:	e12fff1e 	bx	lr

0000415c <__putchar>:

void __putchar(int ch)
{
    415c:	e1a0c00d 	mov	ip, sp
    4160:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    4164:	e24cb004 	sub	fp, ip, #4	; 0x4
    4168:	e24dd004 	sub	sp, sp, #4	; 0x4
    416c:	e50b0010 	str	r0, [fp, #-16]
  if (ch == '\n')
    4170:	e51b3010 	ldr	r3, [fp, #-16]
    4174:	e353000a 	cmp	r3, #10	; 0xa
    4178:	1a000001 	bne	4184 <__putchar+0x28>
    UARTWriteChar('\r');
    417c:	e3a0000d 	mov	r0, #13	; 0xd
    4180:	ebffffa9 	bl	402c <UARTWriteChar>
  UARTWriteChar(ch);
    4184:	e51b3010 	ldr	r3, [fp, #-16]
    4188:	e20330ff 	and	r3, r3, #255	; 0xff
    418c:	e1a00003 	mov	r0, r3
    4190:	ebffffa5 	bl	402c <UARTWriteChar>
}
    4194:	e24bd00c 	sub	sp, fp, #12	; 0xc
    4198:	e89d6800 	ldmia	sp, {fp, sp, lr}
    419c:	e12fff1e 	bx	lr

000041a0 <UART_send>:

void UART_send(char *buffer, unsigned char length)
{
    41a0:	e1a0c00d 	mov	ip, sp
    41a4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    41a8:	e24cb004 	sub	fp, ip, #4	; 0x4
    41ac:	e24dd00c 	sub	sp, sp, #12	; 0xc
    41b0:	e50b0014 	str	r0, [fp, #-20]
    41b4:	e1a03001 	mov	r3, r1
    41b8:	e54b3018 	strb	r3, [fp, #-24]
  unsigned char cnt=0;
    41bc:	e3a03000 	mov	r3, #0	; 0x0
    41c0:	e54b300d 	strb	r3, [fp, #-13]
  while (!(U0LSR & 0x20)); //wait until U0THR and U0TSR are both empty
    41c4:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    41c8:	e2833903 	add	r3, r3, #49152	; 0xc000
    41cc:	e2833014 	add	r3, r3, #20	; 0x14
    41d0:	e5933000 	ldr	r3, [r3]
    41d4:	e2033020 	and	r3, r3, #32	; 0x20
    41d8:	e3530000 	cmp	r3, #0	; 0x0
    41dc:	0afffff8 	beq	41c4 <UART_send+0x24>
  while(length--)
    41e0:	ea000014 	b	4238 <UART_send+0x98>
  {
    U0THR = buffer[cnt++];
    41e4:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    41e8:	e2822903 	add	r2, r2, #49152	; 0xc000
    41ec:	e55b300d 	ldrb	r3, [fp, #-13]
    41f0:	e1a01003 	mov	r1, r3
    41f4:	e51b3014 	ldr	r3, [fp, #-20]
    41f8:	e0813003 	add	r3, r1, r3
    41fc:	e5d33000 	ldrb	r3, [r3]
    4200:	e5823000 	str	r3, [r2]
    4204:	e55b300d 	ldrb	r3, [fp, #-13]
    4208:	e2833001 	add	r3, r3, #1	; 0x1
    420c:	e54b300d 	strb	r3, [fp, #-13]
    if(cnt>15)
    4210:	e55b300d 	ldrb	r3, [fp, #-13]
    4214:	e353000f 	cmp	r3, #15	; 0xf
    4218:	9a000006 	bls	4238 <UART_send+0x98>
    {
      while (!(U0LSR & 0x20)); //wait until U0THR is empty
    421c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    4220:	e2833903 	add	r3, r3, #49152	; 0xc000
    4224:	e2833014 	add	r3, r3, #20	; 0x14
    4228:	e5933000 	ldr	r3, [r3]
    422c:	e2033020 	and	r3, r3, #32	; 0x20
    4230:	e3530000 	cmp	r3, #0	; 0x0
    4234:	0afffff8 	beq	421c <UART_send+0x7c>
    4238:	e55b3018 	ldrb	r3, [fp, #-24]
    423c:	e2433001 	sub	r3, r3, #1	; 0x1
    4240:	e54b3018 	strb	r3, [fp, #-24]
    4244:	e55b3018 	ldrb	r3, [fp, #-24]
    4248:	e35300ff 	cmp	r3, #255	; 0xff
    424c:	1affffe4 	bne	41e4 <UART_send+0x44>
    }
  }
}
    4250:	e24bd00c 	sub	sp, fp, #12	; 0xc
    4254:	e89d6800 	ldmia	sp, {fp, sp, lr}
    4258:	e12fff1e 	bx	lr

0000425c <UART1_send>:

void UART1_send(unsigned char *buffer, unsigned char length)
{
    425c:	e1a0c00d 	mov	ip, sp
    4260:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    4264:	e24cb004 	sub	fp, ip, #4	; 0x4
    4268:	e24dd00c 	sub	sp, sp, #12	; 0xc
    426c:	e50b0014 	str	r0, [fp, #-20]
    4270:	e1a03001 	mov	r3, r1
    4274:	e54b3018 	strb	r3, [fp, #-24]
  unsigned char cnt=0;
    4278:	e3a03000 	mov	r3, #0	; 0x0
    427c:	e54b300d 	strb	r3, [fp, #-13]
  while(length--)
    4280:	ea000011 	b	42cc <UART1_send+0x70>
  {
    while (!(U0LSR & 0x20)); //wait until U0THR is empty
    4284:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    4288:	e2833903 	add	r3, r3, #49152	; 0xc000
    428c:	e2833014 	add	r3, r3, #20	; 0x14
    4290:	e5933000 	ldr	r3, [r3]
    4294:	e2033020 	and	r3, r3, #32	; 0x20
    4298:	e3530000 	cmp	r3, #0	; 0x0
    429c:	0afffff8 	beq	4284 <UART1_send+0x28>
    U1THR = buffer[cnt++];
    42a0:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    42a4:	e2822801 	add	r2, r2, #65536	; 0x10000
    42a8:	e55b300d 	ldrb	r3, [fp, #-13]
    42ac:	e1a01003 	mov	r1, r3
    42b0:	e51b3014 	ldr	r3, [fp, #-20]
    42b4:	e0813003 	add	r3, r1, r3
    42b8:	e5d33000 	ldrb	r3, [r3]
    42bc:	e5823000 	str	r3, [r2]
    42c0:	e55b300d 	ldrb	r3, [fp, #-13]
    42c4:	e2833001 	add	r3, r3, #1	; 0x1
    42c8:	e54b300d 	strb	r3, [fp, #-13]
    42cc:	e55b3018 	ldrb	r3, [fp, #-24]
    42d0:	e2433001 	sub	r3, r3, #1	; 0x1
    42d4:	e54b3018 	strb	r3, [fp, #-24]
    42d8:	e55b3018 	ldrb	r3, [fp, #-24]
    42dc:	e35300ff 	cmp	r3, #255	; 0xff
    42e0:	1affffe7 	bne	4284 <UART1_send+0x28>
  }
}
    42e4:	e24bd00c 	sub	sp, fp, #12	; 0xc
    42e8:	e89d6800 	ldmia	sp, {fp, sp, lr}
    42ec:	e12fff1e 	bx	lr

000042f0 <UART_send_ringbuffer>:


void UART_send_ringbuffer(void)
{
    42f0:	e1a0c00d 	mov	ip, sp
    42f4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    42f8:	e24cb004 	sub	fp, ip, #4	; 0x4
    42fc:	e24dd004 	sub	sp, sp, #4	; 0x4
  unsigned char t;
  if(!transmission_running)
    4300:	e59f304c 	ldr	r3, [pc, #76]	; 4354 <.text+0x4354>
    4304:	e5d33000 	ldrb	r3, [r3]
    4308:	e3530000 	cmp	r3, #0	; 0x0
    430c:	1a00000d 	bne	4348 <UART_send_ringbuffer+0x58>
  {
    if(ringbuffer(RBREAD, &t, 1))
    4310:	e24b300d 	sub	r3, fp, #13	; 0xd
    4314:	e3a00000 	mov	r0, #0	; 0x0
    4318:	e1a01003 	mov	r1, r3
    431c:	e3a02001 	mov	r2, #1	; 0x1
    4320:	eb0000fe 	bl	4720 <ringbuffer>
    4324:	e1a03000 	mov	r3, r0
    4328:	e3530000 	cmp	r3, #0	; 0x0
    432c:	0a000005 	beq	4348 <UART_send_ringbuffer+0x58>
    {
      transmission_running=1;
    4330:	e59f201c 	ldr	r2, [pc, #28]	; 4354 <.text+0x4354>
    4334:	e3a03001 	mov	r3, #1	; 0x1
    4338:	e5c23000 	strb	r3, [r2]
      UARTWriteChar(t);
    433c:	e55b300d 	ldrb	r3, [fp, #-13]
    4340:	e1a00003 	mov	r0, r3
    4344:	ebffff38 	bl	402c <UARTWriteChar>
    }
  }
}
    4348:	e24bd00c 	sub	sp, fp, #12	; 0xc
    434c:	e89d6800 	ldmia	sp, {fp, sp, lr}
    4350:	e12fff1e 	bx	lr
    4354:	400008ae 	andmi	r0, r0, lr, lsr #17

00004358 <UART1_send_ringbuffer>:

void UART1_send_ringbuffer(void)
{
    4358:	e1a0c00d 	mov	ip, sp
    435c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    4360:	e24cb004 	sub	fp, ip, #4	; 0x4
    4364:	e24dd004 	sub	sp, sp, #4	; 0x4
  unsigned char t;
  if(!transmission1_running)
    4368:	e59f304c 	ldr	r3, [pc, #76]	; 43bc <.text+0x43bc>
    436c:	e5d33000 	ldrb	r3, [r3]
    4370:	e3530000 	cmp	r3, #0	; 0x0
    4374:	1a00000d 	bne	43b0 <UART1_send_ringbuffer+0x58>
  {
    if(ringbuffer1(RBREAD, &t, 1))
    4378:	e24b300d 	sub	r3, fp, #13	; 0xd
    437c:	e3a00000 	mov	r0, #0	; 0x0
    4380:	e1a01003 	mov	r1, r3
    4384:	e3a02001 	mov	r2, #1	; 0x1
    4388:	eb00015f 	bl	490c <ringbuffer1>
    438c:	e1a03000 	mov	r3, r0
    4390:	e3530000 	cmp	r3, #0	; 0x0
    4394:	0a000005 	beq	43b0 <UART1_send_ringbuffer+0x58>
    {
      transmission1_running=1;
    4398:	e59f201c 	ldr	r2, [pc, #28]	; 43bc <.text+0x43bc>
    439c:	e3a03001 	mov	r3, #1	; 0x1
    43a0:	e5c23000 	strb	r3, [r2]
      UART1WriteChar(t);
    43a4:	e55b300d 	ldrb	r3, [fp, #-13]
    43a8:	e1a00003 	mov	r0, r3
    43ac:	ebffff32 	bl	407c <UART1WriteChar>
    }
  }
}
    43b0:	e24bd00c 	sub	sp, fp, #12	; 0xc
    43b4:	e89d6800 	ldmia	sp, {fp, sp, lr}
    43b8:	e12fff1e 	bx	lr
    43bc:	400008af 	andmi	r0, r0, pc, lsr #17

000043c0 <UART_SendPacket>:

void UART_SendPacket(void *data, unsigned short count, unsigned char packetdescriptor)
{
    43c0:	e1a0c00d 	mov	ip, sp
    43c4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    43c8:	e24cb004 	sub	fp, ip, #4	; 0x4
    43cc:	e24dd014 	sub	sp, sp, #20	; 0x14
    43d0:	e50b0018 	str	r0, [fp, #-24]
    43d4:	e1a03001 	mov	r3, r1
    43d8:	e14b31bc 	strh	r3, [fp, #-28]
    43dc:	e1a03002 	mov	r3, r2
    43e0:	e54b3020 	strb	r3, [fp, #-32]
  unsigned short crc;
  int state;
      state=ringbuffer(RBWRITE, startstring, 3);
    43e4:	e3a00001 	mov	r0, #1	; 0x1
    43e8:	e59f10c0 	ldr	r1, [pc, #192]	; 44b0 <.text+0x44b0>
    43ec:	e3a02003 	mov	r2, #3	; 0x3
    43f0:	eb0000ca 	bl	4720 <ringbuffer>
    43f4:	e1a03000 	mov	r3, r0
    43f8:	e50b3010 	str	r3, [fp, #-16]
      state=ringbuffer(RBWRITE, (unsigned char *) &count, 2);
    43fc:	e24b301c 	sub	r3, fp, #28	; 0x1c
    4400:	e3a00001 	mov	r0, #1	; 0x1
    4404:	e1a01003 	mov	r1, r3
    4408:	e3a02002 	mov	r2, #2	; 0x2
    440c:	eb0000c3 	bl	4720 <ringbuffer>
    4410:	e1a03000 	mov	r3, r0
    4414:	e50b3010 	str	r3, [fp, #-16]
      state=ringbuffer(RBWRITE, &packetdescriptor, 1);
    4418:	e24b3020 	sub	r3, fp, #32	; 0x20
    441c:	e3a00001 	mov	r0, #1	; 0x1
    4420:	e1a01003 	mov	r1, r3
    4424:	e3a02001 	mov	r2, #1	; 0x1
    4428:	eb0000bc 	bl	4720 <ringbuffer>
    442c:	e1a03000 	mov	r3, r0
    4430:	e50b3010 	str	r3, [fp, #-16]
      state=ringbuffer(RBWRITE, data, count);
    4434:	e51b2018 	ldr	r2, [fp, #-24]
    4438:	e15b31bc 	ldrh	r3, [fp, #-28]
    443c:	e3a00001 	mov	r0, #1	; 0x1
    4440:	e1a01002 	mov	r1, r2
    4444:	e1a02003 	mov	r2, r3
    4448:	eb0000b4 	bl	4720 <ringbuffer>
    444c:	e1a03000 	mov	r3, r0
    4450:	e50b3010 	str	r3, [fp, #-16]
                crc=crc16(data,count);
    4454:	e15b31bc 	ldrh	r3, [fp, #-28]
    4458:	e51b0018 	ldr	r0, [fp, #-24]
    445c:	e1a01003 	mov	r1, r3
    4460:	eb000089 	bl	468c <crc16>
    4464:	e1a03000 	mov	r3, r0
    4468:	e14b31b2 	strh	r3, [fp, #-18]
      state=ringbuffer(RBWRITE, (unsigned char *) &crc, 2);
    446c:	e24b3012 	sub	r3, fp, #18	; 0x12
    4470:	e3a00001 	mov	r0, #1	; 0x1
    4474:	e1a01003 	mov	r1, r3
    4478:	e3a02002 	mov	r2, #2	; 0x2
    447c:	eb0000a7 	bl	4720 <ringbuffer>
    4480:	e1a03000 	mov	r3, r0
    4484:	e50b3010 	str	r3, [fp, #-16]
      state=ringbuffer(RBWRITE, stopstring, 3);
    4488:	e3a00001 	mov	r0, #1	; 0x1
    448c:	e59f1020 	ldr	r1, [pc, #32]	; 44b4 <.text+0x44b4>
    4490:	e3a02003 	mov	r2, #3	; 0x3
    4494:	eb0000a1 	bl	4720 <ringbuffer>
    4498:	e1a03000 	mov	r3, r0
    449c:	e50b3010 	str	r3, [fp, #-16]
      UART_send_ringbuffer();
    44a0:	ebffff92 	bl	42f0 <UART_send_ringbuffer>
}
    44a4:	e24bd00c 	sub	sp, fp, #12	; 0xc
    44a8:	e89d6800 	ldmia	sp, {fp, sp, lr}
    44ac:	e12fff1e 	bx	lr
    44b0:	40000011 	andmi	r0, r0, r1, lsl r0
    44b4:	40000014 	andmi	r0, r0, r4, lsl r0

000044b8 <UART_SendPacket_raw>:

void UART_SendPacket_raw(void *data, unsigned short count) {
    44b8:	e1a0c00d 	mov	ip, sp
    44bc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    44c0:	e24cb004 	sub	fp, ip, #4	; 0x4
    44c4:	e24dd008 	sub	sp, sp, #8	; 0x8
    44c8:	e50b0010 	str	r0, [fp, #-16]
    44cc:	e1a03001 	mov	r3, r1
    44d0:	e14b31b4 	strh	r3, [fp, #-20]
	ringbuffer(RBWRITE, data, count);
    44d4:	e51b3010 	ldr	r3, [fp, #-16]
    44d8:	e15b21b4 	ldrh	r2, [fp, #-20]
    44dc:	e3a00001 	mov	r0, #1	; 0x1
    44e0:	e1a01003 	mov	r1, r3
    44e4:	eb00008d 	bl	4720 <ringbuffer>
	UART_send_ringbuffer();
    44e8:	ebffff80 	bl	42f0 <UART_send_ringbuffer>
}
    44ec:	e24bd00c 	sub	sp, fp, #12	; 0xc
    44f0:	e89d6800 	ldmia	sp, {fp, sp, lr}
    44f4:	e12fff1e 	bx	lr

000044f8 <mdv_output>:

void mdv_output(unsigned int value) //output for Measurement Distribution Visualizer
{
    44f8:	e1a0c00d 	mov	ip, sp
    44fc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    4500:	e24cb004 	sub	fp, ip, #4	; 0x4
    4504:	e24dd004 	sub	sp, sp, #4	; 0x4
    4508:	e50b0010 	str	r0, [fp, #-16]
    send_buffer[0]='<';
    450c:	e59f2084 	ldr	r2, [pc, #132]	; 4598 <.text+0x4598>
    4510:	e3a0303c 	mov	r3, #60	; 0x3c
    4514:	e5c23000 	strb	r3, [r2]
    send_buffer[1]='*';
    4518:	e59f2078 	ldr	r2, [pc, #120]	; 4598 <.text+0x4598>
    451c:	e3a0302a 	mov	r3, #42	; 0x2a
    4520:	e5c23001 	strb	r3, [r2, #1]
    send_buffer[2]='>';
    4524:	e59f206c 	ldr	r2, [pc, #108]	; 4598 <.text+0x4598>
    4528:	e3a0303e 	mov	r3, #62	; 0x3e
    452c:	e5c23002 	strb	r3, [r2, #2]
    send_buffer[3]=(value>>8)&0xFF;
    4530:	e51b3010 	ldr	r3, [fp, #-16]
    4534:	e1a03423 	mov	r3, r3, lsr #8
    4538:	e20330ff 	and	r3, r3, #255	; 0xff
    453c:	e59f2054 	ldr	r2, [pc, #84]	; 4598 <.text+0x4598>
    4540:	e5c23003 	strb	r3, [r2, #3]
    send_buffer[4]=value&0xFF;
    4544:	e51b3010 	ldr	r3, [fp, #-16]
    4548:	e20330ff 	and	r3, r3, #255	; 0xff
    454c:	e59f2044 	ldr	r2, [pc, #68]	; 4598 <.text+0x4598>
    4550:	e5c23004 	strb	r3, [r2, #4]
    send_buffer[5]='<';
    4554:	e59f203c 	ldr	r2, [pc, #60]	; 4598 <.text+0x4598>
    4558:	e3a0303c 	mov	r3, #60	; 0x3c
    455c:	e5c23005 	strb	r3, [r2, #5]
    send_buffer[6]='#';
    4560:	e59f2030 	ldr	r2, [pc, #48]	; 4598 <.text+0x4598>
    4564:	e3a03023 	mov	r3, #35	; 0x23
    4568:	e5c23006 	strb	r3, [r2, #6]
    send_buffer[7]='>';
    456c:	e59f2024 	ldr	r2, [pc, #36]	; 4598 <.text+0x4598>
    4570:	e3a0303e 	mov	r3, #62	; 0x3e
    4574:	e5c23007 	strb	r3, [r2, #7]
    ringbuffer(RBWRITE, send_buffer, 8);
    4578:	e3a00001 	mov	r0, #1	; 0x1
    457c:	e59f1014 	ldr	r1, [pc, #20]	; 4598 <.text+0x4598>
    4580:	e3a02008 	mov	r2, #8	; 0x8
    4584:	eb000065 	bl	4720 <ringbuffer>
    UART_send_ringbuffer();
    4588:	ebffff58 	bl	42f0 <UART_send_ringbuffer>
}
    458c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    4590:	e89d6800 	ldmia	sp, {fp, sp, lr}
    4594:	e12fff1e 	bx	lr
    4598:	40000fcc 	andmi	r0, r0, ip, asr #31

0000459c <crc_update>:

unsigned short crc_update (unsigned short crc, unsigned char data)
     {
    459c:	e1a0c00d 	mov	ip, sp
    45a0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    45a4:	e24cb004 	sub	fp, ip, #4	; 0x4
    45a8:	e24dd008 	sub	sp, sp, #8	; 0x8
    45ac:	e1a03000 	mov	r3, r0
    45b0:	e1a02001 	mov	r2, r1
    45b4:	e14b31b0 	strh	r3, [fp, #-16]
    45b8:	e1a03002 	mov	r3, r2
    45bc:	e54b3014 	strb	r3, [fp, #-20]
         data ^= (crc & 0xff);
    45c0:	e15b31b0 	ldrh	r3, [fp, #-16]
    45c4:	e20330ff 	and	r3, r3, #255	; 0xff
    45c8:	e20330ff 	and	r3, r3, #255	; 0xff
    45cc:	e55b2014 	ldrb	r2, [fp, #-20]
    45d0:	e1a01003 	mov	r1, r3
    45d4:	e1a03002 	mov	r3, r2
    45d8:	e0213003 	eor	r3, r1, r3
    45dc:	e20330ff 	and	r3, r3, #255	; 0xff
    45e0:	e54b3014 	strb	r3, [fp, #-20]
         data ^= data << 4;
    45e4:	e55b3014 	ldrb	r3, [fp, #-20]
    45e8:	e1a03203 	mov	r3, r3, lsl #4
    45ec:	e20330ff 	and	r3, r3, #255	; 0xff
    45f0:	e55b2014 	ldrb	r2, [fp, #-20]
    45f4:	e1a01003 	mov	r1, r3
    45f8:	e1a03002 	mov	r3, r2
    45fc:	e0213003 	eor	r3, r1, r3
    4600:	e20330ff 	and	r3, r3, #255	; 0xff
    4604:	e54b3014 	strb	r3, [fp, #-20]

         return ((((unsigned short )data << 8) | ((crc>>8)&0xff)) ^ (unsigned char )(data >> 4)
    4608:	e55b3014 	ldrb	r3, [fp, #-20]
    460c:	e1a03403 	mov	r3, r3, lsl #8
    4610:	e1a03803 	mov	r3, r3, lsl #16
    4614:	e1a02823 	mov	r2, r3, lsr #16
    4618:	e15b31b0 	ldrh	r3, [fp, #-16]
    461c:	e1a03423 	mov	r3, r3, lsr #8
    4620:	e1a03803 	mov	r3, r3, lsl #16
    4624:	e1a03823 	mov	r3, r3, lsr #16
    4628:	e1a03803 	mov	r3, r3, lsl #16
    462c:	e1a03823 	mov	r3, r3, lsr #16
    4630:	e20330ff 	and	r3, r3, #255	; 0xff
    4634:	e1823003 	orr	r3, r2, r3
    4638:	e1a03803 	mov	r3, r3, lsl #16
    463c:	e1a02823 	mov	r2, r3, lsr #16
    4640:	e55b3014 	ldrb	r3, [fp, #-20]
    4644:	e1a03223 	mov	r3, r3, lsr #4
    4648:	e20330ff 	and	r3, r3, #255	; 0xff
    464c:	e0223003 	eor	r3, r2, r3
    4650:	e1a03803 	mov	r3, r3, lsl #16
    4654:	e1a02823 	mov	r2, r3, lsr #16
    4658:	e55b3014 	ldrb	r3, [fp, #-20]
    465c:	e1a03183 	mov	r3, r3, lsl #3
    4660:	e1a03803 	mov	r3, r3, lsl #16
    4664:	e1a03823 	mov	r3, r3, lsr #16
    4668:	e0223003 	eor	r3, r2, r3
    466c:	e1a03803 	mov	r3, r3, lsl #16
    4670:	e1a03823 	mov	r3, r3, lsr #16
    4674:	e1a03803 	mov	r3, r3, lsl #16
    4678:	e1a03823 	mov	r3, r3, lsr #16
                 ^ ((unsigned short )data << 3));
     }
    467c:	e1a00003 	mov	r0, r3
    4680:	e24bd00c 	sub	sp, fp, #12	; 0xc
    4684:	e89d6800 	ldmia	sp, {fp, sp, lr}
    4688:	e12fff1e 	bx	lr

0000468c <crc16>:

 unsigned short crc16(void* data, unsigned short cnt)
 {
    468c:	e1a0c00d 	mov	ip, sp
    4690:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    4694:	e24cb004 	sub	fp, ip, #4	; 0x4
    4698:	e24dd014 	sub	sp, sp, #20	; 0x14
    469c:	e50b001c 	str	r0, [fp, #-28]
    46a0:	e1a03001 	mov	r3, r1
    46a4:	e14b32b0 	strh	r3, [fp, #-32]
   unsigned short crc=0xff;
    46a8:	e3a030ff 	mov	r3, #255	; 0xff
    46ac:	e14b31b6 	strh	r3, [fp, #-22]
   unsigned char * ptr=(unsigned char *) data;
    46b0:	e51b301c 	ldr	r3, [fp, #-28]
    46b4:	e50b3014 	str	r3, [fp, #-20]
   int i;

   for (i=0;i<cnt;i++)
    46b8:	e3a03000 	mov	r3, #0	; 0x0
    46bc:	e50b3010 	str	r3, [fp, #-16]
    46c0:	ea00000d 	b	46fc <crc16+0x70>
     {
       crc=crc_update(crc,*ptr);
    46c4:	e15b21b6 	ldrh	r2, [fp, #-22]
    46c8:	e51b3014 	ldr	r3, [fp, #-20]
    46cc:	e5d33000 	ldrb	r3, [r3]
    46d0:	e1a00002 	mov	r0, r2
    46d4:	e1a01003 	mov	r1, r3
    46d8:	ebffffaf 	bl	459c <crc_update>
    46dc:	e1a03000 	mov	r3, r0
    46e0:	e14b31b6 	strh	r3, [fp, #-22]
       ptr++;
    46e4:	e51b3014 	ldr	r3, [fp, #-20]
    46e8:	e2833001 	add	r3, r3, #1	; 0x1
    46ec:	e50b3014 	str	r3, [fp, #-20]
    46f0:	e51b3010 	ldr	r3, [fp, #-16]
    46f4:	e2833001 	add	r3, r3, #1	; 0x1
    46f8:	e50b3010 	str	r3, [fp, #-16]
    46fc:	e15b22b0 	ldrh	r2, [fp, #-32]
    4700:	e51b3010 	ldr	r3, [fp, #-16]
    4704:	e1520003 	cmp	r2, r3
    4708:	caffffed 	bgt	46c4 <crc16+0x38>
     }
   return crc;
    470c:	e15b31b6 	ldrh	r3, [fp, #-22]
 }
    4710:	e1a00003 	mov	r0, r3
    4714:	e24bd00c 	sub	sp, fp, #12	; 0xc
    4718:	e89d6800 	ldmia	sp, {fp, sp, lr}
    471c:	e12fff1e 	bx	lr

00004720 <ringbuffer>:

// no longer a ringbuffer! - now it's a FIFO
int ringbuffer(unsigned char rw, unsigned char *data, unsigned int count)	//returns 1 when write/read was successful, 0 elsewise
{
    4720:	e1a0c00d 	mov	ip, sp
    4724:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    4728:	e24cb004 	sub	fp, ip, #4	; 0x4
    472c:	e24dd018 	sub	sp, sp, #24	; 0x18
    4730:	e1a03000 	mov	r3, r0
    4734:	e50b101c 	str	r1, [fp, #-28]
    4738:	e50b2020 	str	r2, [fp, #-32]
    473c:	e54b3018 	strb	r3, [fp, #-24]
    static volatile unsigned char buffer[RINGBUFFERSIZE];
//	static volatile unsigned int pfirst=0, plast=0;	//Pointers to first and last to read byte
	static volatile unsigned int read_pointer, write_pointer;
	static volatile unsigned int content=0;
	unsigned int p=0;
    4740:	e3a03000 	mov	r3, #0	; 0x0
    4744:	e50b3014 	str	r3, [fp, #-20]
    unsigned int p2=0;
    4748:	e3a03000 	mov	r3, #0	; 0x0
    474c:	e50b3010 	str	r3, [fp, #-16]

	if(rw==RBWRITE)
    4750:	e55b3018 	ldrb	r3, [fp, #-24]
    4754:	e3530001 	cmp	r3, #1	; 0x1
    4758:	1a000021 	bne	47e4 <ringbuffer+0xc4>
	{
		if(count<RINGBUFFERSIZE-content)	//enough space in buffer?
    475c:	e59f3198 	ldr	r3, [pc, #408]	; 48fc <.text+0x48fc>
    4760:	e5933000 	ldr	r3, [r3]
    4764:	e2632d06 	rsb	r2, r3, #384	; 0x180
    4768:	e51b3020 	ldr	r3, [fp, #-32]
    476c:	e1520003 	cmp	r2, r3
    4770:	9a00005a 	bls	48e0 <ringbuffer+0x1c0>
		{
			while(p<count)
    4774:	ea00000d 	b	47b0 <ringbuffer+0x90>
			{
				buffer[write_pointer++]=data[p++];
    4778:	e59f3180 	ldr	r3, [pc, #384]	; 4900 <.text+0x4900>
    477c:	e5931000 	ldr	r1, [r3]
    4780:	e51b2014 	ldr	r2, [fp, #-20]
    4784:	e51b301c 	ldr	r3, [fp, #-28]
    4788:	e0823003 	add	r3, r2, r3
    478c:	e5d33000 	ldrb	r3, [r3]
    4790:	e59f216c 	ldr	r2, [pc, #364]	; 4904 <.text+0x4904>
    4794:	e7c23001 	strb	r3, [r2, r1]
    4798:	e2812001 	add	r2, r1, #1	; 0x1
    479c:	e59f315c 	ldr	r3, [pc, #348]	; 4900 <.text+0x4900>
    47a0:	e5832000 	str	r2, [r3]
    47a4:	e51b3014 	ldr	r3, [fp, #-20]
    47a8:	e2833001 	add	r3, r3, #1	; 0x1
    47ac:	e50b3014 	str	r3, [fp, #-20]
    47b0:	e51b2014 	ldr	r2, [fp, #-20]
    47b4:	e51b3020 	ldr	r3, [fp, #-32]
    47b8:	e1520003 	cmp	r2, r3
    47bc:	3affffed 	bcc	4778 <ringbuffer+0x58>
			}
            content+=count;
    47c0:	e59f3134 	ldr	r3, [pc, #308]	; 48fc <.text+0x48fc>
    47c4:	e5932000 	ldr	r2, [r3]
    47c8:	e51b3020 	ldr	r3, [fp, #-32]
    47cc:	e0822003 	add	r2, r2, r3
    47d0:	e59f3124 	ldr	r3, [pc, #292]	; 48fc <.text+0x48fc>
    47d4:	e5832000 	str	r2, [r3]
            return(1);
    47d8:	e3a03001 	mov	r3, #1	; 0x1
    47dc:	e50b3024 	str	r3, [fp, #-36]
    47e0:	ea000040 	b	48e8 <ringbuffer+0x1c8>
		}
	}
	else if(rw==RBREAD)
    47e4:	e55b3018 	ldrb	r3, [fp, #-24]
    47e8:	e3530000 	cmp	r3, #0	; 0x0
    47ec:	1a00002b 	bne	48a0 <ringbuffer+0x180>
	{
		if(content>=count)
    47f0:	e59f3104 	ldr	r3, [pc, #260]	; 48fc <.text+0x48fc>
    47f4:	e5932000 	ldr	r2, [r3]
    47f8:	e51b3020 	ldr	r3, [fp, #-32]
    47fc:	e1520003 	cmp	r2, r3
    4800:	3a000036 	bcc	48e0 <ringbuffer+0x1c0>
		{
			while(p2<count)
    4804:	ea00000e 	b	4844 <ringbuffer+0x124>
			{
				data[p2++]=buffer[read_pointer++];
    4808:	e51b2010 	ldr	r2, [fp, #-16]
    480c:	e51b301c 	ldr	r3, [fp, #-28]
    4810:	e0822003 	add	r2, r2, r3
    4814:	e59f30ec 	ldr	r3, [pc, #236]	; 4908 <.text+0x4908>
    4818:	e5931000 	ldr	r1, [r3]
    481c:	e59f30e0 	ldr	r3, [pc, #224]	; 4904 <.text+0x4904>
    4820:	e7d33001 	ldrb	r3, [r3, r1]
    4824:	e20330ff 	and	r3, r3, #255	; 0xff
    4828:	e5c23000 	strb	r3, [r2]
    482c:	e51b3010 	ldr	r3, [fp, #-16]
    4830:	e2833001 	add	r3, r3, #1	; 0x1
    4834:	e50b3010 	str	r3, [fp, #-16]
    4838:	e2812001 	add	r2, r1, #1	; 0x1
    483c:	e59f30c4 	ldr	r3, [pc, #196]	; 4908 <.text+0x4908>
    4840:	e5832000 	str	r2, [r3]
    4844:	e51b2010 	ldr	r2, [fp, #-16]
    4848:	e51b3020 	ldr	r3, [fp, #-32]
    484c:	e1520003 	cmp	r2, r3
    4850:	3affffec 	bcc	4808 <ringbuffer+0xe8>
			}
            content-=count;
    4854:	e59f30a0 	ldr	r3, [pc, #160]	; 48fc <.text+0x48fc>
    4858:	e5932000 	ldr	r2, [r3]
    485c:	e51b3020 	ldr	r3, [fp, #-32]
    4860:	e0632002 	rsb	r2, r3, r2
    4864:	e59f3090 	ldr	r3, [pc, #144]	; 48fc <.text+0x48fc>
    4868:	e5832000 	str	r2, [r3]
            if(!content) //buffer empty
    486c:	e59f3088 	ldr	r3, [pc, #136]	; 48fc <.text+0x48fc>
    4870:	e5933000 	ldr	r3, [r3]
    4874:	e3530000 	cmp	r3, #0	; 0x0
    4878:	1a000005 	bne	4894 <ringbuffer+0x174>
            {
            	write_pointer=0;
    487c:	e59f207c 	ldr	r2, [pc, #124]	; 4900 <.text+0x4900>
    4880:	e3a03000 	mov	r3, #0	; 0x0
    4884:	e5823000 	str	r3, [r2]
            	read_pointer=0;
    4888:	e59f2078 	ldr	r2, [pc, #120]	; 4908 <.text+0x4908>
    488c:	e3a03000 	mov	r3, #0	; 0x0
    4890:	e5823000 	str	r3, [r2]
            }
			return(1);
    4894:	e3a03001 	mov	r3, #1	; 0x1
    4898:	e50b3024 	str	r3, [fp, #-36]
    489c:	ea000011 	b	48e8 <ringbuffer+0x1c8>
		}
	}
        else if(rw==RBFREE)
    48a0:	e55b3018 	ldrb	r3, [fp, #-24]
    48a4:	e3530002 	cmp	r3, #2	; 0x2
    48a8:	1a00000c 	bne	48e0 <ringbuffer+0x1c0>
        {
          if(content) return 0;
    48ac:	e59f3048 	ldr	r3, [pc, #72]	; 48fc <.text+0x48fc>
    48b0:	e5933000 	ldr	r3, [r3]
    48b4:	e3530000 	cmp	r3, #0	; 0x0
    48b8:	0a000002 	beq	48c8 <ringbuffer+0x1a8>
    48bc:	e3a03000 	mov	r3, #0	; 0x0
    48c0:	e50b3024 	str	r3, [fp, #-36]
    48c4:	ea000007 	b	48e8 <ringbuffer+0x1c8>
          else return(RINGBUFFERSIZE-11);
    48c8:	e3a03f5d 	mov	r3, #372	; 0x174
    48cc:	e50b3024 	str	r3, [fp, #-36]
    48d0:	e51b3024 	ldr	r3, [fp, #-36]
    48d4:	e2833001 	add	r3, r3, #1	; 0x1
    48d8:	e50b3024 	str	r3, [fp, #-36]
    48dc:	ea000001 	b	48e8 <ringbuffer+0x1c8>
        }

	return(0);
    48e0:	e3a03000 	mov	r3, #0	; 0x0
    48e4:	e50b3024 	str	r3, [fp, #-36]
    48e8:	e51b3024 	ldr	r3, [fp, #-36]
}
    48ec:	e1a00003 	mov	r0, r3
    48f0:	e24bd00c 	sub	sp, fp, #12	; 0xc
    48f4:	e89d6800 	ldmia	sp, {fp, sp, lr}
    48f8:	e12fff1e 	bx	lr
    48fc:	40000908 	andmi	r0, r0, r8, lsl #18
    4900:	4000090c 	andmi	r0, r0, ip, lsl #18
    4904:	40000914 	andmi	r0, r0, r4, lsl r9
    4908:	40000910 	andmi	r0, r0, r0, lsl r9

0000490c <ringbuffer1>:

int ringbuffer1(unsigned char rw, unsigned char *data, unsigned int count)	//returns 1 when write/read was successful, 0 elsewise
{
    490c:	e1a0c00d 	mov	ip, sp
    4910:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    4914:	e24cb004 	sub	fp, ip, #4	; 0x4
    4918:	e24dd018 	sub	sp, sp, #24	; 0x18
    491c:	e1a03000 	mov	r3, r0
    4920:	e50b101c 	str	r1, [fp, #-28]
    4924:	e50b2020 	str	r2, [fp, #-32]
    4928:	e54b3018 	strb	r3, [fp, #-24]
    static volatile unsigned char buffer[RINGBUFFERSIZE];
//	static volatile unsigned int pfirst=0, plast=0;	//Pointers to first and last to read byte
	static volatile unsigned int read_pointer, write_pointer;
	static volatile unsigned int content=0;
	unsigned int p=0;
    492c:	e3a03000 	mov	r3, #0	; 0x0
    4930:	e50b3014 	str	r3, [fp, #-20]
    unsigned int p2=0;
    4934:	e3a03000 	mov	r3, #0	; 0x0
    4938:	e50b3010 	str	r3, [fp, #-16]

	if(rw==RBWRITE)
    493c:	e55b3018 	ldrb	r3, [fp, #-24]
    4940:	e3530001 	cmp	r3, #1	; 0x1
    4944:	1a000021 	bne	49d0 <ringbuffer1+0xc4>
	{
		if(count<RINGBUFFERSIZE-content)	//enough space in buffer?
    4948:	e59f3198 	ldr	r3, [pc, #408]	; 4ae8 <.text+0x4ae8>
    494c:	e5933000 	ldr	r3, [r3]
    4950:	e2632d06 	rsb	r2, r3, #384	; 0x180
    4954:	e51b3020 	ldr	r3, [fp, #-32]
    4958:	e1520003 	cmp	r2, r3
    495c:	9a00005a 	bls	4acc <ringbuffer1+0x1c0>
		{
			while(p<count)
    4960:	ea00000d 	b	499c <ringbuffer1+0x90>
			{
				buffer[write_pointer++]=data[p++];
    4964:	e59f3180 	ldr	r3, [pc, #384]	; 4aec <.text+0x4aec>
    4968:	e5931000 	ldr	r1, [r3]
    496c:	e51b2014 	ldr	r2, [fp, #-20]
    4970:	e51b301c 	ldr	r3, [fp, #-28]
    4974:	e0823003 	add	r3, r2, r3
    4978:	e5d33000 	ldrb	r3, [r3]
    497c:	e59f216c 	ldr	r2, [pc, #364]	; 4af0 <.text+0x4af0>
    4980:	e7c23001 	strb	r3, [r2, r1]
    4984:	e2812001 	add	r2, r1, #1	; 0x1
    4988:	e59f315c 	ldr	r3, [pc, #348]	; 4aec <.text+0x4aec>
    498c:	e5832000 	str	r2, [r3]
    4990:	e51b3014 	ldr	r3, [fp, #-20]
    4994:	e2833001 	add	r3, r3, #1	; 0x1
    4998:	e50b3014 	str	r3, [fp, #-20]
    499c:	e51b2014 	ldr	r2, [fp, #-20]
    49a0:	e51b3020 	ldr	r3, [fp, #-32]
    49a4:	e1520003 	cmp	r2, r3
    49a8:	3affffed 	bcc	4964 <ringbuffer1+0x58>
			}
            content+=count;
    49ac:	e59f3134 	ldr	r3, [pc, #308]	; 4ae8 <.text+0x4ae8>
    49b0:	e5932000 	ldr	r2, [r3]
    49b4:	e51b3020 	ldr	r3, [fp, #-32]
    49b8:	e0822003 	add	r2, r2, r3
    49bc:	e59f3124 	ldr	r3, [pc, #292]	; 4ae8 <.text+0x4ae8>
    49c0:	e5832000 	str	r2, [r3]
            return(1);
    49c4:	e3a03001 	mov	r3, #1	; 0x1
    49c8:	e50b3024 	str	r3, [fp, #-36]
    49cc:	ea000040 	b	4ad4 <ringbuffer1+0x1c8>
		}
	}
	else if(rw==RBREAD)
    49d0:	e55b3018 	ldrb	r3, [fp, #-24]
    49d4:	e3530000 	cmp	r3, #0	; 0x0
    49d8:	1a00002b 	bne	4a8c <ringbuffer1+0x180>
	{
		if(content>=count)
    49dc:	e59f3104 	ldr	r3, [pc, #260]	; 4ae8 <.text+0x4ae8>
    49e0:	e5932000 	ldr	r2, [r3]
    49e4:	e51b3020 	ldr	r3, [fp, #-32]
    49e8:	e1520003 	cmp	r2, r3
    49ec:	3a000036 	bcc	4acc <ringbuffer1+0x1c0>
		{
			while(p2<count)
    49f0:	ea00000e 	b	4a30 <ringbuffer1+0x124>
			{
				data[p2++]=buffer[read_pointer++];
    49f4:	e51b2010 	ldr	r2, [fp, #-16]
    49f8:	e51b301c 	ldr	r3, [fp, #-28]
    49fc:	e0822003 	add	r2, r2, r3
    4a00:	e59f30ec 	ldr	r3, [pc, #236]	; 4af4 <.text+0x4af4>
    4a04:	e5931000 	ldr	r1, [r3]
    4a08:	e59f30e0 	ldr	r3, [pc, #224]	; 4af0 <.text+0x4af0>
    4a0c:	e7d33001 	ldrb	r3, [r3, r1]
    4a10:	e20330ff 	and	r3, r3, #255	; 0xff
    4a14:	e5c23000 	strb	r3, [r2]
    4a18:	e51b3010 	ldr	r3, [fp, #-16]
    4a1c:	e2833001 	add	r3, r3, #1	; 0x1
    4a20:	e50b3010 	str	r3, [fp, #-16]
    4a24:	e2812001 	add	r2, r1, #1	; 0x1
    4a28:	e59f30c4 	ldr	r3, [pc, #196]	; 4af4 <.text+0x4af4>
    4a2c:	e5832000 	str	r2, [r3]
    4a30:	e51b2010 	ldr	r2, [fp, #-16]
    4a34:	e51b3020 	ldr	r3, [fp, #-32]
    4a38:	e1520003 	cmp	r2, r3
    4a3c:	3affffec 	bcc	49f4 <ringbuffer1+0xe8>
			}
            content-=count;
    4a40:	e59f30a0 	ldr	r3, [pc, #160]	; 4ae8 <.text+0x4ae8>
    4a44:	e5932000 	ldr	r2, [r3]
    4a48:	e51b3020 	ldr	r3, [fp, #-32]
    4a4c:	e0632002 	rsb	r2, r3, r2
    4a50:	e59f3090 	ldr	r3, [pc, #144]	; 4ae8 <.text+0x4ae8>
    4a54:	e5832000 	str	r2, [r3]
            if(!content) //buffer empty
    4a58:	e59f3088 	ldr	r3, [pc, #136]	; 4ae8 <.text+0x4ae8>
    4a5c:	e5933000 	ldr	r3, [r3]
    4a60:	e3530000 	cmp	r3, #0	; 0x0
    4a64:	1a000005 	bne	4a80 <ringbuffer1+0x174>
            {
            	write_pointer=0;
    4a68:	e59f207c 	ldr	r2, [pc, #124]	; 4aec <.text+0x4aec>
    4a6c:	e3a03000 	mov	r3, #0	; 0x0
    4a70:	e5823000 	str	r3, [r2]
            	read_pointer=0;
    4a74:	e59f2078 	ldr	r2, [pc, #120]	; 4af4 <.text+0x4af4>
    4a78:	e3a03000 	mov	r3, #0	; 0x0
    4a7c:	e5823000 	str	r3, [r2]
            }
			return(1);
    4a80:	e3a03001 	mov	r3, #1	; 0x1
    4a84:	e50b3024 	str	r3, [fp, #-36]
    4a88:	ea000011 	b	4ad4 <ringbuffer1+0x1c8>
		}
	}
        else if(rw==RBFREE)
    4a8c:	e55b3018 	ldrb	r3, [fp, #-24]
    4a90:	e3530002 	cmp	r3, #2	; 0x2
    4a94:	1a00000c 	bne	4acc <ringbuffer1+0x1c0>
        {
          if(content) return 0;
    4a98:	e59f3048 	ldr	r3, [pc, #72]	; 4ae8 <.text+0x4ae8>
    4a9c:	e5933000 	ldr	r3, [r3]
    4aa0:	e3530000 	cmp	r3, #0	; 0x0
    4aa4:	0a000002 	beq	4ab4 <ringbuffer1+0x1a8>
    4aa8:	e3a03000 	mov	r3, #0	; 0x0
    4aac:	e50b3024 	str	r3, [fp, #-36]
    4ab0:	ea000007 	b	4ad4 <ringbuffer1+0x1c8>
          else return(RINGBUFFERSIZE-11);
    4ab4:	e3a03f5d 	mov	r3, #372	; 0x174
    4ab8:	e50b3024 	str	r3, [fp, #-36]
    4abc:	e51b3024 	ldr	r3, [fp, #-36]
    4ac0:	e2833001 	add	r3, r3, #1	; 0x1
    4ac4:	e50b3024 	str	r3, [fp, #-36]
    4ac8:	ea000001 	b	4ad4 <ringbuffer1+0x1c8>
        }

	return(0);
    4acc:	e3a03000 	mov	r3, #0	; 0x0
    4ad0:	e50b3024 	str	r3, [fp, #-36]
    4ad4:	e51b3024 	ldr	r3, [fp, #-36]
}
    4ad8:	e1a00003 	mov	r0, r3
    4adc:	e24bd00c 	sub	sp, fp, #12	; 0xc
    4ae0:	e89d6800 	ldmia	sp, {fp, sp, lr}
    4ae4:	e12fff1e 	bx	lr
    4ae8:	40000a94 	mulmi	r0, r4, sl
    4aec:	40000a98 	mulmi	r0, r8, sl
    4af0:	40000aa0 	andmi	r0, r0, r0, lsr #21
    4af4:	40000a9c 	mulmi	r0, ip, sl

00004af8 <GPS_configure>:

void GPS_configure(void)
{
    4af8:	e1a0c00d 	mov	ip, sp
    4afc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    4b00:	e24cb004 	sub	fp, ip, #4	; 0x4
    4b04:	e24dd004 	sub	sp, sp, #4	; 0x4
	const unsigned char gps_startstring[2]={ 0xb5, 0x62 };		//sync chars

	static unsigned char gpsconf_state, gps_cfg_msg_counter;
	int written;
	static unsigned char gpsconfig_timeout;
	static unsigned char StartWithHighBaudrate = 0;

	switch (gpsconf_state)
    4b08:	e59f3608 	ldr	r3, [pc, #1544]	; 5118 <.text+0x5118>
    4b0c:	e5d33000 	ldrb	r3, [r3]
    4b10:	e3530007 	cmp	r3, #7	; 0x7
    4b14:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    4b18:	ea000160 	b	50a0 <.text+0x50a0>
    4b1c:	00004b3c 	andeq	r4, r0, ip, lsr fp
    4b20:	00004bf0 	streqd	r4, [r0], -r0
    4b24:	00004cb8 	streqh	r4, [r0], -r8
    4b28:	00004dac 	andeq	r4, r0, ip, lsr #27
    4b2c:	00004e50 	andeq	r4, r0, r0, asr lr
    4b30:	00004ef4 	streqd	r4, [r0], -r4
    4b34:	00004f98 	muleq	r0, r8, pc
    4b38:	0000503c 	andeq	r5, r0, ip, lsr r0
	{
		case 0:
			if (StartWithHighBaudrate)
    4b3c:	e59f35d8 	ldr	r3, [pc, #1496]	; 511c <.text+0x511c>
    4b40:	e5d33000 	ldrb	r3, [r3]
    4b44:	e3530000 	cmp	r3, #0	; 0x0
    4b48:	0a000005 	beq	4b64 <.text+0x4b64>
			{
				UART1Initialize(57600);
    4b4c:	e3a00ce1 	mov	r0, #57600	; 0xe100
    4b50:	ebfffd0a 	bl	3f80 <UART1Initialize>
				StartWithHighBaudrate = 0;
    4b54:	e59f35c0 	ldr	r3, [pc, #1472]	; 511c <.text+0x511c>
    4b58:	e3a02000 	mov	r2, #0	; 0x0
    4b5c:	e5c32000 	strb	r2, [r3]
    4b60:	ea000001 	b	4b6c <.text+0x4b6c>
			}
			else
				UART1Initialize(9600);
    4b64:	e3a00d96 	mov	r0, #9600	; 0x2580
    4b68:	ebfffd04 	bl	3f80 <UART1Initialize>
			if ((ringbuffer1(RBFREE, 0, 0))>28)
    4b6c:	e3a00002 	mov	r0, #2	; 0x2
    4b70:	e3a01000 	mov	r1, #0	; 0x0
    4b74:	e3a02000 	mov	r2, #0	; 0x0
    4b78:	ebffff63 	bl	490c <ringbuffer1>
    4b7c:	e1a03000 	mov	r3, r0
    4b80:	e353001c 	cmp	r3, #28	; 0x1c
    4b84:	da000015 	ble	4be0 <.text+0x4be0>
			{
				written=ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
    4b88:	e3a00001 	mov	r0, #1	; 0x1
    4b8c:	e59f158c 	ldr	r1, [pc, #1420]	; 5120 <.text+0x5120>
    4b90:	e3a02002 	mov	r2, #2	; 0x2
    4b94:	ebffff5c 	bl	490c <ringbuffer1>
    4b98:	e1a03000 	mov	r3, r0
    4b9c:	e50b3010 	str	r3, [fp, #-16]
				written=ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_PRT, 26);
    4ba0:	e3a00001 	mov	r0, #1	; 0x1
    4ba4:	e59f1578 	ldr	r1, [pc, #1400]	; 5124 <.text+0x5124>
    4ba8:	e3a0201a 	mov	r2, #26	; 0x1a
    4bac:	ebffff56 	bl	490c <ringbuffer1>
    4bb0:	e1a03000 	mov	r3, r0
    4bb4:	e50b3010 	str	r3, [fp, #-16]
				UART1_send_ringbuffer();
    4bb8:	ebfffde6 	bl	4358 <UART1_send_ringbuffer>
				baudrate1_change=1;
    4bbc:	e59f2564 	ldr	r2, [pc, #1380]	; 5128 <.text+0x5128>
    4bc0:	e3a03001 	mov	r3, #1	; 0x1
    4bc4:	e5c23000 	strb	r3, [r2]
				gpsconf_state++;
    4bc8:	e59f3548 	ldr	r3, [pc, #1352]	; 5118 <.text+0x5118>
    4bcc:	e5d33000 	ldrb	r3, [r3]
    4bd0:	e2833001 	add	r3, r3, #1	; 0x1
    4bd4:	e20330ff 	and	r3, r3, #255	; 0xff
    4bd8:	e59f2538 	ldr	r2, [pc, #1336]	; 5118 <.text+0x5118>
    4bdc:	e5c23000 	strb	r3, [r2]
			}
			gpsconfig_timeout=0;
    4be0:	e59f3544 	ldr	r3, [pc, #1348]	; 512c <.text+0x512c>
    4be4:	e3a02000 	mov	r2, #0	; 0x0
    4be8:	e5c32000 	strb	r2, [r3]
		break;
    4bec:	ea00012e 	b	50ac <.text+0x50ac>
		case 1:
			if (GPS_ACK_received)
    4bf0:	e59f3538 	ldr	r3, [pc, #1336]	; 5130 <.text+0x5130>
    4bf4:	e5d33000 	ldrb	r3, [r3]
    4bf8:	e20330ff 	and	r3, r3, #255	; 0xff
    4bfc:	e3530000 	cmp	r3, #0	; 0x0
    4c00:	0a000022 	beq	4c90 <.text+0x4c90>
			{
				GPS_ACK_received=0;
    4c04:	e59f2524 	ldr	r2, [pc, #1316]	; 5130 <.text+0x5130>
    4c08:	e3a03000 	mov	r3, #0	; 0x0
    4c0c:	e5c23000 	strb	r3, [r2]
				if (ringbuffer1(RBFREE, 0, 0)>12)
    4c10:	e3a00002 	mov	r0, #2	; 0x2
    4c14:	e3a01000 	mov	r1, #0	; 0x0
    4c18:	e3a02000 	mov	r2, #0	; 0x0
    4c1c:	ebffff3a 	bl	490c <ringbuffer1>
    4c20:	e1a03000 	mov	r3, r0
    4c24:	e353000c 	cmp	r3, #12	; 0xc
    4c28:	da000011 	ble	4c74 <.text+0x4c74>
				{
					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
    4c2c:	e3a00001 	mov	r0, #1	; 0x1
    4c30:	e59f14e8 	ldr	r1, [pc, #1256]	; 5120 <.text+0x5120>
    4c34:	e3a02002 	mov	r2, #2	; 0x2
    4c38:	ebffff33 	bl	490c <ringbuffer1>
					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_ANT, 10);
    4c3c:	e3a00001 	mov	r0, #1	; 0x1
    4c40:	e59f14ec 	ldr	r1, [pc, #1260]	; 5134 <.text+0x5134>
    4c44:	e3a0200a 	mov	r2, #10	; 0xa
    4c48:	ebffff2f 	bl	490c <ringbuffer1>
					UART1_send_ringbuffer();
    4c4c:	ebfffdc1 	bl	4358 <UART1_send_ringbuffer>
					gps_cfg_msg_counter=0;
    4c50:	e59f24e0 	ldr	r2, [pc, #1248]	; 5138 <.text+0x5138>
    4c54:	e3a03000 	mov	r3, #0	; 0x0
    4c58:	e5c23000 	strb	r3, [r2]
					gpsconf_state++;
    4c5c:	e59f34b4 	ldr	r3, [pc, #1204]	; 5118 <.text+0x5118>
    4c60:	e5d33000 	ldrb	r3, [r3]
    4c64:	e2833001 	add	r3, r3, #1	; 0x1
    4c68:	e20330ff 	and	r3, r3, #255	; 0xff
    4c6c:	e59f24a4 	ldr	r2, [pc, #1188]	; 5118 <.text+0x5118>
    4c70:	e5c23000 	strb	r3, [r2]
				}
				gpsconfig_timeout=0;
    4c74:	e59f24b0 	ldr	r2, [pc, #1200]	; 512c <.text+0x512c>
    4c78:	e3a03000 	mov	r3, #0	; 0x0
    4c7c:	e5c23000 	strb	r3, [r2]
				StartWithHighBaudrate = 0;
    4c80:	e59f2494 	ldr	r2, [pc, #1172]	; 511c <.text+0x511c>
    4c84:	e3a03000 	mov	r3, #0	; 0x0
    4c88:	e5c23000 	strb	r3, [r2]
    4c8c:	ea000106 	b	50ac <.text+0x50ac>
			} else
			{
				gpsconfig_timeout++;
    4c90:	e59f3494 	ldr	r3, [pc, #1172]	; 512c <.text+0x512c>
    4c94:	e5d33000 	ldrb	r3, [r3]
    4c98:	e2833001 	add	r3, r3, #1	; 0x1
    4c9c:	e20330ff 	and	r3, r3, #255	; 0xff
    4ca0:	e59f2484 	ldr	r2, [pc, #1156]	; 512c <.text+0x512c>
    4ca4:	e5c23000 	strb	r3, [r2]
				StartWithHighBaudrate = 1;
    4ca8:	e59f246c 	ldr	r2, [pc, #1132]	; 511c <.text+0x511c>
    4cac:	e3a03001 	mov	r3, #1	; 0x1
    4cb0:	e5c23000 	strb	r3, [r2]
			}
		break;
    4cb4:	ea0000fc 	b	50ac <.text+0x50ac>
		case 2:
			if (GPS_ACK_received)
    4cb8:	e59f3470 	ldr	r3, [pc, #1136]	; 5130 <.text+0x5130>
    4cbc:	e5d33000 	ldrb	r3, [r3]
    4cc0:	e20330ff 	and	r3, r3, #255	; 0xff
    4cc4:	e3530000 	cmp	r3, #0	; 0x0
    4cc8:	0a000030 	beq	4d90 <.text+0x4d90>
			{
				GPS_ACK_received=0;
    4ccc:	e59f245c 	ldr	r2, [pc, #1116]	; 5130 <.text+0x5130>
    4cd0:	e3a03000 	mov	r3, #0	; 0x0
    4cd4:	e5c23000 	strb	r3, [r2]
				if (ringbuffer1(RBFREE, 0, 0)>14)
    4cd8:	e3a00002 	mov	r0, #2	; 0x2
    4cdc:	e3a01000 	mov	r1, #0	; 0x0
    4ce0:	e3a02000 	mov	r2, #0	; 0x0
    4ce4:	ebffff08 	bl	490c <ringbuffer1>
    4ce8:	e1a03000 	mov	r3, r0
    4cec:	e353000e 	cmp	r3, #14	; 0xe
    4cf0:	da000022 	ble	4d80 <.text+0x4d80>
				{
					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
    4cf4:	e3a00001 	mov	r0, #1	; 0x1
    4cf8:	e59f1420 	ldr	r1, [pc, #1056]	; 5120 <.text+0x5120>
    4cfc:	e3a02002 	mov	r2, #2	; 0x2
    4d00:	ebffff01 	bl	490c <ringbuffer1>
					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_MSG[gps_cfg_msg_counter], 12);
    4d04:	e59f342c 	ldr	r3, [pc, #1068]	; 5138 <.text+0x5138>
    4d08:	e5d33000 	ldrb	r3, [r3]
    4d0c:	e1a02003 	mov	r2, r3
    4d10:	e1a03002 	mov	r3, r2
    4d14:	e1a03083 	mov	r3, r3, lsl #1
    4d18:	e0833002 	add	r3, r3, r2
    4d1c:	e1a03103 	mov	r3, r3, lsl #2
    4d20:	e1a02003 	mov	r2, r3
    4d24:	e59f3410 	ldr	r3, [pc, #1040]	; 513c <.text+0x513c>
    4d28:	e0823003 	add	r3, r2, r3
    4d2c:	e3a00001 	mov	r0, #1	; 0x1
    4d30:	e1a01003 	mov	r1, r3
    4d34:	e3a0200c 	mov	r2, #12	; 0xc
    4d38:	ebfffef3 	bl	490c <ringbuffer1>
					UART1_send_ringbuffer();
    4d3c:	ebfffd85 	bl	4358 <UART1_send_ringbuffer>
					if (++gps_cfg_msg_counter==11)
    4d40:	e59f33f0 	ldr	r3, [pc, #1008]	; 5138 <.text+0x5138>
    4d44:	e5d33000 	ldrb	r3, [r3]
    4d48:	e2833001 	add	r3, r3, #1	; 0x1
    4d4c:	e20330ff 	and	r3, r3, #255	; 0xff
    4d50:	e59f23e0 	ldr	r2, [pc, #992]	; 5138 <.text+0x5138>
    4d54:	e5c23000 	strb	r3, [r2]
    4d58:	e59f33d8 	ldr	r3, [pc, #984]	; 5138 <.text+0x5138>
    4d5c:	e5d33000 	ldrb	r3, [r3]
    4d60:	e353000b 	cmp	r3, #11	; 0xb
    4d64:	1a000005 	bne	4d80 <.text+0x4d80>
					{
						gpsconf_state++;
    4d68:	e59f33a8 	ldr	r3, [pc, #936]	; 5118 <.text+0x5118>
    4d6c:	e5d33000 	ldrb	r3, [r3]
    4d70:	e2833001 	add	r3, r3, #1	; 0x1
    4d74:	e20330ff 	and	r3, r3, #255	; 0xff
    4d78:	e59f2398 	ldr	r2, [pc, #920]	; 5118 <.text+0x5118>
    4d7c:	e5c23000 	strb	r3, [r2]
					}
				}
				gpsconfig_timeout=0;
    4d80:	e59f33a4 	ldr	r3, [pc, #932]	; 512c <.text+0x512c>
    4d84:	e3a02000 	mov	r2, #0	; 0x0
    4d88:	e5c32000 	strb	r2, [r3]
    4d8c:	ea0000c6 	b	50ac <.text+0x50ac>
			} else
				gpsconfig_timeout++;
    4d90:	e59f3394 	ldr	r3, [pc, #916]	; 512c <.text+0x512c>
    4d94:	e5d33000 	ldrb	r3, [r3]
    4d98:	e2833001 	add	r3, r3, #1	; 0x1
    4d9c:	e20330ff 	and	r3, r3, #255	; 0xff
    4da0:	e59f2384 	ldr	r2, [pc, #900]	; 512c <.text+0x512c>
    4da4:	e5c23000 	strb	r3, [r2]
		break;
    4da8:	ea0000bf 	b	50ac <.text+0x50ac>
		case 3:
			if (GPS_ACK_received)
    4dac:	e59f337c 	ldr	r3, [pc, #892]	; 5130 <.text+0x5130>
    4db0:	e5d33000 	ldrb	r3, [r3]
    4db4:	e20330ff 	and	r3, r3, #255	; 0xff
    4db8:	e3530000 	cmp	r3, #0	; 0x0
    4dbc:	0a00001c 	beq	4e34 <.text+0x4e34>
			{
				GPS_ACK_received=0;
    4dc0:	e59f2368 	ldr	r2, [pc, #872]	; 5130 <.text+0x5130>
    4dc4:	e3a03000 	mov	r3, #0	; 0x0
    4dc8:	e5c23000 	strb	r3, [r2]
				if (ringbuffer1(RBFREE, 0, 0)>48)
    4dcc:	e3a00002 	mov	r0, #2	; 0x2
    4dd0:	e3a01000 	mov	r1, #0	; 0x0
    4dd4:	e3a02000 	mov	r2, #0	; 0x0
    4dd8:	ebfffecb 	bl	490c <ringbuffer1>
    4ddc:	e1a03000 	mov	r3, r0
    4de0:	e3530030 	cmp	r3, #48	; 0x30
    4de4:	da00000e 	ble	4e24 <.text+0x4e24>
				{
					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
    4de8:	e3a00001 	mov	r0, #1	; 0x1
    4dec:	e59f132c 	ldr	r1, [pc, #812]	; 5120 <.text+0x5120>
    4df0:	e3a02002 	mov	r2, #2	; 0x2
    4df4:	ebfffec4 	bl	490c <ringbuffer1>
					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_NAV2, 46);
    4df8:	e3a00001 	mov	r0, #1	; 0x1
    4dfc:	e59f133c 	ldr	r1, [pc, #828]	; 5140 <.text+0x5140>
    4e00:	e3a0202e 	mov	r2, #46	; 0x2e
    4e04:	ebfffec0 	bl	490c <ringbuffer1>
					UART1_send_ringbuffer();
    4e08:	ebfffd52 	bl	4358 <UART1_send_ringbuffer>
					gpsconf_state++;
    4e0c:	e59f3304 	ldr	r3, [pc, #772]	; 5118 <.text+0x5118>
    4e10:	e5d33000 	ldrb	r3, [r3]
    4e14:	e2833001 	add	r3, r3, #1	; 0x1
    4e18:	e20330ff 	and	r3, r3, #255	; 0xff
    4e1c:	e59f22f4 	ldr	r2, [pc, #756]	; 5118 <.text+0x5118>
    4e20:	e5c23000 	strb	r3, [r2]
				}
				gpsconfig_timeout=0;
    4e24:	e59f3300 	ldr	r3, [pc, #768]	; 512c <.text+0x512c>
    4e28:	e3a02000 	mov	r2, #0	; 0x0
    4e2c:	e5c32000 	strb	r2, [r3]
    4e30:	ea00009d 	b	50ac <.text+0x50ac>
			} else
				gpsconfig_timeout++;
    4e34:	e59f32f0 	ldr	r3, [pc, #752]	; 512c <.text+0x512c>
    4e38:	e5d33000 	ldrb	r3, [r3]
    4e3c:	e2833001 	add	r3, r3, #1	; 0x1
    4e40:	e20330ff 	and	r3, r3, #255	; 0xff
    4e44:	e59f22e0 	ldr	r2, [pc, #736]	; 512c <.text+0x512c>
    4e48:	e5c23000 	strb	r3, [r2]
		break;
    4e4c:	ea000096 	b	50ac <.text+0x50ac>
		case 4:
			if (GPS_ACK_received)
    4e50:	e59f32d8 	ldr	r3, [pc, #728]	; 5130 <.text+0x5130>
    4e54:	e5d33000 	ldrb	r3, [r3]
    4e58:	e20330ff 	and	r3, r3, #255	; 0xff
    4e5c:	e3530000 	cmp	r3, #0	; 0x0
    4e60:	0a00001c 	beq	4ed8 <.text+0x4ed8>
			{
				GPS_ACK_received=0;
    4e64:	e59f22c4 	ldr	r2, [pc, #708]	; 5130 <.text+0x5130>
    4e68:	e3a03000 	mov	r3, #0	; 0x0
    4e6c:	e5c23000 	strb	r3, [r2]
				if (ringbuffer1(RBFREE, 0, 0)>14)
    4e70:	e3a00002 	mov	r0, #2	; 0x2
    4e74:	e3a01000 	mov	r1, #0	; 0x0
    4e78:	e3a02000 	mov	r2, #0	; 0x0
    4e7c:	ebfffea2 	bl	490c <ringbuffer1>
    4e80:	e1a03000 	mov	r3, r0
    4e84:	e353000e 	cmp	r3, #14	; 0xe
    4e88:	da00000e 	ble	4ec8 <.text+0x4ec8>
				{
					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
    4e8c:	e3a00001 	mov	r0, #1	; 0x1
    4e90:	e59f1288 	ldr	r1, [pc, #648]	; 5120 <.text+0x5120>
    4e94:	e3a02002 	mov	r2, #2	; 0x2
    4e98:	ebfffe9b 	bl	490c <ringbuffer1>
					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_RATE, 12);
    4e9c:	e3a00001 	mov	r0, #1	; 0x1
    4ea0:	e59f129c 	ldr	r1, [pc, #668]	; 5144 <.text+0x5144>
    4ea4:	e3a0200c 	mov	r2, #12	; 0xc
    4ea8:	ebfffe97 	bl	490c <ringbuffer1>
					UART1_send_ringbuffer();
    4eac:	ebfffd29 	bl	4358 <UART1_send_ringbuffer>
					gpsconf_state++;
    4eb0:	e59f3260 	ldr	r3, [pc, #608]	; 5118 <.text+0x5118>
    4eb4:	e5d33000 	ldrb	r3, [r3]
    4eb8:	e2833001 	add	r3, r3, #1	; 0x1
    4ebc:	e20330ff 	and	r3, r3, #255	; 0xff
    4ec0:	e59f2250 	ldr	r2, [pc, #592]	; 5118 <.text+0x5118>
    4ec4:	e5c23000 	strb	r3, [r2]
				}
				gpsconfig_timeout=0;
    4ec8:	e59f325c 	ldr	r3, [pc, #604]	; 512c <.text+0x512c>
    4ecc:	e3a02000 	mov	r2, #0	; 0x0
    4ed0:	e5c32000 	strb	r2, [r3]
    4ed4:	ea000074 	b	50ac <.text+0x50ac>
			} else
				gpsconfig_timeout++;
    4ed8:	e59f324c 	ldr	r3, [pc, #588]	; 512c <.text+0x512c>
    4edc:	e5d33000 	ldrb	r3, [r3]
    4ee0:	e2833001 	add	r3, r3, #1	; 0x1
    4ee4:	e20330ff 	and	r3, r3, #255	; 0xff
    4ee8:	e59f223c 	ldr	r2, [pc, #572]	; 512c <.text+0x512c>
    4eec:	e5c23000 	strb	r3, [r2]
		break;
    4ef0:	ea00006d 	b	50ac <.text+0x50ac>
		case 5:
			if (GPS_ACK_received)
    4ef4:	e59f3234 	ldr	r3, [pc, #564]	; 5130 <.text+0x5130>
    4ef8:	e5d33000 	ldrb	r3, [r3]
    4efc:	e20330ff 	and	r3, r3, #255	; 0xff
    4f00:	e3530000 	cmp	r3, #0	; 0x0
    4f04:	0a00001c 	beq	4f7c <.text+0x4f7c>
			{
				GPS_ACK_received=0;
    4f08:	e59f2220 	ldr	r2, [pc, #544]	; 5130 <.text+0x5130>
    4f0c:	e3a03000 	mov	r3, #0	; 0x0
    4f10:	e5c23000 	strb	r3, [r2]
				if (ringbuffer1(RBFREE, 0, 0)>16)
    4f14:	e3a00002 	mov	r0, #2	; 0x2
    4f18:	e3a01000 	mov	r1, #0	; 0x0
    4f1c:	e3a02000 	mov	r2, #0	; 0x0
    4f20:	ebfffe79 	bl	490c <ringbuffer1>
    4f24:	e1a03000 	mov	r3, r0
    4f28:	e3530010 	cmp	r3, #16	; 0x10
    4f2c:	da00000e 	ble	4f6c <.text+0x4f6c>
				{
					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
    4f30:	e3a00001 	mov	r0, #1	; 0x1
    4f34:	e59f11e4 	ldr	r1, [pc, #484]	; 5120 <.text+0x5120>
    4f38:	e3a02002 	mov	r2, #2	; 0x2
    4f3c:	ebfffe72 	bl	490c <ringbuffer1>
					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_SBAS, 14);
    4f40:	e3a00001 	mov	r0, #1	; 0x1
    4f44:	e59f11fc 	ldr	r1, [pc, #508]	; 5148 <.text+0x5148>
    4f48:	e3a0200e 	mov	r2, #14	; 0xe
    4f4c:	ebfffe6e 	bl	490c <ringbuffer1>
					UART1_send_ringbuffer();
    4f50:	ebfffd00 	bl	4358 <UART1_send_ringbuffer>
					gpsconf_state++;
    4f54:	e59f31bc 	ldr	r3, [pc, #444]	; 5118 <.text+0x5118>
    4f58:	e5d33000 	ldrb	r3, [r3]
    4f5c:	e2833001 	add	r3, r3, #1	; 0x1
    4f60:	e20330ff 	and	r3, r3, #255	; 0xff
    4f64:	e59f21ac 	ldr	r2, [pc, #428]	; 5118 <.text+0x5118>
    4f68:	e5c23000 	strb	r3, [r2]
				}
				gpsconfig_timeout=0;
    4f6c:	e59f31b8 	ldr	r3, [pc, #440]	; 512c <.text+0x512c>
    4f70:	e3a02000 	mov	r2, #0	; 0x0
    4f74:	e5c32000 	strb	r2, [r3]
    4f78:	ea00004b 	b	50ac <.text+0x50ac>
			} else
				gpsconfig_timeout++;
    4f7c:	e59f31a8 	ldr	r3, [pc, #424]	; 512c <.text+0x512c>
    4f80:	e5d33000 	ldrb	r3, [r3]
    4f84:	e2833001 	add	r3, r3, #1	; 0x1
    4f88:	e20330ff 	and	r3, r3, #255	; 0xff
    4f8c:	e59f2198 	ldr	r2, [pc, #408]	; 512c <.text+0x512c>
    4f90:	e5c23000 	strb	r3, [r2]
		break;
    4f94:	ea000044 	b	50ac <.text+0x50ac>
		case 6:
			if (GPS_ACK_received)
    4f98:	e59f3190 	ldr	r3, [pc, #400]	; 5130 <.text+0x5130>
    4f9c:	e5d33000 	ldrb	r3, [r3]
    4fa0:	e20330ff 	and	r3, r3, #255	; 0xff
    4fa4:	e3530000 	cmp	r3, #0	; 0x0
    4fa8:	0a00001c 	beq	5020 <.text+0x5020>
			{
				GPS_ACK_received=0;
    4fac:	e59f217c 	ldr	r2, [pc, #380]	; 5130 <.text+0x5130>
    4fb0:	e3a03000 	mov	r3, #0	; 0x0
    4fb4:	e5c23000 	strb	r3, [r2]
				if (ringbuffer1(RBFREE, 0, 0)>21)
    4fb8:	e3a00002 	mov	r0, #2	; 0x2
    4fbc:	e3a01000 	mov	r1, #0	; 0x0
    4fc0:	e3a02000 	mov	r2, #0	; 0x0
    4fc4:	ebfffe50 	bl	490c <ringbuffer1>
    4fc8:	e1a03000 	mov	r3, r0
    4fcc:	e3530015 	cmp	r3, #21	; 0x15
    4fd0:	da00000e 	ble	5010 <.text+0x5010>
				{
					ringbuffer1(RBWRITE, (unsigned char*)gps_startstring, 2);
    4fd4:	e3a00001 	mov	r0, #1	; 0x1
    4fd8:	e59f1140 	ldr	r1, [pc, #320]	; 5120 <.text+0x5120>
    4fdc:	e3a02002 	mov	r2, #2	; 0x2
    4fe0:	ebfffe49 	bl	490c <ringbuffer1>
					ringbuffer1(RBWRITE, (unsigned char*)GPS_CFG_CFG, 19);
    4fe4:	e3a00001 	mov	r0, #1	; 0x1
    4fe8:	e59f115c 	ldr	r1, [pc, #348]	; 514c <.text+0x514c>
    4fec:	e3a02013 	mov	r2, #19	; 0x13
    4ff0:	ebfffe45 	bl	490c <ringbuffer1>
					UART1_send_ringbuffer();
    4ff4:	ebfffcd7 	bl	4358 <UART1_send_ringbuffer>
					gpsconf_state++;
    4ff8:	e59f3118 	ldr	r3, [pc, #280]	; 5118 <.text+0x5118>
    4ffc:	e5d33000 	ldrb	r3, [r3]
    5000:	e2833001 	add	r3, r3, #1	; 0x1
    5004:	e20330ff 	and	r3, r3, #255	; 0xff
    5008:	e59f2108 	ldr	r2, [pc, #264]	; 5118 <.text+0x5118>
    500c:	e5c23000 	strb	r3, [r2]
				}
				gpsconfig_timeout=0;
    5010:	e59f3114 	ldr	r3, [pc, #276]	; 512c <.text+0x512c>
    5014:	e3a02000 	mov	r2, #0	; 0x0
    5018:	e5c32000 	strb	r2, [r3]
    501c:	ea000022 	b	50ac <.text+0x50ac>
			} else
				gpsconfig_timeout++;
    5020:	e59f3104 	ldr	r3, [pc, #260]	; 512c <.text+0x512c>
    5024:	e5d33000 	ldrb	r3, [r3]
    5028:	e2833001 	add	r3, r3, #1	; 0x1
    502c:	e20330ff 	and	r3, r3, #255	; 0xff
    5030:	e59f20f4 	ldr	r2, [pc, #244]	; 512c <.text+0x512c>
    5034:	e5c23000 	strb	r3, [r2]
		break;
    5038:	ea00001b 	b	50ac <.text+0x50ac>
		case 7:
			if (GPS_ACK_received)
    503c:	e59f30ec 	ldr	r3, [pc, #236]	; 5130 <.text+0x5130>
    5040:	e5d33000 	ldrb	r3, [r3]
    5044:	e20330ff 	and	r3, r3, #255	; 0xff
    5048:	e3530000 	cmp	r3, #0	; 0x0
    504c:	0a00000c 	beq	5084 <.text+0x5084>
			{
				GPS_ACK_received=0;
    5050:	e59f20d8 	ldr	r2, [pc, #216]	; 5130 <.text+0x5130>
    5054:	e3a03000 	mov	r3, #0	; 0x0
    5058:	e5c23000 	strb	r3, [r2]
				GPS_init_status=GPS_IS_CONFIGURED;
    505c:	e59f20ec 	ldr	r2, [pc, #236]	; 5150 <.text+0x5150>
    5060:	e3a03002 	mov	r3, #2	; 0x2
    5064:	e5c23000 	strb	r3, [r2]
				gpsconf_state=0;
    5068:	e59f20a8 	ldr	r2, [pc, #168]	; 5118 <.text+0x5118>
    506c:	e3a03000 	mov	r3, #0	; 0x0
    5070:	e5c23000 	strb	r3, [r2]
				gpsconfig_timeout=0;
    5074:	e59f20b0 	ldr	r2, [pc, #176]	; 512c <.text+0x512c>
    5078:	e3a03000 	mov	r3, #0	; 0x0
    507c:	e5c23000 	strb	r3, [r2]
    5080:	ea000009 	b	50ac <.text+0x50ac>
			} else
				gpsconfig_timeout++;
    5084:	e59f30a0 	ldr	r3, [pc, #160]	; 512c <.text+0x512c>
    5088:	e5d33000 	ldrb	r3, [r3]
    508c:	e2833001 	add	r3, r3, #1	; 0x1
    5090:	e20330ff 	and	r3, r3, #255	; 0xff
    5094:	e59f2090 	ldr	r2, [pc, #144]	; 512c <.text+0x512c>
    5098:	e5c23000 	strb	r3, [r2]
		break;
    509c:	ea000002 	b	50ac <.text+0x50ac>
		default:
			gpsconf_state=0;
    50a0:	e59f3070 	ldr	r3, [pc, #112]	; 5118 <.text+0x5118>
    50a4:	e3a02000 	mov	r2, #0	; 0x0
    50a8:	e5c32000 	strb	r2, [r3]
		break;
	}
	if (gpsconfig_timeout>GPSCONF_TIMEOUT)				//timeout for ACK receiving
    50ac:	e59f3078 	ldr	r3, [pc, #120]	; 512c <.text+0x512c>
    50b0:	e5d33000 	ldrb	r3, [r3]
    50b4:	e35300c8 	cmp	r3, #200	; 0xc8
    50b8:	9a000013 	bls	510c <.text+0x510c>
	{
		if (StartWithHighBaudrate)
    50bc:	e59f3058 	ldr	r3, [pc, #88]	; 511c <.text+0x511c>
    50c0:	e5d33000 	ldrb	r3, [r3]
    50c4:	e3530000 	cmp	r3, #0	; 0x0
    50c8:	0a000006 	beq	50e8 <.text+0x50e8>
		{
			gpsconf_state=0;
    50cc:	e59f2044 	ldr	r2, [pc, #68]	; 5118 <.text+0x5118>
    50d0:	e3a03000 	mov	r3, #0	; 0x0
    50d4:	e5c23000 	strb	r3, [r2]
			gpsconfig_timeout=0;
    50d8:	e59f204c 	ldr	r2, [pc, #76]	; 512c <.text+0x512c>
    50dc:	e3a03000 	mov	r3, #0	; 0x0
    50e0:	e5c23000 	strb	r3, [r2]
    50e4:	ea000008 	b	510c <.text+0x510c>
		} else
		{
			gpsconf_state=0;
    50e8:	e59f2028 	ldr	r2, [pc, #40]	; 5118 <.text+0x5118>
    50ec:	e3a03000 	mov	r3, #0	; 0x0
    50f0:	e5c23000 	strb	r3, [r2]
			gpsconfig_timeout=0;
    50f4:	e59f2030 	ldr	r2, [pc, #48]	; 512c <.text+0x512c>
    50f8:	e3a03000 	mov	r3, #0	; 0x0
    50fc:	e5c23000 	strb	r3, [r2]
			GPS_init_status=GPS_CONFIG_ERROR;
    5100:	e59f2048 	ldr	r2, [pc, #72]	; 5150 <.text+0x5150>
    5104:	e3a03003 	mov	r3, #3	; 0x3
    5108:	e5c23000 	strb	r3, [r2]
		}
	}
}
    510c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5110:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5114:	e12fff1e 	bx	lr
    5118:	40000c23 	andmi	r0, r0, r3, lsr #24
    511c:	40000c20 	andmi	r0, r0, r0, lsr #24
    5120:	0000d257 	andeq	sp, r0, r7, asr r2
    5124:	0000d154 	andeq	sp, r0, r4, asr r1
    5128:	400008b1 	strmih	r0, [r0], -r1
    512c:	40000c21 	andmi	r0, r0, r1, lsr #24
    5130:	400008be 	strmih	r0, [r0], -lr
    5134:	0000d16e 	andeq	sp, r0, lr, ror #2
    5138:	40000c22 	andmi	r0, r0, r2, lsr #24
    513c:	0000d178 	andeq	sp, r0, r8, ror r1
    5140:	0000d1fc 	streqd	sp, [r0], -ip
    5144:	0000d22a 	andeq	sp, r0, sl, lsr #4
    5148:	0000d236 	andeq	sp, r0, r6, lsr r2
    514c:	0000d244 	andeq	sp, r0, r4, asr #4
    5150:	40000df0 	strmid	r0, [r0], -r0

00005154 <_read_r>:
#include "uart.h"

// new code for _read_r provided by Alexey Shusharin - Thanks
_ssize_t _read_r(struct _reent *r, int file, void *ptr, size_t len)
{
    5154:	e1a0c00d 	mov	ip, sp
    5158:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    515c:	e24cb004 	sub	fp, ip, #4	; 0x4
    5160:	e24dd020 	sub	sp, sp, #32	; 0x20
    5164:	e50b001c 	str	r0, [fp, #-28]
    5168:	e50b1020 	str	r1, [fp, #-32]
    516c:	e50b2024 	str	r2, [fp, #-36]
    5170:	e50b3028 	str	r3, [fp, #-40]
  char c;
  int  i;
  unsigned char *p;

  p = (unsigned char*)ptr;
    5174:	e51b3024 	ldr	r3, [fp, #-36]
    5178:	e50b3010 	str	r3, [fp, #-16]

  for (i = 0; i < len; i++)
    517c:	e3a03000 	mov	r3, #0	; 0x0
    5180:	e50b3014 	str	r3, [fp, #-20]
    5184:	ea00001f 	b	5208 <_read_r+0xb4>
  {
    c = UARTReadChar();
    5188:	ebfffbcf 	bl	40cc <UARTReadChar>
    518c:	e1a03000 	mov	r3, r0
    5190:	e54b3015 	strb	r3, [fp, #-21]

    *p++ = c;
    5194:	e51b2010 	ldr	r2, [fp, #-16]
    5198:	e55b3015 	ldrb	r3, [fp, #-21]
    519c:	e5c23000 	strb	r3, [r2]
    51a0:	e51b3010 	ldr	r3, [fp, #-16]
    51a4:	e2833001 	add	r3, r3, #1	; 0x1
    51a8:	e50b3010 	str	r3, [fp, #-16]
    UARTWriteChar(c);
    51ac:	e55b3015 	ldrb	r3, [fp, #-21]
    51b0:	e1a00003 	mov	r0, r3
    51b4:	ebfffb9c 	bl	402c <UARTWriteChar>

    if (c == 0x0D && i <= (len - 2))
    51b8:	e55b3015 	ldrb	r3, [fp, #-21]
    51bc:	e353000d 	cmp	r3, #13	; 0xd
    51c0:	1a00000d 	bne	51fc <_read_r+0xa8>
    51c4:	e51b3014 	ldr	r3, [fp, #-20]
    51c8:	e51b2028 	ldr	r2, [fp, #-40]
    51cc:	e2422002 	sub	r2, r2, #2	; 0x2
    51d0:	e1530002 	cmp	r3, r2
    51d4:	8a000008 	bhi	51fc <_read_r+0xa8>
    {
      *p = 0x0A;
    51d8:	e51b2010 	ldr	r2, [fp, #-16]
    51dc:	e3a0300a 	mov	r3, #10	; 0xa
    51e0:	e5c23000 	strb	r3, [r2]
      UARTWriteChar(0x0A);
    51e4:	e3a0000a 	mov	r0, #10	; 0xa
    51e8:	ebfffb8f 	bl	402c <UARTWriteChar>
      return i + 2;
    51ec:	e51b3014 	ldr	r3, [fp, #-20]
    51f0:	e2833002 	add	r3, r3, #2	; 0x2
    51f4:	e50b302c 	str	r3, [fp, #-44]
    51f8:	ea000008 	b	5220 <_read_r+0xcc>
    51fc:	e51b3014 	ldr	r3, [fp, #-20]
    5200:	e2833001 	add	r3, r3, #1	; 0x1
    5204:	e50b3014 	str	r3, [fp, #-20]
    5208:	e51b2014 	ldr	r2, [fp, #-20]
    520c:	e51b3028 	ldr	r3, [fp, #-40]
    5210:	e1520003 	cmp	r2, r3
    5214:	3affffdb 	bcc	5188 <_read_r+0x34>
    }
  }
  return i;
    5218:	e51b3014 	ldr	r3, [fp, #-20]
    521c:	e50b302c 	str	r3, [fp, #-44]
    5220:	e51b302c 	ldr	r3, [fp, #-44]
}
    5224:	e1a00003 	mov	r0, r3
    5228:	e24bd00c 	sub	sp, fp, #12	; 0xc
    522c:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5230:	e12fff1e 	bx	lr

00005234 <_write_r>:


#if 0
// old version - no longer in use
_ssize_t _read_r(
    struct _reent *r, 
    int file, 
    void *ptr, 
    size_t len)
{
	char c;
	int  i;
	unsigned char *p;
	
	p = (unsigned char*)ptr;
	
	for (i = 0; i < len; i++) {
		// c = uart0Getch();
		c = UARTReadChar();
		if (c == 0x0D) {
			*p='\0';
			break;
		}
		*p++ = c;
		UARTWriteChar(c);
	}
	return len - i;
}
#endif

_ssize_t _write_r (
    struct _reent *r, 
    int file, 
    const void *ptr, 
    size_t len)
{
    5234:	e1a0c00d 	mov	ip, sp
    5238:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    523c:	e24cb004 	sub	fp, ip, #4	; 0x4
    5240:	e24dd018 	sub	sp, sp, #24	; 0x18
    5244:	e50b0018 	str	r0, [fp, #-24]
    5248:	e50b101c 	str	r1, [fp, #-28]
    524c:	e50b2020 	str	r2, [fp, #-32]
    5250:	e50b3024 	str	r3, [fp, #-36]
	int i;
	const unsigned char *p;
	
	p = (const unsigned char*) ptr;
    5254:	e51b3020 	ldr	r3, [fp, #-32]
    5258:	e50b3010 	str	r3, [fp, #-16]
	
	for (i = 0; i < len; i++) {
    525c:	e3a03000 	mov	r3, #0	; 0x0
    5260:	e50b3014 	str	r3, [fp, #-20]
    5264:	ea000010 	b	52ac <_write_r+0x78>
		if (*p == '\n' ) UARTWriteChar('\r');
    5268:	e51b3010 	ldr	r3, [fp, #-16]
    526c:	e5d33000 	ldrb	r3, [r3]
    5270:	e353000a 	cmp	r3, #10	; 0xa
    5274:	1a000001 	bne	5280 <_write_r+0x4c>
    5278:	e3a0000d 	mov	r0, #13	; 0xd
    527c:	ebfffb6a 	bl	402c <UARTWriteChar>
		UARTWriteChar(*p++);
    5280:	e51b3010 	ldr	r3, [fp, #-16]
    5284:	e5d33000 	ldrb	r3, [r3]
    5288:	e1a02003 	mov	r2, r3
    528c:	e51b3010 	ldr	r3, [fp, #-16]
    5290:	e2833001 	add	r3, r3, #1	; 0x1
    5294:	e50b3010 	str	r3, [fp, #-16]
    5298:	e1a00002 	mov	r0, r2
    529c:	ebfffb62 	bl	402c <UARTWriteChar>
    52a0:	e51b3014 	ldr	r3, [fp, #-20]
    52a4:	e2833001 	add	r3, r3, #1	; 0x1
    52a8:	e50b3014 	str	r3, [fp, #-20]
    52ac:	e51b2014 	ldr	r2, [fp, #-20]
    52b0:	e51b3024 	ldr	r3, [fp, #-36]
    52b4:	e1520003 	cmp	r2, r3
    52b8:	3affffea 	bcc	5268 <_write_r+0x34>
	}
	
	return len;
    52bc:	e51b3024 	ldr	r3, [fp, #-36]
}
    52c0:	e1a00003 	mov	r0, r3
    52c4:	e24bd00c 	sub	sp, fp, #12	; 0xc
    52c8:	e89d6800 	ldmia	sp, {fp, sp, lr}
    52cc:	e12fff1e 	bx	lr

000052d0 <_close_r>:

int _close_r(
    struct _reent *r, 
    int file)
{
    52d0:	e1a0c00d 	mov	ip, sp
    52d4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    52d8:	e24cb004 	sub	fp, ip, #4	; 0x4
    52dc:	e24dd008 	sub	sp, sp, #8	; 0x8
    52e0:	e50b0010 	str	r0, [fp, #-16]
    52e4:	e50b1014 	str	r1, [fp, #-20]
	return 0;
    52e8:	e3a03000 	mov	r3, #0	; 0x0
}
    52ec:	e1a00003 	mov	r0, r3
    52f0:	e24bd00c 	sub	sp, fp, #12	; 0xc
    52f4:	e89d6800 	ldmia	sp, {fp, sp, lr}
    52f8:	e12fff1e 	bx	lr

000052fc <_lseek_r>:

_off_t _lseek_r(
    struct _reent *r, 
    int file, 
    _off_t ptr, 
    int dir)
{
    52fc:	e1a0c00d 	mov	ip, sp
    5300:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5304:	e24cb004 	sub	fp, ip, #4	; 0x4
    5308:	e24dd010 	sub	sp, sp, #16	; 0x10
    530c:	e50b0010 	str	r0, [fp, #-16]
    5310:	e50b1014 	str	r1, [fp, #-20]
    5314:	e50b2018 	str	r2, [fp, #-24]
    5318:	e50b301c 	str	r3, [fp, #-28]
	return (_off_t)0;	/*  Always indicate we are at file beginning.	*/
    531c:	e3a03000 	mov	r3, #0	; 0x0
}
    5320:	e1a00003 	mov	r0, r3
    5324:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5328:	e89d6800 	ldmia	sp, {fp, sp, lr}
    532c:	e12fff1e 	bx	lr

00005330 <_fstat_r>:


int _fstat_r(
    struct _reent *r, 
    int file, 
    struct stat *st)
{
    5330:	e1a0c00d 	mov	ip, sp
    5334:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5338:	e24cb004 	sub	fp, ip, #4	; 0x4
    533c:	e24dd00c 	sub	sp, sp, #12	; 0xc
    5340:	e50b0010 	str	r0, [fp, #-16]
    5344:	e50b1014 	str	r1, [fp, #-20]
    5348:	e50b2018 	str	r2, [fp, #-24]
	/*  Always set as character device.				*/
	st->st_mode = S_IFCHR;	
    534c:	e51b2018 	ldr	r2, [fp, #-24]
    5350:	e3a03a02 	mov	r3, #8192	; 0x2000
    5354:	e5823004 	str	r3, [r2, #4]
		/* assigned to strong type with implicit 	*/
		/* signed/unsigned conversion.  Required by 	*/
		/* newlib.					*/

	return 0;
    5358:	e3a03000 	mov	r3, #0	; 0x0
}
    535c:	e1a00003 	mov	r0, r3
    5360:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5364:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5368:	e12fff1e 	bx	lr

0000536c <isatty>:

int isatty(int file); /* avoid warning */

int isatty(int file)
{
    536c:	e1a0c00d 	mov	ip, sp
    5370:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5374:	e24cb004 	sub	fp, ip, #4	; 0x4
    5378:	e24dd004 	sub	sp, sp, #4	; 0x4
    537c:	e50b0010 	str	r0, [fp, #-16]
	return 1;
    5380:	e3a03001 	mov	r3, #1	; 0x1
}
    5384:	e1a00003 	mov	r0, r3
    5388:	e24bd00c 	sub	sp, fp, #12	; 0xc
    538c:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5390:	e12fff1e 	bx	lr

00005394 <_sbrk_r>:

#if 0
static void _exit (int n) {
label:  goto label; /* endless loop */
}
#endif 

/* "malloc clue function" */

	/**** Locally used variables. ****/
extern char _end[];              /*  end is set in the linker command 	*/
				/* file and is the end of statically 	*/
				/* allocated data (thus start of heap).	*/

static char *heap_ptr;		/* Points to current end of the heap.	*/

/************************** _sbrk_r *************************************/
/*  Support function.  Adjusts end of heap to provide more memory to	*/
/* memory allocator. Simple and dumb with no sanity checks.		*/
/*  struct _reent *r	-- re-entrancy structure, used by newlib to 	*/
/*			support multiple threads of operation.		*/
/*  ptrdiff_t nbytes	-- number of bytes to add.			*/
/*  Returns pointer to start of new heap area.				*/
/*  Note:  This implementation is not thread safe (despite taking a	*/
/* _reent structure as a parameter).  					*/
/*  Since _s_r is not used in the current implementation, the following	*/
/* messages must be suppressed.						*/

void * _sbrk_r(
    struct _reent *_s_r, 
    ptrdiff_t nbytes)
{
    5394:	e1a0c00d 	mov	ip, sp
    5398:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    539c:	e24cb004 	sub	fp, ip, #4	; 0x4
    53a0:	e24dd00c 	sub	sp, sp, #12	; 0xc
    53a4:	e50b0014 	str	r0, [fp, #-20]
    53a8:	e50b1018 	str	r1, [fp, #-24]
	char  *base;		/*  errno should be set to  ENOMEM on error	*/

	if (!heap_ptr) {	/*  Initialize if first time through.		*/
    53ac:	e59f304c 	ldr	r3, [pc, #76]	; 5400 <.text+0x5400>
    53b0:	e5933000 	ldr	r3, [r3]
    53b4:	e3530000 	cmp	r3, #0	; 0x0
    53b8:	1a000002 	bne	53c8 <_sbrk_r+0x34>
		heap_ptr = _end;
    53bc:	e59f203c 	ldr	r2, [pc, #60]	; 5400 <.text+0x5400>
    53c0:	e59f303c 	ldr	r3, [pc, #60]	; 5404 <.text+0x5404>
    53c4:	e5823000 	str	r3, [r2]
	}
	base = heap_ptr;	/*  Point to end of heap.			*/
    53c8:	e59f3030 	ldr	r3, [pc, #48]	; 5400 <.text+0x5400>
    53cc:	e5933000 	ldr	r3, [r3]
    53d0:	e50b3010 	str	r3, [fp, #-16]
	heap_ptr += nbytes;	/*  Increase heap.				*/
    53d4:	e59f3024 	ldr	r3, [pc, #36]	; 5400 <.text+0x5400>
    53d8:	e5932000 	ldr	r2, [r3]
    53dc:	e51b3018 	ldr	r3, [fp, #-24]
    53e0:	e0822003 	add	r2, r2, r3
    53e4:	e59f3014 	ldr	r3, [pc, #20]	; 5400 <.text+0x5400>
    53e8:	e5832000 	str	r2, [r3]
	
	return base;		/*  Return pointer to start of new heap area.	*/
    53ec:	e51b3010 	ldr	r3, [fp, #-16]
}
    53f0:	e1a00003 	mov	r0, r3
    53f4:	e24bd00c 	sub	sp, fp, #12	; 0xc
    53f8:	e89d6800 	ldmia	sp, {fp, sp, lr}
    53fc:	e12fff1e 	bx	lr
    5400:	40000c24 	andmi	r0, r0, r4, lsr #24
    5404:	40002b80 	andmi	r2, r0, r0, lsl #23

00005408 <I2C0MasterHandler>:
    5408:	e1a0c00d 	mov	ip, sp
    540c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5410:	e24cb004 	sub	fp, ip, #4	; 0x4
    5414:	e24dd004 	sub	sp, sp, #4	; 0x4
    5418:	e3a0324e 	mov	r3, #-536870908	; 0xe0000004
    541c:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5420:	e5933000 	ldr	r3, [r3]
    5424:	e54b300d 	strb	r3, [fp, #-13]
    5428:	e55b300d 	ldrb	r3, [fp, #-13]
    542c:	e2433008 	sub	r3, r3, #8	; 0x8
    5430:	e3530050 	cmp	r3, #80	; 0x50
    5434:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
    5438:	ea000106 	b	5858 <.text+0x5858>
    543c:	00005580 	andeq	r5, r0, r0, lsl #11
    5440:	00005858 	andeq	r5, r0, r8, asr r8
    5444:	00005858 	andeq	r5, r0, r8, asr r8
    5448:	00005858 	andeq	r5, r0, r8, asr r8
    544c:	00005858 	andeq	r5, r0, r8, asr r8
    5450:	00005858 	andeq	r5, r0, r8, asr r8
    5454:	00005858 	andeq	r5, r0, r8, asr r8
    5458:	00005858 	andeq	r5, r0, r8, asr r8
    545c:	000055b8 	streqh	r5, [r0], -r8
    5460:	00005858 	andeq	r5, r0, r8, asr r8
    5464:	00005858 	andeq	r5, r0, r8, asr r8
    5468:	00005858 	andeq	r5, r0, r8, asr r8
    546c:	00005858 	andeq	r5, r0, r8, asr r8
    5470:	00005858 	andeq	r5, r0, r8, asr r8
    5474:	00005858 	andeq	r5, r0, r8, asr r8
    5478:	00005858 	andeq	r5, r0, r8, asr r8
    547c:	00005610 	andeq	r5, r0, r0, lsl r6
    5480:	00005858 	andeq	r5, r0, r8, asr r8
    5484:	00005858 	andeq	r5, r0, r8, asr r8
    5488:	00005858 	andeq	r5, r0, r8, asr r8
    548c:	00005858 	andeq	r5, r0, r8, asr r8
    5490:	00005858 	andeq	r5, r0, r8, asr r8
    5494:	00005858 	andeq	r5, r0, r8, asr r8
    5498:	00005858 	andeq	r5, r0, r8, asr r8
    549c:	00005834 	andeq	r5, r0, r4, lsr r8
    54a0:	00005858 	andeq	r5, r0, r8, asr r8
    54a4:	00005858 	andeq	r5, r0, r8, asr r8
    54a8:	00005858 	andeq	r5, r0, r8, asr r8
    54ac:	00005858 	andeq	r5, r0, r8, asr r8
    54b0:	00005858 	andeq	r5, r0, r8, asr r8
    54b4:	00005858 	andeq	r5, r0, r8, asr r8
    54b8:	00005858 	andeq	r5, r0, r8, asr r8
    54bc:	00005678 	andeq	r5, r0, r8, ror r6
    54c0:	00005858 	andeq	r5, r0, r8, asr r8
    54c4:	00005858 	andeq	r5, r0, r8, asr r8
    54c8:	00005858 	andeq	r5, r0, r8, asr r8
    54cc:	00005858 	andeq	r5, r0, r8, asr r8
    54d0:	00005858 	andeq	r5, r0, r8, asr r8
    54d4:	00005858 	andeq	r5, r0, r8, asr r8
    54d8:	00005858 	andeq	r5, r0, r8, asr r8
    54dc:	00005678 	andeq	r5, r0, r8, ror r6
    54e0:	00005858 	andeq	r5, r0, r8, asr r8
    54e4:	00005858 	andeq	r5, r0, r8, asr r8
    54e8:	00005858 	andeq	r5, r0, r8, asr r8
    54ec:	00005858 	andeq	r5, r0, r8, asr r8
    54f0:	00005858 	andeq	r5, r0, r8, asr r8
    54f4:	00005858 	andeq	r5, r0, r8, asr r8
    54f8:	00005858 	andeq	r5, r0, r8, asr r8
    54fc:	00005858 	andeq	r5, r0, r8, asr r8
    5500:	00005858 	andeq	r5, r0, r8, asr r8
    5504:	00005858 	andeq	r5, r0, r8, asr r8
    5508:	00005858 	andeq	r5, r0, r8, asr r8
    550c:	00005858 	andeq	r5, r0, r8, asr r8
    5510:	00005858 	andeq	r5, r0, r8, asr r8
    5514:	00005858 	andeq	r5, r0, r8, asr r8
    5518:	00005858 	andeq	r5, r0, r8, asr r8
    551c:	0000577c 	andeq	r5, r0, ip, ror r7
    5520:	00005858 	andeq	r5, r0, r8, asr r8
    5524:	00005858 	andeq	r5, r0, r8, asr r8
    5528:	00005858 	andeq	r5, r0, r8, asr r8
    552c:	00005858 	andeq	r5, r0, r8, asr r8
    5530:	00005858 	andeq	r5, r0, r8, asr r8
    5534:	00005858 	andeq	r5, r0, r8, asr r8
    5538:	00005858 	andeq	r5, r0, r8, asr r8
    553c:	00005834 	andeq	r5, r0, r4, lsr r8
    5540:	00005858 	andeq	r5, r0, r8, asr r8
    5544:	00005858 	andeq	r5, r0, r8, asr r8
    5548:	00005858 	andeq	r5, r0, r8, asr r8
    554c:	00005858 	andeq	r5, r0, r8, asr r8
    5550:	00005858 	andeq	r5, r0, r8, asr r8
    5554:	00005858 	andeq	r5, r0, r8, asr r8
    5558:	00005858 	andeq	r5, r0, r8, asr r8
    555c:	00005794 	muleq	r0, r4, r7
    5560:	00005858 	andeq	r5, r0, r8, asr r8
    5564:	00005858 	andeq	r5, r0, r8, asr r8
    5568:	00005858 	andeq	r5, r0, r8, asr r8
    556c:	00005858 	andeq	r5, r0, r8, asr r8
    5570:	00005858 	andeq	r5, r0, r8, asr r8
    5574:	00005858 	andeq	r5, r0, r8, asr r8
    5578:	00005858 	andeq	r5, r0, r8, asr r8
    557c:	00005794 	muleq	r0, r4, r7
    5580:	e3a0228e 	mov	r2, #-536870904	; 0xe0000008
    5584:	e2822907 	add	r2, r2, #114688	; 0x1c000
    5588:	e59f32f8 	ldr	r3, [pc, #760]	; 5888 <.text+0x5888>
    558c:	e5d33000 	ldrb	r3, [r3]
    5590:	e5823000 	str	r3, [r2]
    5594:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5598:	e2833907 	add	r3, r3, #114688	; 0x1c000
    559c:	e2833018 	add	r3, r3, #24	; 0x18
    55a0:	e3a02028 	mov	r2, #40	; 0x28
    55a4:	e5832000 	str	r2, [r3]
    55a8:	e59f22dc 	ldr	r2, [pc, #732]	; 588c <.text+0x588c>
    55ac:	e3a03001 	mov	r3, #1	; 0x1
    55b0:	e5823000 	str	r3, [r2]
    55b4:	ea0000ac 	b	586c <.text+0x586c>
    55b8:	e59f32d0 	ldr	r3, [pc, #720]	; 5890 <.text+0x5890>
    55bc:	e5933000 	ldr	r3, [r3]
    55c0:	e3530001 	cmp	r3, #1	; 0x1
    55c4:	0a000003 	beq	55d8 <.text+0x55d8>
    55c8:	e59f32c0 	ldr	r3, [pc, #704]	; 5890 <.text+0x5890>
    55cc:	e5933000 	ldr	r3, [r3]
    55d0:	e3530002 	cmp	r3, #2	; 0x2
    55d4:	1a000004 	bne	55ec <.text+0x55ec>
    55d8:	e3a0228e 	mov	r2, #-536870904	; 0xe0000008
    55dc:	e2822907 	add	r2, r2, #114688	; 0x1c000
    55e0:	e59f32a0 	ldr	r3, [pc, #672]	; 5888 <.text+0x5888>
    55e4:	e5d33002 	ldrb	r3, [r3, #2]
    55e8:	e5823000 	str	r3, [r2]
    55ec:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    55f0:	e2833907 	add	r3, r3, #114688	; 0x1c000
    55f4:	e2833018 	add	r3, r3, #24	; 0x18
    55f8:	e3a02028 	mov	r2, #40	; 0x28
    55fc:	e5832000 	str	r2, [r3]
    5600:	e59f2284 	ldr	r2, [pc, #644]	; 588c <.text+0x588c>
    5604:	e3a03002 	mov	r3, #2	; 0x2
    5608:	e5823000 	str	r3, [r2]
    560c:	ea000096 	b	586c <.text+0x586c>
    5610:	e59f3274 	ldr	r3, [pc, #628]	; 588c <.text+0x588c>
    5614:	e5933000 	ldr	r3, [r3]
    5618:	e3530001 	cmp	r3, #1	; 0x1
    561c:	1a00000f 	bne	5660 <.text+0x5660>
    5620:	e3a0228e 	mov	r2, #-536870904	; 0xe0000008
    5624:	e2822907 	add	r2, r2, #114688	; 0x1c000
    5628:	e59f3264 	ldr	r3, [pc, #612]	; 5894 <.text+0x5894>
    562c:	e5933000 	ldr	r3, [r3]
    5630:	e2831001 	add	r1, r3, #1	; 0x1
    5634:	e59f324c 	ldr	r3, [pc, #588]	; 5888 <.text+0x5888>
    5638:	e7d33001 	ldrb	r3, [r3, r1]
    563c:	e5823000 	str	r3, [r2]
    5640:	e59f324c 	ldr	r3, [pc, #588]	; 5894 <.text+0x5894>
    5644:	e5933000 	ldr	r3, [r3]
    5648:	e2832001 	add	r2, r3, #1	; 0x1
    564c:	e59f3240 	ldr	r3, [pc, #576]	; 5894 <.text+0x5894>
    5650:	e5832000 	str	r2, [r3]
    5654:	e59f2230 	ldr	r2, [pc, #560]	; 588c <.text+0x588c>
    5658:	e3a03004 	mov	r3, #4	; 0x4
    565c:	e5823000 	str	r3, [r2]
    5660:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5664:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5668:	e2833018 	add	r3, r3, #24	; 0x18
    566c:	e3a02008 	mov	r2, #8	; 0x8
    5670:	e5832000 	str	r2, [r3]
    5674:	ea00007c 	b	586c <.text+0x586c>
    5678:	e59f3214 	ldr	r3, [pc, #532]	; 5894 <.text+0x5894>
    567c:	e5932000 	ldr	r2, [r3]
    5680:	e59f3210 	ldr	r3, [pc, #528]	; 5898 <.text+0x5898>
    5684:	e5933000 	ldr	r3, [r3]
    5688:	e1520003 	cmp	r2, r3
    568c:	0a000025 	beq	5728 <.text+0x5728>
    5690:	e3a0228e 	mov	r2, #-536870904	; 0xe0000008
    5694:	e2822907 	add	r2, r2, #114688	; 0x1c000
    5698:	e59f31f4 	ldr	r3, [pc, #500]	; 5894 <.text+0x5894>
    569c:	e5933000 	ldr	r3, [r3]
    56a0:	e2831001 	add	r1, r3, #1	; 0x1
    56a4:	e59f31dc 	ldr	r3, [pc, #476]	; 5888 <.text+0x5888>
    56a8:	e7d33001 	ldrb	r3, [r3, r1]
    56ac:	e5823000 	str	r3, [r2]
    56b0:	e59f31dc 	ldr	r3, [pc, #476]	; 5894 <.text+0x5894>
    56b4:	e5933000 	ldr	r3, [r3]
    56b8:	e2832001 	add	r2, r3, #1	; 0x1
    56bc:	e59f31d0 	ldr	r3, [pc, #464]	; 5894 <.text+0x5894>
    56c0:	e5832000 	str	r2, [r3]
    56c4:	e59f31c8 	ldr	r3, [pc, #456]	; 5894 <.text+0x5894>
    56c8:	e5932000 	ldr	r2, [r3]
    56cc:	e59f31c4 	ldr	r3, [pc, #452]	; 5898 <.text+0x5898>
    56d0:	e5933000 	ldr	r3, [r3]
    56d4:	e1520003 	cmp	r2, r3
    56d8:	0a000003 	beq	56ec <.text+0x56ec>
    56dc:	e59f21a8 	ldr	r2, [pc, #424]	; 588c <.text+0x588c>
    56e0:	e3a03004 	mov	r3, #4	; 0x4
    56e4:	e5823000 	str	r3, [r2]
    56e8:	ea00001d 	b	5764 <.text+0x5764>
    56ec:	e59f2198 	ldr	r2, [pc, #408]	; 588c <.text+0x588c>
    56f0:	e3a03005 	mov	r3, #5	; 0x5
    56f4:	e5823000 	str	r3, [r2]
    56f8:	e59f319c 	ldr	r3, [pc, #412]	; 589c <.text+0x589c>
    56fc:	e5933000 	ldr	r3, [r3]
    5700:	e3530000 	cmp	r3, #0	; 0x0
    5704:	0a000016 	beq	5764 <.text+0x5764>
    5708:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    570c:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5710:	e3a02020 	mov	r2, #32	; 0x20
    5714:	e5832000 	str	r2, [r3]
    5718:	e59f216c 	ldr	r2, [pc, #364]	; 588c <.text+0x588c>
    571c:	e3a03003 	mov	r3, #3	; 0x3
    5720:	e5823000 	str	r3, [r2]
    5724:	ea00000e 	b	5764 <.text+0x5764>
    5728:	e59f316c 	ldr	r3, [pc, #364]	; 589c <.text+0x589c>
    572c:	e5933000 	ldr	r3, [r3]
    5730:	e3530000 	cmp	r3, #0	; 0x0
    5734:	0a000007 	beq	5758 <.text+0x5758>
    5738:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    573c:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5740:	e3a02020 	mov	r2, #32	; 0x20
    5744:	e5832000 	str	r2, [r3]
    5748:	e59f213c 	ldr	r2, [pc, #316]	; 588c <.text+0x588c>
    574c:	e3a03003 	mov	r3, #3	; 0x3
    5750:	e5823000 	str	r3, [r2]
    5754:	ea000002 	b	5764 <.text+0x5764>
    5758:	e59f212c 	ldr	r2, [pc, #300]	; 588c <.text+0x588c>
    575c:	e3a03005 	mov	r3, #5	; 0x5
    5760:	e5823000 	str	r3, [r2]
    5764:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5768:	e2833907 	add	r3, r3, #114688	; 0x1c000
    576c:	e2833018 	add	r3, r3, #24	; 0x18
    5770:	e3a02008 	mov	r2, #8	; 0x8
    5774:	e5832000 	str	r2, [r3]
    5778:	ea00003b 	b	586c <.text+0x586c>
    577c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5780:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5784:	e2833018 	add	r3, r3, #24	; 0x18
    5788:	e3a02008 	mov	r2, #8	; 0x8
    578c:	e5832000 	str	r2, [r3]
    5790:	ea000035 	b	586c <.text+0x586c>
    5794:	e59f3104 	ldr	r3, [pc, #260]	; 58a0 <.text+0x58a0>
    5798:	e5933000 	ldr	r3, [r3]
    579c:	e2831003 	add	r1, r3, #3	; 0x3
    57a0:	e3a0328e 	mov	r3, #-536870904	; 0xe0000008
    57a4:	e2833907 	add	r3, r3, #114688	; 0x1c000
    57a8:	e5933000 	ldr	r3, [r3]
    57ac:	e20330ff 	and	r3, r3, #255	; 0xff
    57b0:	e59f20d0 	ldr	r2, [pc, #208]	; 5888 <.text+0x5888>
    57b4:	e7c23001 	strb	r3, [r2, r1]
    57b8:	e59f30e0 	ldr	r3, [pc, #224]	; 58a0 <.text+0x58a0>
    57bc:	e5933000 	ldr	r3, [r3]
    57c0:	e2832001 	add	r2, r3, #1	; 0x1
    57c4:	e59f30d4 	ldr	r3, [pc, #212]	; 58a0 <.text+0x58a0>
    57c8:	e5832000 	str	r2, [r3]
    57cc:	e59f30cc 	ldr	r3, [pc, #204]	; 58a0 <.text+0x58a0>
    57d0:	e5932000 	ldr	r2, [r3]
    57d4:	e59f30c0 	ldr	r3, [pc, #192]	; 589c <.text+0x589c>
    57d8:	e5933000 	ldr	r3, [r3]
    57dc:	e1520003 	cmp	r2, r3
    57e0:	0a000003 	beq	57f4 <.text+0x57f4>
    57e4:	e59f20a0 	ldr	r2, [pc, #160]	; 588c <.text+0x588c>
    57e8:	e3a03004 	mov	r3, #4	; 0x4
    57ec:	e5823000 	str	r3, [r2]
    57f0:	ea000005 	b	580c <.text+0x580c>
    57f4:	e59f20a4 	ldr	r2, [pc, #164]	; 58a0 <.text+0x58a0>
    57f8:	e3a03000 	mov	r3, #0	; 0x0
    57fc:	e5823000 	str	r3, [r2]
    5800:	e59f2084 	ldr	r2, [pc, #132]	; 588c <.text+0x588c>
    5804:	e3a03005 	mov	r3, #5	; 0x5
    5808:	e5823000 	str	r3, [r2]
    580c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5810:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5814:	e3a02004 	mov	r2, #4	; 0x4
    5818:	e5832000 	str	r2, [r3]
    581c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5820:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5824:	e2833018 	add	r3, r3, #24	; 0x18
    5828:	e3a02008 	mov	r2, #8	; 0x8
    582c:	e5832000 	str	r2, [r3]
    5830:	ea00000d 	b	586c <.text+0x586c>
    5834:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5838:	e2833907 	add	r3, r3, #114688	; 0x1c000
    583c:	e2833018 	add	r3, r3, #24	; 0x18
    5840:	e3a02008 	mov	r2, #8	; 0x8
    5844:	e5832000 	str	r2, [r3]
    5848:	e59f203c 	ldr	r2, [pc, #60]	; 588c <.text+0x588c>
    584c:	e3a03005 	mov	r3, #5	; 0x5
    5850:	e5823000 	str	r3, [r2]
    5854:	ea000004 	b	586c <.text+0x586c>
    5858:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    585c:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5860:	e2833018 	add	r3, r3, #24	; 0x18
    5864:	e3a02008 	mov	r2, #8	; 0x8
    5868:	e5832000 	str	r2, [r3]
    586c:	e3a03000 	mov	r3, #0	; 0x0
    5870:	e2433efd 	sub	r3, r3, #4048	; 0xfd0
    5874:	e3a02000 	mov	r2, #0	; 0x0
    5878:	e5832000 	str	r2, [r3]
    587c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5880:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5884:	e12fff1e 	bx	lr
    5888:	40001010 	andmi	r1, r0, r0, lsl r0
    588c:	40000c28 	andmi	r0, r0, r8, lsr #24
    5890:	40001030 	andmi	r1, r0, r0, lsr r0
    5894:	40000c38 	andmi	r0, r0, r8, lsr ip
    5898:	40001034 	andmi	r1, r0, r4, lsr r0
    589c:	40000fe8 	andmi	r0, r0, r8, ror #31
    58a0:	40000c34 	andmi	r0, r0, r4, lsr ip

000058a4 <I2C0_send_motordata>:
    58a4:	e1a0c00d 	mov	ip, sp
    58a8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    58ac:	e24cb004 	sub	fp, ip, #4	; 0x4
    58b0:	e59f2080 	ldr	r2, [pc, #128]	; 5938 <.text+0x5938>
    58b4:	e3a03000 	mov	r3, #0	; 0x0
    58b8:	e5823000 	str	r3, [r2]
    58bc:	e59f2078 	ldr	r2, [pc, #120]	; 593c <.text+0x593c>
    58c0:	e3a03000 	mov	r3, #0	; 0x0
    58c4:	e5823000 	str	r3, [r2]
    58c8:	e59f2070 	ldr	r2, [pc, #112]	; 5940 <.text+0x5940>
    58cc:	e3a03005 	mov	r3, #5	; 0x5
    58d0:	e5823000 	str	r3, [r2]
    58d4:	e59f2068 	ldr	r2, [pc, #104]	; 5944 <.text+0x5944>
    58d8:	e3a03000 	mov	r3, #0	; 0x0
    58dc:	e5823000 	str	r3, [r2]
    58e0:	e59f2060 	ldr	r2, [pc, #96]	; 5948 <.text+0x5948>
    58e4:	e3a03002 	mov	r3, #2	; 0x2
    58e8:	e5c23000 	strb	r3, [r2]
    58ec:	e59f2054 	ldr	r2, [pc, #84]	; 5948 <.text+0x5948>
    58f0:	e3a03064 	mov	r3, #100	; 0x64
    58f4:	e5c23001 	strb	r3, [r2, #1]
    58f8:	e59f2048 	ldr	r2, [pc, #72]	; 5948 <.text+0x5948>
    58fc:	e3a03064 	mov	r3, #100	; 0x64
    5900:	e5c23002 	strb	r3, [r2, #2]
    5904:	e59f203c 	ldr	r2, [pc, #60]	; 5948 <.text+0x5948>
    5908:	e3a03064 	mov	r3, #100	; 0x64
    590c:	e5c23003 	strb	r3, [r2, #3]
    5910:	e59f2030 	ldr	r2, [pc, #48]	; 5948 <.text+0x5948>
    5914:	e3a03001 	mov	r3, #1	; 0x1
    5918:	e5c23004 	strb	r3, [r2, #4]
    591c:	e59f2028 	ldr	r2, [pc, #40]	; 594c <.text+0x594c>
    5920:	e3a03002 	mov	r3, #2	; 0x2
    5924:	e5823000 	str	r3, [r2]
    5928:	eb000066 	bl	5ac8 <I2CEngine>
    592c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5930:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5934:	e12fff1e 	bx	lr
    5938:	40000c38 	andmi	r0, r0, r8, lsr ip
    593c:	40000c34 	andmi	r0, r0, r4, lsr ip
    5940:	40001034 	andmi	r1, r0, r4, lsr r0
    5944:	40000fe8 	andmi	r0, r0, r8, ror #31
    5948:	40001010 	andmi	r1, r0, r0, lsl r0
    594c:	40001030 	andmi	r1, r0, r0, lsr r0

00005950 <I2CStart>:
    5950:	e1a0c00d 	mov	ip, sp
    5954:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5958:	e24cb004 	sub	fp, ip, #4	; 0x4
    595c:	e24dd008 	sub	sp, sp, #8	; 0x8
    5960:	e3a03000 	mov	r3, #0	; 0x0
    5964:	e50b3014 	str	r3, [fp, #-20]
    5968:	e3a03000 	mov	r3, #0	; 0x0
    596c:	e50b3010 	str	r3, [fp, #-16]
    5970:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5974:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5978:	e3a02020 	mov	r2, #32	; 0x20
    597c:	e5832000 	str	r2, [r3]
    5980:	e59f3058 	ldr	r3, [pc, #88]	; 59e0 <.text+0x59e0>
    5984:	e5933000 	ldr	r3, [r3]
    5988:	e3530001 	cmp	r3, #1	; 0x1
    598c:	1a000002 	bne	599c <I2CStart+0x4c>
    5990:	e3a03001 	mov	r3, #1	; 0x1
    5994:	e50b3010 	str	r3, [fp, #-16]
    5998:	ea00000b 	b	59cc <I2CStart+0x7c>
    599c:	e51b2014 	ldr	r2, [fp, #-20]
    59a0:	e3a03401 	mov	r3, #16777216	; 0x1000000
    59a4:	e2433002 	sub	r3, r3, #2	; 0x2
    59a8:	e1520003 	cmp	r2, r3
    59ac:	9a000002 	bls	59bc <I2CStart+0x6c>
    59b0:	e3a03000 	mov	r3, #0	; 0x0
    59b4:	e50b3010 	str	r3, [fp, #-16]
    59b8:	ea000003 	b	59cc <I2CStart+0x7c>
    59bc:	e51b3014 	ldr	r3, [fp, #-20]
    59c0:	e2833001 	add	r3, r3, #1	; 0x1
    59c4:	e50b3014 	str	r3, [fp, #-20]
    59c8:	eaffffec 	b	5980 <I2CStart+0x30>
    59cc:	e51b3010 	ldr	r3, [fp, #-16]
    59d0:	e1a00003 	mov	r0, r3
    59d4:	e24bd00c 	sub	sp, fp, #12	; 0xc
    59d8:	e89d6800 	ldmia	sp, {fp, sp, lr}
    59dc:	e12fff1e 	bx	lr
    59e0:	40000c28 	andmi	r0, r0, r8, lsr #24

000059e4 <I2CStop>:
    59e4:	e1a0c00d 	mov	ip, sp
    59e8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    59ec:	e24cb004 	sub	fp, ip, #4	; 0x4
    59f0:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    59f4:	e2833907 	add	r3, r3, #114688	; 0x1c000
    59f8:	e3a02010 	mov	r2, #16	; 0x10
    59fc:	e5832000 	str	r2, [r3]
    5a00:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5a04:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5a08:	e2833018 	add	r3, r3, #24	; 0x18
    5a0c:	e3a02008 	mov	r2, #8	; 0x8
    5a10:	e5832000 	str	r2, [r3]
    5a14:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5a18:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5a1c:	e5933000 	ldr	r3, [r3]
    5a20:	e2033010 	and	r3, r3, #16	; 0x10
    5a24:	e3530000 	cmp	r3, #0	; 0x0
    5a28:	1afffff9 	bne	5a14 <I2CStop+0x30>
    5a2c:	e3a03001 	mov	r3, #1	; 0x1
    5a30:	e1a00003 	mov	r0, r3
    5a34:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5a38:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5a3c:	e12fff1e 	bx	lr

00005a40 <I2CInit>:
    5a40:	e1a0c00d 	mov	ip, sp
    5a44:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5a48:	e24cb004 	sub	fp, ip, #4	; 0x4
    5a4c:	e24dd004 	sub	sp, sp, #4	; 0x4
    5a50:	e50b0010 	str	r0, [fp, #-16]
    5a54:	e3a0228e 	mov	r2, #-536870904	; 0xe0000008
    5a58:	e282290a 	add	r2, r2, #163840	; 0x28000
    5a5c:	e3a0328e 	mov	r3, #-536870904	; 0xe0000008
    5a60:	e283390a 	add	r3, r3, #163840	; 0x28000
    5a64:	e5933000 	ldr	r3, [r3]
    5a68:	e383300c 	orr	r3, r3, #12	; 0xc
    5a6c:	e5823000 	str	r3, [r2]
    5a70:	e3a0324e 	mov	r3, #-536870908	; 0xe0000004
    5a74:	e283390a 	add	r3, r3, #163840	; 0x28000
    5a78:	e3a0200c 	mov	r2, #12	; 0xc
    5a7c:	e5832000 	str	r2, [r3]
    5a80:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5a84:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5a88:	e2833018 	add	r3, r3, #24	; 0x18
    5a8c:	e3a0206c 	mov	r2, #108	; 0x6c
    5a90:	e5832000 	str	r2, [r3]
    5a94:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5a98:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5a9c:	e2833014 	add	r3, r3, #20	; 0x14
    5aa0:	e3a02080 	mov	r2, #128	; 0x80
    5aa4:	e5832000 	str	r2, [r3]
    5aa8:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5aac:	e2833907 	add	r3, r3, #114688	; 0x1c000
    5ab0:	e2833010 	add	r3, r3, #16	; 0x10
    5ab4:	e3a02080 	mov	r2, #128	; 0x80
    5ab8:	e5832000 	str	r2, [r3]
    5abc:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5ac0:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5ac4:	e12fff1e 	bx	lr

00005ac8 <I2CEngine>:
    5ac8:	e1a0c00d 	mov	ip, sp
    5acc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5ad0:	e24cb004 	sub	fp, ip, #4	; 0x4
    5ad4:	e24dd004 	sub	sp, sp, #4	; 0x4
    5ad8:	e59f206c 	ldr	r2, [pc, #108]	; 5b4c <.text+0x5b4c>
    5adc:	e3a03000 	mov	r3, #0	; 0x0
    5ae0:	e5823000 	str	r3, [r2]
    5ae4:	e59f2064 	ldr	r2, [pc, #100]	; 5b50 <.text+0x5b50>
    5ae8:	e3a03000 	mov	r3, #0	; 0x0
    5aec:	e5823000 	str	r3, [r2]
    5af0:	e59f205c 	ldr	r2, [pc, #92]	; 5b54 <.text+0x5b54>
    5af4:	e3a03000 	mov	r3, #0	; 0x0
    5af8:	e5823000 	str	r3, [r2]
    5afc:	ebffff93 	bl	5950 <I2CStart>
    5b00:	e1a03000 	mov	r3, r0
    5b04:	e3530001 	cmp	r3, #1	; 0x1
    5b08:	0a000003 	beq	5b1c <I2CEngine+0x54>
    5b0c:	ebffffb4 	bl	59e4 <I2CStop>
    5b10:	e3a03000 	mov	r3, #0	; 0x0
    5b14:	e50b3010 	str	r3, [fp, #-16]
    5b18:	ea000006 	b	5b38 <I2CEngine+0x70>
    5b1c:	e59f3028 	ldr	r3, [pc, #40]	; 5b4c <.text+0x5b4c>
    5b20:	e5933000 	ldr	r3, [r3]
    5b24:	e3530005 	cmp	r3, #5	; 0x5
    5b28:	1afffffb 	bne	5b1c <I2CEngine+0x54>
    5b2c:	ebffffac 	bl	59e4 <I2CStop>
    5b30:	e3a03001 	mov	r3, #1	; 0x1
    5b34:	e50b3010 	str	r3, [fp, #-16]
    5b38:	e51b3010 	ldr	r3, [fp, #-16]
    5b3c:	e1a00003 	mov	r0, r3
    5b40:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5b44:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5b48:	e12fff1e 	bx	lr
    5b4c:	40000c28 	andmi	r0, r0, r8, lsr #24
    5b50:	40000c34 	andmi	r0, r0, r4, lsr ip
    5b54:	40000c38 	andmi	r0, r0, r8, lsr ip

00005b58 <DefaultVICHandler>:
** 
******************************************************************************/
// mthomas: inserted static to avoid gcc-warning
static void DefaultVICHandler (void) __irq 
{
    5b58:	e1a0c00d 	mov	ip, sp
    5b5c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5b60:	e24cb004 	sub	fp, ip, #4	; 0x4
    /* if the IRQ is not installed into the VIC, and interrupt occurs, the
    default interrupt VIC address will be used. This could happen in a race 
    condition. For debugging, use this endless loop to trace back. */
    /* For more details, see Philips appnote AN10414 */
    VICVectAddr = 0;		/* Acknowledge Interrupt */ 
    5b64:	e3a03000 	mov	r3, #0	; 0x0
    5b68:	e2433efd 	sub	r3, r3, #4048	; 0xfd0
    5b6c:	e3a02000 	mov	r2, #0	; 0x0
    5b70:	e5832000 	str	r2, [r3]
    while ( 1 );
    5b74:	eafffffe 	b	5b74 <DefaultVICHandler+0x1c>

00005b78 <init_VIC>:
}

/* Initialize the interrupt controller */
/******************************************************************************
** Function name:		init_VIC
**
** Descriptions:		Initialize VIC interrupt controller.
** parameters:			None
** Returned value:		None
** 
******************************************************************************/
void init_VIC(void) 
{
    5b78:	e1a0c00d 	mov	ip, sp
    5b7c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5b80:	e24cb004 	sub	fp, ip, #4	; 0x4
    5b84:	e24dd00c 	sub	sp, sp, #12	; 0xc
    unsigned long i = 0;
    5b88:	e3a03000 	mov	r3, #0	; 0x0
    5b8c:	e50b3018 	str	r3, [fp, #-24]
    unsigned long *vect_addr, *vect_cntl;
   	
    /* initialize VIC*/
    VICIntEnClr = 0xffffffff;
    5b90:	e3e03efe 	mvn	r3, #4064	; 0xfe0
    5b94:	e243300b 	sub	r3, r3, #11	; 0xb
    5b98:	e3e02000 	mvn	r2, #0	; 0x0
    5b9c:	e5832000 	str	r2, [r3]
    VICVectAddr = 0;
    5ba0:	e3a03000 	mov	r3, #0	; 0x0
    5ba4:	e2433efd 	sub	r3, r3, #4048	; 0xfd0
    5ba8:	e3a02000 	mov	r2, #0	; 0x0
    5bac:	e5832000 	str	r2, [r3]
    VICIntSelect = 0;
    5bb0:	e3e03eff 	mvn	r3, #4080	; 0xff0
    5bb4:	e2433003 	sub	r3, r3, #3	; 0x3
    5bb8:	e3a02000 	mov	r2, #0	; 0x0
    5bbc:	e5832000 	str	r2, [r3]

    /* set all the vector and vector control register to 0 */
    for ( i = 0; i < VIC_SIZE; i++ )
    5bc0:	e3a03000 	mov	r3, #0	; 0x0
    5bc4:	e50b3018 	str	r3, [fp, #-24]
    5bc8:	ea000010 	b	5c10 <init_VIC+0x98>
    {
	vect_addr = (unsigned long *)(VIC_BASE_ADDR + VECT_ADDR_INDEX + i*4);
    5bcc:	e51b3018 	ldr	r3, [fp, #-24]
    5bd0:	e1a03103 	mov	r3, r3, lsl #2
    5bd4:	e2433c0f 	sub	r3, r3, #3840	; 0xf00
    5bd8:	e50b3014 	str	r3, [fp, #-20]
	vect_cntl = (unsigned long *)(VIC_BASE_ADDR + VECT_CNTL_INDEX + i*4);
    5bdc:	e51b3018 	ldr	r3, [fp, #-24]
    5be0:	e1a03103 	mov	r3, r3, lsl #2
    5be4:	e2433c0e 	sub	r3, r3, #3584	; 0xe00
    5be8:	e50b3010 	str	r3, [fp, #-16]
	*vect_addr = 0;	
    5bec:	e51b2014 	ldr	r2, [fp, #-20]
    5bf0:	e3a03000 	mov	r3, #0	; 0x0
    5bf4:	e5823000 	str	r3, [r2]
	*vect_cntl = 0;
    5bf8:	e51b2010 	ldr	r2, [fp, #-16]
    5bfc:	e3a03000 	mov	r3, #0	; 0x0
    5c00:	e5823000 	str	r3, [r2]
    5c04:	e51b3018 	ldr	r3, [fp, #-24]
    5c08:	e2833001 	add	r3, r3, #1	; 0x1
    5c0c:	e50b3018 	str	r3, [fp, #-24]
    5c10:	e51b3018 	ldr	r3, [fp, #-24]
    5c14:	e353000f 	cmp	r3, #15	; 0xf
    5c18:	9affffeb 	bls	5bcc <init_VIC+0x54>
    }

    /* Install the default VIC handler here */
    VICDefVectAddr = (unsigned long)DefaultVICHandler;   
    5c1c:	e3e03d3f 	mvn	r3, #4032	; 0xfc0
    5c20:	e243300b 	sub	r3, r3, #11	; 0xb
    5c24:	e59f200c 	ldr	r2, [pc, #12]	; 5c38 <.text+0x5c38>
    5c28:	e5832000 	str	r2, [r3]
    return;
}
    5c2c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5c30:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5c34:	e12fff1e 	bx	lr
    5c38:	00005b58 	andeq	r5, r0, r8, asr fp

00005c3c <install_irq>:

/******************************************************************************
** Function name:		install_irq
**
** Descriptions:		Install interrupt handler
**				The max VIC size is 16, but, there are 32 interrupt
**				request inputs. Not all of them can be installed into
**				VIC table at the same time.
**				The order of the interrupt request installation is
**				first come first serve.
** parameters:			Interrupt number and interrupt handler address
** Returned value:		true or false, when the table is full, return false
** 
******************************************************************************/
unsigned long install_irq( unsigned long IntNumber, void *HandlerAddr )
{
    5c3c:	e1a0c00d 	mov	ip, sp
    5c40:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5c44:	e24cb004 	sub	fp, ip, #4	; 0x4
    5c48:	e24dd018 	sub	sp, sp, #24	; 0x18
    5c4c:	e50b001c 	str	r0, [fp, #-28]
    5c50:	e50b1020 	str	r1, [fp, #-32]
    unsigned long i;
    unsigned long *vect_addr;
    unsigned long *vect_cntl;
      
    VICIntEnClr = 1 << IntNumber;	/* Disable Interrupt */
    5c54:	e3e02efe 	mvn	r2, #4064	; 0xfe0
    5c58:	e242200b 	sub	r2, r2, #11	; 0xb
    5c5c:	e51b101c 	ldr	r1, [fp, #-28]
    5c60:	e3a03001 	mov	r3, #1	; 0x1
    5c64:	e1a03113 	mov	r3, r3, lsl r1
    5c68:	e5823000 	str	r3, [r2]
    
    for ( i = 0; i < VIC_SIZE; i++ )
    5c6c:	e3a03000 	mov	r3, #0	; 0x0
    5c70:	e50b3018 	str	r3, [fp, #-24]
    5c74:	ea000017 	b	5cd8 <install_irq+0x9c>
    {
	/* find first un-assigned VIC address for the handler */

	vect_addr = (unsigned long *)(VIC_BASE_ADDR + VECT_ADDR_INDEX + i*4);
    5c78:	e51b3018 	ldr	r3, [fp, #-24]
    5c7c:	e1a03103 	mov	r3, r3, lsl #2
    5c80:	e2433c0f 	sub	r3, r3, #3840	; 0xf00
    5c84:	e50b3014 	str	r3, [fp, #-20]
	vect_cntl = (unsigned long *)(VIC_BASE_ADDR + VECT_CNTL_INDEX + i*4);
    5c88:	e51b3018 	ldr	r3, [fp, #-24]
    5c8c:	e1a03103 	mov	r3, r3, lsl #2
    5c90:	e2433c0e 	sub	r3, r3, #3584	; 0xe00
    5c94:	e50b3010 	str	r3, [fp, #-16]
	if ( *vect_addr == (unsigned long)NULL )
    5c98:	e51b3014 	ldr	r3, [fp, #-20]
    5c9c:	e5933000 	ldr	r3, [r3]
    5ca0:	e3530000 	cmp	r3, #0	; 0x0
    5ca4:	1a000008 	bne	5ccc <install_irq+0x90>
	{
	    *vect_addr = (unsigned long)HandlerAddr;	/* set interrupt vector */
    5ca8:	e51b3020 	ldr	r3, [fp, #-32]
    5cac:	e1a02003 	mov	r2, r3
    5cb0:	e51b3014 	ldr	r3, [fp, #-20]
    5cb4:	e5832000 	str	r2, [r3]
	    *vect_cntl = (unsigned long)(IRQ_SLOT_EN | IntNumber);
    5cb8:	e51b301c 	ldr	r3, [fp, #-28]
    5cbc:	e3832020 	orr	r2, r3, #32	; 0x20
    5cc0:	e51b3010 	ldr	r3, [fp, #-16]
    5cc4:	e5832000 	str	r2, [r3]
	    break;
    5cc8:	ea000005 	b	5ce4 <install_irq+0xa8>
    5ccc:	e51b3018 	ldr	r3, [fp, #-24]
    5cd0:	e2833001 	add	r3, r3, #1	; 0x1
    5cd4:	e50b3018 	str	r3, [fp, #-24]
    5cd8:	e51b3018 	ldr	r3, [fp, #-24]
    5cdc:	e353000f 	cmp	r3, #15	; 0xf
    5ce0:	9affffe4 	bls	5c78 <install_irq+0x3c>
	}
    }
    if ( i == VIC_SIZE )
    5ce4:	e51b3018 	ldr	r3, [fp, #-24]
    5ce8:	e3530010 	cmp	r3, #16	; 0x10
    5cec:	1a000002 	bne	5cfc <install_irq+0xc0>
    {
	return( FALSE );		/* fatal error, can't find empty vector slot */
    5cf0:	e3a03000 	mov	r3, #0	; 0x0
    5cf4:	e50b3024 	str	r3, [fp, #-36]
    5cf8:	ea000007 	b	5d1c <install_irq+0xe0>
    }
    VICIntEnable = 1 << IntNumber;	/* Enable Interrupt */
    5cfc:	e3a02000 	mov	r2, #0	; 0x0
    5d00:	e2422eff 	sub	r2, r2, #4080	; 0xff0
    5d04:	e51b101c 	ldr	r1, [fp, #-28]
    5d08:	e3a03001 	mov	r3, #1	; 0x1
    5d0c:	e1a03113 	mov	r3, r3, lsl r1
    5d10:	e5823000 	str	r3, [r2]
    return( TRUE );
    5d14:	e3a03001 	mov	r3, #1	; 0x1
    5d18:	e50b3024 	str	r3, [fp, #-36]
    5d1c:	e51b3024 	ldr	r3, [fp, #-36]
}
    5d20:	e1a00003 	mov	r0, r3
    5d24:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5d28:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5d2c:	e12fff1e 	bx	lr

00005d30 <uninstall_irq>:

/******************************************************************************
** Function name:		uninstall_irq
**
** Descriptions:		Uninstall interrupt handler
**				Find the interrupt handler installed in the VIC
**				based on the interrupt number, set the location
**				back to NULL to uninstall it.
** parameters:			Interrupt number
** Returned value:		true or false, when the interrupt number is not found, 
**				return false
** 
******************************************************************************/
unsigned long uninstall_irq( unsigned long IntNumber )
{
    5d30:	e1a0c00d 	mov	ip, sp
    5d34:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5d38:	e24cb004 	sub	fp, ip, #4	; 0x4
    5d3c:	e24dd014 	sub	sp, sp, #20	; 0x14
    5d40:	e50b001c 	str	r0, [fp, #-28]
    unsigned long i;
    unsigned long *vect_addr;
    unsigned long *vect_cntl;
      
    VICIntEnClr = 1 << IntNumber;	/* Disable Interrupt */
    5d44:	e3e02efe 	mvn	r2, #4064	; 0xfe0
    5d48:	e242200b 	sub	r2, r2, #11	; 0xb
    5d4c:	e51b101c 	ldr	r1, [fp, #-28]
    5d50:	e3a03001 	mov	r3, #1	; 0x1
    5d54:	e1a03113 	mov	r3, r3, lsl r1
    5d58:	e5823000 	str	r3, [r2]
    
    for ( i = 0; i < VIC_SIZE; i++ )
    5d5c:	e3a03000 	mov	r3, #0	; 0x0
    5d60:	e50b3018 	str	r3, [fp, #-24]
    5d64:	ea000019 	b	5dd0 <uninstall_irq+0xa0>
    {
	/* find first un-assigned VIC address for the handler */
	vect_addr = (unsigned long *)(VIC_BASE_ADDR + VECT_ADDR_INDEX + i*4);
    5d68:	e51b3018 	ldr	r3, [fp, #-24]
    5d6c:	e1a03103 	mov	r3, r3, lsl #2
    5d70:	e2433c0f 	sub	r3, r3, #3840	; 0xf00
    5d74:	e50b3014 	str	r3, [fp, #-20]
	vect_cntl = (unsigned long *)(VIC_BASE_ADDR + VECT_CNTL_INDEX + i*4);
    5d78:	e51b3018 	ldr	r3, [fp, #-24]
    5d7c:	e1a03103 	mov	r3, r3, lsl #2
    5d80:	e2433c0e 	sub	r3, r3, #3584	; 0xe00
    5d84:	e50b3010 	str	r3, [fp, #-16]
	if ( (*vect_cntl & ~IRQ_SLOT_EN ) == IntNumber )
    5d88:	e51b3010 	ldr	r3, [fp, #-16]
    5d8c:	e5933000 	ldr	r3, [r3]
    5d90:	e3c32020 	bic	r2, r3, #32	; 0x20
    5d94:	e51b301c 	ldr	r3, [fp, #-28]
    5d98:	e1520003 	cmp	r2, r3
    5d9c:	1a000008 	bne	5dc4 <uninstall_irq+0x94>
	{
	    *vect_addr = (unsigned long)NULL;	/* clear the VIC entry in the VIC table */
    5da0:	e51b2014 	ldr	r2, [fp, #-20]
    5da4:	e3a03000 	mov	r3, #0	; 0x0
    5da8:	e5823000 	str	r3, [r2]
	    *vect_cntl &= ~IRQ_SLOT_EN;	/* disable SLOT_EN bit */	
    5dac:	e51b3010 	ldr	r3, [fp, #-16]
    5db0:	e5933000 	ldr	r3, [r3]
    5db4:	e3c32020 	bic	r2, r3, #32	; 0x20
    5db8:	e51b3010 	ldr	r3, [fp, #-16]
    5dbc:	e5832000 	str	r2, [r3]
	    break;
    5dc0:	ea000005 	b	5ddc <uninstall_irq+0xac>
    5dc4:	e51b3018 	ldr	r3, [fp, #-24]
    5dc8:	e2833001 	add	r3, r3, #1	; 0x1
    5dcc:	e50b3018 	str	r3, [fp, #-24]
    5dd0:	e51b3018 	ldr	r3, [fp, #-24]
    5dd4:	e353000f 	cmp	r3, #15	; 0xf
    5dd8:	9affffe2 	bls	5d68 <uninstall_irq+0x38>
	}
    }
    if ( i == VIC_SIZE )
    5ddc:	e51b3018 	ldr	r3, [fp, #-24]
    5de0:	e3530010 	cmp	r3, #16	; 0x10
    5de4:	1a000002 	bne	5df4 <uninstall_irq+0xc4>
    {
	return( FALSE );		/* fatal error, can't find interrupt number 
    5de8:	e3a03000 	mov	r3, #0	; 0x0
    5dec:	e50b3020 	str	r3, [fp, #-32]
    5df0:	ea000007 	b	5e14 <uninstall_irq+0xe4>
					in vector slot */
    }
    VICIntEnable = 1 << IntNumber;	/* Enable Interrupt */
    5df4:	e3a02000 	mov	r2, #0	; 0x0
    5df8:	e2422eff 	sub	r2, r2, #4080	; 0xff0
    5dfc:	e51b101c 	ldr	r1, [fp, #-28]
    5e00:	e3a03001 	mov	r3, #1	; 0x1
    5e04:	e1a03113 	mov	r3, r3, lsl r1
    5e08:	e5823000 	str	r3, [r2]
    return( TRUE );
    5e0c:	e3a03001 	mov	r3, #1	; 0x1
    5e10:	e50b3020 	str	r3, [fp, #-32]
    5e14:	e51b3020 	ldr	r3, [fp, #-32]
}
    5e18:	e1a00003 	mov	r0, r3
    5e1c:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5e20:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5e24:	e12fff1e 	bx	lr

00005e28 <ADCInit>:
    5e28:	e1a0c00d 	mov	ip, sp
    5e2c:	e92dd810 	stmdb	sp!, {r4, fp, ip, lr, pc}
    5e30:	e24cb004 	sub	fp, ip, #4	; 0x4
    5e34:	e24dd004 	sub	sp, sp, #4	; 0x4
    5e38:	e50b0014 	str	r0, [fp, #-20]
    5e3c:	e3a0420e 	mov	r4, #-536870912	; 0xe0000000
    5e40:	e284490d 	add	r4, r4, #212992	; 0x34000
    5e44:	e3a008e5 	mov	r0, #15007744	; 0xe50000
    5e48:	e2400d79 	sub	r0, r0, #7744	; 0x1e40
    5e4c:	e51b1014 	ldr	r1, [fp, #-20]
    5e50:	eb001c7d 	bl	d04c <____udivsi3_from_arm>
    5e54:	e1a03000 	mov	r3, r0
    5e58:	e2433001 	sub	r3, r3, #1	; 0x1
    5e5c:	e1a03403 	mov	r3, r3, lsl #8
    5e60:	e3833602 	orr	r3, r3, #2097152	; 0x200000
    5e64:	e3833001 	orr	r3, r3, #1	; 0x1
    5e68:	e5843000 	str	r3, [r4]
    5e6c:	e3a0420e 	mov	r4, #-536870912	; 0xe0000000
    5e70:	e2844806 	add	r4, r4, #393216	; 0x60000
    5e74:	e3a008e5 	mov	r0, #15007744	; 0xe50000
    5e78:	e2400d79 	sub	r0, r0, #7744	; 0x1e40
    5e7c:	e51b1014 	ldr	r1, [fp, #-20]
    5e80:	eb001c71 	bl	d04c <____udivsi3_from_arm>
    5e84:	e1a03000 	mov	r3, r0
    5e88:	e2433001 	sub	r3, r3, #1	; 0x1
    5e8c:	e1a03403 	mov	r3, r3, lsl #8
    5e90:	e3833602 	orr	r3, r3, #2097152	; 0x200000
    5e94:	e3833001 	orr	r3, r3, #1	; 0x1
    5e98:	e5843000 	str	r3, [r4]
    5e9c:	e3a03001 	mov	r3, #1	; 0x1
    5ea0:	e1a00003 	mov	r0, r3
    5ea4:	e24bd010 	sub	sp, fp, #16	; 0x10
    5ea8:	e89d6810 	ldmia	sp, {r4, fp, sp, lr}
    5eac:	e12fff1e 	bx	lr

00005eb0 <ADC0Read>:
    5eb0:	e1a0c00d 	mov	ip, sp
    5eb4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5eb8:	e24cb004 	sub	fp, ip, #4	; 0x4
    5ebc:	e24dd014 	sub	sp, sp, #20	; 0x14
    5ec0:	e1a03000 	mov	r3, r0
    5ec4:	e54b301c 	strb	r3, [fp, #-28]
    5ec8:	e3a03000 	mov	r3, #0	; 0x0
    5ecc:	e50b3018 	str	r3, [fp, #-24]
    5ed0:	e55b301c 	ldrb	r3, [fp, #-28]
    5ed4:	e3530007 	cmp	r3, #7	; 0x7
    5ed8:	9a000001 	bls	5ee4 <ADC0Read+0x34>
    5edc:	e3a03000 	mov	r3, #0	; 0x0
    5ee0:	e54b301c 	strb	r3, [fp, #-28]
    5ee4:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    5ee8:	e282290d 	add	r2, r2, #212992	; 0x34000
    5eec:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5ef0:	e283390d 	add	r3, r3, #212992	; 0x34000
    5ef4:	e5933000 	ldr	r3, [r3]
    5ef8:	e3c330ff 	bic	r3, r3, #255	; 0xff
    5efc:	e5823000 	str	r3, [r2]
    5f00:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
    5f04:	e281190d 	add	r1, r1, #212992	; 0x34000
    5f08:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5f0c:	e283390d 	add	r3, r3, #212992	; 0x34000
    5f10:	e5930000 	ldr	r0, [r3]
    5f14:	e55b201c 	ldrb	r2, [fp, #-28]
    5f18:	e3a03001 	mov	r3, #1	; 0x1
    5f1c:	e1a03213 	mov	r3, r3, lsl r2
    5f20:	e1803003 	orr	r3, r0, r3
    5f24:	e3833401 	orr	r3, r3, #16777216	; 0x1000000
    5f28:	e5813000 	str	r3, [r1]
    5f2c:	ea000009 	b	5f58 <ADC0Read+0xa8>
    5f30:	e55b301c 	ldrb	r3, [fp, #-28]
    5f34:	e1a03103 	mov	r3, r3, lsl #2
    5f38:	e283320e 	add	r3, r3, #-536870912	; 0xe0000000
    5f3c:	e283390d 	add	r3, r3, #212992	; 0x34000
    5f40:	e2833010 	add	r3, r3, #16	; 0x10
    5f44:	e5933000 	ldr	r3, [r3]
    5f48:	e50b3014 	str	r3, [fp, #-20]
    5f4c:	e51b3014 	ldr	r3, [fp, #-20]
    5f50:	e3530000 	cmp	r3, #0	; 0x0
    5f54:	ba00000a 	blt	5f84 <ADC0Read+0xd4>
    5f58:	e51b1018 	ldr	r1, [fp, #-24]
    5f5c:	e3a03d4e 	mov	r3, #4992	; 0x1380
    5f60:	e2833007 	add	r3, r3, #7	; 0x7
    5f64:	e1510003 	cmp	r1, r3
    5f68:	83a03000 	movhi	r3, #0	; 0x0
    5f6c:	93a03001 	movls	r3, #1	; 0x1
    5f70:	e20320ff 	and	r2, r3, #255	; 0xff
    5f74:	e2813001 	add	r3, r1, #1	; 0x1
    5f78:	e50b3018 	str	r3, [fp, #-24]
    5f7c:	e3520000 	cmp	r2, #0	; 0x0
    5f80:	1affffea 	bne	5f30 <ADC0Read+0x80>
    5f84:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    5f88:	e282290d 	add	r2, r2, #212992	; 0x34000
    5f8c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    5f90:	e283390d 	add	r3, r3, #212992	; 0x34000
    5f94:	e5933000 	ldr	r3, [r3]
    5f98:	e3c33407 	bic	r3, r3, #117440512	; 0x7000000
    5f9c:	e5823000 	str	r3, [r2]
    5fa0:	e51b3014 	ldr	r3, [fp, #-20]
    5fa4:	e2033101 	and	r3, r3, #1073741824	; 0x40000000
    5fa8:	e3530000 	cmp	r3, #0	; 0x0
    5fac:	0a000002 	beq	5fbc <ADC0Read+0x10c>
    5fb0:	e3a03000 	mov	r3, #0	; 0x0
    5fb4:	e50b3020 	str	r3, [fp, #-32]
    5fb8:	ea000006 	b	5fd8 <ADC0Read+0x128>
    5fbc:	e51b3014 	ldr	r3, [fp, #-20]
    5fc0:	e1a03323 	mov	r3, r3, lsr #6
    5fc4:	e1a03b03 	mov	r3, r3, lsl #22
    5fc8:	e1a03b23 	mov	r3, r3, lsr #22
    5fcc:	e50b3010 	str	r3, [fp, #-16]
    5fd0:	e51b3010 	ldr	r3, [fp, #-16]
    5fd4:	e50b3020 	str	r3, [fp, #-32]
    5fd8:	e51b3020 	ldr	r3, [fp, #-32]
    5fdc:	e1a00003 	mov	r0, r3
    5fe0:	e24bd00c 	sub	sp, fp, #12	; 0xc
    5fe4:	e89d6800 	ldmia	sp, {fp, sp, lr}
    5fe8:	e12fff1e 	bx	lr

00005fec <ADC1Read>:
    5fec:	e1a0c00d 	mov	ip, sp
    5ff0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    5ff4:	e24cb004 	sub	fp, ip, #4	; 0x4
    5ff8:	e24dd010 	sub	sp, sp, #16	; 0x10
    5ffc:	e1a03000 	mov	r3, r0
    6000:	e54b3018 	strb	r3, [fp, #-24]
    6004:	e55b3018 	ldrb	r3, [fp, #-24]
    6008:	e3530007 	cmp	r3, #7	; 0x7
    600c:	9a000001 	bls	6018 <ADC1Read+0x2c>
    6010:	e3a03000 	mov	r3, #0	; 0x0
    6014:	e54b3018 	strb	r3, [fp, #-24]
    6018:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    601c:	e2822806 	add	r2, r2, #393216	; 0x60000
    6020:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    6024:	e2833806 	add	r3, r3, #393216	; 0x60000
    6028:	e5933000 	ldr	r3, [r3]
    602c:	e3c330ff 	bic	r3, r3, #255	; 0xff
    6030:	e5823000 	str	r3, [r2]
    6034:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
    6038:	e2811806 	add	r1, r1, #393216	; 0x60000
    603c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    6040:	e2833806 	add	r3, r3, #393216	; 0x60000
    6044:	e5930000 	ldr	r0, [r3]
    6048:	e55b2018 	ldrb	r2, [fp, #-24]
    604c:	e3a03001 	mov	r3, #1	; 0x1
    6050:	e1a03213 	mov	r3, r3, lsl r2
    6054:	e1803003 	orr	r3, r0, r3
    6058:	e3833401 	orr	r3, r3, #16777216	; 0x1000000
    605c:	e5813000 	str	r3, [r1]
    6060:	e55b3018 	ldrb	r3, [fp, #-24]
    6064:	e1a03103 	mov	r3, r3, lsl #2
    6068:	e283320e 	add	r3, r3, #-536870912	; 0xe0000000
    606c:	e2833806 	add	r3, r3, #393216	; 0x60000
    6070:	e2833010 	add	r3, r3, #16	; 0x10
    6074:	e5933000 	ldr	r3, [r3]
    6078:	e50b3014 	str	r3, [fp, #-20]
    607c:	e51b3014 	ldr	r3, [fp, #-20]
    6080:	e3530000 	cmp	r3, #0	; 0x0
    6084:	ba000000 	blt	608c <ADC1Read+0xa0>
    6088:	eafffff4 	b	6060 <ADC1Read+0x74>
    608c:	e3a0220e 	mov	r2, #-536870912	; 0xe0000000
    6090:	e2822806 	add	r2, r2, #393216	; 0x60000
    6094:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    6098:	e2833806 	add	r3, r3, #393216	; 0x60000
    609c:	e5933000 	ldr	r3, [r3]
    60a0:	e3c33407 	bic	r3, r3, #117440512	; 0x7000000
    60a4:	e5823000 	str	r3, [r2]
    60a8:	e51b3014 	ldr	r3, [fp, #-20]
    60ac:	e2033101 	and	r3, r3, #1073741824	; 0x40000000
    60b0:	e3530000 	cmp	r3, #0	; 0x0
    60b4:	0a000002 	beq	60c4 <ADC1Read+0xd8>
    60b8:	e3a03000 	mov	r3, #0	; 0x0
    60bc:	e50b301c 	str	r3, [fp, #-28]
    60c0:	ea000006 	b	60e0 <ADC1Read+0xf4>
    60c4:	e51b3014 	ldr	r3, [fp, #-20]
    60c8:	e1a03323 	mov	r3, r3, lsr #6
    60cc:	e1a03b03 	mov	r3, r3, lsl #22
    60d0:	e1a03b23 	mov	r3, r3, lsr #22
    60d4:	e50b3010 	str	r3, [fp, #-16]
    60d8:	e51b3010 	ldr	r3, [fp, #-16]
    60dc:	e50b301c 	str	r3, [fp, #-28]
    60e0:	e51b301c 	ldr	r3, [fp, #-28]
    60e4:	e1a00003 	mov	r0, r3
    60e8:	e24bd00c 	sub	sp, fp, #12	; 0xc
    60ec:	e89d6800 	ldmia	sp, {fp, sp, lr}
    60f0:	e12fff1e 	bx	lr

000060f4 <SSPHandler>:
    60f4:	e1a0c00d 	mov	ip, sp
    60f8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    60fc:	e24cb004 	sub	fp, ip, #4	; 0x4
    6100:	e24dd008 	sub	sp, sp, #8	; 0x8
    6104:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    6108:	e283391a 	add	r3, r3, #425984	; 0x68000
    610c:	e283301c 	add	r3, r3, #28	; 0x1c
    6110:	e5933000 	ldr	r3, [r3]
    6114:	e50b3014 	str	r3, [fp, #-20]
    6118:	e51b3014 	ldr	r3, [fp, #-20]
    611c:	e2033001 	and	r3, r3, #1	; 0x1
    6120:	e20330ff 	and	r3, r3, #255	; 0xff
    6124:	e3530000 	cmp	r3, #0	; 0x0
    6128:	0a000004 	beq	6140 <SSPHandler+0x4c>
    612c:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    6130:	e283391a 	add	r3, r3, #425984	; 0x68000
    6134:	e2833020 	add	r3, r3, #32	; 0x20
    6138:	e3a02001 	mov	r2, #1	; 0x1
    613c:	e5832000 	str	r2, [r3]
    6140:	e51b3014 	ldr	r3, [fp, #-20]
    6144:	e2033002 	and	r3, r3, #2	; 0x2
    6148:	e3530000 	cmp	r3, #0	; 0x0
    614c:	0a000004 	beq	6164 <SSPHandler+0x70>
    6150:	e3a0320e 	mov	r3, #-536870912	; 0xe0000000
    6154:	e283391a 	add	r3, r3, #425984	; 0x68000
    6158:	e2833020 	add	r3, r3, #32	; 0x20
    615c:	e3a02002 	mov	r2, #2	; 0x2
    6160:	e5832000 	str	r2, [r3]
    6164:	e51b3014 	ldr	r3, [fp, #-20]
    6168:	e2033004 	and	r3, r3, #4	; 0x4
    616c:	e3530000 	cmp	r3, #0	; 0x0
    6170:	0a000016 	beq	61d0 <SSPHandler+0xdc>
    6174:	ea00000f 	b	61b8 <SSPHandler+0xc4>
    6178:	e3a0328e 	mov	r3, #-536870904	; 0xe0000008
    617c:	e283391a 	add	r3, r3, #425984	; 0x68000
    6180:	e5933000 	ldr	r3, [r3]
    6184:	e14b30be 	strh	r3, [fp, #-14]
    6188:	e15b30be 	ldrh	r3, [fp, #-14]
    618c:	e20330ff 	and	r3, r3, #255	; 0xff
    6190:	e20330ff 	and	r3, r3, #255	; 0xff
    6194:	e1a00003 	mov	r0, r3
    6198:	ebffe961 	bl	724 <SSP_rx_handler_HL>
    619c:	e15b30be 	ldrh	r3, [fp, #-14]
    61a0:	e1a03423 	mov	r3, r3, lsr #8
    61a4:	e1a03803 	mov	r3, r3, lsl #16
    61a8:	e1a03823 	mov	r3, r3, lsr #16
    61ac:	e20330ff 	and	r3, r3, #255	; 0xff
    61b0:	e1a00003 	mov	r0, r3
    61b4:	ebffe95a 	bl	724 <SSP_rx_handler_HL>
    61b8:	e3a032ce 	mov	r3, #-536870900	; 0xe000000c
    61bc:	e283391a 	add	r3, r3, #425984	; 0x68000
    61c0:	e5933000 	ldr	r3, [r3]
    61c4:	e2033004 	and	r3, r3, #4	; 0x4
    61c8:	e3530000 	cmp	r3, #0	; 0x0
    61cc:	1affffe9 	bne	6178 <SSPHandler+0x84>
    61d0:	e51b3014 	ldr	r3, [fp, #-20]
    61d4:	e2033008 	and	r3, r3, #8	; 0x8
    61d8:	e3530000 	cmp	r3, #0	; 0x0
    61dc:	0a00002f 	beq	62a0 <SSPHandler+0x1ac>
    61e0:	ea000028 	b	6288 <SSPHandler+0x194>
    61e4:	e59f30d0 	ldr	r3, [pc, #208]	; 62bc <.text+0x62bc>
    61e8:	e5933000 	ldr	r3, [r3]
    61ec:	e1a02003 	mov	r2, r3
    61f0:	e59f30c8 	ldr	r3, [pc, #200]	; 62c0 <.text+0x62c0>
    61f4:	e5933000 	ldr	r3, [r3]
    61f8:	e1520003 	cmp	r2, r3
    61fc:	2a000014 	bcs	6254 <SSPHandler+0x160>
    6200:	e3a0128e 	mov	r1, #-536870904	; 0xe0000008
    6204:	e281191a 	add	r1, r1, #425984	; 0x68000
    6208:	e59f30ac 	ldr	r3, [pc, #172]	; 62bc <.text+0x62bc>
    620c:	e5932000 	ldr	r2, [r3]
    6210:	e59f30ac 	ldr	r3, [pc, #172]	; 62c4 <.text+0x62c4>
    6214:	e7d33002 	ldrb	r3, [r3, r2]
    6218:	e1a00003 	mov	r0, r3
    621c:	e59f3098 	ldr	r3, [pc, #152]	; 62bc <.text+0x62bc>
    6220:	e5933000 	ldr	r3, [r3]
    6224:	e2832001 	add	r2, r3, #1	; 0x1
    6228:	e59f3094 	ldr	r3, [pc, #148]	; 62c4 <.text+0x62c4>
    622c:	e7d33002 	ldrb	r3, [r3, r2]
    6230:	e1a03403 	mov	r3, r3, lsl #8
    6234:	e1803003 	orr	r3, r0, r3
    6238:	e5813000 	str	r3, [r1]
    623c:	e59f3078 	ldr	r3, [pc, #120]	; 62bc <.text+0x62bc>
    6240:	e5933000 	ldr	r3, [r3]
    6244:	e2832002 	add	r2, r3, #2	; 0x2
    6248:	e59f306c 	ldr	r3, [pc, #108]	; 62bc <.text+0x62bc>
    624c:	e5832000 	str	r2, [r3]
    6250:	ea00000c 	b	6288 <SSPHandler+0x194>
    6254:	e59f2060 	ldr	r2, [pc, #96]	; 62bc <.text+0x62bc>
    6258:	e3a03000 	mov	r3, #0	; 0x0
    625c:	e5823000 	str	r3, [r2]
    6260:	e59f2058 	ldr	r2, [pc, #88]	; 62c0 <.text+0x62c0>
    6264:	e3a03000 	mov	r3, #0	; 0x0
    6268:	e5823000 	str	r3, [r2]
    626c:	e59f2054 	ldr	r2, [pc, #84]	; 62c8 <.text+0x62c8>
    6270:	e3a03001 	mov	r3, #1	; 0x1
    6274:	e5c23000 	strb	r3, [r2]
    6278:	e3a0328e 	mov	r3, #-536870904	; 0xe0000008
    627c:	e283391a 	add	r3, r3, #425984	; 0x68000
    6280:	e3a02000 	mov	r2, #0	; 0x0
    6284:	e5832000 	str	r2, [r3]
    6288:	e3a032ce 	mov	r3, #-536870900	; 0xe000000c
    628c:	e283391a 	add	r3, r3, #425984	; 0x68000
    6290:	e5933000 	ldr	r3, [r3]
    6294:	e2033002 	and	r3, r3, #2	; 0x2
    6298:	e3530000 	cmp	r3, #0	; 0x0
    629c:	1affffd0 	bne	61e4 <SSPHandler+0xf0>
    62a0:	e3a03000 	mov	r3, #0	; 0x0
    62a4:	e2433efd 	sub	r3, r3, #4048	; 0xfd0
    62a8:	e3a02000 	mov	r2, #0	; 0x0
    62ac:	e5832000 	str	r2, [r3]
    62b0:	e24bd00c 	sub	sp, fp, #12	; 0xc
    62b4:	e89d6800 	ldmia	sp, {fp, sp, lr}
    62b8:	e12fff1e 	bx	lr
    62bc:	40001080 	andmi	r1, r0, r0, lsl #1
    62c0:	4000107c 	andmi	r1, r0, ip, ror r0
    62c4:	40001084 	andmi	r1, r0, r4, lsl #1
    62c8:	40000017 	andmi	r0, r0, r7, lsl r0

000062cc <SSPReceive>:
    62cc:	e1a0c00d 	mov	ip, sp
    62d0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    62d4:	e24cb004 	sub	fp, ip, #4	; 0x4
    62d8:	e24dd004 	sub	sp, sp, #4	; 0x4
    62dc:	e1a03000 	mov	r3, r0
    62e0:	e54b3010 	strb	r3, [fp, #-16]
    62e4:	e59f3288 	ldr	r3, [pc, #648]	; 6574 <.text+0x6574>
    62e8:	e5d33000 	ldrb	r3, [r3]
    62ec:	e3530000 	cmp	r3, #0	; 0x0
    62f0:	1a00000d 	bne	632c <SSPReceive+0x60>
    62f4:	e55b3010 	ldrb	r3, [fp, #-16]
    62f8:	e353003e 	cmp	r3, #62	; 0x3e
    62fc:	1a000006 	bne	631c <SSPReceive+0x50>
    6300:	e59f326c 	ldr	r3, [pc, #620]	; 6574 <.text+0x6574>
    6304:	e5d33000 	ldrb	r3, [r3]
    6308:	e2833001 	add	r3, r3, #1	; 0x1
    630c:	e20330ff 	and	r3, r3, #255	; 0xff
    6310:	e59f225c 	ldr	r2, [pc, #604]	; 6574 <.text+0x6574>
    6314:	e5c23000 	strb	r3, [r2]
    6318:	ea000087 	b	653c <SSPReceive+0x270>
    631c:	e59f3250 	ldr	r3, [pc, #592]	; 6574 <.text+0x6574>
    6320:	e3a02000 	mov	r2, #0	; 0x0
    6324:	e5c32000 	strb	r2, [r3]
    6328:	ea000083 	b	653c <SSPReceive+0x270>
    632c:	e59f3240 	ldr	r3, [pc, #576]	; 6574 <.text+0x6574>
    6330:	e5d33000 	ldrb	r3, [r3]
    6334:	e3530001 	cmp	r3, #1	; 0x1
    6338:	1a00000d 	bne	6374 <SSPReceive+0xa8>
    633c:	e55b3010 	ldrb	r3, [fp, #-16]
    6340:	e353002a 	cmp	r3, #42	; 0x2a
    6344:	1a000006 	bne	6364 <SSPReceive+0x98>
    6348:	e59f3224 	ldr	r3, [pc, #548]	; 6574 <.text+0x6574>
    634c:	e5d33000 	ldrb	r3, [r3]
    6350:	e2833001 	add	r3, r3, #1	; 0x1
    6354:	e20330ff 	and	r3, r3, #255	; 0xff
    6358:	e59f2214 	ldr	r2, [pc, #532]	; 6574 <.text+0x6574>
    635c:	e5c23000 	strb	r3, [r2]
    6360:	ea000075 	b	653c <SSPReceive+0x270>
    6364:	e59f3208 	ldr	r3, [pc, #520]	; 6574 <.text+0x6574>
    6368:	e3a02000 	mov	r2, #0	; 0x0
    636c:	e5c32000 	strb	r2, [r3]
    6370:	ea000071 	b	653c <SSPReceive+0x270>
    6374:	e59f31f8 	ldr	r3, [pc, #504]	; 6574 <.text+0x6574>
    6378:	e5d33000 	ldrb	r3, [r3]
    637c:	e3530002 	cmp	r3, #2	; 0x2
    6380:	1a00000d 	bne	63bc <SSPReceive+0xf0>
    6384:	e55b3010 	ldrb	r3, [fp, #-16]
    6388:	e353003e 	cmp	r3, #62	; 0x3e
    638c:	1a000006 	bne	63ac <SSPReceive+0xe0>
    6390:	e59f31dc 	ldr	r3, [pc, #476]	; 6574 <.text+0x6574>
    6394:	e5d33000 	ldrb	r3, [r3]
    6398:	e2833001 	add	r3, r3, #1	; 0x1
    639c:	e20330ff 	and	r3, r3, #255	; 0xff
    63a0:	e59f21cc 	ldr	r2, [pc, #460]	; 6574 <.text+0x6574>
    63a4:	e5c23000 	strb	r3, [r2]
    63a8:	ea000063 	b	653c <SSPReceive+0x270>
    63ac:	e59f31c0 	ldr	r3, [pc, #448]	; 6574 <.text+0x6574>
    63b0:	e3a02000 	mov	r2, #0	; 0x0
    63b4:	e5c32000 	strb	r2, [r3]
    63b8:	ea00005f 	b	653c <SSPReceive+0x270>
    63bc:	e59f31b0 	ldr	r3, [pc, #432]	; 6574 <.text+0x6574>
    63c0:	e5d33000 	ldrb	r3, [r3]
    63c4:	e3530003 	cmp	r3, #3	; 0x3
    63c8:	1a000023 	bne	645c <SSPReceive+0x190>
    63cc:	e55b3010 	ldrb	r3, [fp, #-16]
    63d0:	e3530003 	cmp	r3, #3	; 0x3
    63d4:	1a00000c 	bne	640c <SSPReceive+0x140>
    63d8:	e59f2198 	ldr	r2, [pc, #408]	; 6578 <.text+0x6578>
    63dc:	e3a0305c 	mov	r3, #92	; 0x5c
    63e0:	e5c23000 	strb	r3, [r2]
    63e4:	e59f2190 	ldr	r2, [pc, #400]	; 657c <.text+0x657c>
    63e8:	e59f3190 	ldr	r3, [pc, #400]	; 6580 <.text+0x6580>
    63ec:	e5832000 	str	r2, [r3]
    63f0:	e59f217c 	ldr	r2, [pc, #380]	; 6574 <.text+0x6574>
    63f4:	e3a03004 	mov	r3, #4	; 0x4
    63f8:	e5c23000 	strb	r3, [r2]
    63fc:	e59f2180 	ldr	r2, [pc, #384]	; 6584 <.text+0x6584>
    6400:	e3a03003 	mov	r3, #3	; 0x3
    6404:	e5c23000 	strb	r3, [r2]
    6408:	ea00004b 	b	653c <SSPReceive+0x270>
    640c:	e55b3010 	ldrb	r3, [fp, #-16]
    6410:	e3530001 	cmp	r3, #1	; 0x1
    6414:	1a00000c 	bne	644c <SSPReceive+0x180>
    6418:	e59f2158 	ldr	r2, [pc, #344]	; 6578 <.text+0x6578>
    641c:	e3a0301c 	mov	r3, #28	; 0x1c
    6420:	e5c23000 	strb	r3, [r2]
    6424:	e59f215c 	ldr	r2, [pc, #348]	; 6588 <.text+0x6588>
    6428:	e59f3150 	ldr	r3, [pc, #336]	; 6580 <.text+0x6580>
    642c:	e5832000 	str	r2, [r3]
    6430:	e59f213c 	ldr	r2, [pc, #316]	; 6574 <.text+0x6574>
    6434:	e3a03004 	mov	r3, #4	; 0x4
    6438:	e5c23000 	strb	r3, [r2]
    643c:	e59f2140 	ldr	r2, [pc, #320]	; 6584 <.text+0x6584>
    6440:	e3a03001 	mov	r3, #1	; 0x1
    6444:	e5c23000 	strb	r3, [r2]
    6448:	ea00003b 	b	653c <SSPReceive+0x270>
    644c:	e59f3120 	ldr	r3, [pc, #288]	; 6574 <.text+0x6574>
    6450:	e3a02000 	mov	r2, #0	; 0x0
    6454:	e5c32000 	strb	r2, [r3]
    6458:	ea000037 	b	653c <SSPReceive+0x270>
    645c:	e59f3110 	ldr	r3, [pc, #272]	; 6574 <.text+0x6574>
    6460:	e5d33000 	ldrb	r3, [r3]
    6464:	e3530004 	cmp	r3, #4	; 0x4
    6468:	1a000021 	bne	64f4 <SSPReceive+0x228>
    646c:	e59f3104 	ldr	r3, [pc, #260]	; 6578 <.text+0x6578>
    6470:	e5d33000 	ldrb	r3, [r3]
    6474:	e2433001 	sub	r3, r3, #1	; 0x1
    6478:	e20330ff 	and	r3, r3, #255	; 0xff
    647c:	e59f20f4 	ldr	r2, [pc, #244]	; 6578 <.text+0x6578>
    6480:	e5c23000 	strb	r3, [r2]
    6484:	e59f30f4 	ldr	r3, [pc, #244]	; 6580 <.text+0x6580>
    6488:	e5932000 	ldr	r2, [r3]
    648c:	e55b3010 	ldrb	r3, [fp, #-16]
    6490:	e5c23000 	strb	r3, [r2]
    6494:	e59f30e4 	ldr	r3, [pc, #228]	; 6580 <.text+0x6580>
    6498:	e5933000 	ldr	r3, [r3]
    649c:	e2832001 	add	r2, r3, #1	; 0x1
    64a0:	e59f30d8 	ldr	r3, [pc, #216]	; 6580 <.text+0x6580>
    64a4:	e5832000 	str	r2, [r3]
    64a8:	e59f30c8 	ldr	r3, [pc, #200]	; 6578 <.text+0x6578>
    64ac:	e5d33000 	ldrb	r3, [r3]
    64b0:	e3530000 	cmp	r3, #0	; 0x0
    64b4:	1a000020 	bne	653c <SSPReceive+0x270>
    64b8:	e59f20b4 	ldr	r2, [pc, #180]	; 6574 <.text+0x6574>
    64bc:	e3a03005 	mov	r3, #5	; 0x5
    64c0:	e5c23000 	strb	r3, [r2]
    64c4:	e59f30b8 	ldr	r3, [pc, #184]	; 6584 <.text+0x6584>
    64c8:	e5d33000 	ldrb	r3, [r3]
    64cc:	e20330ff 	and	r3, r3, #255	; 0xff
    64d0:	e3530003 	cmp	r3, #3	; 0x3
    64d4:	1a000002 	bne	64e4 <SSPReceive+0x218>
    64d8:	e59f30ac 	ldr	r3, [pc, #172]	; 658c <.text+0x658c>
    64dc:	e3a02001 	mov	r2, #1	; 0x1
    64e0:	e5c32000 	strb	r2, [r3]
    64e4:	e59f3098 	ldr	r3, [pc, #152]	; 6584 <.text+0x6584>
    64e8:	e3a02000 	mov	r2, #0	; 0x0
    64ec:	e5c32000 	strb	r2, [r3]
    64f0:	ea000011 	b	653c <SSPReceive+0x270>
    64f4:	e59f3078 	ldr	r3, [pc, #120]	; 6574 <.text+0x6574>
    64f8:	e5d33000 	ldrb	r3, [r3]
    64fc:	e3530005 	cmp	r3, #5	; 0x5
    6500:	1a00000a 	bne	6530 <SSPReceive+0x264>
    6504:	e55b3010 	ldrb	r3, [fp, #-16]
    6508:	e3530000 	cmp	r3, #0	; 0x0
    650c:	1a000003 	bne	6520 <SSPReceive+0x254>
    6510:	e59f305c 	ldr	r3, [pc, #92]	; 6574 <.text+0x6574>
    6514:	e3a02000 	mov	r2, #0	; 0x0
    6518:	e5c32000 	strb	r2, [r3]
    651c:	ea000006 	b	653c <SSPReceive+0x270>
    6520:	e59f304c 	ldr	r3, [pc, #76]	; 6574 <.text+0x6574>
    6524:	e3a02001 	mov	r2, #1	; 0x1
    6528:	e5c32000 	strb	r2, [r3]
    652c:	ea000002 	b	653c <SSPReceive+0x270>
    6530:	e59f303c 	ldr	r3, [pc, #60]	; 6574 <.text+0x6574>
    6534:	e3a02000 	mov	r2, #0	; 0x0
    6538:	e5c32000 	strb	r2, [r3]
    653c:	e59f3030 	ldr	r3, [pc, #48]	; 6574 <.text+0x6574>
    6540:	e5d33000 	ldrb	r3, [r3]
    6544:	e3530000 	cmp	r3, #0	; 0x0
    6548:	1a000003 	bne	655c <SSPReceive+0x290>
    654c:	e59f303c 	ldr	r3, [pc, #60]	; 6590 <.text+0x6590>
    6550:	e3a02001 	mov	r2, #1	; 0x1
    6554:	e5c32000 	strb	r2, [r3]
    6558:	ea000002 	b	6568 <SSPReceive+0x29c>
    655c:	e59f302c 	ldr	r3, [pc, #44]	; 6590 <.text+0x6590>
    6560:	e3a02000 	mov	r2, #0	; 0x0
    6564:	e5c32000 	strb	r2, [r3]
    6568:	e24bd00c 	sub	sp, fp, #12	; 0xc
    656c:	e89d6800 	ldmia	sp, {fp, sp, lr}
    6570:	e12fff1e 	bx	lr
    6574:	40000c51 	andmi	r0, r0, r1, asr ip
    6578:	40000c50 	andmi	r0, r0, r0, asr ip
    657c:	40000f68 	andmi	r0, r0, r8, ror #30
    6580:	40000c4c 	andmi	r0, r0, ip, asr #24
    6584:	40000c49 	andmi	r0, r0, r9, asr #24
    6588:	40000f18 	andmi	r0, r0, r8, lsl pc
    658c:	40000c48 	andmi	r0, r0, r8, asr #24
    6590:	40000018 	andmi	r0, r0, r8, lsl r0

00006594 <LL_write_init>:
    6594:	e1a0c00d 	mov	ip, sp
    6598:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    659c:	e24cb004 	sub	fp, ip, #4	; 0x4
    65a0:	e59f2028 	ldr	r2, [pc, #40]	; 65d0 <.text+0x65d0>
    65a4:	e3a0303e 	mov	r3, #62	; 0x3e
    65a8:	e5c23000 	strb	r3, [r2]
    65ac:	e59f201c 	ldr	r2, [pc, #28]	; 65d0 <.text+0x65d0>
    65b0:	e3a0302a 	mov	r3, #42	; 0x2a
    65b4:	e5c23001 	strb	r3, [r2, #1]
    65b8:	e59f2010 	ldr	r2, [pc, #16]	; 65d0 <.text+0x65d0>
    65bc:	e3a0303e 	mov	r3, #62	; 0x3e
    65c0:	e5c23002 	strb	r3, [r2, #2]
    65c4:	e24bd00c 	sub	sp, fp, #12	; 0xc
    65c8:	e89d6800 	ldmia	sp, {fp, sp, lr}
    65cc:	e12fff1e 	bx	lr
    65d0:	40001084 	andmi	r1, r0, r4, lsl #1

000065d4 <LL_write>:
    65d4:	e1a0c00d 	mov	ip, sp
    65d8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
    65dc:	e24cb004 	sub	fp, ip, #4	; 0x4
    65e0:	e24dd014 	sub	sp, sp, #20	; 0x14
    65e4:	e50b0014 	str	r0, [fp, #-20]
    65e8:	e1a03001 	mov	r3, r1
    65ec:	e14b31b8 	strh	r3, [fp, #-24]
    65f0:	e1a03002 	mov	r3, r2
    65f4:	e54b301c 	strb	r3, [fp, #-28]
    65f8:	e59f31d0 	ldr	r3, [pc, #464]	; 67d0 <.text+0x67d0>
    65fc:	e5d33000 	ldrb	r3, [r3]
    6600:	e3530000 	cmp	r3, #0	; 0x0
    6604:	0a00001f 	beq	6688 <LL_write+0xb4>
    6608:	e59f31c4 	ldr	r3, [pc, #452]	; 67d4 <.text+0x67d4>
    660c:	e55b201c 	ldrb	r2, [fp, #-28]
    6610:	e5c32003 	strb	r2, [r3, #3]
    6614:	e3a03000 	mov	r3, #0	; 0x0
    6618:	e50b3010 	str	r3, [fp, #-16]
    661c:	ea00000a 	b	664c <LL_write+0x78>
    6620:	e51b3010 	ldr	r3, [fp, #-16]
    6624:	e2831004 	add	r1, r3, #4	; 0x4
    6628:	e51b2010 	ldr	r2, [fp, #-16]
    662c:	e51b3014 	ldr	r3, [fp, #-20]
    6630:	e0823003 	add	r3, r2, r3
    6634:	e5d33000 	ldrb	r3, [r3]
    6638:	e59f2194 	ldr	r2, [pc, #404]	; 67d4 <.text+0x67d4>
    663c:	e7c23001 	strb	r3, [r2, r1]
    6640:	e51b3010 	ldr	r3, [fp, #-16]
    6644:	e2833001 	add	r3, r3, #1	; 0x1
    6648:	e50b3010 	str	r3, [fp, #-16]
    664c:	e15b21b8 	ldrh	r2, [fp, #-24]
    6650:	e51b3010 	ldr	r3, [fp, #-16]
    6654:	e1520003 	cmp	r2, r3
    6658:	8afffff0 	bhi	6620 <LL_write+0x4c>
    665c:	e15b31b8 	ldrh	r3, [fp, #-24]
    6660:	e2831004 	add	r1, r3, #4	; 0x4
    6664:	e59f2168 	ldr	r2, [pc, #360]	; 67d4 <.text+0x67d4>
    6668:	e3a03000 	mov	r3, #0	; 0x0
    666c:	e7c23001 	strb	r3, [r2, r1]
    6670:	e15b31b8 	ldrh	r3, [fp, #-24]
    6674:	e2833005 	add	r3, r3, #5	; 0x5
    6678:	e1a02003 	mov	r2, r3
    667c:	e59f3154 	ldr	r3, [pc, #340]	; 67d8 <.text+0x67d8>
    6680:	e5832000 	str	r2, [r3]
    6684:	ea000047 	b	67a8 <LL_write+0x1d4>
    6688:	e15b21b8 	ldrh	r2, [fp, #-24]
    668c:	e59f3144 	ldr	r3, [pc, #324]	; 67d8 <.text+0x67d8>
    6690:	e5933000 	ldr	r3, [r3]
    6694:	e0823003 	add	r3, r2, r3
    6698:	e353007e 	cmp	r3, #126	; 0x7e
    669c:	8a00003e 	bhi	679c <LL_write+0x1c8>
    66a0:	e59f3130 	ldr	r3, [pc, #304]	; 67d8 <.text+0x67d8>
    66a4:	e5933000 	ldr	r3, [r3]
    66a8:	e2431001 	sub	r1, r3, #1	; 0x1
    66ac:	e59f2120 	ldr	r2, [pc, #288]	; 67d4 <.text+0x67d4>
    66b0:	e3a0303e 	mov	r3, #62	; 0x3e
    66b4:	e7c23001 	strb	r3, [r2, r1]
    66b8:	e59f3118 	ldr	r3, [pc, #280]	; 67d8 <.text+0x67d8>
    66bc:	e5931000 	ldr	r1, [r3]
    66c0:	e59f210c 	ldr	r2, [pc, #268]	; 67d4 <.text+0x67d4>
    66c4:	e3a0302a 	mov	r3, #42	; 0x2a
    66c8:	e7c23001 	strb	r3, [r2, r1]
    66cc:	e59f3104 	ldr	r3, [pc, #260]	; 67d8 <.text+0x67d8>
    66d0:	e5933000 	ldr	r3, [r3]
    66d4:	e2831001 	add	r1, r3, #1	; 0x1
    66d8:	e59f20f4 	ldr	r2, [pc, #244]	; 67d4 <.text+0x67d4>
    66dc:	e3a0303e 	mov	r3, #62	; 0x3e
    66e0:	e7c23001 	strb	r3, [r2, r1]
    66e4:	e59f30ec 	ldr	r3, [pc, #236]	; 67d8 <.text+0x67d8>
    66e8:	e5933000 	ldr	r3, [r3]
    66ec:	e2831002 	add	r1, r3, #2	; 0x2
    66f0:	e59f20dc 	ldr	r2, [pc, #220]	; 67d4 <.text+0x67d4>
    66f4:	e55b301c 	ldrb	r3, [fp, #-28]
    66f8:	e7c23001 	strb	r3, [r2, r1]
    66fc:	e59f30d4 	ldr	r3, [pc, #212]	; 67d8 <.text+0x67d8>
    6700:	e5933000 	ldr	r3, [r3]
    6704:	e50b3010 	str	r3, [fp, #-16]
    6708:	ea00000e 	b	6748 <LL_write+0x174>
    670c:	e51b3010 	ldr	r3, [fp, #-16]
    6710:	e2831003 	add	r1, r3, #3	; 0x3
    6714:	e59f30bc 	ldr	r3, [pc, #188]	; 67d8 <.text+0x67d8>
    6718:	e5932000 	ldr	r2, [r3]
    671c:	e51b3010 	ldr	r3, [fp, #-16]
    6720:	e0623003 	rsb	r3, r2, r3
    6724:	e1a02003 	mov	r2, r3
    6728:	e51b3014 	ldr	r3, [fp, #-20]
    672c:	e0823003 	add	r3, r2, r3
    6730:	e5d33000 	ldrb	r3, [r3]
    6734:	e59f2098 	ldr	r2, [pc, #152]	; 67d4 <.text+0x67d4>
    6738:	e7c23001 	strb	r3, [r2, r1]
    673c:	e51b3010 	ldr	r3, [fp, #-16]
    6740:	e2833001 	add	r3, r3, #1	; 0x1
    6744:	e50b3010 	str	r3, [fp, #-16]
    6748:	e15b21b8 	ldrh	r2, [fp, #-24]
    674c:	e59f3084 	ldr	r3, [pc, #132]	; 67d8 <.text+0x67d8>
    6750:	e5933000 	ldr	r3, [r3]
    6754:	e0822003 	add	r2, r2, r3
    6758:	e51b3010 	ldr	r3, [fp, #-16]
    675c:	e1520003 	cmp	r2, r3
    6760:	8affffe9 	bhi	670c <LL_write+0x138>
    6764:	e15b21b8 	ldrh	r2, [fp, #-24]
    6768:	e59f3068 	ldr	r3, [pc, #104]	; 67d8 <.text+0x67d8>
    676c:	e5933000 	ldr	r3, [r3]
    6770:	e0823003 	add	r3, r2, r3
    6774:	e2832005 	add	r2, r3, #5	; 0x5
    6778:	e59f3058 	ldr	r3, [pc, #88]	; 67d8 <.text+0x67d8>
    677c:	e5832000 	str	r2, [r3]
    6780:	e59f3050 	ldr	r3, [pc, #80]	; 67d8 <.text+0x67d8>
    6784:	e5933000 	ldr	r3, [r3]
    6788:	e2431001 	sub	r1, r3, #1	; 0x1
    678c:	e59f2040 	ldr	r2, [pc, #64]	; 67d4 <.text+0x67d4>
    6790:	e3a03000 	mov	r3, #0	; 0x0
    6794:	e7c23001 	strb	r3, [r2, r1]
    6798:	ea000002 	b	67a8 <LL_write+0x1d4>
    679c:	e3a03000 	mov	r3, #0	; 0x0
    67a0:	e50b3020 	str	r3, [fp, #-32]
    67a4:	ea000004 	b	67bc <LL_write+0x1e8>
    67a8:	e59f3020 	ldr	r3, [pc, #32]	; 67d0 <.text+0x67d0>
    67ac:	e3a02000 	mov	r2, #0	; 0x0
    67b0:	e5c32000 	strb	r2, [r3]
    67b4:	e3a03001 	mov	r3, #1	; 0x1
    67b8:	e50b3020 	str	r3, [fp, #-32]
    67bc:	e51b3020 	ldr	r3, [fp, #-32]
    67c0:	e1a00003 	mov	r0, r3
    67c4:	e24bd00c 	sub	sp, fp, #12	; 0xc
    67c8:	e89d6800 	ldmia	sp, {fp, sp, lr}
    67cc:	e12fff1e 	bx	lr
    67d0:	40000017 	andmi	r0, r0, r7, lsl r0
    67d4:	40001084 	andmi	r1, r0, r4, lsl #1
    67d8:	4000107c 	andmi	r1, r0, ip, ror r0

000067dc <printf>:
    67dc:	b40f      	push	{r0, r1, r2, r3}
    67de:	b500      	push	{lr}
    67e0:	4b06      	ldr	r3, [pc, #24]	(67fc <.text+0x67fc>)
    67e2:	b081      	sub	sp, #4
    67e4:	aa02      	add	r2, sp, #8
    67e6:	681b      	ldr	r3, [r3, #0]
    67e8:	ca02      	ldmia	r2!, {r1}
    67ea:	6898      	ldr	r0, [r3, #8]
    67ec:	9200      	str	r2, [sp, #0]
    67ee:	f001 fa6b 	bl	7cc8 <vfprintf>
    67f2:	b001      	add	sp, #4
    67f4:	bc08      	pop	{r3}
    67f6:	b004      	add	sp, #16
    67f8:	4718      	bx	r3
    67fa:	0000      	lsls	r0, r0, #0
    67fc:	001c      	lsls	r4, r3, #0
    67fe:	4000      	ands	r0, r0

00006800 <_printf_r>:
    6800:	b40e      	push	{r1, r2, r3}
    6802:	b500      	push	{lr}
    6804:	b081      	sub	sp, #4
    6806:	ab02      	add	r3, sp, #8
    6808:	cb04      	ldmia	r3!, {r2}
    680a:	6881      	ldr	r1, [r0, #8]
    680c:	9300      	str	r3, [sp, #0]
    680e:	f000 f84b 	bl	68a8 <_vfprintf_r>
    6812:	b001      	add	sp, #4
    6814:	bc08      	pop	{r3}
    6816:	b003      	add	sp, #12
    6818:	4718      	bx	r3
    681a:	46c0      	nop			(mov r8, r8)

0000681c <_puts_r>:
    681c:	b530      	push	{r4, r5, lr}
    681e:	b087      	sub	sp, #28
    6820:	1c05      	adds	r5, r0, #0
    6822:	1c08      	adds	r0, r1, #0
    6824:	1c0c      	adds	r4, r1, #0
    6826:	f000 f827 	bl	6878 <strlen>
    682a:	4b0d      	ldr	r3, [pc, #52]	(6860 <.text+0x6860>)
    682c:	9302      	str	r3, [sp, #8]
    682e:	2301      	movs	r3, #1
    6830:	9001      	str	r0, [sp, #4]
    6832:	9303      	str	r3, [sp, #12]
    6834:	3001      	adds	r0, #1
    6836:	466b      	mov	r3, sp
    6838:	9006      	str	r0, [sp, #24]
    683a:	9304      	str	r3, [sp, #16]
    683c:	68a8      	ldr	r0, [r5, #8]
    683e:	2302      	movs	r3, #2
    6840:	a904      	add	r1, sp, #16
    6842:	9400      	str	r4, [sp, #0]
    6844:	9305      	str	r3, [sp, #20]
    6846:	f002 fd5d 	bl	9304 <__sfvwrite>
    684a:	2800      	cmp	r0, #0
    684c:	d002      	beq.n	6854 <_puts_r+0x38>
    684e:	2001      	movs	r0, #1
    6850:	4240      	negs	r0, r0
    6852:	e000      	b.n	6856 <_puts_r+0x3a>
    6854:	200a      	movs	r0, #10
    6856:	b007      	add	sp, #28
    6858:	bc30      	pop	{r4, r5}
    685a:	bc02      	pop	{r1}
    685c:	4708      	bx	r1
    685e:	0000      	lsls	r0, r0, #0
    6860:	d8d4      	bhi.n	680c <_printf_r+0xc>
	...

00006864 <puts>:
    6864:	b500      	push	{lr}
    6866:	4b03      	ldr	r3, [pc, #12]	(6874 <.text+0x6874>)
    6868:	1c01      	adds	r1, r0, #0
    686a:	6818      	ldr	r0, [r3, #0]
    686c:	f7ff ffd6 	bl	681c <_puts_r>
    6870:	bc02      	pop	{r1}
    6872:	4708      	bx	r1
    6874:	001c      	lsls	r4, r3, #0
    6876:	4000      	ands	r0, r0

00006878 <strlen>:
    6878:	1c02      	adds	r2, r0, #0
    687a:	e000      	b.n	687e <strlen+0x6>
    687c:	3001      	adds	r0, #1
    687e:	7803      	ldrb	r3, [r0, #0]
    6880:	2b00      	cmp	r3, #0
    6882:	d1fb      	bne.n	687c <strlen+0x4>
    6884:	1a80      	subs	r0, r0, r2
    6886:	4770      	bx	lr

00006888 <__sprint>:
    6888:	b510      	push	{r4, lr}
    688a:	688b      	ldr	r3, [r1, #8]
    688c:	1c0c      	adds	r4, r1, #0
    688e:	2b00      	cmp	r3, #0
    6890:	d102      	bne.n	6898 <__sprint+0x10>
    6892:	2000      	movs	r0, #0
    6894:	604b      	str	r3, [r1, #4]
    6896:	e004      	b.n	68a2 <__sprint+0x1a>
    6898:	f002 fd34 	bl	9304 <__sfvwrite>
    689c:	2300      	movs	r3, #0
    689e:	60a3      	str	r3, [r4, #8]
    68a0:	6063      	str	r3, [r4, #4]
    68a2:	bc10      	pop	{r4}
    68a4:	bc02      	pop	{r1}
    68a6:	4708      	bx	r1

000068a8 <_vfprintf_r>:
    68a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    68aa:	4cd2      	ldr	r4, [pc, #840]	(6bf4 <.text+0x6bf4>)
    68ac:	44a5      	add	sp, r4
    68ae:	9005      	str	r0, [sp, #20]
    68b0:	9104      	str	r1, [sp, #16]
    68b2:	1c16      	adds	r6, r2, #0
    68b4:	1c1d      	adds	r5, r3, #0
    68b6:	f002 fee5 	bl	9684 <localeconv>
    68ba:	6800      	ldr	r0, [r0, #0]
    68bc:	900b      	str	r0, [sp, #44]
    68be:	9805      	ldr	r0, [sp, #20]
    68c0:	2800      	cmp	r0, #0
    68c2:	d004      	beq.n	68ce <_vfprintf_r+0x26>
    68c4:	6b83      	ldr	r3, [r0, #56]
    68c6:	2b00      	cmp	r3, #0
    68c8:	d101      	bne.n	68ce <_vfprintf_r+0x26>
    68ca:	f002 fb3b 	bl	8f44 <__sinit>
    68ce:	9904      	ldr	r1, [sp, #16]
    68d0:	898b      	ldrh	r3, [r1, #12]
    68d2:	071a      	lsls	r2, r3, #28
    68d4:	d502      	bpl.n	68dc <_vfprintf_r+0x34>
    68d6:	690b      	ldr	r3, [r1, #16]
    68d8:	2b00      	cmp	r3, #0
    68da:	d106      	bne.n	68ea <_vfprintf_r+0x42>
    68dc:	9804      	ldr	r0, [sp, #16]
    68de:	f001 fbef 	bl	80c0 <__swsetup>
    68e2:	2800      	cmp	r0, #0
    68e4:	d001      	beq.n	68ea <_vfprintf_r+0x42>
    68e6:	f001 f9bd 	bl	7c64 <.text+0x7c64>
    68ea:	9b04      	ldr	r3, [sp, #16]
    68ec:	899a      	ldrh	r2, [r3, #12]
    68ee:	231a      	movs	r3, #26
    68f0:	4013      	ands	r3, r2
    68f2:	2b0a      	cmp	r3, #10
    68f4:	d147      	bne.n	6986 <_vfprintf_r+0xde>
    68f6:	9c04      	ldr	r4, [sp, #16]
    68f8:	200e      	movs	r0, #14
    68fa:	5e23      	ldrsh	r3, [r4, r0]
    68fc:	2b00      	cmp	r3, #0
    68fe:	db42      	blt.n	6986 <_vfprintf_r+0xde>
    6900:	4cbd      	ldr	r4, [pc, #756]	(6bf8 <.text+0x6bf8>)
    6902:	2302      	movs	r3, #2
    6904:	446c      	add	r4, sp
    6906:	439a      	bics	r2, r3
    6908:	9904      	ldr	r1, [sp, #16]
    690a:	81a2      	strh	r2, [r4, #12]
    690c:	89cb      	ldrh	r3, [r1, #14]
    690e:	22bd      	movs	r2, #189
    6910:	81e3      	strh	r3, [r4, #14]
    6912:	00d2      	lsls	r2, r2, #3
    6914:	69cb      	ldr	r3, [r1, #28]
    6916:	446a      	add	r2, sp
    6918:	20be      	movs	r0, #190
    691a:	6013      	str	r3, [r2, #0]
    691c:	00c0      	lsls	r0, r0, #3
    691e:	6a4b      	ldr	r3, [r1, #36]
    6920:	4ab6      	ldr	r2, [pc, #728]	(6bfc <.text+0x6bfc>)
    6922:	4468      	add	r0, sp
    6924:	6003      	str	r3, [r0, #0]
    6926:	446a      	add	r2, sp
    6928:	ab1c      	add	r3, sp, #112
    692a:	48b5      	ldr	r0, [pc, #724]	(6c00 <.text+0x6c00>)
    692c:	21bc      	movs	r1, #188
    692e:	6013      	str	r3, [r2, #0]
    6930:	6023      	str	r3, [r4, #0]
    6932:	00c9      	lsls	r1, r1, #3
    6934:	2380      	movs	r3, #128
    6936:	4ab3      	ldr	r2, [pc, #716]	(6c04 <.text+0x6c04>)
    6938:	00db      	lsls	r3, r3, #3
    693a:	4468      	add	r0, sp
    693c:	4469      	add	r1, sp
    693e:	6003      	str	r3, [r0, #0]
    6940:	600b      	str	r3, [r1, #0]
    6942:	446a      	add	r2, sp
    6944:	2300      	movs	r3, #0
    6946:	6013      	str	r3, [r2, #0]
    6948:	9805      	ldr	r0, [sp, #20]
    694a:	1c21      	adds	r1, r4, #0
    694c:	1c32      	adds	r2, r6, #0
    694e:	1c2b      	adds	r3, r5, #0
    6950:	f7ff ffaa 	bl	68a8 <_vfprintf_r>
    6954:	9008      	str	r0, [sp, #32]
    6956:	2800      	cmp	r0, #0
    6958:	db07      	blt.n	696a <_vfprintf_r+0xc2>
    695a:	1c20      	adds	r0, r4, #0
    695c:	f002 fa92 	bl	8e84 <fflush>
    6960:	2800      	cmp	r0, #0
    6962:	d002      	beq.n	696a <_vfprintf_r+0xc2>
    6964:	2301      	movs	r3, #1
    6966:	425b      	negs	r3, r3
    6968:	9308      	str	r3, [sp, #32]
    696a:	4ba3      	ldr	r3, [pc, #652]	(6bf8 <.text+0x6bf8>)
    696c:	446b      	add	r3, sp
    696e:	899b      	ldrh	r3, [r3, #12]
    6970:	065c      	lsls	r4, r3, #25
    6972:	d401      	bmi.n	6978 <_vfprintf_r+0xd0>
    6974:	f001 f991 	bl	7c9a <.text+0x7c9a>
    6978:	9804      	ldr	r0, [sp, #16]
    697a:	8983      	ldrh	r3, [r0, #12]
    697c:	2240      	movs	r2, #64
    697e:	4313      	orrs	r3, r2
    6980:	8183      	strh	r3, [r0, #12]
    6982:	f001 f98a 	bl	7c9a <.text+0x7c9a>
    6986:	22c5      	movs	r2, #197
    6988:	23d2      	movs	r3, #210
    698a:	00d2      	lsls	r2, r2, #3
    698c:	00db      	lsls	r3, r3, #3
    698e:	24d3      	movs	r4, #211
    6990:	489d      	ldr	r0, [pc, #628]	(6c08 <.text+0x6c08>)
    6992:	446a      	add	r2, sp
    6994:	446b      	add	r3, sp
    6996:	00e4      	lsls	r4, r4, #3
    6998:	446c      	add	r4, sp
    699a:	601a      	str	r2, [r3, #0]
    699c:	4468      	add	r0, sp
    699e:	2300      	movs	r3, #0
    69a0:	6023      	str	r3, [r4, #0]
    69a2:	6003      	str	r3, [r0, #0]
    69a4:	4b99      	ldr	r3, [pc, #612]	(6c0c <.text+0x6c0c>)
    69a6:	4c9a      	ldr	r4, [pc, #616]	(6c10 <.text+0x6c10>)
    69a8:	9314      	str	r3, [sp, #80]
    69aa:	9415      	str	r4, [sp, #84]
    69ac:	2400      	movs	r4, #0
    69ae:	961b      	str	r6, [sp, #108]
    69b0:	9411      	str	r4, [sp, #68]
    69b2:	9412      	str	r4, [sp, #72]
    69b4:	9207      	str	r2, [sp, #28]
    69b6:	9408      	str	r4, [sp, #32]
    69b8:	940d      	str	r4, [sp, #52]
    69ba:	e001      	b.n	69c0 <_vfprintf_r+0x118>
    69bc:	9407      	str	r4, [sp, #28]
    69be:	9d18      	ldr	r5, [sp, #96]
    69c0:	9e1b      	ldr	r6, [sp, #108]
    69c2:	e000      	b.n	69c6 <_vfprintf_r+0x11e>
    69c4:	3601      	adds	r6, #1
    69c6:	7833      	ldrb	r3, [r6, #0]
    69c8:	2b00      	cmp	r3, #0
    69ca:	d001      	beq.n	69d0 <_vfprintf_r+0x128>
    69cc:	2b25      	cmp	r3, #37
    69ce:	d1f9      	bne.n	69c4 <_vfprintf_r+0x11c>
    69d0:	981b      	ldr	r0, [sp, #108]
    69d2:	1a34      	subs	r4, r6, r0
    69d4:	2c00      	cmp	r4, #0
    69d6:	d022      	beq.n	6a1e <_vfprintf_r+0x176>
    69d8:	22d3      	movs	r2, #211
    69da:	9907      	ldr	r1, [sp, #28]
    69dc:	00d2      	lsls	r2, r2, #3
    69de:	446a      	add	r2, sp
    69e0:	6813      	ldr	r3, [r2, #0]
    69e2:	6008      	str	r0, [r1, #0]
    69e4:	4888      	ldr	r0, [pc, #544]	(6c08 <.text+0x6c08>)
    69e6:	191b      	adds	r3, r3, r4
    69e8:	4468      	add	r0, sp
    69ea:	6013      	str	r3, [r2, #0]
    69ec:	6803      	ldr	r3, [r0, #0]
    69ee:	3301      	adds	r3, #1
    69f0:	604c      	str	r4, [r1, #4]
    69f2:	6003      	str	r3, [r0, #0]
    69f4:	2b07      	cmp	r3, #7
    69f6:	dc01      	bgt.n	69fc <_vfprintf_r+0x154>
    69f8:	3108      	adds	r1, #8
    69fa:	e00c      	b.n	6a16 <_vfprintf_r+0x16e>
    69fc:	21d2      	movs	r1, #210
    69fe:	00c9      	lsls	r1, r1, #3
    6a00:	9804      	ldr	r0, [sp, #16]
    6a02:	4469      	add	r1, sp
    6a04:	f7ff ff40 	bl	6888 <__sprint>
    6a08:	2800      	cmp	r0, #0
    6a0a:	d001      	beq.n	6a10 <_vfprintf_r+0x168>
    6a0c:	f001 f926 	bl	7c5c <.text+0x7c5c>
    6a10:	21c5      	movs	r1, #197
    6a12:	00c9      	lsls	r1, r1, #3
    6a14:	4469      	add	r1, sp
    6a16:	9a08      	ldr	r2, [sp, #32]
    6a18:	1912      	adds	r2, r2, r4
    6a1a:	9107      	str	r1, [sp, #28]
    6a1c:	9208      	str	r2, [sp, #32]
    6a1e:	7833      	ldrb	r3, [r6, #0]
    6a20:	2b00      	cmp	r3, #0
    6a22:	d101      	bne.n	6a28 <_vfprintf_r+0x180>
    6a24:	f001 f900 	bl	7c28 <.text+0x7c28>
    6a28:	4b7a      	ldr	r3, [pc, #488]	(6c14 <.text+0x6c14>)
    6a2a:	2200      	movs	r2, #0
    6a2c:	446b      	add	r3, sp
    6a2e:	3601      	adds	r6, #1
    6a30:	961b      	str	r6, [sp, #108]
    6a32:	701a      	strb	r2, [r3, #0]
    6a34:	2301      	movs	r3, #1
    6a36:	425b      	negs	r3, r3
    6a38:	9217      	str	r2, [sp, #92]
    6a3a:	9209      	str	r2, [sp, #36]
    6a3c:	9316      	str	r3, [sp, #88]
    6a3e:	e003      	b.n	6a48 <_vfprintf_r+0x1a0>
    6a40:	2401      	movs	r4, #1
    6a42:	4264      	negs	r4, r4
    6a44:	9416      	str	r4, [sp, #88]
    6a46:	1c1d      	adds	r5, r3, #0
    6a48:	981b      	ldr	r0, [sp, #108]
    6a4a:	991b      	ldr	r1, [sp, #108]
    6a4c:	7800      	ldrb	r0, [r0, #0]
    6a4e:	3101      	adds	r1, #1
    6a50:	9019      	str	r0, [sp, #100]
    6a52:	911b      	str	r1, [sp, #108]
    6a54:	e000      	b.n	6a58 <_vfprintf_r+0x1b0>
    6a56:	9209      	str	r2, [sp, #36]
    6a58:	9b19      	ldr	r3, [sp, #100]
    6a5a:	3b20      	subs	r3, #32
    6a5c:	2b58      	cmp	r3, #88
    6a5e:	d900      	bls.n	6a62 <_vfprintf_r+0x1ba>
    6a60:	e3e9      	b.n	7236 <.text+0x7236>
    6a62:	4a6d      	ldr	r2, [pc, #436]	(6c18 <.text+0x6c18>)
    6a64:	009b      	lsls	r3, r3, #2
    6a66:	589b      	ldr	r3, [r3, r2]
    6a68:	469f      	mov	pc, r3
    6a6a:	4a6c      	ldr	r2, [pc, #432]	(6c1c <.text+0x6c1c>)
    6a6c:	9211      	str	r2, [sp, #68]
    6a6e:	e359      	b.n	7124 <.text+0x7124>
    6a70:	4a68      	ldr	r2, [pc, #416]	(6c14 <.text+0x6c14>)
    6a72:	446a      	add	r2, sp
    6a74:	7813      	ldrb	r3, [r2, #0]
    6a76:	2b00      	cmp	r3, #0
    6a78:	d1e6      	bne.n	6a48 <_vfprintf_r+0x1a0>
    6a7a:	2320      	movs	r3, #32
    6a7c:	7013      	strb	r3, [r2, #0]
    6a7e:	e7e3      	b.n	6a48 <_vfprintf_r+0x1a0>
    6a80:	2301      	movs	r3, #1
    6a82:	e03a      	b.n	6afa <_vfprintf_r+0x252>
    6a84:	1d2b      	adds	r3, r5, #4
    6a86:	682d      	ldr	r5, [r5, #0]
    6a88:	9509      	str	r5, [sp, #36]
    6a8a:	2d00      	cmp	r5, #0
    6a8c:	da1a      	bge.n	6ac4 <_vfprintf_r+0x21c>
    6a8e:	4268      	negs	r0, r5
    6a90:	9009      	str	r0, [sp, #36]
    6a92:	1c1d      	adds	r5, r3, #0
    6a94:	9917      	ldr	r1, [sp, #92]
    6a96:	2304      	movs	r3, #4
    6a98:	4319      	orrs	r1, r3
    6a9a:	9117      	str	r1, [sp, #92]
    6a9c:	e7d4      	b.n	6a48 <_vfprintf_r+0x1a0>
    6a9e:	4b5d      	ldr	r3, [pc, #372]	(6c14 <.text+0x6c14>)
    6aa0:	222b      	movs	r2, #43
    6aa2:	446b      	add	r3, sp
    6aa4:	701a      	strb	r2, [r3, #0]
    6aa6:	e7cf      	b.n	6a48 <_vfprintf_r+0x1a0>
    6aa8:	9a1b      	ldr	r2, [sp, #108]
    6aaa:	7813      	ldrb	r3, [r2, #0]
    6aac:	3201      	adds	r2, #1
    6aae:	921b      	str	r2, [sp, #108]
    6ab0:	2b2a      	cmp	r3, #42
    6ab2:	d002      	beq.n	6aba <_vfprintf_r+0x212>
    6ab4:	2200      	movs	r2, #0
    6ab6:	9319      	str	r3, [sp, #100]
    6ab8:	e013      	b.n	6ae2 <_vfprintf_r+0x23a>
    6aba:	1d2b      	adds	r3, r5, #4
    6abc:	682d      	ldr	r5, [r5, #0]
    6abe:	9516      	str	r5, [sp, #88]
    6ac0:	2d00      	cmp	r5, #0
    6ac2:	dbbd      	blt.n	6a40 <_vfprintf_r+0x198>
    6ac4:	1c1d      	adds	r5, r3, #0
    6ac6:	e7bf      	b.n	6a48 <_vfprintf_r+0x1a0>
    6ac8:	0093      	lsls	r3, r2, #2
    6aca:	981b      	ldr	r0, [sp, #108]
    6acc:	189b      	adds	r3, r3, r2
    6ace:	9c19      	ldr	r4, [sp, #100]
    6ad0:	991b      	ldr	r1, [sp, #108]
    6ad2:	7800      	ldrb	r0, [r0, #0]
    6ad4:	005b      	lsls	r3, r3, #1
    6ad6:	191b      	adds	r3, r3, r4
    6ad8:	3101      	adds	r1, #1
    6ada:	1c1a      	adds	r2, r3, #0
    6adc:	9019      	str	r0, [sp, #100]
    6ade:	911b      	str	r1, [sp, #108]
    6ae0:	3a30      	subs	r2, #48
    6ae2:	9b19      	ldr	r3, [sp, #100]
    6ae4:	3b30      	subs	r3, #48
    6ae6:	2b09      	cmp	r3, #9
    6ae8:	d9ee      	bls.n	6ac8 <_vfprintf_r+0x220>
    6aea:	2a00      	cmp	r2, #0
    6aec:	9216      	str	r2, [sp, #88]
    6aee:	dab3      	bge.n	6a58 <_vfprintf_r+0x1b0>
    6af0:	2201      	movs	r2, #1
    6af2:	4252      	negs	r2, r2
    6af4:	9216      	str	r2, [sp, #88]
    6af6:	e7af      	b.n	6a58 <_vfprintf_r+0x1b0>
    6af8:	2380      	movs	r3, #128
    6afa:	9c17      	ldr	r4, [sp, #92]
    6afc:	431c      	orrs	r4, r3
    6afe:	9417      	str	r4, [sp, #92]
    6b00:	e7a2      	b.n	6a48 <_vfprintf_r+0x1a0>
    6b02:	2200      	movs	r2, #0
    6b04:	0093      	lsls	r3, r2, #2
    6b06:	189b      	adds	r3, r3, r2
    6b08:	9819      	ldr	r0, [sp, #100]
    6b0a:	005b      	lsls	r3, r3, #1
    6b0c:	181b      	adds	r3, r3, r0
    6b0e:	991b      	ldr	r1, [sp, #108]
    6b10:	1c1a      	adds	r2, r3, #0
    6b12:	9b1b      	ldr	r3, [sp, #108]
    6b14:	7809      	ldrb	r1, [r1, #0]
    6b16:	3301      	adds	r3, #1
    6b18:	931b      	str	r3, [sp, #108]
    6b1a:	1c0b      	adds	r3, r1, #0
    6b1c:	3b30      	subs	r3, #48
    6b1e:	3a30      	subs	r2, #48
    6b20:	9119      	str	r1, [sp, #100]
    6b22:	2b09      	cmp	r3, #9
    6b24:	d897      	bhi.n	6a56 <_vfprintf_r+0x1ae>
    6b26:	e7ed      	b.n	6b04 <_vfprintf_r+0x25c>
    6b28:	2308      	movs	r3, #8
    6b2a:	e7e6      	b.n	6afa <_vfprintf_r+0x252>
    6b2c:	2340      	movs	r3, #64
    6b2e:	e00d      	b.n	6b4c <_vfprintf_r+0x2a4>
    6b30:	991b      	ldr	r1, [sp, #108]
    6b32:	780b      	ldrb	r3, [r1, #0]
    6b34:	2b6c      	cmp	r3, #108
    6b36:	d106      	bne.n	6b46 <_vfprintf_r+0x29e>
    6b38:	9a17      	ldr	r2, [sp, #92]
    6b3a:	2310      	movs	r3, #16
    6b3c:	3101      	adds	r1, #1
    6b3e:	431a      	orrs	r2, r3
    6b40:	911b      	str	r1, [sp, #108]
    6b42:	9217      	str	r2, [sp, #92]
    6b44:	e780      	b.n	6a48 <_vfprintf_r+0x1a0>
    6b46:	2310      	movs	r3, #16
    6b48:	e7d7      	b.n	6afa <_vfprintf_r+0x252>
    6b4a:	2310      	movs	r3, #16
    6b4c:	9817      	ldr	r0, [sp, #92]
    6b4e:	4318      	orrs	r0, r3
    6b50:	9017      	str	r0, [sp, #92]
    6b52:	e779      	b.n	6a48 <_vfprintf_r+0x1a0>
    6b54:	9919      	ldr	r1, [sp, #100]
    6b56:	2943      	cmp	r1, #67
    6b58:	d002      	beq.n	6b60 <_vfprintf_r+0x2b8>
    6b5a:	9a17      	ldr	r2, [sp, #92]
    6b5c:	06d2      	lsls	r2, r2, #27
    6b5e:	d517      	bpl.n	6b90 <_vfprintf_r+0x2e8>
    6b60:	4c2f      	ldr	r4, [pc, #188]	(6c20 <.text+0x6c20>)
    6b62:	446c      	add	r4, sp
    6b64:	2100      	movs	r1, #0
    6b66:	2208      	movs	r2, #8
    6b68:	1c20      	adds	r0, r4, #0
    6b6a:	f003 f889 	bl	9c80 <memset>
    6b6e:	218e      	movs	r1, #142
    6b70:	00c9      	lsls	r1, r1, #3
    6b72:	682a      	ldr	r2, [r5, #0]
    6b74:	9805      	ldr	r0, [sp, #20]
    6b76:	4469      	add	r1, sp
    6b78:	1c23      	adds	r3, r4, #0
    6b7a:	f001 f8b5 	bl	7ce8 <_wcrtomb_r>
    6b7e:	1c06      	adds	r6, r0, #0
    6b80:	1c43      	adds	r3, r0, #1
    6b82:	d101      	bne.n	6b88 <_vfprintf_r+0x2e0>
    6b84:	f001 f84a 	bl	7c1c <.text+0x7c1c>
    6b88:	3504      	adds	r5, #4
    6b8a:	9518      	str	r5, [sp, #96]
    6b8c:	f001 f876 	bl	7c7c <.text+0x7c7c>
    6b90:	238e      	movs	r3, #142
    6b92:	682a      	ldr	r2, [r5, #0]
    6b94:	00db      	lsls	r3, r3, #3
    6b96:	1d29      	adds	r1, r5, #4
    6b98:	446b      	add	r3, sp
    6b9a:	2601      	movs	r6, #1
    6b9c:	9118      	str	r1, [sp, #96]
    6b9e:	701a      	strb	r2, [r3, #0]
    6ba0:	f001 f86c 	bl	7c7c <.text+0x7c7c>
    6ba4:	9a17      	ldr	r2, [sp, #92]
    6ba6:	2310      	movs	r3, #16
    6ba8:	431a      	orrs	r2, r3
    6baa:	9217      	str	r2, [sp, #92]
    6bac:	9b17      	ldr	r3, [sp, #92]
    6bae:	06db      	lsls	r3, r3, #27
    6bb0:	d503      	bpl.n	6bba <_vfprintf_r+0x312>
    6bb2:	1d2c      	adds	r4, r5, #4
    6bb4:	9418      	str	r4, [sp, #96]
    6bb6:	682c      	ldr	r4, [r5, #0]
    6bb8:	e00a      	b.n	6bd0 <_vfprintf_r+0x328>
    6bba:	9917      	ldr	r1, [sp, #92]
    6bbc:	1d2b      	adds	r3, r5, #4
    6bbe:	6828      	ldr	r0, [r5, #0]
    6bc0:	0649      	lsls	r1, r1, #25
    6bc2:	d503      	bpl.n	6bcc <_vfprintf_r+0x324>
    6bc4:	9318      	str	r3, [sp, #96]
    6bc6:	0403      	lsls	r3, r0, #16
    6bc8:	141c      	asrs	r4, r3, #16
    6bca:	e001      	b.n	6bd0 <_vfprintf_r+0x328>
    6bcc:	9318      	str	r3, [sp, #96]
    6bce:	1c04      	adds	r4, r0, #0
    6bd0:	2c00      	cmp	r4, #0
    6bd2:	da04      	bge.n	6bde <_vfprintf_r+0x336>
    6bd4:	4b0f      	ldr	r3, [pc, #60]	(6c14 <.text+0x6c14>)
    6bd6:	222d      	movs	r2, #45
    6bd8:	446b      	add	r3, sp
    6bda:	701a      	strb	r2, [r3, #0]
    6bdc:	4264      	negs	r4, r4
    6bde:	2101      	movs	r1, #1
    6be0:	e2c0      	b.n	7164 <.text+0x7164>
    6be2:	9a19      	ldr	r2, [sp, #100]
    6be4:	9b16      	ldr	r3, [sp, #88]
    6be6:	921a      	str	r2, [sp, #104]
    6be8:	3301      	adds	r3, #1
    6bea:	d11b      	bne.n	6c24 <.text+0x6c24>
    6bec:	2406      	movs	r4, #6
    6bee:	9416      	str	r4, [sp, #88]
    6bf0:	e022      	b.n	6c38 <.text+0x6c38>
    6bf2:	0000      	lsls	r0, r0, #0
    6bf4:	f938 ffff 	ldrsh.w	pc, [r8, #255]!
    6bf8:	05cc      	lsls	r4, r1, #23
    6bfa:	0000      	lsls	r0, r0, #0
    6bfc:	05dc      	lsls	r4, r3, #23
    6bfe:	0000      	lsls	r0, r0, #0
    6c00:	05d4      	lsls	r4, r2, #23
    6c02:	0000      	lsls	r0, r0, #0
    6c04:	05e4      	lsls	r4, r4, #23
    6c06:	0000      	lsls	r0, r0, #0
    6c08:	0694      	lsls	r4, r2, #26
	...
    6c12:	0000      	lsls	r0, r0, #0
    6c14:	06c7      	lsls	r7, r0, #27
    6c16:	0000      	lsls	r0, r0, #0
    6c18:	d25c      	bcs.n	6cd4 <.text+0x6cd4>
    6c1a:	0000      	lsls	r0, r0, #0
    6c1c:	d8d8      	bhi.n	6bd0 <_vfprintf_r+0x328>
    6c1e:	0000      	lsls	r0, r0, #0
    6c20:	06a4      	lsls	r4, r4, #26
    6c22:	0000      	lsls	r0, r0, #0
    6c24:	9819      	ldr	r0, [sp, #100]
    6c26:	2867      	cmp	r0, #103
    6c28:	d001      	beq.n	6c2e <.text+0x6c2e>
    6c2a:	2847      	cmp	r0, #71
    6c2c:	d104      	bne.n	6c38 <.text+0x6c38>
    6c2e:	9916      	ldr	r1, [sp, #88]
    6c30:	2900      	cmp	r1, #0
    6c32:	d101      	bne.n	6c38 <.text+0x6c38>
    6c34:	2201      	movs	r2, #1
    6c36:	9216      	str	r2, [sp, #88]
    6c38:	9c17      	ldr	r4, [sp, #92]
    6c3a:	1c2b      	adds	r3, r5, #0
    6c3c:	3308      	adds	r3, #8
    6c3e:	0724      	lsls	r4, r4, #28
    6c40:	d505      	bpl.n	6c4e <.text+0x6c4e>
    6c42:	6828      	ldr	r0, [r5, #0]
    6c44:	6869      	ldr	r1, [r5, #4]
    6c46:	9318      	str	r3, [sp, #96]
    6c48:	9014      	str	r0, [sp, #80]
    6c4a:	9115      	str	r1, [sp, #84]
    6c4c:	e004      	b.n	6c58 <.text+0x6c58>
    6c4e:	6829      	ldr	r1, [r5, #0]
    6c50:	686a      	ldr	r2, [r5, #4]
    6c52:	9114      	str	r1, [sp, #80]
    6c54:	9215      	str	r2, [sp, #84]
    6c56:	9318      	str	r3, [sp, #96]
    6c58:	9814      	ldr	r0, [sp, #80]
    6c5a:	9915      	ldr	r1, [sp, #84]
    6c5c:	f003 fdba 	bl	a7d4 <isinf>
    6c60:	2800      	cmp	r0, #0
    6c62:	d017      	beq.n	6c94 <.text+0x6c94>
    6c64:	9814      	ldr	r0, [sp, #80]
    6c66:	9915      	ldr	r1, [sp, #84]
    6c68:	4bc3      	ldr	r3, [pc, #780]	(6f78 <.text+0x6f78>)
    6c6a:	4ac2      	ldr	r2, [pc, #776]	(6f74 <.text+0x6f74>)
    6c6c:	f006 f9f4 	bl	d058 <____ltdf2_from_thumb>
    6c70:	2800      	cmp	r0, #0
    6c72:	da03      	bge.n	6c7c <.text+0x6c7c>
    6c74:	4bc1      	ldr	r3, [pc, #772]	(6f7c <.text+0x6f7c>)
    6c76:	222d      	movs	r2, #45
    6c78:	446b      	add	r3, sp
    6c7a:	701a      	strb	r2, [r3, #0]
    6c7c:	9b19      	ldr	r3, [sp, #100]
    6c7e:	3b45      	subs	r3, #69
    6c80:	2b02      	cmp	r3, #2
    6c82:	d904      	bls.n	6c8e <.text+0x6c8e>
    6c84:	4fbe      	ldr	r7, [pc, #760]	(6f80 <.text+0x6f80>)
    6c86:	2200      	movs	r2, #0
    6c88:	2603      	movs	r6, #3
    6c8a:	920f      	str	r2, [sp, #60]
    6c8c:	e2ec      	b.n	7268 <.text+0x7268>
    6c8e:	4fbd      	ldr	r7, [pc, #756]	(6f84 <.text+0x6f84>)
    6c90:	2603      	movs	r6, #3
    6c92:	e2e4      	b.n	725e <.text+0x725e>
    6c94:	9814      	ldr	r0, [sp, #80]
    6c96:	9915      	ldr	r1, [sp, #84]
    6c98:	f003 fdb2 	bl	a800 <isnan>
    6c9c:	2800      	cmp	r0, #0
    6c9e:	d009      	beq.n	6cb4 <.text+0x6cb4>
    6ca0:	9b19      	ldr	r3, [sp, #100]
    6ca2:	3b45      	subs	r3, #69
    6ca4:	2b02      	cmp	r3, #2
    6ca6:	d802      	bhi.n	6cae <.text+0x6cae>
    6ca8:	4fb7      	ldr	r7, [pc, #732]	(6f88 <.text+0x6f88>)
    6caa:	2603      	movs	r6, #3
    6cac:	e2da      	b.n	7264 <.text+0x7264>
    6cae:	4fb7      	ldr	r7, [pc, #732]	(6f8c <.text+0x6f8c>)
    6cb0:	2603      	movs	r6, #3
    6cb2:	e21b      	b.n	70ec <.text+0x70ec>
    6cb4:	9917      	ldr	r1, [sp, #92]
    6cb6:	2380      	movs	r3, #128
    6cb8:	005b      	lsls	r3, r3, #1
    6cba:	9a19      	ldr	r2, [sp, #100]
    6cbc:	4319      	orrs	r1, r3
    6cbe:	9117      	str	r1, [sp, #92]
    6cc0:	2a66      	cmp	r2, #102
    6cc2:	d103      	bne.n	6ccc <.text+0x6ccc>
    6cc4:	9b16      	ldr	r3, [sp, #88]
    6cc6:	2603      	movs	r6, #3
    6cc8:	930a      	str	r3, [sp, #40]
    6cca:	e00b      	b.n	6ce4 <.text+0x6ce4>
    6ccc:	9c19      	ldr	r4, [sp, #100]
    6cce:	2c65      	cmp	r4, #101
    6cd0:	d004      	beq.n	6cdc <.text+0x6cdc>
    6cd2:	2c45      	cmp	r4, #69
    6cd4:	d002      	beq.n	6cdc <.text+0x6cdc>
    6cd6:	9816      	ldr	r0, [sp, #88]
    6cd8:	900a      	str	r0, [sp, #40]
    6cda:	e002      	b.n	6ce2 <.text+0x6ce2>
    6cdc:	9916      	ldr	r1, [sp, #88]
    6cde:	3101      	adds	r1, #1
    6ce0:	910a      	str	r1, [sp, #40]
    6ce2:	2602      	movs	r6, #2
    6ce4:	9b14      	ldr	r3, [sp, #80]
    6ce6:	9c15      	ldr	r4, [sp, #84]
    6ce8:	2b00      	cmp	r3, #0
    6cea:	db03      	blt.n	6cf4 <.text+0x6cf4>
    6cec:	1c25      	adds	r5, r4, #0
    6cee:	2200      	movs	r2, #0
    6cf0:	1c1c      	adds	r4, r3, #0
    6cf2:	e006      	b.n	6d02 <.text+0x6d02>
    6cf4:	9b15      	ldr	r3, [sp, #84]
    6cf6:	9814      	ldr	r0, [sp, #80]
    6cf8:	2180      	movs	r1, #128
    6cfa:	0609      	lsls	r1, r1, #24
    6cfc:	1844      	adds	r4, r0, r1
    6cfe:	1c1d      	adds	r5, r3, #0
    6d00:	222d      	movs	r2, #45
    6d02:	9b0a      	ldr	r3, [sp, #40]
    6d04:	9300      	str	r3, [sp, #0]
    6d06:	4ba2      	ldr	r3, [pc, #648]	(6f90 <.text+0x6f90>)
    6d08:	446b      	add	r3, sp
    6d0a:	9301      	str	r3, [sp, #4]
    6d0c:	4ba1      	ldr	r3, [pc, #644]	(6f94 <.text+0x6f94>)
    6d0e:	446b      	add	r3, sp
    6d10:	9302      	str	r3, [sp, #8]
    6d12:	23d8      	movs	r3, #216
    6d14:	00db      	lsls	r3, r3, #3
    6d16:	446b      	add	r3, sp
    6d18:	920c      	str	r2, [sp, #48]
    6d1a:	9303      	str	r3, [sp, #12]
    6d1c:	9805      	ldr	r0, [sp, #20]
    6d1e:	1c21      	adds	r1, r4, #0
    6d20:	1c2a      	adds	r2, r5, #0
    6d22:	1c33      	adds	r3, r6, #0
    6d24:	f001 fab0 	bl	8288 <_dtoa_r>
    6d28:	1c07      	adds	r7, r0, #0
    6d2a:	9819      	ldr	r0, [sp, #100]
    6d2c:	2867      	cmp	r0, #103
    6d2e:	d001      	beq.n	6d34 <.text+0x6d34>
    6d30:	2847      	cmp	r0, #71
    6d32:	d102      	bne.n	6d3a <.text+0x6d3a>
    6d34:	9917      	ldr	r1, [sp, #92]
    6d36:	07c9      	lsls	r1, r1, #31
    6d38:	d533      	bpl.n	6da2 <.text+0x6da2>
    6d3a:	9a0a      	ldr	r2, [sp, #40]
    6d3c:	9b19      	ldr	r3, [sp, #100]
    6d3e:	18be      	adds	r6, r7, r2
    6d40:	2b66      	cmp	r3, #102
    6d42:	d114      	bne.n	6d6e <.text+0x6d6e>
    6d44:	783b      	ldrb	r3, [r7, #0]
    6d46:	2b30      	cmp	r3, #48
    6d48:	d10d      	bne.n	6d66 <.text+0x6d66>
    6d4a:	1c20      	adds	r0, r4, #0
    6d4c:	1c29      	adds	r1, r5, #0
    6d4e:	4b8a      	ldr	r3, [pc, #552]	(6f78 <.text+0x6f78>)
    6d50:	4a88      	ldr	r2, [pc, #544]	(6f74 <.text+0x6f74>)
    6d52:	f006 f985 	bl	d060 <____nedf2_from_thumb>
    6d56:	2800      	cmp	r0, #0
    6d58:	d005      	beq.n	6d66 <.text+0x6d66>
    6d5a:	980a      	ldr	r0, [sp, #40]
    6d5c:	498c      	ldr	r1, [pc, #560]	(6f90 <.text+0x6f90>)
    6d5e:	2301      	movs	r3, #1
    6d60:	1a1b      	subs	r3, r3, r0
    6d62:	4469      	add	r1, sp
    6d64:	600b      	str	r3, [r1, #0]
    6d66:	4a8a      	ldr	r2, [pc, #552]	(6f90 <.text+0x6f90>)
    6d68:	446a      	add	r2, sp
    6d6a:	6813      	ldr	r3, [r2, #0]
    6d6c:	18f6      	adds	r6, r6, r3
    6d6e:	1c20      	adds	r0, r4, #0
    6d70:	1c29      	adds	r1, r5, #0
    6d72:	4b81      	ldr	r3, [pc, #516]	(6f78 <.text+0x6f78>)
    6d74:	4a7f      	ldr	r2, [pc, #508]	(6f74 <.text+0x6f74>)
    6d76:	f006 f977 	bl	d068 <____eqdf2_from_thumb>
    6d7a:	2800      	cmp	r0, #0
    6d7c:	d10b      	bne.n	6d96 <.text+0x6d96>
    6d7e:	23d8      	movs	r3, #216
    6d80:	00db      	lsls	r3, r3, #3
    6d82:	446b      	add	r3, sp
    6d84:	601e      	str	r6, [r3, #0]
    6d86:	e006      	b.n	6d96 <.text+0x6d96>
    6d88:	24d8      	movs	r4, #216
    6d8a:	2330      	movs	r3, #48
    6d8c:	00e4      	lsls	r4, r4, #3
    6d8e:	7013      	strb	r3, [r2, #0]
    6d90:	446c      	add	r4, sp
    6d92:	1c53      	adds	r3, r2, #1
    6d94:	6023      	str	r3, [r4, #0]
    6d96:	20d8      	movs	r0, #216
    6d98:	00c0      	lsls	r0, r0, #3
    6d9a:	4468      	add	r0, sp
    6d9c:	6802      	ldr	r2, [r0, #0]
    6d9e:	42b2      	cmp	r2, r6
    6da0:	d3f2      	bcc.n	6d88 <.text+0x6d88>
    6da2:	21d8      	movs	r1, #216
    6da4:	00c9      	lsls	r1, r1, #3
    6da6:	4469      	add	r1, sp
    6da8:	680b      	ldr	r3, [r1, #0]
    6daa:	9a19      	ldr	r2, [sp, #100]
    6dac:	1bdb      	subs	r3, r3, r7
    6dae:	9313      	str	r3, [sp, #76]
    6db0:	2a67      	cmp	r2, #103
    6db2:	d001      	beq.n	6db8 <.text+0x6db8>
    6db4:	2a47      	cmp	r2, #71
    6db6:	d112      	bne.n	6dde <.text+0x6dde>
    6db8:	4c75      	ldr	r4, [pc, #468]	(6f90 <.text+0x6f90>)
    6dba:	446c      	add	r4, sp
    6dbc:	6823      	ldr	r3, [r4, #0]
    6dbe:	1d18      	adds	r0, r3, #4
    6dc0:	dd05      	ble.n	6dce <.text+0x6dce>
    6dc2:	9916      	ldr	r1, [sp, #88]
    6dc4:	428b      	cmp	r3, r1
    6dc6:	dc02      	bgt.n	6dce <.text+0x6dce>
    6dc8:	2267      	movs	r2, #103
    6dca:	921a      	str	r2, [sp, #104]
    6dcc:	e074      	b.n	6eb8 <.text+0x6eb8>
    6dce:	9b19      	ldr	r3, [sp, #100]
    6dd0:	2b67      	cmp	r3, #103
    6dd2:	d001      	beq.n	6dd8 <.text+0x6dd8>
    6dd4:	f000 ff4a 	bl	7c6c <.text+0x7c6c>
    6dd8:	2465      	movs	r4, #101
    6dda:	941a      	str	r4, [sp, #104]
    6ddc:	e003      	b.n	6de6 <.text+0x6de6>
    6dde:	9819      	ldr	r0, [sp, #100]
    6de0:	2865      	cmp	r0, #101
    6de2:	dc4a      	bgt.n	6e7a <.text+0x6e7a>
    6de4:	901a      	str	r0, [sp, #104]
    6de6:	496a      	ldr	r1, [pc, #424]	(6f90 <.text+0x6f90>)
    6de8:	4469      	add	r1, sp
    6dea:	680b      	ldr	r3, [r1, #0]
    6dec:	4a6a      	ldr	r2, [pc, #424]	(6f98 <.text+0x6f98>)
    6dee:	1e5d      	subs	r5, r3, #1
    6df0:	ab1a      	add	r3, sp, #104
    6df2:	781b      	ldrb	r3, [r3, #0]
    6df4:	446a      	add	r2, sp
    6df6:	600d      	str	r5, [r1, #0]
    6df8:	7013      	strb	r3, [r2, #0]
    6dfa:	2d00      	cmp	r5, #0
    6dfc:	da02      	bge.n	6e04 <.text+0x6e04>
    6dfe:	426d      	negs	r5, r5
    6e00:	232d      	movs	r3, #45
    6e02:	e000      	b.n	6e06 <.text+0x6e06>
    6e04:	232b      	movs	r3, #43
    6e06:	7053      	strb	r3, [r2, #1]
    6e08:	2d09      	cmp	r5, #9
    6e0a:	dd21      	ble.n	6e50 <.text+0x6e50>
    6e0c:	24d2      	movs	r4, #210
    6e0e:	00e4      	lsls	r4, r4, #3
    6e10:	446c      	add	r4, sp
    6e12:	1c28      	adds	r0, r5, #0
    6e14:	210a      	movs	r1, #10
    6e16:	f005 f885 	bl	bf24 <__modsi3>
    6e1a:	3c01      	subs	r4, #1
    6e1c:	3030      	adds	r0, #48
    6e1e:	7020      	strb	r0, [r4, #0]
    6e20:	210a      	movs	r1, #10
    6e22:	1c28      	adds	r0, r5, #0
    6e24:	f004 ffc8 	bl	bdb8 <__aeabi_idiv>
    6e28:	1c05      	adds	r5, r0, #0
    6e2a:	2809      	cmp	r0, #9
    6e2c:	dcf1      	bgt.n	6e12 <.text+0x6e12>
    6e2e:	4a5b      	ldr	r2, [pc, #364]	(6f9c <.text+0x6f9c>)
    6e30:	1c03      	adds	r3, r0, #0
    6e32:	1e61      	subs	r1, r4, #1
    6e34:	3330      	adds	r3, #48
    6e36:	446a      	add	r2, sp
    6e38:	700b      	strb	r3, [r1, #0]
    6e3a:	e003      	b.n	6e44 <.text+0x6e44>
    6e3c:	780b      	ldrb	r3, [r1, #0]
    6e3e:	3101      	adds	r1, #1
    6e40:	7013      	strb	r3, [r2, #0]
    6e42:	3201      	adds	r2, #1
    6e44:	23d2      	movs	r3, #210
    6e46:	00db      	lsls	r3, r3, #3
    6e48:	446b      	add	r3, sp
    6e4a:	4299      	cmp	r1, r3
    6e4c:	d3f6      	bcc.n	6e3c <.text+0x6e3c>
    6e4e:	e008      	b.n	6e62 <.text+0x6e62>
    6e50:	4b51      	ldr	r3, [pc, #324]	(6f98 <.text+0x6f98>)
    6e52:	2230      	movs	r2, #48
    6e54:	446b      	add	r3, sp
    6e56:	709a      	strb	r2, [r3, #2]
    6e58:	1c2a      	adds	r2, r5, #0
    6e5a:	3230      	adds	r2, #48
    6e5c:	70da      	strb	r2, [r3, #3]
    6e5e:	4a50      	ldr	r2, [pc, #320]	(6fa0 <.text+0x6fa0>)
    6e60:	446a      	add	r2, sp
    6e62:	4b4d      	ldr	r3, [pc, #308]	(6f98 <.text+0x6f98>)
    6e64:	9c13      	ldr	r4, [sp, #76]
    6e66:	446b      	add	r3, sp
    6e68:	1ad2      	subs	r2, r2, r3
    6e6a:	920d      	str	r2, [sp, #52]
    6e6c:	1916      	adds	r6, r2, r4
    6e6e:	2c01      	cmp	r4, #1
    6e70:	dc2b      	bgt.n	6eca <.text+0x6eca>
    6e72:	9817      	ldr	r0, [sp, #92]
    6e74:	07c0      	lsls	r0, r0, #31
    6e76:	d532      	bpl.n	6ede <.text+0x6ede>
    6e78:	e027      	b.n	6eca <.text+0x6eca>
    6e7a:	9919      	ldr	r1, [sp, #100]
    6e7c:	2966      	cmp	r1, #102
    6e7e:	d119      	bne.n	6eb4 <.text+0x6eb4>
    6e80:	4a43      	ldr	r2, [pc, #268]	(6f90 <.text+0x6f90>)
    6e82:	446a      	add	r2, sp
    6e84:	6816      	ldr	r6, [r2, #0]
    6e86:	2e00      	cmp	r6, #0
    6e88:	dd09      	ble.n	6e9e <.text+0x6e9e>
    6e8a:	9b16      	ldr	r3, [sp, #88]
    6e8c:	2b00      	cmp	r3, #0
    6e8e:	d102      	bne.n	6e96 <.text+0x6e96>
    6e90:	9c17      	ldr	r4, [sp, #92]
    6e92:	07e4      	lsls	r4, r4, #31
    6e94:	d523      	bpl.n	6ede <.text+0x6ede>
    6e96:	9816      	ldr	r0, [sp, #88]
    6e98:	1c73      	adds	r3, r6, #1
    6e9a:	18c6      	adds	r6, r0, r3
    6e9c:	e01f      	b.n	6ede <.text+0x6ede>
    6e9e:	9916      	ldr	r1, [sp, #88]
    6ea0:	2900      	cmp	r1, #0
    6ea2:	d104      	bne.n	6eae <.text+0x6eae>
    6ea4:	9a17      	ldr	r2, [sp, #92]
    6ea6:	07d2      	lsls	r2, r2, #31
    6ea8:	d401      	bmi.n	6eae <.text+0x6eae>
    6eaa:	2601      	movs	r6, #1
    6eac:	e017      	b.n	6ede <.text+0x6ede>
    6eae:	9e16      	ldr	r6, [sp, #88]
    6eb0:	3602      	adds	r6, #2
    6eb2:	e014      	b.n	6ede <.text+0x6ede>
    6eb4:	9b19      	ldr	r3, [sp, #100]
    6eb6:	931a      	str	r3, [sp, #104]
    6eb8:	4c35      	ldr	r4, [pc, #212]	(6f90 <.text+0x6f90>)
    6eba:	446c      	add	r4, sp
    6ebc:	6826      	ldr	r6, [r4, #0]
    6ebe:	9813      	ldr	r0, [sp, #76]
    6ec0:	4286      	cmp	r6, r0
    6ec2:	db04      	blt.n	6ece <.text+0x6ece>
    6ec4:	9917      	ldr	r1, [sp, #92]
    6ec6:	07c9      	lsls	r1, r1, #31
    6ec8:	d509      	bpl.n	6ede <.text+0x6ede>
    6eca:	3601      	adds	r6, #1
    6ecc:	e007      	b.n	6ede <.text+0x6ede>
    6ece:	2e00      	cmp	r6, #0
    6ed0:	dd01      	ble.n	6ed6 <.text+0x6ed6>
    6ed2:	2001      	movs	r0, #1
    6ed4:	e001      	b.n	6eda <.text+0x6eda>
    6ed6:	2302      	movs	r3, #2
    6ed8:	1b98      	subs	r0, r3, r6
    6eda:	9a13      	ldr	r2, [sp, #76]
    6edc:	1816      	adds	r6, r2, r0
    6ede:	9b0c      	ldr	r3, [sp, #48]
    6ee0:	2b00      	cmp	r3, #0
    6ee2:	d106      	bne.n	6ef2 <.text+0x6ef2>
    6ee4:	9c1a      	ldr	r4, [sp, #104]
    6ee6:	9813      	ldr	r0, [sp, #76]
    6ee8:	2100      	movs	r1, #0
    6eea:	9419      	str	r4, [sp, #100]
    6eec:	900e      	str	r0, [sp, #56]
    6eee:	910f      	str	r1, [sp, #60]
    6ef0:	e1ba      	b.n	7268 <.text+0x7268>
    6ef2:	4b22      	ldr	r3, [pc, #136]	(6f7c <.text+0x6f7c>)
    6ef4:	222d      	movs	r2, #45
    6ef6:	446b      	add	r3, sp
    6ef8:	701a      	strb	r2, [r3, #0]
    6efa:	2e00      	cmp	r6, #0
    6efc:	9610      	str	r6, [sp, #64]
    6efe:	da01      	bge.n	6f04 <.text+0x6f04>
    6f00:	2200      	movs	r2, #0
    6f02:	9210      	str	r2, [sp, #64]
    6f04:	9b1a      	ldr	r3, [sp, #104]
    6f06:	9c13      	ldr	r4, [sp, #76]
    6f08:	2000      	movs	r0, #0
    6f0a:	9319      	str	r3, [sp, #100]
    6f0c:	940e      	str	r4, [sp, #56]
    6f0e:	900f      	str	r0, [sp, #60]
    6f10:	e1b4      	b.n	727c <.text+0x727c>
    6f12:	9917      	ldr	r1, [sp, #92]
    6f14:	06c9      	lsls	r1, r1, #27
    6f16:	d505      	bpl.n	6f24 <.text+0x6f24>
    6f18:	682b      	ldr	r3, [r5, #0]
    6f1a:	9c08      	ldr	r4, [sp, #32]
    6f1c:	1d2a      	adds	r2, r5, #4
    6f1e:	9218      	str	r2, [sp, #96]
    6f20:	601c      	str	r4, [r3, #0]
    6f22:	e54c      	b.n	69be <_vfprintf_r+0x116>
    6f24:	9817      	ldr	r0, [sp, #92]
    6f26:	1d2b      	adds	r3, r5, #4
    6f28:	0640      	lsls	r0, r0, #25
    6f2a:	d505      	bpl.n	6f38 <.text+0x6f38>
    6f2c:	4669      	mov	r1, sp
    6f2e:	9318      	str	r3, [sp, #96]
    6f30:	8c09      	ldrh	r1, [r1, #32]
    6f32:	682b      	ldr	r3, [r5, #0]
    6f34:	8019      	strh	r1, [r3, #0]
    6f36:	e542      	b.n	69be <_vfprintf_r+0x116>
    6f38:	9318      	str	r3, [sp, #96]
    6f3a:	9a08      	ldr	r2, [sp, #32]
    6f3c:	682b      	ldr	r3, [r5, #0]
    6f3e:	601a      	str	r2, [r3, #0]
    6f40:	e53d      	b.n	69be <_vfprintf_r+0x116>
    6f42:	9c17      	ldr	r4, [sp, #92]
    6f44:	2310      	movs	r3, #16
    6f46:	431c      	orrs	r4, r3
    6f48:	9417      	str	r4, [sp, #92]
    6f4a:	9817      	ldr	r0, [sp, #92]
    6f4c:	06c0      	lsls	r0, r0, #27
    6f4e:	d503      	bpl.n	6f58 <.text+0x6f58>
    6f50:	682c      	ldr	r4, [r5, #0]
    6f52:	1d29      	adds	r1, r5, #4
    6f54:	9118      	str	r1, [sp, #96]
    6f56:	e007      	b.n	6f68 <.text+0x6f68>
    6f58:	9a17      	ldr	r2, [sp, #92]
    6f5a:	1d2b      	adds	r3, r5, #4
    6f5c:	6828      	ldr	r0, [r5, #0]
    6f5e:	0652      	lsls	r2, r2, #25
    6f60:	d504      	bpl.n	6f6c <.text+0x6f6c>
    6f62:	9318      	str	r3, [sp, #96]
    6f64:	0403      	lsls	r3, r0, #16
    6f66:	0c1c      	lsrs	r4, r3, #16
    6f68:	2100      	movs	r1, #0
    6f6a:	e0f7      	b.n	715c <.text+0x715c>
    6f6c:	1c04      	adds	r4, r0, #0
    6f6e:	9318      	str	r3, [sp, #96]
    6f70:	e7fa      	b.n	6f68 <.text+0x6f68>
	...
    6f7a:	0000      	lsls	r0, r0, #0
    6f7c:	06c7      	lsls	r7, r0, #27
    6f7e:	0000      	lsls	r0, r0, #0
    6f80:	d8ec      	bhi.n	6f5c <.text+0x6f5c>
    6f82:	0000      	lsls	r0, r0, #0
    6f84:	d8f0      	bhi.n	6f68 <.text+0x6f68>
    6f86:	0000      	lsls	r0, r0, #0
    6f88:	d8f4      	bhi.n	6f74 <.text+0x6f74>
    6f8a:	0000      	lsls	r0, r0, #0
    6f8c:	d8f8      	bhi.n	6f80 <.text+0x6f80>
    6f8e:	0000      	lsls	r0, r0, #0
    6f90:	06b4      	lsls	r4, r6, #26
    6f92:	0000      	lsls	r0, r0, #0
    6f94:	06bc      	lsls	r4, r7, #26
    6f96:	0000      	lsls	r0, r0, #0
    6f98:	06ad      	lsls	r5, r5, #26
    6f9a:	0000      	lsls	r0, r0, #0
    6f9c:	06af      	lsls	r7, r5, #26
    6f9e:	0000      	lsls	r0, r0, #0
    6fa0:	06b1      	lsls	r1, r6, #26
    6fa2:	0000      	lsls	r0, r0, #0
    6fa4:	1d2b      	adds	r3, r5, #4
    6fa6:	9817      	ldr	r0, [sp, #92]
    6fa8:	9318      	str	r3, [sp, #96]
    6faa:	49c9      	ldr	r1, [pc, #804]	(72d0 <.text+0x72d0>)
    6fac:	2302      	movs	r3, #2
    6fae:	682c      	ldr	r4, [r5, #0]
    6fb0:	4318      	orrs	r0, r3
    6fb2:	2278      	movs	r2, #120
    6fb4:	9017      	str	r0, [sp, #92]
    6fb6:	9111      	str	r1, [sp, #68]
    6fb8:	9219      	str	r2, [sp, #100]
    6fba:	e0ce      	b.n	715a <.text+0x715a>
    6fbc:	4bc5      	ldr	r3, [pc, #788]	(72d4 <.text+0x72d4>)
    6fbe:	2200      	movs	r2, #0
    6fc0:	446b      	add	r3, sp
    6fc2:	701a      	strb	r2, [r3, #0]
    6fc4:	682f      	ldr	r7, [r5, #0]
    6fc6:	1d2b      	adds	r3, r5, #4
    6fc8:	9318      	str	r3, [sp, #96]
    6fca:	2f00      	cmp	r7, #0
    6fcc:	d101      	bne.n	6fd2 <.text+0x6fd2>
    6fce:	f000 fe51 	bl	7c74 <.text+0x7c74>
    6fd2:	9c19      	ldr	r4, [sp, #100]
    6fd4:	2c53      	cmp	r4, #83
    6fd6:	d002      	beq.n	6fde <.text+0x6fde>
    6fd8:	9817      	ldr	r0, [sp, #92]
    6fda:	06c0      	lsls	r0, r0, #27
    6fdc:	d571      	bpl.n	70c2 <.text+0x70c2>
    6fde:	21d7      	movs	r1, #215
    6fe0:	00c9      	lsls	r1, r1, #3
    6fe2:	48bd      	ldr	r0, [pc, #756]	(72d8 <.text+0x72d8>)
    6fe4:	4469      	add	r1, sp
    6fe6:	600f      	str	r7, [r1, #0]
    6fe8:	2208      	movs	r2, #8
    6fea:	4468      	add	r0, sp
    6fec:	2100      	movs	r1, #0
    6fee:	f002 fe47 	bl	9c80 <memset>
    6ff2:	9a16      	ldr	r2, [sp, #88]
    6ff4:	2a00      	cmp	r2, #0
    6ff6:	db1d      	blt.n	7034 <.text+0x7034>
    6ff8:	2600      	movs	r6, #0
    6ffa:	2400      	movs	r4, #0
    6ffc:	20d7      	movs	r0, #215
    6ffe:	00c0      	lsls	r0, r0, #3
    7000:	4468      	add	r0, sp
    7002:	6803      	ldr	r3, [r0, #0]
    7004:	591a      	ldr	r2, [r3, r4]
    7006:	2a00      	cmp	r2, #0
    7008:	d02a      	beq.n	7060 <.text+0x7060>
    700a:	218e      	movs	r1, #142
    700c:	4bb2      	ldr	r3, [pc, #712]	(72d8 <.text+0x72d8>)
    700e:	00c9      	lsls	r1, r1, #3
    7010:	4469      	add	r1, sp
    7012:	9805      	ldr	r0, [sp, #20]
    7014:	446b      	add	r3, sp
    7016:	f000 fe67 	bl	7ce8 <_wcrtomb_r>
    701a:	1c41      	adds	r1, r0, #1
    701c:	d101      	bne.n	7022 <.text+0x7022>
    701e:	f000 fdfd 	bl	7c1c <.text+0x7c1c>
    7022:	9a16      	ldr	r2, [sp, #88]
    7024:	1980      	adds	r0, r0, r6
    7026:	4290      	cmp	r0, r2
    7028:	dc1a      	bgt.n	7060 <.text+0x7060>
    702a:	3404      	adds	r4, #4
    702c:	4290      	cmp	r0, r2
    702e:	d011      	beq.n	7054 <.text+0x7054>
    7030:	1c06      	adds	r6, r0, #0
    7032:	e7e3      	b.n	6ffc <.text+0x6ffc>
    7034:	4ba8      	ldr	r3, [pc, #672]	(72d8 <.text+0x72d8>)
    7036:	22d7      	movs	r2, #215
    7038:	446b      	add	r3, sp
    703a:	00d2      	lsls	r2, r2, #3
    703c:	9300      	str	r3, [sp, #0]
    703e:	9805      	ldr	r0, [sp, #20]
    7040:	2100      	movs	r1, #0
    7042:	446a      	add	r2, sp
    7044:	2300      	movs	r3, #0
    7046:	f000 fe77 	bl	7d38 <_wcsrtombs_r>
    704a:	1c06      	adds	r6, r0, #0
    704c:	1c43      	adds	r3, r0, #1
    704e:	d103      	bne.n	7058 <.text+0x7058>
    7050:	f000 fde4 	bl	7c1c <.text+0x7c1c>
    7054:	9e16      	ldr	r6, [sp, #88]
    7056:	e003      	b.n	7060 <.text+0x7060>
    7058:	21d7      	movs	r1, #215
    705a:	00c9      	lsls	r1, r1, #3
    705c:	4469      	add	r1, sp
    705e:	600f      	str	r7, [r1, #0]
    7060:	2e00      	cmp	r6, #0
    7062:	d100      	bne.n	7066 <.text+0x7066>
    7064:	e0fb      	b.n	725e <.text+0x725e>
    7066:	1c71      	adds	r1, r6, #1
    7068:	9805      	ldr	r0, [sp, #20]
    706a:	f002 fb7b 	bl	9764 <_malloc_r>
    706e:	2800      	cmp	r0, #0
    7070:	d107      	bne.n	7082 <.text+0x7082>
    7072:	9a04      	ldr	r2, [sp, #16]
    7074:	8993      	ldrh	r3, [r2, #12]
    7076:	9c04      	ldr	r4, [sp, #16]
    7078:	2240      	movs	r2, #64
    707a:	4313      	orrs	r3, r2
    707c:	81a3      	strh	r3, [r4, #12]
    707e:	f000 fded 	bl	7c5c <.text+0x7c5c>
    7082:	4c95      	ldr	r4, [pc, #596]	(72d8 <.text+0x72d8>)
    7084:	446c      	add	r4, sp
    7086:	9012      	str	r0, [sp, #72]
    7088:	2100      	movs	r1, #0
    708a:	2208      	movs	r2, #8
    708c:	1c20      	adds	r0, r4, #0
    708e:	f002 fdf7 	bl	9c80 <memset>
    7092:	22d7      	movs	r2, #215
    7094:	00d2      	lsls	r2, r2, #3
    7096:	9805      	ldr	r0, [sp, #20]
    7098:	9912      	ldr	r1, [sp, #72]
    709a:	446a      	add	r2, sp
    709c:	1c33      	adds	r3, r6, #0
    709e:	9400      	str	r4, [sp, #0]
    70a0:	f000 fe4a 	bl	7d38 <_wcsrtombs_r>
    70a4:	42b0      	cmp	r0, r6
    70a6:	d006      	beq.n	70b6 <.text+0x70b6>
    70a8:	9804      	ldr	r0, [sp, #16]
    70aa:	8983      	ldrh	r3, [r0, #12]
    70ac:	2240      	movs	r2, #64
    70ae:	4313      	orrs	r3, r2
    70b0:	8183      	strh	r3, [r0, #12]
    70b2:	f000 fdcf 	bl	7c54 <.text+0x7c54>
    70b6:	9a12      	ldr	r2, [sp, #72]
    70b8:	2300      	movs	r3, #0
    70ba:	5593      	strb	r3, [r2, r6]
    70bc:	9f12      	ldr	r7, [sp, #72]
    70be:	930f      	str	r3, [sp, #60]
    70c0:	e0d2      	b.n	7268 <.text+0x7268>
    70c2:	9b16      	ldr	r3, [sp, #88]
    70c4:	2b00      	cmp	r3, #0
    70c6:	db0d      	blt.n	70e4 <.text+0x70e4>
    70c8:	1c38      	adds	r0, r7, #0
    70ca:	2100      	movs	r1, #0
    70cc:	1c1a      	adds	r2, r3, #0
    70ce:	f002 fd9f 	bl	9c10 <memchr>
    70d2:	2800      	cmp	r0, #0
    70d4:	d100      	bne.n	70d8 <.text+0x70d8>
    70d6:	e0c4      	b.n	7262 <.text+0x7262>
    70d8:	9c16      	ldr	r4, [sp, #88]
    70da:	1bc6      	subs	r6, r0, r7
    70dc:	42a6      	cmp	r6, r4
    70de:	dd00      	ble.n	70e2 <.text+0x70e2>
    70e0:	e0bf      	b.n	7262 <.text+0x7262>
    70e2:	e0bc      	b.n	725e <.text+0x725e>
    70e4:	1c38      	adds	r0, r7, #0
    70e6:	f7ff fbc7 	bl	6878 <strlen>
    70ea:	1c06      	adds	r6, r0, #0
    70ec:	2000      	movs	r0, #0
    70ee:	e0a0      	b.n	7232 <.text+0x7232>
    70f0:	9917      	ldr	r1, [sp, #92]
    70f2:	2310      	movs	r3, #16
    70f4:	4319      	orrs	r1, r3
    70f6:	9117      	str	r1, [sp, #92]
    70f8:	9a17      	ldr	r2, [sp, #92]
    70fa:	06d2      	lsls	r2, r2, #27
    70fc:	d503      	bpl.n	7106 <.text+0x7106>
    70fe:	682c      	ldr	r4, [r5, #0]
    7100:	1d2b      	adds	r3, r5, #4
    7102:	9318      	str	r3, [sp, #96]
    7104:	e00a      	b.n	711c <.text+0x711c>
    7106:	9c17      	ldr	r4, [sp, #92]
    7108:	1d2b      	adds	r3, r5, #4
    710a:	6828      	ldr	r0, [r5, #0]
    710c:	0664      	lsls	r4, r4, #25
    710e:	d503      	bpl.n	7118 <.text+0x7118>
    7110:	9318      	str	r3, [sp, #96]
    7112:	0403      	lsls	r3, r0, #16
    7114:	0c1c      	lsrs	r4, r3, #16
    7116:	e001      	b.n	711c <.text+0x711c>
    7118:	9318      	str	r3, [sp, #96]
    711a:	1c04      	adds	r4, r0, #0
    711c:	2101      	movs	r1, #1
    711e:	e01d      	b.n	715c <.text+0x715c>
    7120:	486e      	ldr	r0, [pc, #440]	(72dc <.text+0x72dc>)
    7122:	9011      	str	r0, [sp, #68]
    7124:	9917      	ldr	r1, [sp, #92]
    7126:	06c9      	lsls	r1, r1, #27
    7128:	d503      	bpl.n	7132 <.text+0x7132>
    712a:	682c      	ldr	r4, [r5, #0]
    712c:	1d2a      	adds	r2, r5, #4
    712e:	9218      	str	r2, [sp, #96]
    7130:	e00a      	b.n	7148 <.text+0x7148>
    7132:	9c17      	ldr	r4, [sp, #92]
    7134:	1d2b      	adds	r3, r5, #4
    7136:	6828      	ldr	r0, [r5, #0]
    7138:	0664      	lsls	r4, r4, #25
    713a:	d503      	bpl.n	7144 <.text+0x7144>
    713c:	9318      	str	r3, [sp, #96]
    713e:	0403      	lsls	r3, r0, #16
    7140:	0c1c      	lsrs	r4, r3, #16
    7142:	e001      	b.n	7148 <.text+0x7148>
    7144:	9318      	str	r3, [sp, #96]
    7146:	1c04      	adds	r4, r0, #0
    7148:	9817      	ldr	r0, [sp, #92]
    714a:	07c0      	lsls	r0, r0, #31
    714c:	d505      	bpl.n	715a <.text+0x715a>
    714e:	2c00      	cmp	r4, #0
    7150:	d003      	beq.n	715a <.text+0x715a>
    7152:	9917      	ldr	r1, [sp, #92]
    7154:	2302      	movs	r3, #2
    7156:	4319      	orrs	r1, r3
    7158:	9117      	str	r1, [sp, #92]
    715a:	2102      	movs	r1, #2
    715c:	4b5d      	ldr	r3, [pc, #372]	(72d4 <.text+0x72d4>)
    715e:	2200      	movs	r2, #0
    7160:	446b      	add	r3, sp
    7162:	701a      	strb	r2, [r3, #0]
    7164:	9a16      	ldr	r2, [sp, #88]
    7166:	2a00      	cmp	r2, #0
    7168:	db03      	blt.n	7172 <.text+0x7172>
    716a:	9817      	ldr	r0, [sp, #92]
    716c:	2380      	movs	r3, #128
    716e:	4398      	bics	r0, r3
    7170:	9017      	str	r0, [sp, #92]
    7172:	2c00      	cmp	r4, #0
    7174:	d102      	bne.n	717c <.text+0x717c>
    7176:	9a16      	ldr	r2, [sp, #88]
    7178:	2a00      	cmp	r2, #0
    717a:	d044      	beq.n	7206 <.text+0x7206>
    717c:	2901      	cmp	r1, #1
    717e:	d004      	beq.n	718a <.text+0x718a>
    7180:	2901      	cmp	r1, #1
    7182:	d305      	bcc.n	7190 <.text+0x7190>
    7184:	2902      	cmp	r1, #2
    7186:	d135      	bne.n	71f4 <.text+0x71f4>
    7188:	e028      	b.n	71dc <.text+0x71dc>
    718a:	4d55      	ldr	r5, [pc, #340]	(72e0 <.text+0x72e0>)
    718c:	446d      	add	r5, sp
    718e:	e01d      	b.n	71cc <.text+0x71cc>
    7190:	4f53      	ldr	r7, [pc, #332]	(72e0 <.text+0x72e0>)
    7192:	446f      	add	r7, sp
    7194:	2307      	movs	r3, #7
    7196:	4023      	ands	r3, r4
    7198:	3f01      	subs	r7, #1
    719a:	3330      	adds	r3, #48
    719c:	08e4      	lsrs	r4, r4, #3
    719e:	703b      	strb	r3, [r7, #0]
    71a0:	2c00      	cmp	r4, #0
    71a2:	d1f7      	bne.n	7194 <.text+0x7194>
    71a4:	9c17      	ldr	r4, [sp, #92]
    71a6:	07e4      	lsls	r4, r4, #31
    71a8:	d53c      	bpl.n	7224 <.text+0x7224>
    71aa:	2b30      	cmp	r3, #48
    71ac:	d03a      	beq.n	7224 <.text+0x7224>
    71ae:	3f01      	subs	r7, #1
    71b0:	2330      	movs	r3, #48
    71b2:	e011      	b.n	71d8 <.text+0x71d8>
    71b4:	1c05      	adds	r5, r0, #0
    71b6:	210a      	movs	r1, #10
    71b8:	1c20      	adds	r0, r4, #0
    71ba:	f004 fe4f 	bl	be5c <__umodsi3>
    71be:	3030      	adds	r0, #48
    71c0:	7028      	strb	r0, [r5, #0]
    71c2:	210a      	movs	r1, #10
    71c4:	1c20      	adds	r0, r4, #0
    71c6:	f004 fdb1 	bl	bd2c <__aeabi_uidiv>
    71ca:	1c04      	adds	r4, r0, #0
    71cc:	1e68      	subs	r0, r5, #1
    71ce:	2c09      	cmp	r4, #9
    71d0:	d8f0      	bhi.n	71b4 <.text+0x71b4>
    71d2:	1c23      	adds	r3, r4, #0
    71d4:	1c07      	adds	r7, r0, #0
    71d6:	3330      	adds	r3, #48
    71d8:	703b      	strb	r3, [r7, #0]
    71da:	e023      	b.n	7224 <.text+0x7224>
    71dc:	4f40      	ldr	r7, [pc, #256]	(72e0 <.text+0x72e0>)
    71de:	446f      	add	r7, sp
    71e0:	9811      	ldr	r0, [sp, #68]
    71e2:	230f      	movs	r3, #15
    71e4:	4023      	ands	r3, r4
    71e6:	5cc3      	ldrb	r3, [r0, r3]
    71e8:	3f01      	subs	r7, #1
    71ea:	0924      	lsrs	r4, r4, #4
    71ec:	703b      	strb	r3, [r7, #0]
    71ee:	2c00      	cmp	r4, #0
    71f0:	d018      	beq.n	7224 <.text+0x7224>
    71f2:	e7f5      	b.n	71e0 <.text+0x71e0>
    71f4:	4c3b      	ldr	r4, [pc, #236]	(72e4 <.text+0x72e4>)
    71f6:	1c20      	adds	r0, r4, #0
    71f8:	f7ff fb3e 	bl	6878 <strlen>
    71fc:	9916      	ldr	r1, [sp, #88]
    71fe:	1c06      	adds	r6, r0, #0
    7200:	1c27      	adds	r7, r4, #0
    7202:	910f      	str	r1, [sp, #60]
    7204:	e030      	b.n	7268 <.text+0x7268>
    7206:	2900      	cmp	r1, #0
    7208:	d102      	bne.n	7210 <.text+0x7210>
    720a:	9a17      	ldr	r2, [sp, #92]
    720c:	07d2      	lsls	r2, r2, #31
    720e:	d401      	bmi.n	7214 <.text+0x7214>
    7210:	4f33      	ldr	r7, [pc, #204]	(72e0 <.text+0x72e0>)
    7212:	e006      	b.n	7222 <.text+0x7222>
    7214:	228e      	movs	r2, #142
    7216:	00d2      	lsls	r2, r2, #3
    7218:	4b33      	ldr	r3, [pc, #204]	(72e8 <.text+0x72e8>)
    721a:	2130      	movs	r1, #48
    721c:	446a      	add	r2, sp
    721e:	54d1      	strb	r1, [r2, r3]
    7220:	4f32      	ldr	r7, [pc, #200]	(72ec <.text+0x72ec>)
    7222:	446f      	add	r7, sp
    7224:	24d9      	movs	r4, #217
    7226:	00e4      	lsls	r4, r4, #3
    7228:	446c      	add	r4, sp
    722a:	1be3      	subs	r3, r4, r7
    722c:	1c1e      	adds	r6, r3, #0
    722e:	9816      	ldr	r0, [sp, #88]
    7230:	3efc      	subs	r6, #252
    7232:	900f      	str	r0, [sp, #60]
    7234:	e018      	b.n	7268 <.text+0x7268>
    7236:	9919      	ldr	r1, [sp, #100]
    7238:	2900      	cmp	r1, #0
    723a:	d101      	bne.n	7240 <.text+0x7240>
    723c:	f000 fcf4 	bl	7c28 <.text+0x7c28>
    7240:	218e      	movs	r1, #142
    7242:	aa19      	add	r2, sp, #100
    7244:	7812      	ldrb	r2, [r2, #0]
    7246:	00c9      	lsls	r1, r1, #3
    7248:	4b22      	ldr	r3, [pc, #136]	(72d4 <.text+0x72d4>)
    724a:	4469      	add	r1, sp
    724c:	700a      	strb	r2, [r1, #0]
    724e:	446b      	add	r3, sp
    7250:	2200      	movs	r2, #0
    7252:	2601      	movs	r6, #1
    7254:	1c0f      	adds	r7, r1, #0
    7256:	701a      	strb	r2, [r3, #0]
    7258:	9518      	str	r5, [sp, #96]
    725a:	f000 fd0d 	bl	7c78 <.text+0x7c78>
    725e:	2300      	movs	r3, #0
    7260:	e72d      	b.n	70be <.text+0x70be>
    7262:	9e16      	ldr	r6, [sp, #88]
    7264:	2400      	movs	r4, #0
    7266:	940f      	str	r4, [sp, #60]
    7268:	980f      	ldr	r0, [sp, #60]
    726a:	9610      	str	r6, [sp, #64]
    726c:	4286      	cmp	r6, r0
    726e:	da00      	bge.n	7272 <.text+0x7272>
    7270:	9010      	str	r0, [sp, #64]
    7272:	4b18      	ldr	r3, [pc, #96]	(72d4 <.text+0x72d4>)
    7274:	446b      	add	r3, sp
    7276:	781b      	ldrb	r3, [r3, #0]
    7278:	2b00      	cmp	r3, #0
    727a:	d003      	beq.n	7284 <.text+0x7284>
    727c:	9910      	ldr	r1, [sp, #64]
    727e:	3101      	adds	r1, #1
    7280:	9110      	str	r1, [sp, #64]
    7282:	e005      	b.n	7290 <.text+0x7290>
    7284:	9a17      	ldr	r2, [sp, #92]
    7286:	0792      	lsls	r2, r2, #30
    7288:	d502      	bpl.n	7290 <.text+0x7290>
    728a:	9b10      	ldr	r3, [sp, #64]
    728c:	3302      	adds	r3, #2
    728e:	9310      	str	r3, [sp, #64]
    7290:	9c17      	ldr	r4, [sp, #92]
    7292:	2384      	movs	r3, #132
    7294:	401c      	ands	r4, r3
    7296:	9406      	str	r4, [sp, #24]
    7298:	d161      	bne.n	735e <.text+0x735e>
    729a:	9809      	ldr	r0, [sp, #36]
    729c:	9910      	ldr	r1, [sp, #64]
    729e:	1a44      	subs	r4, r0, r1
    72a0:	2c00      	cmp	r4, #0
    72a2:	dc33      	bgt.n	730c <.text+0x730c>
    72a4:	e05b      	b.n	735e <.text+0x735e>
    72a6:	9a07      	ldr	r2, [sp, #28]
    72a8:	6013      	str	r3, [r2, #0]
    72aa:	2310      	movs	r3, #16
    72ac:	6053      	str	r3, [r2, #4]
    72ae:	1c03      	adds	r3, r0, #0
    72b0:	20d3      	movs	r0, #211
    72b2:	00c0      	lsls	r0, r0, #3
    72b4:	4a0e      	ldr	r2, [pc, #56]	(72f0 <.text+0x72f0>)
    72b6:	3310      	adds	r3, #16
    72b8:	4468      	add	r0, sp
    72ba:	6003      	str	r3, [r0, #0]
    72bc:	446a      	add	r2, sp
    72be:	1c6b      	adds	r3, r5, #1
    72c0:	6013      	str	r3, [r2, #0]
    72c2:	2b07      	cmp	r3, #7
    72c4:	dc16      	bgt.n	72f4 <.text+0x72f4>
    72c6:	9b07      	ldr	r3, [sp, #28]
    72c8:	3308      	adds	r3, #8
    72ca:	9307      	str	r3, [sp, #28]
    72cc:	e01d      	b.n	730a <.text+0x730a>
    72ce:	0000      	lsls	r0, r0, #0
    72d0:	d8d8      	bhi.n	7284 <.text+0x7284>
    72d2:	0000      	lsls	r0, r0, #0
    72d4:	06c7      	lsls	r7, r0, #27
    72d6:	0000      	lsls	r0, r0, #0
    72d8:	069c      	lsls	r4, r3, #26
    72da:	0000      	lsls	r0, r0, #0
    72dc:	d8fc      	bhi.n	72d8 <.text+0x72d8>
    72de:	0000      	lsls	r0, r0, #0
    72e0:	05cc      	lsls	r4, r1, #23
    72e2:	0000      	lsls	r0, r0, #0
    72e4:	d910      	bls.n	7308 <.text+0x7308>
    72e6:	0000      	lsls	r0, r0, #0
    72e8:	015b      	lsls	r3, r3, #5
    72ea:	0000      	lsls	r0, r0, #0
    72ec:	05cb      	lsls	r3, r1, #23
    72ee:	0000      	lsls	r0, r0, #0
    72f0:	0694      	lsls	r4, r2, #26
    72f2:	0000      	lsls	r0, r0, #0
    72f4:	9804      	ldr	r0, [sp, #16]
    72f6:	f7ff fac7 	bl	6888 <__sprint>
    72fa:	2800      	cmp	r0, #0
    72fc:	d001      	beq.n	7302 <.text+0x7302>
    72fe:	f000 fca6 	bl	7c4e <.text+0x7c4e>
    7302:	20c5      	movs	r0, #197
    7304:	00c0      	lsls	r0, r0, #3
    7306:	4468      	add	r0, sp
    7308:	9007      	str	r0, [sp, #28]
    730a:	3c10      	subs	r4, #16
    730c:	22d3      	movs	r2, #211
    730e:	4bce      	ldr	r3, [pc, #824]	(7648 <.text+0x7648>)
    7310:	21d2      	movs	r1, #210
    7312:	00d2      	lsls	r2, r2, #3
    7314:	446b      	add	r3, sp
    7316:	00c9      	lsls	r1, r1, #3
    7318:	446a      	add	r2, sp
    731a:	681d      	ldr	r5, [r3, #0]
    731c:	4469      	add	r1, sp
    731e:	6810      	ldr	r0, [r2, #0]
    7320:	4bca      	ldr	r3, [pc, #808]	(764c <.text+0x764c>)
    7322:	2c10      	cmp	r4, #16
    7324:	dcbf      	bgt.n	72a6 <.text+0x72a6>
    7326:	9a07      	ldr	r2, [sp, #28]
    7328:	6013      	str	r3, [r2, #0]
    732a:	6054      	str	r4, [r2, #4]
    732c:	1903      	adds	r3, r0, r4
    732e:	24d3      	movs	r4, #211
    7330:	00e4      	lsls	r4, r4, #3
    7332:	48c5      	ldr	r0, [pc, #788]	(7648 <.text+0x7648>)
    7334:	446c      	add	r4, sp
    7336:	6023      	str	r3, [r4, #0]
    7338:	4468      	add	r0, sp
    733a:	1c6b      	adds	r3, r5, #1
    733c:	6003      	str	r3, [r0, #0]
    733e:	2b07      	cmp	r3, #7
    7340:	dc02      	bgt.n	7348 <.text+0x7348>
    7342:	3208      	adds	r2, #8
    7344:	9207      	str	r2, [sp, #28]
    7346:	e00a      	b.n	735e <.text+0x735e>
    7348:	9804      	ldr	r0, [sp, #16]
    734a:	f7ff fa9d 	bl	6888 <__sprint>
    734e:	2800      	cmp	r0, #0
    7350:	d001      	beq.n	7356 <.text+0x7356>
    7352:	f000 fc7c 	bl	7c4e <.text+0x7c4e>
    7356:	21c5      	movs	r1, #197
    7358:	00c9      	lsls	r1, r1, #3
    735a:	4469      	add	r1, sp
    735c:	9107      	str	r1, [sp, #28]
    735e:	4abc      	ldr	r2, [pc, #752]	(7650 <.text+0x7650>)
    7360:	446a      	add	r2, sp
    7362:	7813      	ldrb	r3, [r2, #0]
    7364:	2b00      	cmp	r3, #0
    7366:	d023      	beq.n	73b0 <.text+0x73b0>
    7368:	9b07      	ldr	r3, [sp, #28]
    736a:	20d3      	movs	r0, #211
    736c:	9c07      	ldr	r4, [sp, #28]
    736e:	00c0      	lsls	r0, r0, #3
    7370:	4468      	add	r0, sp
    7372:	601a      	str	r2, [r3, #0]
    7374:	2301      	movs	r3, #1
    7376:	6063      	str	r3, [r4, #4]
    7378:	49b3      	ldr	r1, [pc, #716]	(7648 <.text+0x7648>)
    737a:	6803      	ldr	r3, [r0, #0]
    737c:	4469      	add	r1, sp
    737e:	3301      	adds	r3, #1
    7380:	6003      	str	r3, [r0, #0]
    7382:	680b      	ldr	r3, [r1, #0]
    7384:	3301      	adds	r3, #1
    7386:	600b      	str	r3, [r1, #0]
    7388:	2b07      	cmp	r3, #7
    738a:	dc02      	bgt.n	7392 <.text+0x7392>
    738c:	3408      	adds	r4, #8
    738e:	9407      	str	r4, [sp, #28]
    7390:	e03a      	b.n	7408 <.text+0x7408>
    7392:	21d2      	movs	r1, #210
    7394:	00c9      	lsls	r1, r1, #3
    7396:	9804      	ldr	r0, [sp, #16]
    7398:	4469      	add	r1, sp
    739a:	f7ff fa75 	bl	6888 <__sprint>
    739e:	2800      	cmp	r0, #0
    73a0:	d001      	beq.n	73a6 <.text+0x73a6>
    73a2:	f000 fc54 	bl	7c4e <.text+0x7c4e>
    73a6:	22c5      	movs	r2, #197
    73a8:	00d2      	lsls	r2, r2, #3
    73aa:	446a      	add	r2, sp
    73ac:	9207      	str	r2, [sp, #28]
    73ae:	e02b      	b.n	7408 <.text+0x7408>
    73b0:	9b17      	ldr	r3, [sp, #92]
    73b2:	2102      	movs	r1, #2
    73b4:	420b      	tst	r3, r1
    73b6:	d027      	beq.n	7408 <.text+0x7408>
    73b8:	4ba6      	ldr	r3, [pc, #664]	(7654 <.text+0x7654>)
    73ba:	2230      	movs	r2, #48
    73bc:	446b      	add	r3, sp
    73be:	701a      	strb	r2, [r3, #0]
    73c0:	ac19      	add	r4, sp, #100
    73c2:	7824      	ldrb	r4, [r4, #0]
    73c4:	705c      	strb	r4, [r3, #1]
    73c6:	9807      	ldr	r0, [sp, #28]
    73c8:	6041      	str	r1, [r0, #4]
    73ca:	21d3      	movs	r1, #211
    73cc:	00c9      	lsls	r1, r1, #3
    73ce:	4469      	add	r1, sp
    73d0:	6003      	str	r3, [r0, #0]
    73d2:	4a9d      	ldr	r2, [pc, #628]	(7648 <.text+0x7648>)
    73d4:	680b      	ldr	r3, [r1, #0]
    73d6:	446a      	add	r2, sp
    73d8:	3302      	adds	r3, #2
    73da:	600b      	str	r3, [r1, #0]
    73dc:	6813      	ldr	r3, [r2, #0]
    73de:	3301      	adds	r3, #1
    73e0:	6013      	str	r3, [r2, #0]
    73e2:	2b07      	cmp	r3, #7
    73e4:	dc02      	bgt.n	73ec <.text+0x73ec>
    73e6:	3008      	adds	r0, #8
    73e8:	9007      	str	r0, [sp, #28]
    73ea:	e00d      	b.n	7408 <.text+0x7408>
    73ec:	21d2      	movs	r1, #210
    73ee:	00c9      	lsls	r1, r1, #3
    73f0:	9804      	ldr	r0, [sp, #16]
    73f2:	4469      	add	r1, sp
    73f4:	f7ff fa48 	bl	6888 <__sprint>
    73f8:	2800      	cmp	r0, #0
    73fa:	d001      	beq.n	7400 <.text+0x7400>
    73fc:	f000 fc27 	bl	7c4e <.text+0x7c4e>
    7400:	23c5      	movs	r3, #197
    7402:	00db      	lsls	r3, r3, #3
    7404:	446b      	add	r3, sp
    7406:	9307      	str	r3, [sp, #28]
    7408:	9c06      	ldr	r4, [sp, #24]
    740a:	2c80      	cmp	r4, #128
    740c:	d14d      	bne.n	74aa <.text+0x74aa>
    740e:	9809      	ldr	r0, [sp, #36]
    7410:	9910      	ldr	r1, [sp, #64]
    7412:	1a44      	subs	r4, r0, r1
    7414:	2c00      	cmp	r4, #0
    7416:	dc20      	bgt.n	745a <.text+0x745a>
    7418:	e047      	b.n	74aa <.text+0x74aa>
    741a:	9a07      	ldr	r2, [sp, #28]
    741c:	6013      	str	r3, [r2, #0]
    741e:	2310      	movs	r3, #16
    7420:	6053      	str	r3, [r2, #4]
    7422:	1c03      	adds	r3, r0, #0
    7424:	20d3      	movs	r0, #211
    7426:	00c0      	lsls	r0, r0, #3
    7428:	4a87      	ldr	r2, [pc, #540]	(7648 <.text+0x7648>)
    742a:	3310      	adds	r3, #16
    742c:	4468      	add	r0, sp
    742e:	6003      	str	r3, [r0, #0]
    7430:	446a      	add	r2, sp
    7432:	1c6b      	adds	r3, r5, #1
    7434:	6013      	str	r3, [r2, #0]
    7436:	2b07      	cmp	r3, #7
    7438:	dc03      	bgt.n	7442 <.text+0x7442>
    743a:	9b07      	ldr	r3, [sp, #28]
    743c:	3308      	adds	r3, #8
    743e:	9307      	str	r3, [sp, #28]
    7440:	e00a      	b.n	7458 <.text+0x7458>
    7442:	9804      	ldr	r0, [sp, #16]
    7444:	f7ff fa20 	bl	6888 <__sprint>
    7448:	2800      	cmp	r0, #0
    744a:	d001      	beq.n	7450 <.text+0x7450>
    744c:	f000 fbff 	bl	7c4e <.text+0x7c4e>
    7450:	20c5      	movs	r0, #197
    7452:	00c0      	lsls	r0, r0, #3
    7454:	4468      	add	r0, sp
    7456:	9007      	str	r0, [sp, #28]
    7458:	3c10      	subs	r4, #16
    745a:	22d3      	movs	r2, #211
    745c:	4b7a      	ldr	r3, [pc, #488]	(7648 <.text+0x7648>)
    745e:	21d2      	movs	r1, #210
    7460:	00d2      	lsls	r2, r2, #3
    7462:	446b      	add	r3, sp
    7464:	00c9      	lsls	r1, r1, #3
    7466:	446a      	add	r2, sp
    7468:	681d      	ldr	r5, [r3, #0]
    746a:	4469      	add	r1, sp
    746c:	6810      	ldr	r0, [r2, #0]
    746e:	4b7a      	ldr	r3, [pc, #488]	(7658 <.text+0x7658>)
    7470:	2c10      	cmp	r4, #16
    7472:	dcd2      	bgt.n	741a <.text+0x741a>
    7474:	9a07      	ldr	r2, [sp, #28]
    7476:	6013      	str	r3, [r2, #0]
    7478:	6054      	str	r4, [r2, #4]
    747a:	1903      	adds	r3, r0, r4
    747c:	24d3      	movs	r4, #211
    747e:	00e4      	lsls	r4, r4, #3
    7480:	4871      	ldr	r0, [pc, #452]	(7648 <.text+0x7648>)
    7482:	446c      	add	r4, sp
    7484:	6023      	str	r3, [r4, #0]
    7486:	4468      	add	r0, sp
    7488:	1c6b      	adds	r3, r5, #1
    748a:	6003      	str	r3, [r0, #0]
    748c:	2b07      	cmp	r3, #7
    748e:	dc02      	bgt.n	7496 <.text+0x7496>
    7490:	3208      	adds	r2, #8
    7492:	9207      	str	r2, [sp, #28]
    7494:	e009      	b.n	74aa <.text+0x74aa>
    7496:	9804      	ldr	r0, [sp, #16]
    7498:	f7ff f9f6 	bl	6888 <__sprint>
    749c:	2800      	cmp	r0, #0
    749e:	d000      	beq.n	74a2 <.text+0x74a2>
    74a0:	e3d5      	b.n	7c4e <.text+0x7c4e>
    74a2:	21c5      	movs	r1, #197
    74a4:	00c9      	lsls	r1, r1, #3
    74a6:	4469      	add	r1, sp
    74a8:	9107      	str	r1, [sp, #28]
    74aa:	9a0f      	ldr	r2, [sp, #60]
    74ac:	1b94      	subs	r4, r2, r6
    74ae:	2c00      	cmp	r4, #0
    74b0:	dc1f      	bgt.n	74f2 <.text+0x74f2>
    74b2:	e046      	b.n	7542 <.text+0x7542>
    74b4:	9a07      	ldr	r2, [sp, #28]
    74b6:	6013      	str	r3, [r2, #0]
    74b8:	2310      	movs	r3, #16
    74ba:	6053      	str	r3, [r2, #4]
    74bc:	1c03      	adds	r3, r0, #0
    74be:	20d3      	movs	r0, #211
    74c0:	00c0      	lsls	r0, r0, #3
    74c2:	4a61      	ldr	r2, [pc, #388]	(7648 <.text+0x7648>)
    74c4:	3310      	adds	r3, #16
    74c6:	4468      	add	r0, sp
    74c8:	6003      	str	r3, [r0, #0]
    74ca:	446a      	add	r2, sp
    74cc:	1c6b      	adds	r3, r5, #1
    74ce:	6013      	str	r3, [r2, #0]
    74d0:	2b07      	cmp	r3, #7
    74d2:	dc03      	bgt.n	74dc <.text+0x74dc>
    74d4:	9b07      	ldr	r3, [sp, #28]
    74d6:	3308      	adds	r3, #8
    74d8:	9307      	str	r3, [sp, #28]
    74da:	e009      	b.n	74f0 <.text+0x74f0>
    74dc:	9804      	ldr	r0, [sp, #16]
    74de:	f7ff f9d3 	bl	6888 <__sprint>
    74e2:	2800      	cmp	r0, #0
    74e4:	d000      	beq.n	74e8 <.text+0x74e8>
    74e6:	e3b2      	b.n	7c4e <.text+0x7c4e>
    74e8:	20c5      	movs	r0, #197
    74ea:	00c0      	lsls	r0, r0, #3
    74ec:	4468      	add	r0, sp
    74ee:	9007      	str	r0, [sp, #28]
    74f0:	3c10      	subs	r4, #16
    74f2:	22d3      	movs	r2, #211
    74f4:	4b54      	ldr	r3, [pc, #336]	(7648 <.text+0x7648>)
    74f6:	21d2      	movs	r1, #210
    74f8:	00d2      	lsls	r2, r2, #3
    74fa:	446b      	add	r3, sp
    74fc:	00c9      	lsls	r1, r1, #3
    74fe:	446a      	add	r2, sp
    7500:	681d      	ldr	r5, [r3, #0]
    7502:	4469      	add	r1, sp
    7504:	6810      	ldr	r0, [r2, #0]
    7506:	4b54      	ldr	r3, [pc, #336]	(7658 <.text+0x7658>)
    7508:	2c10      	cmp	r4, #16
    750a:	dcd3      	bgt.n	74b4 <.text+0x74b4>
    750c:	9a07      	ldr	r2, [sp, #28]
    750e:	6013      	str	r3, [r2, #0]
    7510:	6054      	str	r4, [r2, #4]
    7512:	1903      	adds	r3, r0, r4
    7514:	24d3      	movs	r4, #211
    7516:	00e4      	lsls	r4, r4, #3
    7518:	484b      	ldr	r0, [pc, #300]	(7648 <.text+0x7648>)
    751a:	446c      	add	r4, sp
    751c:	6023      	str	r3, [r4, #0]
    751e:	4468      	add	r0, sp
    7520:	1c6b      	adds	r3, r5, #1
    7522:	6003      	str	r3, [r0, #0]
    7524:	2b07      	cmp	r3, #7
    7526:	dc02      	bgt.n	752e <.text+0x752e>
    7528:	3208      	adds	r2, #8
    752a:	9207      	str	r2, [sp, #28]
    752c:	e009      	b.n	7542 <.text+0x7542>
    752e:	9804      	ldr	r0, [sp, #16]
    7530:	f7ff f9aa 	bl	6888 <__sprint>
    7534:	2800      	cmp	r0, #0
    7536:	d000      	beq.n	753a <.text+0x753a>
    7538:	e389      	b.n	7c4e <.text+0x7c4e>
    753a:	21c5      	movs	r1, #197
    753c:	00c9      	lsls	r1, r1, #3
    753e:	4469      	add	r1, sp
    7540:	9107      	str	r1, [sp, #28]
    7542:	9a17      	ldr	r2, [sp, #92]
    7544:	05d2      	lsls	r2, r2, #23
    7546:	d412      	bmi.n	756e <.text+0x756e>
    7548:	24d3      	movs	r4, #211
    754a:	9b07      	ldr	r3, [sp, #28]
    754c:	00e4      	lsls	r4, r4, #3
    754e:	446c      	add	r4, sp
    7550:	601f      	str	r7, [r3, #0]
    7552:	605e      	str	r6, [r3, #4]
    7554:	483c      	ldr	r0, [pc, #240]	(7648 <.text+0x7648>)
    7556:	6823      	ldr	r3, [r4, #0]
    7558:	4468      	add	r0, sp
    755a:	199b      	adds	r3, r3, r6
    755c:	6023      	str	r3, [r4, #0]
    755e:	6803      	ldr	r3, [r0, #0]
    7560:	3301      	adds	r3, #1
    7562:	6003      	str	r3, [r0, #0]
    7564:	2b07      	cmp	r3, #7
    7566:	dd00      	ble.n	756a <.text+0x756a>
    7568:	e2e5      	b.n	7b36 <.text+0x7b36>
    756a:	9a07      	ldr	r2, [sp, #28]
    756c:	e2e1      	b.n	7b32 <.text+0x7b32>
    756e:	9919      	ldr	r1, [sp, #100]
    7570:	2965      	cmp	r1, #101
    7572:	dc00      	bgt.n	7576 <.text+0x7576>
    7574:	e21c      	b.n	79b0 <.text+0x79b0>
    7576:	9814      	ldr	r0, [sp, #80]
    7578:	9915      	ldr	r1, [sp, #84]
    757a:	4a38      	ldr	r2, [pc, #224]	(765c <.text+0x765c>)
    757c:	4b38      	ldr	r3, [pc, #224]	(7660 <.text+0x7660>)
    757e:	f005 fd73 	bl	d068 <____eqdf2_from_thumb>
    7582:	2800      	cmp	r0, #0
    7584:	d000      	beq.n	7588 <.text+0x7588>
    7586:	e09d      	b.n	76c4 <.text+0x76c4>
    7588:	4b36      	ldr	r3, [pc, #216]	(7664 <.text+0x7664>)
    758a:	9a07      	ldr	r2, [sp, #28]
    758c:	24d3      	movs	r4, #211
    758e:	00e4      	lsls	r4, r4, #3
    7590:	446c      	add	r4, sp
    7592:	6013      	str	r3, [r2, #0]
    7594:	2301      	movs	r3, #1
    7596:	6053      	str	r3, [r2, #4]
    7598:	482b      	ldr	r0, [pc, #172]	(7648 <.text+0x7648>)
    759a:	6823      	ldr	r3, [r4, #0]
    759c:	4468      	add	r0, sp
    759e:	3301      	adds	r3, #1
    75a0:	6023      	str	r3, [r4, #0]
    75a2:	6803      	ldr	r3, [r0, #0]
    75a4:	3301      	adds	r3, #1
    75a6:	6003      	str	r3, [r0, #0]
    75a8:	2b07      	cmp	r3, #7
    75aa:	dc01      	bgt.n	75b0 <.text+0x75b0>
    75ac:	3208      	adds	r2, #8
    75ae:	e00b      	b.n	75c8 <.text+0x75c8>
    75b0:	21d2      	movs	r1, #210
    75b2:	00c9      	lsls	r1, r1, #3
    75b4:	9804      	ldr	r0, [sp, #16]
    75b6:	4469      	add	r1, sp
    75b8:	f7ff f966 	bl	6888 <__sprint>
    75bc:	2800      	cmp	r0, #0
    75be:	d000      	beq.n	75c2 <.text+0x75c2>
    75c0:	e345      	b.n	7c4e <.text+0x7c4e>
    75c2:	22c5      	movs	r2, #197
    75c4:	00d2      	lsls	r2, r2, #3
    75c6:	446a      	add	r2, sp
    75c8:	4927      	ldr	r1, [pc, #156]	(7668 <.text+0x7668>)
    75ca:	4469      	add	r1, sp
    75cc:	680b      	ldr	r3, [r1, #0]
    75ce:	9c0e      	ldr	r4, [sp, #56]
    75d0:	42a3      	cmp	r3, r4
    75d2:	db03      	blt.n	75dc <.text+0x75dc>
    75d4:	9817      	ldr	r0, [sp, #92]
    75d6:	07c0      	lsls	r0, r0, #31
    75d8:	d400      	bmi.n	75dc <.text+0x75dc>
    75da:	e2b4      	b.n	7b46 <.text+0x7b46>
    75dc:	24d3      	movs	r4, #211
    75de:	00e4      	lsls	r4, r4, #3
    75e0:	2301      	movs	r3, #1
    75e2:	446c      	add	r4, sp
    75e4:	6053      	str	r3, [r2, #4]
    75e6:	4818      	ldr	r0, [pc, #96]	(7648 <.text+0x7648>)
    75e8:	6823      	ldr	r3, [r4, #0]
    75ea:	4468      	add	r0, sp
    75ec:	3301      	adds	r3, #1
    75ee:	6023      	str	r3, [r4, #0]
    75f0:	6803      	ldr	r3, [r0, #0]
    75f2:	990b      	ldr	r1, [sp, #44]
    75f4:	3301      	adds	r3, #1
    75f6:	6011      	str	r1, [r2, #0]
    75f8:	6003      	str	r3, [r0, #0]
    75fa:	2b07      	cmp	r3, #7
    75fc:	dc01      	bgt.n	7602 <.text+0x7602>
    75fe:	3208      	adds	r2, #8
    7600:	e00b      	b.n	761a <.text+0x761a>
    7602:	21d2      	movs	r1, #210
    7604:	00c9      	lsls	r1, r1, #3
    7606:	9804      	ldr	r0, [sp, #16]
    7608:	4469      	add	r1, sp
    760a:	f7ff f93d 	bl	6888 <__sprint>
    760e:	2800      	cmp	r0, #0
    7610:	d000      	beq.n	7614 <.text+0x7614>
    7612:	e31c      	b.n	7c4e <.text+0x7c4e>
    7614:	22c5      	movs	r2, #197
    7616:	00d2      	lsls	r2, r2, #3
    7618:	446a      	add	r2, sp
    761a:	9c0e      	ldr	r4, [sp, #56]
    761c:	3c01      	subs	r4, #1
    761e:	2c00      	cmp	r4, #0
    7620:	dc2e      	bgt.n	7680 <.text+0x7680>
    7622:	e290      	b.n	7b46 <.text+0x7b46>
    7624:	6013      	str	r3, [r2, #0]
    7626:	2310      	movs	r3, #16
    7628:	6053      	str	r3, [r2, #4]
    762a:	1c03      	adds	r3, r0, #0
    762c:	20d3      	movs	r0, #211
    762e:	00c0      	lsls	r0, r0, #3
    7630:	3310      	adds	r3, #16
    7632:	4468      	add	r0, sp
    7634:	6003      	str	r3, [r0, #0]
    7636:	4804      	ldr	r0, [pc, #16]	(7648 <.text+0x7648>)
    7638:	1c6b      	adds	r3, r5, #1
    763a:	4468      	add	r0, sp
    763c:	6003      	str	r3, [r0, #0]
    763e:	2b07      	cmp	r3, #7
    7640:	dc14      	bgt.n	766c <.text+0x766c>
    7642:	3208      	adds	r2, #8
    7644:	e01b      	b.n	767e <.text+0x767e>
    7646:	0000      	lsls	r0, r0, #0
    7648:	0694      	lsls	r4, r2, #26
    764a:	0000      	lsls	r0, r0, #0
    764c:	d3d0      	bcc.n	75f0 <.text+0x75f0>
    764e:	0000      	lsls	r0, r0, #0
    7650:	06c7      	lsls	r7, r0, #27
    7652:	0000      	lsls	r0, r0, #0
    7654:	06c5      	lsls	r5, r0, #27
    7656:	0000      	lsls	r0, r0, #0
    7658:	d3c0      	bcc.n	75dc <.text+0x75dc>
	...
    7662:	0000      	lsls	r0, r0, #0
    7664:	d92c      	bls.n	76c0 <.text+0x76c0>
    7666:	0000      	lsls	r0, r0, #0
    7668:	06b4      	lsls	r4, r6, #26
    766a:	0000      	lsls	r0, r0, #0
    766c:	9804      	ldr	r0, [sp, #16]
    766e:	f7ff f90b 	bl	6888 <__sprint>
    7672:	2800      	cmp	r0, #0
    7674:	d000      	beq.n	7678 <.text+0x7678>
    7676:	e2ea      	b.n	7c4e <.text+0x7c4e>
    7678:	22c5      	movs	r2, #197
    767a:	00d2      	lsls	r2, r2, #3
    767c:	446a      	add	r2, sp
    767e:	3c10      	subs	r4, #16
    7680:	23d3      	movs	r3, #211
    7682:	00db      	lsls	r3, r3, #3
    7684:	446b      	add	r3, sp
    7686:	6818      	ldr	r0, [r3, #0]
    7688:	4bda      	ldr	r3, [pc, #872]	(79f4 <.text+0x79f4>)
    768a:	21d2      	movs	r1, #210
    768c:	446b      	add	r3, sp
    768e:	00c9      	lsls	r1, r1, #3
    7690:	681d      	ldr	r5, [r3, #0]
    7692:	4469      	add	r1, sp
    7694:	4bd8      	ldr	r3, [pc, #864]	(79f8 <.text+0x79f8>)
    7696:	2c10      	cmp	r4, #16
    7698:	dcc4      	bgt.n	7624 <.text+0x7624>
    769a:	6013      	str	r3, [r2, #0]
    769c:	6054      	str	r4, [r2, #4]
    769e:	1903      	adds	r3, r0, r4
    76a0:	24d3      	movs	r4, #211
    76a2:	00e4      	lsls	r4, r4, #3
    76a4:	48d3      	ldr	r0, [pc, #844]	(79f4 <.text+0x79f4>)
    76a6:	446c      	add	r4, sp
    76a8:	6023      	str	r3, [r4, #0]
    76aa:	4468      	add	r0, sp
    76ac:	1c6b      	adds	r3, r5, #1
    76ae:	6003      	str	r3, [r0, #0]
    76b0:	2b07      	cmp	r3, #7
    76b2:	dc00      	bgt.n	76b6 <.text+0x76b6>
    76b4:	e23d      	b.n	7b32 <.text+0x7b32>
    76b6:	9804      	ldr	r0, [sp, #16]
    76b8:	f7ff f8e6 	bl	6888 <__sprint>
    76bc:	2800      	cmp	r0, #0
    76be:	d000      	beq.n	76c2 <.text+0x76c2>
    76c0:	e2c5      	b.n	7c4e <.text+0x7c4e>
    76c2:	e23d      	b.n	7b40 <.text+0x7b40>
    76c4:	49cd      	ldr	r1, [pc, #820]	(79fc <.text+0x79fc>)
    76c6:	4469      	add	r1, sp
    76c8:	680b      	ldr	r3, [r1, #0]
    76ca:	2b00      	cmp	r3, #0
    76cc:	dd00      	ble.n	76d0 <.text+0x76d0>
    76ce:	e095      	b.n	77fc <.text+0x77fc>
    76d0:	4bcb      	ldr	r3, [pc, #812]	(7a00 <.text+0x7a00>)
    76d2:	9a07      	ldr	r2, [sp, #28]
    76d4:	24d3      	movs	r4, #211
    76d6:	00e4      	lsls	r4, r4, #3
    76d8:	446c      	add	r4, sp
    76da:	6013      	str	r3, [r2, #0]
    76dc:	2301      	movs	r3, #1
    76de:	6053      	str	r3, [r2, #4]
    76e0:	48c4      	ldr	r0, [pc, #784]	(79f4 <.text+0x79f4>)
    76e2:	6823      	ldr	r3, [r4, #0]
    76e4:	4468      	add	r0, sp
    76e6:	3301      	adds	r3, #1
    76e8:	6023      	str	r3, [r4, #0]
    76ea:	6803      	ldr	r3, [r0, #0]
    76ec:	3301      	adds	r3, #1
    76ee:	6003      	str	r3, [r0, #0]
    76f0:	2b07      	cmp	r3, #7
    76f2:	dc01      	bgt.n	76f8 <.text+0x76f8>
    76f4:	3208      	adds	r2, #8
    76f6:	e00b      	b.n	7710 <.text+0x7710>
    76f8:	21d2      	movs	r1, #210
    76fa:	00c9      	lsls	r1, r1, #3
    76fc:	9804      	ldr	r0, [sp, #16]
    76fe:	4469      	add	r1, sp
    7700:	f7ff f8c2 	bl	6888 <__sprint>
    7704:	2800      	cmp	r0, #0
    7706:	d000      	beq.n	770a <.text+0x770a>
    7708:	e2a1      	b.n	7c4e <.text+0x7c4e>
    770a:	22c5      	movs	r2, #197
    770c:	00d2      	lsls	r2, r2, #3
    770e:	446a      	add	r2, sp
    7710:	49ba      	ldr	r1, [pc, #744]	(79fc <.text+0x79fc>)
    7712:	4469      	add	r1, sp
    7714:	680b      	ldr	r3, [r1, #0]
    7716:	2b00      	cmp	r3, #0
    7718:	d103      	bne.n	7722 <.text+0x7722>
    771a:	9b0e      	ldr	r3, [sp, #56]
    771c:	2b00      	cmp	r3, #0
    771e:	d100      	bne.n	7722 <.text+0x7722>
    7720:	e211      	b.n	7b46 <.text+0x7b46>
    7722:	20d3      	movs	r0, #211
    7724:	00c0      	lsls	r0, r0, #3
    7726:	2301      	movs	r3, #1
    7728:	4468      	add	r0, sp
    772a:	6053      	str	r3, [r2, #4]
    772c:	49b1      	ldr	r1, [pc, #708]	(79f4 <.text+0x79f4>)
    772e:	6803      	ldr	r3, [r0, #0]
    7730:	4469      	add	r1, sp
    7732:	3301      	adds	r3, #1
    7734:	6003      	str	r3, [r0, #0]
    7736:	680b      	ldr	r3, [r1, #0]
    7738:	9c0b      	ldr	r4, [sp, #44]
    773a:	3301      	adds	r3, #1
    773c:	6014      	str	r4, [r2, #0]
    773e:	600b      	str	r3, [r1, #0]
    7740:	2b07      	cmp	r3, #7
    7742:	dc01      	bgt.n	7748 <.text+0x7748>
    7744:	3208      	adds	r2, #8
    7746:	e00b      	b.n	7760 <.text+0x7760>
    7748:	21d2      	movs	r1, #210
    774a:	00c9      	lsls	r1, r1, #3
    774c:	9804      	ldr	r0, [sp, #16]
    774e:	4469      	add	r1, sp
    7750:	f7ff f89a 	bl	6888 <__sprint>
    7754:	2800      	cmp	r0, #0
    7756:	d000      	beq.n	775a <.text+0x775a>
    7758:	e279      	b.n	7c4e <.text+0x7c4e>
    775a:	22c5      	movs	r2, #197
    775c:	00d2      	lsls	r2, r2, #3
    775e:	446a      	add	r2, sp
    7760:	4ca6      	ldr	r4, [pc, #664]	(79fc <.text+0x79fc>)
    7762:	446c      	add	r4, sp
    7764:	6823      	ldr	r3, [r4, #0]
    7766:	425e      	negs	r6, r3
    7768:	2e00      	cmp	r6, #0
    776a:	dc1b      	bgt.n	77a4 <.text+0x77a4>
    776c:	e03d      	b.n	77ea <.text+0x77ea>
    776e:	6013      	str	r3, [r2, #0]
    7770:	2310      	movs	r3, #16
    7772:	6053      	str	r3, [r2, #4]
    7774:	1c03      	adds	r3, r0, #0
    7776:	20d3      	movs	r0, #211
    7778:	00c0      	lsls	r0, r0, #3
    777a:	4c9e      	ldr	r4, [pc, #632]	(79f4 <.text+0x79f4>)
    777c:	3310      	adds	r3, #16
    777e:	4468      	add	r0, sp
    7780:	6003      	str	r3, [r0, #0]
    7782:	446c      	add	r4, sp
    7784:	1c6b      	adds	r3, r5, #1
    7786:	6023      	str	r3, [r4, #0]
    7788:	2b07      	cmp	r3, #7
    778a:	dc01      	bgt.n	7790 <.text+0x7790>
    778c:	3208      	adds	r2, #8
    778e:	e008      	b.n	77a2 <.text+0x77a2>
    7790:	9804      	ldr	r0, [sp, #16]
    7792:	f7ff f879 	bl	6888 <__sprint>
    7796:	2800      	cmp	r0, #0
    7798:	d000      	beq.n	779c <.text+0x779c>
    779a:	e258      	b.n	7c4e <.text+0x7c4e>
    779c:	22c5      	movs	r2, #197
    779e:	00d2      	lsls	r2, r2, #3
    77a0:	446a      	add	r2, sp
    77a2:	3e10      	subs	r6, #16
    77a4:	23d3      	movs	r3, #211
    77a6:	4c93      	ldr	r4, [pc, #588]	(79f4 <.text+0x79f4>)
    77a8:	21d2      	movs	r1, #210
    77aa:	00db      	lsls	r3, r3, #3
    77ac:	446b      	add	r3, sp
    77ae:	00c9      	lsls	r1, r1, #3
    77b0:	446c      	add	r4, sp
    77b2:	6818      	ldr	r0, [r3, #0]
    77b4:	4469      	add	r1, sp
    77b6:	6825      	ldr	r5, [r4, #0]
    77b8:	4b8f      	ldr	r3, [pc, #572]	(79f8 <.text+0x79f8>)
    77ba:	2e10      	cmp	r6, #16
    77bc:	dcd7      	bgt.n	776e <.text+0x776e>
    77be:	6013      	str	r3, [r2, #0]
    77c0:	1983      	adds	r3, r0, r6
    77c2:	20d3      	movs	r0, #211
    77c4:	00c0      	lsls	r0, r0, #3
    77c6:	4468      	add	r0, sp
    77c8:	6003      	str	r3, [r0, #0]
    77ca:	1c6b      	adds	r3, r5, #1
    77cc:	6056      	str	r6, [r2, #4]
    77ce:	6023      	str	r3, [r4, #0]
    77d0:	2b07      	cmp	r3, #7
    77d2:	dc01      	bgt.n	77d8 <.text+0x77d8>
    77d4:	3208      	adds	r2, #8
    77d6:	e008      	b.n	77ea <.text+0x77ea>
    77d8:	9804      	ldr	r0, [sp, #16]
    77da:	f7ff f855 	bl	6888 <__sprint>
    77de:	2800      	cmp	r0, #0
    77e0:	d000      	beq.n	77e4 <.text+0x77e4>
    77e2:	e234      	b.n	7c4e <.text+0x7c4e>
    77e4:	22c5      	movs	r2, #197
    77e6:	00d2      	lsls	r2, r2, #3
    77e8:	446a      	add	r2, sp
    77ea:	24d3      	movs	r4, #211
    77ec:	00e4      	lsls	r4, r4, #3
    77ee:	446c      	add	r4, sp
    77f0:	990e      	ldr	r1, [sp, #56]
    77f2:	6823      	ldr	r3, [r4, #0]
    77f4:	185b      	adds	r3, r3, r1
    77f6:	6017      	str	r7, [r2, #0]
    77f8:	6051      	str	r1, [r2, #4]
    77fa:	e07b      	b.n	78f4 <.text+0x78f4>
    77fc:	22d3      	movs	r2, #211
    77fe:	00d2      	lsls	r2, r2, #3
    7800:	446a      	add	r2, sp
    7802:	4c7c      	ldr	r4, [pc, #496]	(79f4 <.text+0x79f4>)
    7804:	21d2      	movs	r1, #210
    7806:	6810      	ldr	r0, [r2, #0]
    7808:	9a0e      	ldr	r2, [sp, #56]
    780a:	00c9      	lsls	r1, r1, #3
    780c:	446c      	add	r4, sp
    780e:	4469      	add	r1, sp
    7810:	6825      	ldr	r5, [r4, #0]
    7812:	4293      	cmp	r3, r2
    7814:	db78      	blt.n	7908 <.text+0x7908>
    7816:	9b07      	ldr	r3, [sp, #28]
    7818:	24d3      	movs	r4, #211
    781a:	601f      	str	r7, [r3, #0]
    781c:	605a      	str	r2, [r3, #4]
    781e:	00e4      	lsls	r4, r4, #3
    7820:	1883      	adds	r3, r0, r2
    7822:	4874      	ldr	r0, [pc, #464]	(79f4 <.text+0x79f4>)
    7824:	446c      	add	r4, sp
    7826:	6023      	str	r3, [r4, #0]
    7828:	4468      	add	r0, sp
    782a:	1c6b      	adds	r3, r5, #1
    782c:	6003      	str	r3, [r0, #0]
    782e:	2b07      	cmp	r3, #7
    7830:	dc02      	bgt.n	7838 <.text+0x7838>
    7832:	9a07      	ldr	r2, [sp, #28]
    7834:	3208      	adds	r2, #8
    7836:	e008      	b.n	784a <.text+0x784a>
    7838:	9804      	ldr	r0, [sp, #16]
    783a:	f7ff f825 	bl	6888 <__sprint>
    783e:	2800      	cmp	r0, #0
    7840:	d000      	beq.n	7844 <.text+0x7844>
    7842:	e204      	b.n	7c4e <.text+0x7c4e>
    7844:	22c5      	movs	r2, #197
    7846:	00d2      	lsls	r2, r2, #3
    7848:	446a      	add	r2, sp
    784a:	496c      	ldr	r1, [pc, #432]	(79fc <.text+0x79fc>)
    784c:	4469      	add	r1, sp
    784e:	680b      	ldr	r3, [r1, #0]
    7850:	980e      	ldr	r0, [sp, #56]
    7852:	1a1c      	subs	r4, r3, r0
    7854:	2c00      	cmp	r4, #0
    7856:	dc1b      	bgt.n	7890 <.text+0x7890>
    7858:	e03f      	b.n	78da <.text+0x78da>
    785a:	6013      	str	r3, [r2, #0]
    785c:	2310      	movs	r3, #16
    785e:	6053      	str	r3, [r2, #4]
    7860:	1c03      	adds	r3, r0, #0
    7862:	20d3      	movs	r0, #211
    7864:	00c0      	lsls	r0, r0, #3
    7866:	3310      	adds	r3, #16
    7868:	4468      	add	r0, sp
    786a:	6003      	str	r3, [r0, #0]
    786c:	4861      	ldr	r0, [pc, #388]	(79f4 <.text+0x79f4>)
    786e:	1c6b      	adds	r3, r5, #1
    7870:	4468      	add	r0, sp
    7872:	6003      	str	r3, [r0, #0]
    7874:	2b07      	cmp	r3, #7
    7876:	dc01      	bgt.n	787c <.text+0x787c>
    7878:	3208      	adds	r2, #8
    787a:	e008      	b.n	788e <.text+0x788e>
    787c:	9804      	ldr	r0, [sp, #16]
    787e:	f7ff f803 	bl	6888 <__sprint>
    7882:	2800      	cmp	r0, #0
    7884:	d000      	beq.n	7888 <.text+0x7888>
    7886:	e1e2      	b.n	7c4e <.text+0x7c4e>
    7888:	22c5      	movs	r2, #197
    788a:	00d2      	lsls	r2, r2, #3
    788c:	446a      	add	r2, sp
    788e:	3c10      	subs	r4, #16
    7890:	23d3      	movs	r3, #211
    7892:	00db      	lsls	r3, r3, #3
    7894:	446b      	add	r3, sp
    7896:	6818      	ldr	r0, [r3, #0]
    7898:	4b56      	ldr	r3, [pc, #344]	(79f4 <.text+0x79f4>)
    789a:	21d2      	movs	r1, #210
    789c:	446b      	add	r3, sp
    789e:	00c9      	lsls	r1, r1, #3
    78a0:	681d      	ldr	r5, [r3, #0]
    78a2:	4469      	add	r1, sp
    78a4:	4b54      	ldr	r3, [pc, #336]	(79f8 <.text+0x79f8>)
    78a6:	2c10      	cmp	r4, #16
    78a8:	dcd7      	bgt.n	785a <.text+0x785a>
    78aa:	6013      	str	r3, [r2, #0]
    78ac:	6054      	str	r4, [r2, #4]
    78ae:	1903      	adds	r3, r0, r4
    78b0:	24d3      	movs	r4, #211
    78b2:	00e4      	lsls	r4, r4, #3
    78b4:	484f      	ldr	r0, [pc, #316]	(79f4 <.text+0x79f4>)
    78b6:	446c      	add	r4, sp
    78b8:	6023      	str	r3, [r4, #0]
    78ba:	4468      	add	r0, sp
    78bc:	1c6b      	adds	r3, r5, #1
    78be:	6003      	str	r3, [r0, #0]
    78c0:	2b07      	cmp	r3, #7
    78c2:	dc01      	bgt.n	78c8 <.text+0x78c8>
    78c4:	3208      	adds	r2, #8
    78c6:	e008      	b.n	78da <.text+0x78da>
    78c8:	9804      	ldr	r0, [sp, #16]
    78ca:	f7fe ffdd 	bl	6888 <__sprint>
    78ce:	2800      	cmp	r0, #0
    78d0:	d000      	beq.n	78d4 <.text+0x78d4>
    78d2:	e1bc      	b.n	7c4e <.text+0x7c4e>
    78d4:	22c5      	movs	r2, #197
    78d6:	00d2      	lsls	r2, r2, #3
    78d8:	446a      	add	r2, sp
    78da:	9b17      	ldr	r3, [sp, #92]
    78dc:	2101      	movs	r1, #1
    78de:	420b      	tst	r3, r1
    78e0:	d100      	bne.n	78e4 <.text+0x78e4>
    78e2:	e130      	b.n	7b46 <.text+0x7b46>
    78e4:	24d3      	movs	r4, #211
    78e6:	4b47      	ldr	r3, [pc, #284]	(7a04 <.text+0x7a04>)
    78e8:	00e4      	lsls	r4, r4, #3
    78ea:	446c      	add	r4, sp
    78ec:	6013      	str	r3, [r2, #0]
    78ee:	6823      	ldr	r3, [r4, #0]
    78f0:	6051      	str	r1, [r2, #4]
    78f2:	3301      	adds	r3, #1
    78f4:	483f      	ldr	r0, [pc, #252]	(79f4 <.text+0x79f4>)
    78f6:	4468      	add	r0, sp
    78f8:	6023      	str	r3, [r4, #0]
    78fa:	6803      	ldr	r3, [r0, #0]
    78fc:	3301      	adds	r3, #1
    78fe:	6003      	str	r3, [r0, #0]
    7900:	2b07      	cmp	r3, #7
    7902:	dc00      	bgt.n	7906 <.text+0x7906>
    7904:	e115      	b.n	7b32 <.text+0x7b32>
    7906:	e116      	b.n	7b36 <.text+0x7b36>
    7908:	9a07      	ldr	r2, [sp, #28]
    790a:	24d3      	movs	r4, #211
    790c:	6053      	str	r3, [r2, #4]
    790e:	00e4      	lsls	r4, r4, #3
    7910:	18c3      	adds	r3, r0, r3
    7912:	4838      	ldr	r0, [pc, #224]	(79f4 <.text+0x79f4>)
    7914:	446c      	add	r4, sp
    7916:	6023      	str	r3, [r4, #0]
    7918:	4468      	add	r0, sp
    791a:	1c6b      	adds	r3, r5, #1
    791c:	6017      	str	r7, [r2, #0]
    791e:	6003      	str	r3, [r0, #0]
    7920:	2b07      	cmp	r3, #7
    7922:	dc01      	bgt.n	7928 <.text+0x7928>
    7924:	3208      	adds	r2, #8
    7926:	e008      	b.n	793a <.text+0x793a>
    7928:	9804      	ldr	r0, [sp, #16]
    792a:	f7fe ffad 	bl	6888 <__sprint>
    792e:	2800      	cmp	r0, #0
    7930:	d000      	beq.n	7934 <.text+0x7934>
    7932:	e18c      	b.n	7c4e <.text+0x7c4e>
    7934:	22c5      	movs	r2, #197
    7936:	00d2      	lsls	r2, r2, #3
    7938:	446a      	add	r2, sp
    793a:	4b32      	ldr	r3, [pc, #200]	(7a04 <.text+0x7a04>)
    793c:	492f      	ldr	r1, [pc, #188]	(79fc <.text+0x79fc>)
    793e:	20d3      	movs	r0, #211
    7940:	00c0      	lsls	r0, r0, #3
    7942:	4469      	add	r1, sp
    7944:	4468      	add	r0, sp
    7946:	6013      	str	r3, [r2, #0]
    7948:	2301      	movs	r3, #1
    794a:	680c      	ldr	r4, [r1, #0]
    794c:	6053      	str	r3, [r2, #4]
    794e:	4929      	ldr	r1, [pc, #164]	(79f4 <.text+0x79f4>)
    7950:	6803      	ldr	r3, [r0, #0]
    7952:	4469      	add	r1, sp
    7954:	3301      	adds	r3, #1
    7956:	6003      	str	r3, [r0, #0]
    7958:	680b      	ldr	r3, [r1, #0]
    795a:	3301      	adds	r3, #1
    795c:	600b      	str	r3, [r1, #0]
    795e:	2b07      	cmp	r3, #7
    7960:	dc02      	bgt.n	7968 <.text+0x7968>
    7962:	1c11      	adds	r1, r2, #0
    7964:	3108      	adds	r1, #8
    7966:	e00b      	b.n	7980 <.text+0x7980>
    7968:	21d2      	movs	r1, #210
    796a:	00c9      	lsls	r1, r1, #3
    796c:	9804      	ldr	r0, [sp, #16]
    796e:	4469      	add	r1, sp
    7970:	f7fe ff8a 	bl	6888 <__sprint>
    7974:	2800      	cmp	r0, #0
    7976:	d000      	beq.n	797a <.text+0x797a>
    7978:	e169      	b.n	7c4e <.text+0x7c4e>
    797a:	21c5      	movs	r1, #197
    797c:	00c9      	lsls	r1, r1, #3
    797e:	4469      	add	r1, sp
    7980:	193b      	adds	r3, r7, r4
    7982:	600b      	str	r3, [r1, #0]
    7984:	4b1d      	ldr	r3, [pc, #116]	(79fc <.text+0x79fc>)
    7986:	20d3      	movs	r0, #211
    7988:	446b      	add	r3, sp
    798a:	00c0      	lsls	r0, r0, #3
    798c:	681a      	ldr	r2, [r3, #0]
    798e:	4468      	add	r0, sp
    7990:	9c0e      	ldr	r4, [sp, #56]
    7992:	6803      	ldr	r3, [r0, #0]
    7994:	1aa2      	subs	r2, r4, r2
    7996:	189b      	adds	r3, r3, r2
    7998:	604a      	str	r2, [r1, #4]
    799a:	4a16      	ldr	r2, [pc, #88]	(79f4 <.text+0x79f4>)
    799c:	446a      	add	r2, sp
    799e:	6003      	str	r3, [r0, #0]
    79a0:	6813      	ldr	r3, [r2, #0]
    79a2:	3301      	adds	r3, #1
    79a4:	6013      	str	r3, [r2, #0]
    79a6:	2b07      	cmp	r3, #7
    79a8:	dd00      	ble.n	79ac <.text+0x79ac>
    79aa:	e0c4      	b.n	7b36 <.text+0x7b36>
    79ac:	1c0a      	adds	r2, r1, #0
    79ae:	e0c0      	b.n	7b32 <.text+0x7b32>
    79b0:	9b0e      	ldr	r3, [sp, #56]
    79b2:	2b01      	cmp	r3, #1
    79b4:	dc04      	bgt.n	79c0 <.text+0x79c0>
    79b6:	9c17      	ldr	r4, [sp, #92]
    79b8:	2301      	movs	r3, #1
    79ba:	421c      	tst	r4, r3
    79bc:	d100      	bne.n	79c0 <.text+0x79c0>
    79be:	e086      	b.n	7ace <.text+0x7ace>
    79c0:	4a11      	ldr	r2, [pc, #68]	(7a08 <.text+0x7a08>)
    79c2:	783b      	ldrb	r3, [r7, #0]
    79c4:	446a      	add	r2, sp
    79c6:	7013      	strb	r3, [r2, #0]
    79c8:	232e      	movs	r3, #46
    79ca:	7053      	strb	r3, [r2, #1]
    79cc:	21d3      	movs	r1, #211
    79ce:	9807      	ldr	r0, [sp, #28]
    79d0:	00c9      	lsls	r1, r1, #3
    79d2:	2302      	movs	r3, #2
    79d4:	4469      	add	r1, sp
    79d6:	6002      	str	r2, [r0, #0]
    79d8:	6043      	str	r3, [r0, #4]
    79da:	4a06      	ldr	r2, [pc, #24]	(79f4 <.text+0x79f4>)
    79dc:	680b      	ldr	r3, [r1, #0]
    79de:	446a      	add	r2, sp
    79e0:	3302      	adds	r3, #2
    79e2:	600b      	str	r3, [r1, #0]
    79e4:	6813      	ldr	r3, [r2, #0]
    79e6:	3301      	adds	r3, #1
    79e8:	6013      	str	r3, [r2, #0]
    79ea:	2b07      	cmp	r3, #7
    79ec:	dc0e      	bgt.n	7a0c <.text+0x7a0c>
    79ee:	1c04      	adds	r4, r0, #0
    79f0:	3408      	adds	r4, #8
    79f2:	e017      	b.n	7a24 <.text+0x7a24>
    79f4:	0694      	lsls	r4, r2, #26
    79f6:	0000      	lsls	r0, r0, #0
    79f8:	d3c0      	bcc.n	797c <.text+0x797c>
    79fa:	0000      	lsls	r0, r0, #0
    79fc:	06b4      	lsls	r4, r6, #26
    79fe:	0000      	lsls	r0, r0, #0
    7a00:	d92c      	bls.n	7a5c <.text+0x7a5c>
    7a02:	0000      	lsls	r0, r0, #0
    7a04:	d930      	bls.n	7a68 <.text+0x7a68>
    7a06:	0000      	lsls	r0, r0, #0
    7a08:	06c5      	lsls	r5, r0, #27
    7a0a:	0000      	lsls	r0, r0, #0
    7a0c:	21d2      	movs	r1, #210
    7a0e:	00c9      	lsls	r1, r1, #3
    7a10:	9804      	ldr	r0, [sp, #16]
    7a12:	4469      	add	r1, sp
    7a14:	f7fe ff38 	bl	6888 <__sprint>
    7a18:	2800      	cmp	r0, #0
    7a1a:	d000      	beq.n	7a1e <.text+0x7a1e>
    7a1c:	e117      	b.n	7c4e <.text+0x7c4e>
    7a1e:	24c5      	movs	r4, #197
    7a20:	00e4      	lsls	r4, r4, #3
    7a22:	446c      	add	r4, sp
    7a24:	9814      	ldr	r0, [sp, #80]
    7a26:	9915      	ldr	r1, [sp, #84]
    7a28:	4ba0      	ldr	r3, [pc, #640]	(7cac <.text+0x7cac>)
    7a2a:	4a9f      	ldr	r2, [pc, #636]	(7ca8 <.text+0x7ca8>)
    7a2c:	f005 fb18 	bl	d060 <____nedf2_from_thumb>
    7a30:	9d0e      	ldr	r5, [sp, #56]
    7a32:	3d01      	subs	r5, #1
    7a34:	2800      	cmp	r0, #0
    7a36:	d012      	beq.n	7a5e <.text+0x7a5e>
    7a38:	20d3      	movs	r0, #211
    7a3a:	00c0      	lsls	r0, r0, #3
    7a3c:	1c7b      	adds	r3, r7, #1
    7a3e:	4468      	add	r0, sp
    7a40:	6023      	str	r3, [r4, #0]
    7a42:	990e      	ldr	r1, [sp, #56]
    7a44:	6803      	ldr	r3, [r0, #0]
    7a46:	4a9a      	ldr	r2, [pc, #616]	(7cb0 <.text+0x7cb0>)
    7a48:	18cb      	adds	r3, r1, r3
    7a4a:	3b01      	subs	r3, #1
    7a4c:	446a      	add	r2, sp
    7a4e:	6003      	str	r3, [r0, #0]
    7a50:	6813      	ldr	r3, [r2, #0]
    7a52:	3301      	adds	r3, #1
    7a54:	6065      	str	r5, [r4, #4]
    7a56:	6013      	str	r3, [r2, #0]
    7a58:	2b07      	cmp	r3, #7
    7a5a:	dd49      	ble.n	7af0 <.text+0x7af0>
    7a5c:	e04a      	b.n	7af4 <.text+0x7af4>
    7a5e:	1e2e      	subs	r6, r5, #0
    7a60:	dc1b      	bgt.n	7a9a <.text+0x7a9a>
    7a62:	e053      	b.n	7b0c <.text+0x7b0c>
    7a64:	6023      	str	r3, [r4, #0]
    7a66:	2310      	movs	r3, #16
    7a68:	6063      	str	r3, [r4, #4]
    7a6a:	1c03      	adds	r3, r0, #0
    7a6c:	20d3      	movs	r0, #211
    7a6e:	00c0      	lsls	r0, r0, #3
    7a70:	4a8f      	ldr	r2, [pc, #572]	(7cb0 <.text+0x7cb0>)
    7a72:	3310      	adds	r3, #16
    7a74:	4468      	add	r0, sp
    7a76:	6003      	str	r3, [r0, #0]
    7a78:	446a      	add	r2, sp
    7a7a:	1c6b      	adds	r3, r5, #1
    7a7c:	6013      	str	r3, [r2, #0]
    7a7e:	2b07      	cmp	r3, #7
    7a80:	dc01      	bgt.n	7a86 <.text+0x7a86>
    7a82:	3408      	adds	r4, #8
    7a84:	e008      	b.n	7a98 <.text+0x7a98>
    7a86:	9804      	ldr	r0, [sp, #16]
    7a88:	f7fe fefe 	bl	6888 <__sprint>
    7a8c:	2800      	cmp	r0, #0
    7a8e:	d000      	beq.n	7a92 <.text+0x7a92>
    7a90:	e0dd      	b.n	7c4e <.text+0x7c4e>
    7a92:	24c5      	movs	r4, #197
    7a94:	00e4      	lsls	r4, r4, #3
    7a96:	446c      	add	r4, sp
    7a98:	3e10      	subs	r6, #16
    7a9a:	23d3      	movs	r3, #211
    7a9c:	4a84      	ldr	r2, [pc, #528]	(7cb0 <.text+0x7cb0>)
    7a9e:	21d2      	movs	r1, #210
    7aa0:	00db      	lsls	r3, r3, #3
    7aa2:	446b      	add	r3, sp
    7aa4:	00c9      	lsls	r1, r1, #3
    7aa6:	446a      	add	r2, sp
    7aa8:	6818      	ldr	r0, [r3, #0]
    7aaa:	4469      	add	r1, sp
    7aac:	6815      	ldr	r5, [r2, #0]
    7aae:	4b81      	ldr	r3, [pc, #516]	(7cb4 <.text+0x7cb4>)
    7ab0:	2e10      	cmp	r6, #16
    7ab2:	dcd7      	bgt.n	7a64 <.text+0x7a64>
    7ab4:	6023      	str	r3, [r4, #0]
    7ab6:	1983      	adds	r3, r0, r6
    7ab8:	20d3      	movs	r0, #211
    7aba:	00c0      	lsls	r0, r0, #3
    7abc:	4468      	add	r0, sp
    7abe:	6003      	str	r3, [r0, #0]
    7ac0:	1c6b      	adds	r3, r5, #1
    7ac2:	6066      	str	r6, [r4, #4]
    7ac4:	6013      	str	r3, [r2, #0]
    7ac6:	2b07      	cmp	r3, #7
    7ac8:	dd12      	ble.n	7af0 <.text+0x7af0>
    7aca:	9804      	ldr	r0, [sp, #16]
    7acc:	e016      	b.n	7afc <.text+0x7afc>
    7ace:	22d3      	movs	r2, #211
    7ad0:	9907      	ldr	r1, [sp, #28]
    7ad2:	00d2      	lsls	r2, r2, #3
    7ad4:	446a      	add	r2, sp
    7ad6:	604b      	str	r3, [r1, #4]
    7ad8:	4c75      	ldr	r4, [pc, #468]	(7cb0 <.text+0x7cb0>)
    7ada:	6813      	ldr	r3, [r2, #0]
    7adc:	446c      	add	r4, sp
    7ade:	3301      	adds	r3, #1
    7ae0:	6013      	str	r3, [r2, #0]
    7ae2:	6823      	ldr	r3, [r4, #0]
    7ae4:	3301      	adds	r3, #1
    7ae6:	600f      	str	r7, [r1, #0]
    7ae8:	6023      	str	r3, [r4, #0]
    7aea:	2b07      	cmp	r3, #7
    7aec:	dc02      	bgt.n	7af4 <.text+0x7af4>
    7aee:	1c0c      	adds	r4, r1, #0
    7af0:	3408      	adds	r4, #8
    7af2:	e00b      	b.n	7b0c <.text+0x7b0c>
    7af4:	21d2      	movs	r1, #210
    7af6:	00c9      	lsls	r1, r1, #3
    7af8:	9804      	ldr	r0, [sp, #16]
    7afa:	4469      	add	r1, sp
    7afc:	f7fe fec4 	bl	6888 <__sprint>
    7b00:	2800      	cmp	r0, #0
    7b02:	d000      	beq.n	7b06 <.text+0x7b06>
    7b04:	e0a3      	b.n	7c4e <.text+0x7c4e>
    7b06:	24c5      	movs	r4, #197
    7b08:	00e4      	lsls	r4, r4, #3
    7b0a:	446c      	add	r4, sp
    7b0c:	4b6a      	ldr	r3, [pc, #424]	(7cb8 <.text+0x7cb8>)
    7b0e:	21d3      	movs	r1, #211
    7b10:	00c9      	lsls	r1, r1, #3
    7b12:	446b      	add	r3, sp
    7b14:	4469      	add	r1, sp
    7b16:	980d      	ldr	r0, [sp, #52]
    7b18:	6023      	str	r3, [r4, #0]
    7b1a:	4a65      	ldr	r2, [pc, #404]	(7cb0 <.text+0x7cb0>)
    7b1c:	680b      	ldr	r3, [r1, #0]
    7b1e:	446a      	add	r2, sp
    7b20:	181b      	adds	r3, r3, r0
    7b22:	600b      	str	r3, [r1, #0]
    7b24:	6813      	ldr	r3, [r2, #0]
    7b26:	3301      	adds	r3, #1
    7b28:	6060      	str	r0, [r4, #4]
    7b2a:	6013      	str	r3, [r2, #0]
    7b2c:	2b07      	cmp	r3, #7
    7b2e:	dc02      	bgt.n	7b36 <.text+0x7b36>
    7b30:	1c22      	adds	r2, r4, #0
    7b32:	3208      	adds	r2, #8
    7b34:	e007      	b.n	7b46 <.text+0x7b46>
    7b36:	21d2      	movs	r1, #210
    7b38:	00c9      	lsls	r1, r1, #3
    7b3a:	9804      	ldr	r0, [sp, #16]
    7b3c:	4469      	add	r1, sp
    7b3e:	e5bb      	b.n	76b8 <.text+0x76b8>
    7b40:	22c5      	movs	r2, #197
    7b42:	00d2      	lsls	r2, r2, #3
    7b44:	446a      	add	r2, sp
    7b46:	9b17      	ldr	r3, [sp, #92]
    7b48:	075b      	lsls	r3, r3, #29
    7b4a:	d53e      	bpl.n	7bca <.text+0x7bca>
    7b4c:	9809      	ldr	r0, [sp, #36]
    7b4e:	9910      	ldr	r1, [sp, #64]
    7b50:	1a44      	subs	r4, r0, r1
    7b52:	2c00      	cmp	r4, #0
    7b54:	dc1a      	bgt.n	7b8c <.text+0x7b8c>
    7b56:	e038      	b.n	7bca <.text+0x7bca>
    7b58:	6013      	str	r3, [r2, #0]
    7b5a:	2310      	movs	r3, #16
    7b5c:	6053      	str	r3, [r2, #4]
    7b5e:	1c03      	adds	r3, r0, #0
    7b60:	20d3      	movs	r0, #211
    7b62:	00c0      	lsls	r0, r0, #3
    7b64:	3310      	adds	r3, #16
    7b66:	4468      	add	r0, sp
    7b68:	6003      	str	r3, [r0, #0]
    7b6a:	4851      	ldr	r0, [pc, #324]	(7cb0 <.text+0x7cb0>)
    7b6c:	1c6b      	adds	r3, r5, #1
    7b6e:	4468      	add	r0, sp
    7b70:	6003      	str	r3, [r0, #0]
    7b72:	2b07      	cmp	r3, #7
    7b74:	dc01      	bgt.n	7b7a <.text+0x7b7a>
    7b76:	3208      	adds	r2, #8
    7b78:	e007      	b.n	7b8a <.text+0x7b8a>
    7b7a:	9804      	ldr	r0, [sp, #16]
    7b7c:	f7fe fe84 	bl	6888 <__sprint>
    7b80:	2800      	cmp	r0, #0
    7b82:	d164      	bne.n	7c4e <.text+0x7c4e>
    7b84:	22c5      	movs	r2, #197
    7b86:	00d2      	lsls	r2, r2, #3
    7b88:	446a      	add	r2, sp
    7b8a:	3c10      	subs	r4, #16
    7b8c:	23d3      	movs	r3, #211
    7b8e:	00db      	lsls	r3, r3, #3
    7b90:	446b      	add	r3, sp
    7b92:	6818      	ldr	r0, [r3, #0]
    7b94:	4b46      	ldr	r3, [pc, #280]	(7cb0 <.text+0x7cb0>)
    7b96:	21d2      	movs	r1, #210
    7b98:	446b      	add	r3, sp
    7b9a:	00c9      	lsls	r1, r1, #3
    7b9c:	681d      	ldr	r5, [r3, #0]
    7b9e:	4469      	add	r1, sp
    7ba0:	4b46      	ldr	r3, [pc, #280]	(7cbc <.text+0x7cbc>)
    7ba2:	2c10      	cmp	r4, #16
    7ba4:	dcd8      	bgt.n	7b58 <.text+0x7b58>
    7ba6:	6013      	str	r3, [r2, #0]
    7ba8:	6054      	str	r4, [r2, #4]
    7baa:	1903      	adds	r3, r0, r4
    7bac:	24d3      	movs	r4, #211
    7bae:	00e4      	lsls	r4, r4, #3
    7bb0:	483f      	ldr	r0, [pc, #252]	(7cb0 <.text+0x7cb0>)
    7bb2:	446c      	add	r4, sp
    7bb4:	6023      	str	r3, [r4, #0]
    7bb6:	4468      	add	r0, sp
    7bb8:	1c6b      	adds	r3, r5, #1
    7bba:	6003      	str	r3, [r0, #0]
    7bbc:	2b07      	cmp	r3, #7
    7bbe:	dd04      	ble.n	7bca <.text+0x7bca>
    7bc0:	9804      	ldr	r0, [sp, #16]
    7bc2:	f7fe fe61 	bl	6888 <__sprint>
    7bc6:	2800      	cmp	r0, #0
    7bc8:	d141      	bne.n	7c4e <.text+0x7c4e>
    7bca:	9b10      	ldr	r3, [sp, #64]
    7bcc:	9909      	ldr	r1, [sp, #36]
    7bce:	428b      	cmp	r3, r1
    7bd0:	da00      	bge.n	7bd4 <.text+0x7bd4>
    7bd2:	1c0b      	adds	r3, r1, #0
    7bd4:	24d3      	movs	r4, #211
    7bd6:	9a08      	ldr	r2, [sp, #32]
    7bd8:	00e4      	lsls	r4, r4, #3
    7bda:	446c      	add	r4, sp
    7bdc:	18d2      	adds	r2, r2, r3
    7bde:	6823      	ldr	r3, [r4, #0]
    7be0:	9208      	str	r2, [sp, #32]
    7be2:	2b00      	cmp	r3, #0
    7be4:	d007      	beq.n	7bf6 <.text+0x7bf6>
    7be6:	21d2      	movs	r1, #210
    7be8:	00c9      	lsls	r1, r1, #3
    7bea:	9804      	ldr	r0, [sp, #16]
    7bec:	4469      	add	r1, sp
    7bee:	f7fe fe4b 	bl	6888 <__sprint>
    7bf2:	2800      	cmp	r0, #0
    7bf4:	d12b      	bne.n	7c4e <.text+0x7c4e>
    7bf6:	482e      	ldr	r0, [pc, #184]	(7cb0 <.text+0x7cb0>)
    7bf8:	24c5      	movs	r4, #197
    7bfa:	9912      	ldr	r1, [sp, #72]
    7bfc:	2300      	movs	r3, #0
    7bfe:	4468      	add	r0, sp
    7c00:	00e4      	lsls	r4, r4, #3
    7c02:	6003      	str	r3, [r0, #0]
    7c04:	446c      	add	r4, sp
    7c06:	2900      	cmp	r1, #0
    7c08:	d101      	bne.n	7c0e <.text+0x7c0e>
    7c0a:	f7fe fed7 	bl	69bc <_vfprintf_r+0x114>
    7c0e:	9805      	ldr	r0, [sp, #20]
    7c10:	f001 faa4 	bl	915c <_free_r>
    7c14:	2200      	movs	r2, #0
    7c16:	9212      	str	r2, [sp, #72]
    7c18:	f7fe fed0 	bl	69bc <_vfprintf_r+0x114>
    7c1c:	9c04      	ldr	r4, [sp, #16]
    7c1e:	89a3      	ldrh	r3, [r4, #12]
    7c20:	2240      	movs	r2, #64
    7c22:	4313      	orrs	r3, r2
    7c24:	81a3      	strh	r3, [r4, #12]
    7c26:	e019      	b.n	7c5c <.text+0x7c5c>
    7c28:	21d3      	movs	r1, #211
    7c2a:	00c9      	lsls	r1, r1, #3
    7c2c:	4469      	add	r1, sp
    7c2e:	680b      	ldr	r3, [r1, #0]
    7c30:	2b00      	cmp	r3, #0
    7c32:	d007      	beq.n	7c44 <.text+0x7c44>
    7c34:	21d2      	movs	r1, #210
    7c36:	00c9      	lsls	r1, r1, #3
    7c38:	9804      	ldr	r0, [sp, #16]
    7c3a:	4469      	add	r1, sp
    7c3c:	f7fe fe24 	bl	6888 <__sprint>
    7c40:	2800      	cmp	r0, #0
    7c42:	d10b      	bne.n	7c5c <.text+0x7c5c>
    7c44:	4a1a      	ldr	r2, [pc, #104]	(7cb0 <.text+0x7cb0>)
    7c46:	2300      	movs	r3, #0
    7c48:	446a      	add	r2, sp
    7c4a:	6013      	str	r3, [r2, #0]
    7c4c:	e006      	b.n	7c5c <.text+0x7c5c>
    7c4e:	9b12      	ldr	r3, [sp, #72]
    7c50:	2b00      	cmp	r3, #0
    7c52:	d003      	beq.n	7c5c <.text+0x7c5c>
    7c54:	9805      	ldr	r0, [sp, #20]
    7c56:	9912      	ldr	r1, [sp, #72]
    7c58:	f001 fa80 	bl	915c <_free_r>
    7c5c:	9c04      	ldr	r4, [sp, #16]
    7c5e:	89a3      	ldrh	r3, [r4, #12]
    7c60:	0658      	lsls	r0, r3, #25
    7c62:	d51a      	bpl.n	7c9a <.text+0x7c9a>
    7c64:	2101      	movs	r1, #1
    7c66:	4249      	negs	r1, r1
    7c68:	9108      	str	r1, [sp, #32]
    7c6a:	e016      	b.n	7c9a <.text+0x7c9a>
    7c6c:	2245      	movs	r2, #69
    7c6e:	921a      	str	r2, [sp, #104]
    7c70:	f7ff f8b9 	bl	6de6 <.text+0x6de6>
    7c74:	4f12      	ldr	r7, [pc, #72]	(7cc0 <.text+0x7cc0>)
    7c76:	2606      	movs	r6, #6
    7c78:	9610      	str	r6, [sp, #64]
    7c7a:	e00a      	b.n	7c92 <.text+0x7c92>
    7c7c:	4b11      	ldr	r3, [pc, #68]	(7cc4 <.text+0x7cc4>)
    7c7e:	278e      	movs	r7, #142
    7c80:	2200      	movs	r2, #0
    7c82:	446b      	add	r3, sp
    7c84:	00ff      	lsls	r7, r7, #3
    7c86:	701a      	strb	r2, [r3, #0]
    7c88:	446f      	add	r7, sp
    7c8a:	2e00      	cmp	r6, #0
    7c8c:	9610      	str	r6, [sp, #64]
    7c8e:	da00      	bge.n	7c92 <.text+0x7c92>
    7c90:	9210      	str	r2, [sp, #64]
    7c92:	2300      	movs	r3, #0
    7c94:	930f      	str	r3, [sp, #60]
    7c96:	f7ff faf5 	bl	7284 <.text+0x7284>
    7c9a:	23d9      	movs	r3, #217
    7c9c:	9808      	ldr	r0, [sp, #32]
    7c9e:	00db      	lsls	r3, r3, #3
    7ca0:	449d      	add	sp, r3
    7ca2:	bcf0      	pop	{r4, r5, r6, r7}
    7ca4:	bc02      	pop	{r1}
    7ca6:	4708      	bx	r1
	...
    7cb0:	0694      	lsls	r4, r2, #26
    7cb2:	0000      	lsls	r0, r0, #0
    7cb4:	d3c0      	bcc.n	7c38 <.text+0x7c38>
    7cb6:	0000      	lsls	r0, r0, #0
    7cb8:	06ad      	lsls	r5, r5, #26
    7cba:	0000      	lsls	r0, r0, #0
    7cbc:	d3d0      	bcc.n	7c60 <.text+0x7c60>
    7cbe:	0000      	lsls	r0, r0, #0
    7cc0:	d934      	bls.n	7d2c <wcrtomb+0x14>
    7cc2:	0000      	lsls	r0, r0, #0
    7cc4:	06c7      	lsls	r7, r0, #27
	...

00007cc8 <vfprintf>:
    7cc8:	b530      	push	{r4, r5, lr}
    7cca:	1c13      	adds	r3, r2, #0
    7ccc:	4a05      	ldr	r2, [pc, #20]	(7ce4 <.text+0x7ce4>)
    7cce:	1c0d      	adds	r5, r1, #0
    7cd0:	1c04      	adds	r4, r0, #0
    7cd2:	1c21      	adds	r1, r4, #0
    7cd4:	6810      	ldr	r0, [r2, #0]
    7cd6:	1c2a      	adds	r2, r5, #0
    7cd8:	f7fe fde6 	bl	68a8 <_vfprintf_r>
    7cdc:	bc30      	pop	{r4, r5}
    7cde:	bc02      	pop	{r1}
    7ce0:	4708      	bx	r1
    7ce2:	0000      	lsls	r0, r0, #0
    7ce4:	001c      	lsls	r4, r3, #0
    7ce6:	4000      	ands	r0, r0

00007ce8 <_wcrtomb_r>:
    7ce8:	b530      	push	{r4, r5, lr}
    7cea:	b083      	sub	sp, #12
    7cec:	1c05      	adds	r5, r0, #0
    7cee:	1c1c      	adds	r4, r3, #0
    7cf0:	2900      	cmp	r1, #0
    7cf2:	d102      	bne.n	7cfa <_wcrtomb_r+0x12>
    7cf4:	4669      	mov	r1, sp
    7cf6:	3102      	adds	r1, #2
    7cf8:	2200      	movs	r2, #0
    7cfa:	1c23      	adds	r3, r4, #0
    7cfc:	f000 f888 	bl	7e10 <_wctomb_r>
    7d00:	1c43      	adds	r3, r0, #1
    7d02:	d105      	bne.n	7d10 <_wcrtomb_r+0x28>
    7d04:	2300      	movs	r3, #0
    7d06:	6023      	str	r3, [r4, #0]
    7d08:	238a      	movs	r3, #138
    7d0a:	2001      	movs	r0, #1
    7d0c:	602b      	str	r3, [r5, #0]
    7d0e:	4240      	negs	r0, r0
    7d10:	b003      	add	sp, #12
    7d12:	bc30      	pop	{r4, r5}
    7d14:	bc02      	pop	{r1}
    7d16:	4708      	bx	r1

00007d18 <wcrtomb>:
    7d18:	b530      	push	{r4, r5, lr}
    7d1a:	1c13      	adds	r3, r2, #0
    7d1c:	4a05      	ldr	r2, [pc, #20]	(7d34 <.text+0x7d34>)
    7d1e:	1c0d      	adds	r5, r1, #0
    7d20:	1c04      	adds	r4, r0, #0
    7d22:	1c21      	adds	r1, r4, #0
    7d24:	6810      	ldr	r0, [r2, #0]
    7d26:	1c2a      	adds	r2, r5, #0
    7d28:	f7ff ffde 	bl	7ce8 <_wcrtomb_r>
    7d2c:	bc30      	pop	{r4, r5}
    7d2e:	bc02      	pop	{r1}
    7d30:	4708      	bx	r1
    7d32:	0000      	lsls	r0, r0, #0
    7d34:	001c      	lsls	r4, r3, #0
    7d36:	4000      	ands	r0, r0

00007d38 <_wcsrtombs_r>:
    7d38:	b5f0      	push	{r4, r5, r6, r7, lr}
    7d3a:	b089      	sub	sp, #36
    7d3c:	9002      	str	r0, [sp, #8]
    7d3e:	9101      	str	r1, [sp, #4]
    7d40:	9200      	str	r2, [sp, #0]
    7d42:	1c1d      	adds	r5, r3, #0
    7d44:	9f0e      	ldr	r7, [sp, #56]
    7d46:	2900      	cmp	r1, #0
    7d48:	d101      	bne.n	7d4e <_wcsrtombs_r+0x16>
    7d4a:	2501      	movs	r5, #1
    7d4c:	426d      	negs	r5, r5
    7d4e:	9900      	ldr	r1, [sp, #0]
    7d50:	9a01      	ldr	r2, [sp, #4]
    7d52:	680e      	ldr	r6, [r1, #0]
    7d54:	2400      	movs	r4, #0
    7d56:	9203      	str	r2, [sp, #12]
    7d58:	e03f      	b.n	7dda <_wcsrtombs_r+0xa2>
    7d5a:	683b      	ldr	r3, [r7, #0]
    7d5c:	9304      	str	r3, [sp, #16]
    7d5e:	6879      	ldr	r1, [r7, #4]
    7d60:	9105      	str	r1, [sp, #20]
    7d62:	4669      	mov	r1, sp
    7d64:	6832      	ldr	r2, [r6, #0]
    7d66:	9802      	ldr	r0, [sp, #8]
    7d68:	311a      	adds	r1, #26
    7d6a:	1c3b      	adds	r3, r7, #0
    7d6c:	f7ff ffbc 	bl	7ce8 <_wcrtomb_r>
    7d70:	1c42      	adds	r2, r0, #1
    7d72:	d107      	bne.n	7d84 <_wcsrtombs_r+0x4c>
    7d74:	9902      	ldr	r1, [sp, #8]
    7d76:	238a      	movs	r3, #138
    7d78:	2401      	movs	r4, #1
    7d7a:	600b      	str	r3, [r1, #0]
    7d7c:	4264      	negs	r4, r4
    7d7e:	2300      	movs	r3, #0
    7d80:	603b      	str	r3, [r7, #0]
    7d82:	e02c      	b.n	7dde <_wcsrtombs_r+0xa6>
    7d84:	1a2b      	subs	r3, r5, r0
    7d86:	429c      	cmp	r4, r3
    7d88:	d822      	bhi.n	7dd0 <_wcsrtombs_r+0x98>
    7d8a:	42a8      	cmp	r0, r5
    7d8c:	d220      	bcs.n	7dd0 <_wcsrtombs_r+0x98>
    7d8e:	9a01      	ldr	r2, [sp, #4]
    7d90:	1824      	adds	r4, r4, r0
    7d92:	2a00      	cmp	r2, #0
    7d94:	d00f      	beq.n	7db6 <_wcsrtombs_r+0x7e>
    7d96:	2200      	movs	r2, #0
    7d98:	e007      	b.n	7daa <_wcsrtombs_r+0x72>
    7d9a:	466b      	mov	r3, sp
    7d9c:	331a      	adds	r3, #26
    7d9e:	5cd3      	ldrb	r3, [r2, r3]
    7da0:	9903      	ldr	r1, [sp, #12]
    7da2:	700b      	strb	r3, [r1, #0]
    7da4:	3101      	adds	r1, #1
    7da6:	9103      	str	r1, [sp, #12]
    7da8:	3201      	adds	r2, #1
    7daa:	4282      	cmp	r2, r0
    7dac:	dbf5      	blt.n	7d9a <_wcsrtombs_r+0x62>
    7dae:	9a00      	ldr	r2, [sp, #0]
    7db0:	6813      	ldr	r3, [r2, #0]
    7db2:	3304      	adds	r3, #4
    7db4:	6013      	str	r3, [r2, #0]
    7db6:	6833      	ldr	r3, [r6, #0]
    7db8:	2b00      	cmp	r3, #0
    7dba:	d001      	beq.n	7dc0 <_wcsrtombs_r+0x88>
    7dbc:	3604      	adds	r6, #4
    7dbe:	e00c      	b.n	7dda <_wcsrtombs_r+0xa2>
    7dc0:	9901      	ldr	r1, [sp, #4]
    7dc2:	2900      	cmp	r1, #0
    7dc4:	d001      	beq.n	7dca <_wcsrtombs_r+0x92>
    7dc6:	9a00      	ldr	r2, [sp, #0]
    7dc8:	6013      	str	r3, [r2, #0]
    7dca:	3c01      	subs	r4, #1
    7dcc:	603b      	str	r3, [r7, #0]
    7dce:	e006      	b.n	7dde <_wcsrtombs_r+0xa6>
    7dd0:	9b04      	ldr	r3, [sp, #16]
    7dd2:	9905      	ldr	r1, [sp, #20]
    7dd4:	603b      	str	r3, [r7, #0]
    7dd6:	6079      	str	r1, [r7, #4]
    7dd8:	e001      	b.n	7dde <_wcsrtombs_r+0xa6>
    7dda:	42ac      	cmp	r4, r5
    7ddc:	d3bd      	bcc.n	7d5a <_wcsrtombs_r+0x22>
    7dde:	1c20      	adds	r0, r4, #0
    7de0:	b009      	add	sp, #36
    7de2:	bcf0      	pop	{r4, r5, r6, r7}
    7de4:	bc02      	pop	{r1}
    7de6:	4708      	bx	r1

00007de8 <wcsrtombs>:
    7de8:	b570      	push	{r4, r5, r6, lr}
    7dea:	1c16      	adds	r6, r2, #0
    7dec:	4a07      	ldr	r2, [pc, #28]	(7e0c <.text+0x7e0c>)
    7dee:	1c0d      	adds	r5, r1, #0
    7df0:	b081      	sub	sp, #4
    7df2:	1c04      	adds	r4, r0, #0
    7df4:	1c21      	adds	r1, r4, #0
    7df6:	6810      	ldr	r0, [r2, #0]
    7df8:	9300      	str	r3, [sp, #0]
    7dfa:	1c2a      	adds	r2, r5, #0
    7dfc:	1c33      	adds	r3, r6, #0
    7dfe:	f7ff ff9b 	bl	7d38 <_wcsrtombs_r>
    7e02:	b001      	add	sp, #4
    7e04:	bc70      	pop	{r4, r5, r6}
    7e06:	bc02      	pop	{r1}
    7e08:	4708      	bx	r1
    7e0a:	0000      	lsls	r0, r0, #0
    7e0c:	001c      	lsls	r4, r3, #0
    7e0e:	4000      	ands	r0, r0

00007e10 <_wctomb_r>:
    7e10:	b5f0      	push	{r4, r5, r6, r7, lr}
    7e12:	4e9c      	ldr	r6, [pc, #624]	(8084 <.text+0x8084>)
    7e14:	1c30      	adds	r0, r6, #0
    7e16:	1c0d      	adds	r5, r1, #0
    7e18:	1c14      	adds	r4, r2, #0
    7e1a:	1c1f      	adds	r7, r3, #0
    7e1c:	f7fe fd2c 	bl	6878 <strlen>
    7e20:	2801      	cmp	r0, #1
    7e22:	d800      	bhi.n	7e26 <_wctomb_r+0x16>
    7e24:	e121      	b.n	806a <_wctomb_r+0x25a>
    7e26:	4998      	ldr	r1, [pc, #608]	(8088 <.text+0x8088>)
    7e28:	1c30      	adds	r0, r6, #0
    7e2a:	f002 fd63 	bl	a8f4 <strcmp>
    7e2e:	2800      	cmp	r0, #0
    7e30:	d000      	beq.n	7e34 <_wctomb_r+0x24>
    7e32:	e097      	b.n	7f64 <_wctomb_r+0x154>
    7e34:	2d00      	cmp	r5, #0
    7e36:	d100      	bne.n	7e3a <_wctomb_r+0x2a>
    7e38:	e11c      	b.n	8074 <_wctomb_r+0x264>
    7e3a:	2c7f      	cmp	r4, #127
    7e3c:	dc00      	bgt.n	7e40 <_wctomb_r+0x30>
    7e3e:	e116      	b.n	806e <_wctomb_r+0x25e>
    7e40:	1c22      	adds	r2, r4, #0
    7e42:	4b92      	ldr	r3, [pc, #584]	(808c <.text+0x808c>)
    7e44:	3a80      	subs	r2, #128
    7e46:	429a      	cmp	r2, r3
    7e48:	d80d      	bhi.n	7e66 <_wctomb_r+0x56>
    7e4a:	0562      	lsls	r2, r4, #21
    7e4c:	2340      	movs	r3, #64
    7e4e:	425b      	negs	r3, r3
    7e50:	0ed2      	lsrs	r2, r2, #27
    7e52:	431a      	orrs	r2, r3
    7e54:	702a      	strb	r2, [r5, #0]
    7e56:	233f      	movs	r3, #63
    7e58:	1c22      	adds	r2, r4, #0
    7e5a:	401a      	ands	r2, r3
    7e5c:	2380      	movs	r3, #128
    7e5e:	425b      	negs	r3, r3
    7e60:	431a      	orrs	r2, r3
    7e62:	706a      	strb	r2, [r5, #1]
    7e64:	e0a4      	b.n	7fb0 <_wctomb_r+0x1a0>
    7e66:	488a      	ldr	r0, [pc, #552]	(8090 <.text+0x8090>)
    7e68:	4b8a      	ldr	r3, [pc, #552]	(8094 <.text+0x8094>)
    7e6a:	1822      	adds	r2, r4, r0
    7e6c:	429a      	cmp	r2, r3
    7e6e:	d817      	bhi.n	7ea0 <_wctomb_r+0x90>
    7e70:	4b89      	ldr	r3, [pc, #548]	(8098 <.text+0x8098>)
    7e72:	18e2      	adds	r2, r4, r3
    7e74:	4b89      	ldr	r3, [pc, #548]	(809c <.text+0x809c>)
    7e76:	429a      	cmp	r2, r3
    7e78:	d800      	bhi.n	7e7c <_wctomb_r+0x6c>
    7e7a:	e0fd      	b.n	8078 <_wctomb_r+0x268>
    7e7c:	0422      	lsls	r2, r4, #16
    7e7e:	2320      	movs	r3, #32
    7e80:	425b      	negs	r3, r3
    7e82:	0f12      	lsrs	r2, r2, #28
    7e84:	431a      	orrs	r2, r3
    7e86:	702a      	strb	r2, [r5, #0]
    7e88:	0523      	lsls	r3, r4, #20
    7e8a:	2280      	movs	r2, #128
    7e8c:	4252      	negs	r2, r2
    7e8e:	0e9b      	lsrs	r3, r3, #26
    7e90:	4313      	orrs	r3, r2
    7e92:	706b      	strb	r3, [r5, #1]
    7e94:	233f      	movs	r3, #63
    7e96:	4023      	ands	r3, r4
    7e98:	4313      	orrs	r3, r2
    7e9a:	2003      	movs	r0, #3
    7e9c:	70ab      	strb	r3, [r5, #2]
    7e9e:	e0ed      	b.n	807c <_wctomb_r+0x26c>
    7ea0:	487f      	ldr	r0, [pc, #508]	(80a0 <.text+0x80a0>)
    7ea2:	4b80      	ldr	r3, [pc, #512]	(80a4 <.text+0x80a4>)
    7ea4:	1822      	adds	r2, r4, r0
    7ea6:	429a      	cmp	r2, r3
    7ea8:	d816      	bhi.n	7ed8 <_wctomb_r+0xc8>
    7eaa:	02e2      	lsls	r2, r4, #11
    7eac:	2310      	movs	r3, #16
    7eae:	425b      	negs	r3, r3
    7eb0:	0f52      	lsrs	r2, r2, #29
    7eb2:	431a      	orrs	r2, r3
    7eb4:	702a      	strb	r2, [r5, #0]
    7eb6:	03a3      	lsls	r3, r4, #14
    7eb8:	2280      	movs	r2, #128
    7eba:	4252      	negs	r2, r2
    7ebc:	0e9b      	lsrs	r3, r3, #26
    7ebe:	4313      	orrs	r3, r2
    7ec0:	706b      	strb	r3, [r5, #1]
    7ec2:	0523      	lsls	r3, r4, #20
    7ec4:	0e9b      	lsrs	r3, r3, #26
    7ec6:	1c69      	adds	r1, r5, #1
    7ec8:	4313      	orrs	r3, r2
    7eca:	704b      	strb	r3, [r1, #1]
    7ecc:	233f      	movs	r3, #63
    7ece:	4023      	ands	r3, r4
    7ed0:	4313      	orrs	r3, r2
    7ed2:	2004      	movs	r0, #4
    7ed4:	708b      	strb	r3, [r1, #2]
    7ed6:	e0d1      	b.n	807c <_wctomb_r+0x26c>
    7ed8:	4b73      	ldr	r3, [pc, #460]	(80a8 <.text+0x80a8>)
    7eda:	18e2      	adds	r2, r4, r3
    7edc:	4b73      	ldr	r3, [pc, #460]	(80ac <.text+0x80ac>)
    7ede:	429a      	cmp	r2, r3
    7ee0:	d81b      	bhi.n	7f1a <_wctomb_r+0x10a>
    7ee2:	01a2      	lsls	r2, r4, #6
    7ee4:	2308      	movs	r3, #8
    7ee6:	425b      	negs	r3, r3
    7ee8:	0f92      	lsrs	r2, r2, #30
    7eea:	431a      	orrs	r2, r3
    7eec:	702a      	strb	r2, [r5, #0]
    7eee:	0223      	lsls	r3, r4, #8
    7ef0:	2280      	movs	r2, #128
    7ef2:	4252      	negs	r2, r2
    7ef4:	0e9b      	lsrs	r3, r3, #26
    7ef6:	4313      	orrs	r3, r2
    7ef8:	706b      	strb	r3, [r5, #1]
    7efa:	03a3      	lsls	r3, r4, #14
    7efc:	0e9b      	lsrs	r3, r3, #26
    7efe:	1c69      	adds	r1, r5, #1
    7f00:	4313      	orrs	r3, r2
    7f02:	704b      	strb	r3, [r1, #1]
    7f04:	0523      	lsls	r3, r4, #20
    7f06:	0e9b      	lsrs	r3, r3, #26
    7f08:	1c48      	adds	r0, r1, #1
    7f0a:	4313      	orrs	r3, r2
    7f0c:	7043      	strb	r3, [r0, #1]
    7f0e:	233f      	movs	r3, #63
    7f10:	4023      	ands	r3, r4
    7f12:	4313      	orrs	r3, r2
    7f14:	7083      	strb	r3, [r0, #2]
    7f16:	2005      	movs	r0, #5
    7f18:	e0b0      	b.n	807c <_wctomb_r+0x26c>
    7f1a:	4b65      	ldr	r3, [pc, #404]	(80b0 <.text+0x80b0>)
    7f1c:	429c      	cmp	r4, r3
    7f1e:	dc00      	bgt.n	7f22 <_wctomb_r+0x112>
    7f20:	e0aa      	b.n	8078 <_wctomb_r+0x268>
    7f22:	0062      	lsls	r2, r4, #1
    7f24:	2304      	movs	r3, #4
    7f26:	425b      	negs	r3, r3
    7f28:	0fd2      	lsrs	r2, r2, #31
    7f2a:	431a      	orrs	r2, r3
    7f2c:	702a      	strb	r2, [r5, #0]
    7f2e:	00a3      	lsls	r3, r4, #2
    7f30:	2280      	movs	r2, #128
    7f32:	4252      	negs	r2, r2
    7f34:	0e9b      	lsrs	r3, r3, #26
    7f36:	4313      	orrs	r3, r2
    7f38:	706b      	strb	r3, [r5, #1]
    7f3a:	0223      	lsls	r3, r4, #8
    7f3c:	0e9b      	lsrs	r3, r3, #26
    7f3e:	1c68      	adds	r0, r5, #1
    7f40:	4313      	orrs	r3, r2
    7f42:	7043      	strb	r3, [r0, #1]
    7f44:	03a3      	lsls	r3, r4, #14
    7f46:	0e9b      	lsrs	r3, r3, #26
    7f48:	1c41      	adds	r1, r0, #1
    7f4a:	4313      	orrs	r3, r2
    7f4c:	704b      	strb	r3, [r1, #1]
    7f4e:	0523      	lsls	r3, r4, #20
    7f50:	0e9b      	lsrs	r3, r3, #26
    7f52:	1c48      	adds	r0, r1, #1
    7f54:	4313      	orrs	r3, r2
    7f56:	7043      	strb	r3, [r0, #1]
    7f58:	233f      	movs	r3, #63
    7f5a:	4023      	ands	r3, r4
    7f5c:	4313      	orrs	r3, r2
    7f5e:	7083      	strb	r3, [r0, #2]
    7f60:	2006      	movs	r0, #6
    7f62:	e08b      	b.n	807c <_wctomb_r+0x26c>
    7f64:	4953      	ldr	r1, [pc, #332]	(80b4 <.text+0x80b4>)
    7f66:	1c30      	adds	r0, r6, #0
    7f68:	f002 fcc4 	bl	a8f4 <strcmp>
    7f6c:	2800      	cmp	r0, #0
    7f6e:	d121      	bne.n	7fb4 <_wctomb_r+0x1a4>
    7f70:	2d00      	cmp	r5, #0
    7f72:	d07f      	beq.n	8074 <_wctomb_r+0x264>
    7f74:	0423      	lsls	r3, r4, #16
    7f76:	0e1a      	lsrs	r2, r3, #24
    7f78:	2a00      	cmp	r2, #0
    7f7a:	d078      	beq.n	806e <_wctomb_r+0x25e>
    7f7c:	1c13      	adds	r3, r2, #0
    7f7e:	337f      	adds	r3, #127
    7f80:	061b      	lsls	r3, r3, #24
    7f82:	0e1b      	lsrs	r3, r3, #24
    7f84:	2b1e      	cmp	r3, #30
    7f86:	d905      	bls.n	7f94 <_wctomb_r+0x184>
    7f88:	1c13      	adds	r3, r2, #0
    7f8a:	3320      	adds	r3, #32
    7f8c:	061b      	lsls	r3, r3, #24
    7f8e:	0e1b      	lsrs	r3, r3, #24
    7f90:	2b0f      	cmp	r3, #15
    7f92:	d871      	bhi.n	8078 <_wctomb_r+0x268>
    7f94:	20c0      	movs	r0, #192
    7f96:	0623      	lsls	r3, r4, #24
    7f98:	0600      	lsls	r0, r0, #24
    7f9a:	0e19      	lsrs	r1, r3, #24
    7f9c:	181b      	adds	r3, r3, r0
    7f9e:	0e1b      	lsrs	r3, r3, #24
    7fa0:	2b3e      	cmp	r3, #62
    7fa2:	d903      	bls.n	7fac <_wctomb_r+0x19c>
    7fa4:	2380      	movs	r3, #128
    7fa6:	404b      	eors	r3, r1
    7fa8:	2b7c      	cmp	r3, #124
    7faa:	d865      	bhi.n	8078 <_wctomb_r+0x268>
    7fac:	702a      	strb	r2, [r5, #0]
    7fae:	7069      	strb	r1, [r5, #1]
    7fb0:	2002      	movs	r0, #2
    7fb2:	e063      	b.n	807c <_wctomb_r+0x26c>
    7fb4:	4940      	ldr	r1, [pc, #256]	(80b8 <.text+0x80b8>)
    7fb6:	1c30      	adds	r0, r6, #0
    7fb8:	f002 fc9c 	bl	a8f4 <strcmp>
    7fbc:	2800      	cmp	r0, #0
    7fbe:	d114      	bne.n	7fea <_wctomb_r+0x1da>
    7fc0:	2d00      	cmp	r5, #0
    7fc2:	d057      	beq.n	8074 <_wctomb_r+0x264>
    7fc4:	0423      	lsls	r3, r4, #16
    7fc6:	0e1a      	lsrs	r2, r3, #24
    7fc8:	2a00      	cmp	r2, #0
    7fca:	d050      	beq.n	806e <_wctomb_r+0x25e>
    7fcc:	1c13      	adds	r3, r2, #0
    7fce:	335f      	adds	r3, #95
    7fd0:	061b      	lsls	r3, r3, #24
    7fd2:	0e1b      	lsrs	r3, r3, #24
    7fd4:	2b5d      	cmp	r3, #93
    7fd6:	d84f      	bhi.n	8078 <_wctomb_r+0x268>
    7fd8:	20be      	movs	r0, #190
    7fda:	0623      	lsls	r3, r4, #24
    7fdc:	05c0      	lsls	r0, r0, #23
    7fde:	0e19      	lsrs	r1, r3, #24
    7fe0:	181b      	adds	r3, r3, r0
    7fe2:	0e1b      	lsrs	r3, r3, #24
    7fe4:	2b5d      	cmp	r3, #93
    7fe6:	d847      	bhi.n	8078 <_wctomb_r+0x268>
    7fe8:	e7e0      	b.n	7fac <_wctomb_r+0x19c>
    7fea:	4934      	ldr	r1, [pc, #208]	(80bc <.text+0x80bc>)
    7fec:	1c30      	adds	r0, r6, #0
    7fee:	f002 fc81 	bl	a8f4 <strcmp>
    7ff2:	2800      	cmp	r0, #0
    7ff4:	d139      	bne.n	806a <_wctomb_r+0x25a>
    7ff6:	2d00      	cmp	r5, #0
    7ff8:	d03a      	beq.n	8070 <_wctomb_r+0x260>
    7ffa:	0623      	lsls	r3, r4, #24
    7ffc:	0e1e      	lsrs	r6, r3, #24
    7ffe:	0423      	lsls	r3, r4, #16
    8000:	0e19      	lsrs	r1, r3, #24
    8002:	2900      	cmp	r1, #0
    8004:	d01f      	beq.n	8046 <_wctomb_r+0x236>
    8006:	1c0b      	adds	r3, r1, #0
    8008:	3b21      	subs	r3, #33
    800a:	061b      	lsls	r3, r3, #24
    800c:	0e1b      	lsrs	r3, r3, #24
    800e:	2b5d      	cmp	r3, #93
    8010:	d832      	bhi.n	8078 <_wctomb_r+0x268>
    8012:	1c33      	adds	r3, r6, #0
    8014:	3b21      	subs	r3, #33
    8016:	061b      	lsls	r3, r3, #24
    8018:	0e1b      	lsrs	r3, r3, #24
    801a:	2b5d      	cmp	r3, #93
    801c:	d82c      	bhi.n	8078 <_wctomb_r+0x268>
    801e:	683b      	ldr	r3, [r7, #0]
    8020:	2b00      	cmp	r3, #0
    8022:	d001      	beq.n	8028 <_wctomb_r+0x218>
    8024:	2000      	movs	r0, #0
    8026:	e00a      	b.n	803e <_wctomb_r+0x22e>
    8028:	2301      	movs	r3, #1
    802a:	603b      	str	r3, [r7, #0]
    802c:	231b      	movs	r3, #27
    802e:	702b      	strb	r3, [r5, #0]
    8030:	2324      	movs	r3, #36
    8032:	706b      	strb	r3, [r5, #1]
    8034:	1c6a      	adds	r2, r5, #1
    8036:	2342      	movs	r3, #66
    8038:	7053      	strb	r3, [r2, #1]
    803a:	1c95      	adds	r5, r2, #2
    803c:	2003      	movs	r0, #3
    803e:	3002      	adds	r0, #2
    8040:	7029      	strb	r1, [r5, #0]
    8042:	706e      	strb	r6, [r5, #1]
    8044:	e01a      	b.n	807c <_wctomb_r+0x26c>
    8046:	683b      	ldr	r3, [r7, #0]
    8048:	2b00      	cmp	r3, #0
    804a:	d101      	bne.n	8050 <_wctomb_r+0x240>
    804c:	2000      	movs	r0, #0
    804e:	e009      	b.n	8064 <_wctomb_r+0x254>
    8050:	231b      	movs	r3, #27
    8052:	6039      	str	r1, [r7, #0]
    8054:	702b      	strb	r3, [r5, #0]
    8056:	2328      	movs	r3, #40
    8058:	706b      	strb	r3, [r5, #1]
    805a:	1c6a      	adds	r2, r5, #1
    805c:	2342      	movs	r3, #66
    805e:	7053      	strb	r3, [r2, #1]
    8060:	1c95      	adds	r5, r2, #2
    8062:	2003      	movs	r0, #3
    8064:	3001      	adds	r0, #1
    8066:	702e      	strb	r6, [r5, #0]
    8068:	e008      	b.n	807c <_wctomb_r+0x26c>
    806a:	2d00      	cmp	r5, #0
    806c:	d002      	beq.n	8074 <_wctomb_r+0x264>
    806e:	702c      	strb	r4, [r5, #0]
    8070:	2001      	movs	r0, #1
    8072:	e003      	b.n	807c <_wctomb_r+0x26c>
    8074:	2000      	movs	r0, #0
    8076:	e001      	b.n	807c <_wctomb_r+0x26c>
    8078:	2001      	movs	r0, #1
    807a:	4240      	negs	r0, r0
    807c:	bcf0      	pop	{r4, r5, r6, r7}
    807e:	bc02      	pop	{r1}
    8080:	4708      	bx	r1
    8082:	0000      	lsls	r0, r0, #0
    8084:	0424      	lsls	r4, r4, #16
    8086:	4000      	ands	r0, r0
    8088:	d93c      	bls.n	8104 <__swsetup+0x44>
    808a:	0000      	lsls	r0, r0, #0
    808c:	077f      	lsls	r7, r7, #29
    808e:	0000      	lsls	r0, r0, #0
    8090:	f800 ffff 	strb.w	pc, [r0, #255]!
    8094:	f7ff 0000 	undefined
    8098:	2800      	cmp	r0, #0
    809a:	ffff 07ff 	vqshl.u64	q8, <illegal reg q15.5>, #63
    809e:	0000      	lsls	r0, r0, #0
    80a0:	0000      	lsls	r0, r0, #0
    80a2:	ffff ffff 	undefined
    80a6:	001e      	lsls	r6, r3, #0
    80a8:	0000      	lsls	r0, r0, #0
    80aa:	ffe0 ffff 	undefined
    80ae:	03df      	lsls	r7, r3, #15
    80b0:	ffff 03ff 	vrsra.u64	q8, <illegal reg q15.5>, #1
    80b4:	d944      	bls.n	8140 <__swsetup+0x80>
    80b6:	0000      	lsls	r0, r0, #0
    80b8:	d94c      	bls.n	8154 <quorem>
    80ba:	0000      	lsls	r0, r0, #0
    80bc:	d954      	bls.n	8168 <quorem+0x14>
	...

000080c0 <__swsetup>:
    80c0:	b530      	push	{r4, r5, lr}
    80c2:	4b23      	ldr	r3, [pc, #140]	(8150 <.text+0x8150>)
    80c4:	1c04      	adds	r4, r0, #0
    80c6:	6818      	ldr	r0, [r3, #0]
    80c8:	2800      	cmp	r0, #0
    80ca:	d004      	beq.n	80d6 <__swsetup+0x16>
    80cc:	6b83      	ldr	r3, [r0, #56]
    80ce:	2b00      	cmp	r3, #0
    80d0:	d101      	bne.n	80d6 <__swsetup+0x16>
    80d2:	f000 ff37 	bl	8f44 <__sinit>
    80d6:	89a2      	ldrh	r2, [r4, #12]
    80d8:	2308      	movs	r3, #8
    80da:	1c15      	adds	r5, r2, #0
    80dc:	401d      	ands	r5, r3
    80de:	d11e      	bne.n	811e <__swsetup+0x5e>
    80e0:	06d3      	lsls	r3, r2, #27
    80e2:	d402      	bmi.n	80ea <__swsetup+0x2a>
    80e4:	2001      	movs	r0, #1
    80e6:	4240      	negs	r0, r0
    80e8:	e02f      	b.n	814a <__swsetup+0x8a>
    80ea:	0753      	lsls	r3, r2, #29
    80ec:	d513      	bpl.n	8116 <__swsetup+0x56>
    80ee:	6b21      	ldr	r1, [r4, #48]
    80f0:	2900      	cmp	r1, #0
    80f2:	d008      	beq.n	8106 <__swsetup+0x46>
    80f4:	1c23      	adds	r3, r4, #0
    80f6:	3340      	adds	r3, #64
    80f8:	4299      	cmp	r1, r3
    80fa:	d003      	beq.n	8104 <__swsetup+0x44>
    80fc:	4b14      	ldr	r3, [pc, #80]	(8150 <.text+0x8150>)
    80fe:	6818      	ldr	r0, [r3, #0]
    8100:	f001 f82c 	bl	915c <_free_r>
    8104:	6325      	str	r5, [r4, #48]
    8106:	89a3      	ldrh	r3, [r4, #12]
    8108:	2224      	movs	r2, #36
    810a:	4393      	bics	r3, r2
    810c:	81a3      	strh	r3, [r4, #12]
    810e:	2300      	movs	r3, #0
    8110:	6063      	str	r3, [r4, #4]
    8112:	6923      	ldr	r3, [r4, #16]
    8114:	6023      	str	r3, [r4, #0]
    8116:	89a3      	ldrh	r3, [r4, #12]
    8118:	2208      	movs	r2, #8
    811a:	4313      	orrs	r3, r2
    811c:	81a3      	strh	r3, [r4, #12]
    811e:	6923      	ldr	r3, [r4, #16]
    8120:	2b00      	cmp	r3, #0
    8122:	d102      	bne.n	812a <__swsetup+0x6a>
    8124:	1c20      	adds	r0, r4, #0
    8126:	f001 fab1 	bl	968c <__smakebuf>
    812a:	89a3      	ldrh	r3, [r4, #12]
    812c:	07da      	lsls	r2, r3, #31
    812e:	d505      	bpl.n	813c <__swsetup+0x7c>
    8130:	2300      	movs	r3, #0
    8132:	60a3      	str	r3, [r4, #8]
    8134:	6963      	ldr	r3, [r4, #20]
    8136:	425b      	negs	r3, r3
    8138:	61a3      	str	r3, [r4, #24]
    813a:	e005      	b.n	8148 <__swsetup+0x88>
    813c:	079a      	lsls	r2, r3, #30
    813e:	d501      	bpl.n	8144 <__swsetup+0x84>
    8140:	2300      	movs	r3, #0
    8142:	e000      	b.n	8146 <__swsetup+0x86>
    8144:	6963      	ldr	r3, [r4, #20]
    8146:	60a3      	str	r3, [r4, #8]
    8148:	2000      	movs	r0, #0
    814a:	bc30      	pop	{r4, r5}
    814c:	bc02      	pop	{r1}
    814e:	4708      	bx	r1
    8150:	001c      	lsls	r4, r3, #0
    8152:	4000      	ands	r0, r0

00008154 <quorem>:
    8154:	b5f0      	push	{r4, r5, r6, r7, lr}
    8156:	690a      	ldr	r2, [r1, #16]
    8158:	6903      	ldr	r3, [r0, #16]
    815a:	b089      	sub	sp, #36
    815c:	9001      	str	r0, [sp, #4]
    815e:	9100      	str	r1, [sp, #0]
    8160:	4293      	cmp	r3, r2
    8162:	da01      	bge.n	8168 <quorem+0x14>
    8164:	2000      	movs	r0, #0
    8166:	e089      	b.n	827c <quorem+0x128>
    8168:	1e56      	subs	r6, r2, #1
    816a:	9800      	ldr	r0, [sp, #0]
    816c:	9a01      	ldr	r2, [sp, #4]
    816e:	3014      	adds	r0, #20
    8170:	3214      	adds	r2, #20
    8172:	00b3      	lsls	r3, r6, #2
    8174:	18c1      	adds	r1, r0, r3
    8176:	18d3      	adds	r3, r2, r3
    8178:	9106      	str	r1, [sp, #24]
    817a:	9305      	str	r3, [sp, #20]
    817c:	6809      	ldr	r1, [r1, #0]
    817e:	681b      	ldr	r3, [r3, #0]
    8180:	9008      	str	r0, [sp, #32]
    8182:	3101      	adds	r1, #1
    8184:	1c18      	adds	r0, r3, #0
    8186:	9207      	str	r2, [sp, #28]
    8188:	9302      	str	r3, [sp, #8]
    818a:	f003 fdcf 	bl	bd2c <__aeabi_uidiv>
    818e:	9004      	str	r0, [sp, #16]
    8190:	2800      	cmp	r0, #0
    8192:	d036      	beq.n	8202 <quorem+0xae>
    8194:	2000      	movs	r0, #0
    8196:	9d07      	ldr	r5, [sp, #28]
    8198:	9f08      	ldr	r7, [sp, #32]
    819a:	9003      	str	r0, [sp, #12]
    819c:	4684      	mov	ip, r0
    819e:	cf04      	ldmia	r7!, {r2}
    81a0:	4c38      	ldr	r4, [pc, #224]	(8284 <.text+0x8284>)
    81a2:	9804      	ldr	r0, [sp, #16]
    81a4:	1c13      	adds	r3, r2, #0
    81a6:	4023      	ands	r3, r4
    81a8:	1c01      	adds	r1, r0, #0
    81aa:	4359      	muls	r1, r3
    81ac:	0c12      	lsrs	r2, r2, #16
    81ae:	4342      	muls	r2, r0
    81b0:	4461      	add	r1, ip
    81b2:	0c0b      	lsrs	r3, r1, #16
    81b4:	18d2      	adds	r2, r2, r3
    81b6:	0c13      	lsrs	r3, r2, #16
    81b8:	469c      	mov	ip, r3
    81ba:	682b      	ldr	r3, [r5, #0]
    81bc:	1c18      	adds	r0, r3, #0
    81be:	4021      	ands	r1, r4
    81c0:	4020      	ands	r0, r4
    81c2:	1a40      	subs	r0, r0, r1
    81c4:	9903      	ldr	r1, [sp, #12]
    81c6:	4022      	ands	r2, r4
    81c8:	1840      	adds	r0, r0, r1
    81ca:	0c1b      	lsrs	r3, r3, #16
    81cc:	1a9b      	subs	r3, r3, r2
    81ce:	1402      	asrs	r2, r0, #16
    81d0:	189b      	adds	r3, r3, r2
    81d2:	141a      	asrs	r2, r3, #16
    81d4:	806b      	strh	r3, [r5, #2]
    81d6:	9b06      	ldr	r3, [sp, #24]
    81d8:	8028      	strh	r0, [r5, #0]
    81da:	9203      	str	r2, [sp, #12]
    81dc:	3504      	adds	r5, #4
    81de:	429f      	cmp	r7, r3
    81e0:	d9dd      	bls.n	819e <quorem+0x4a>
    81e2:	9802      	ldr	r0, [sp, #8]
    81e4:	2800      	cmp	r0, #0
    81e6:	d001      	beq.n	81ec <quorem+0x98>
    81e8:	e00b      	b.n	8202 <quorem+0xae>
    81ea:	3e01      	subs	r6, #1
    81ec:	9905      	ldr	r1, [sp, #20]
    81ee:	9a07      	ldr	r2, [sp, #28]
    81f0:	3904      	subs	r1, #4
    81f2:	9105      	str	r1, [sp, #20]
    81f4:	4291      	cmp	r1, r2
    81f6:	d902      	bls.n	81fe <quorem+0xaa>
    81f8:	680b      	ldr	r3, [r1, #0]
    81fa:	2b00      	cmp	r3, #0
    81fc:	d0f5      	beq.n	81ea <quorem+0x96>
    81fe:	9b01      	ldr	r3, [sp, #4]
    8200:	611e      	str	r6, [r3, #16]
    8202:	9801      	ldr	r0, [sp, #4]
    8204:	9900      	ldr	r1, [sp, #0]
    8206:	f001 fdad 	bl	9d64 <__mcmp>
    820a:	2800      	cmp	r0, #0
    820c:	db35      	blt.n	827a <quorem+0x126>
    820e:	9804      	ldr	r0, [sp, #16]
    8210:	3001      	adds	r0, #1
    8212:	2700      	movs	r7, #0
    8214:	9004      	str	r0, [sp, #16]
    8216:	9d07      	ldr	r5, [sp, #28]
    8218:	46bc      	mov	ip, r7
    821a:	9908      	ldr	r1, [sp, #32]
    821c:	c904      	ldmia	r1!, {r2}
    821e:	4c19      	ldr	r4, [pc, #100]	(8284 <.text+0x8284>)
    8220:	9108      	str	r1, [sp, #32]
    8222:	1c11      	adds	r1, r2, #0
    8224:	4021      	ands	r1, r4
    8226:	4461      	add	r1, ip
    8228:	0c0b      	lsrs	r3, r1, #16
    822a:	0c12      	lsrs	r2, r2, #16
    822c:	18d2      	adds	r2, r2, r3
    822e:	0c13      	lsrs	r3, r2, #16
    8230:	469c      	mov	ip, r3
    8232:	682b      	ldr	r3, [r5, #0]
    8234:	1c18      	adds	r0, r3, #0
    8236:	4021      	ands	r1, r4
    8238:	4020      	ands	r0, r4
    823a:	1a40      	subs	r0, r0, r1
    823c:	19c0      	adds	r0, r0, r7
    823e:	4022      	ands	r2, r4
    8240:	0c1b      	lsrs	r3, r3, #16
    8242:	1a9b      	subs	r3, r3, r2
    8244:	8028      	strh	r0, [r5, #0]
    8246:	1402      	asrs	r2, r0, #16
    8248:	9906      	ldr	r1, [sp, #24]
    824a:	9808      	ldr	r0, [sp, #32]
    824c:	189b      	adds	r3, r3, r2
    824e:	806b      	strh	r3, [r5, #2]
    8250:	141f      	asrs	r7, r3, #16
    8252:	3504      	adds	r5, #4
    8254:	4288      	cmp	r0, r1
    8256:	d9e0      	bls.n	821a <quorem+0xc6>
    8258:	9807      	ldr	r0, [sp, #28]
    825a:	00b3      	lsls	r3, r6, #2
    825c:	18c2      	adds	r2, r0, r3
    825e:	6813      	ldr	r3, [r2, #0]
    8260:	2b00      	cmp	r3, #0
    8262:	d001      	beq.n	8268 <quorem+0x114>
    8264:	e009      	b.n	827a <quorem+0x126>
    8266:	3e01      	subs	r6, #1
    8268:	9907      	ldr	r1, [sp, #28]
    826a:	3a04      	subs	r2, #4
    826c:	428a      	cmp	r2, r1
    826e:	d902      	bls.n	8276 <quorem+0x122>
    8270:	6813      	ldr	r3, [r2, #0]
    8272:	2b00      	cmp	r3, #0
    8274:	d0f7      	beq.n	8266 <quorem+0x112>
    8276:	9a01      	ldr	r2, [sp, #4]
    8278:	6116      	str	r6, [r2, #16]
    827a:	9804      	ldr	r0, [sp, #16]
    827c:	b009      	add	sp, #36
    827e:	bcf0      	pop	{r4, r5, r6, r7}
    8280:	bc02      	pop	{r1}
    8282:	4708      	bx	r1
    8284:	ffff 0000 	vaddl.u<illegal width 64>	q8, d15, d0

00008288 <_dtoa_r>:
    8288:	b5f0      	push	{r4, r5, r6, r7, lr}
    828a:	b0a4      	sub	sp, #144
    828c:	9103      	str	r1, [sp, #12]
    828e:	9204      	str	r2, [sp, #16]
    8290:	6c01      	ldr	r1, [r0, #64]
    8292:	9002      	str	r0, [sp, #8]
    8294:	9301      	str	r3, [sp, #4]
    8296:	9c2b      	ldr	r4, [sp, #172]
    8298:	2900      	cmp	r1, #0
    829a:	d00a      	beq.n	82b2 <_dtoa_r+0x2a>
    829c:	6c43      	ldr	r3, [r0, #68]
    829e:	604b      	str	r3, [r1, #4]
    82a0:	6c42      	ldr	r2, [r0, #68]
    82a2:	2301      	movs	r3, #1
    82a4:	4093      	lsls	r3, r2
    82a6:	608b      	str	r3, [r1, #8]
    82a8:	f001 fcf6 	bl	9c98 <_Bfree>
    82ac:	9802      	ldr	r0, [sp, #8]
    82ae:	2300      	movs	r3, #0
    82b0:	6403      	str	r3, [r0, #64]
    82b2:	9a03      	ldr	r2, [sp, #12]
    82b4:	2a00      	cmp	r2, #0
    82b6:	da05      	bge.n	82c4 <_dtoa_r+0x3c>
    82b8:	2301      	movs	r3, #1
    82ba:	6023      	str	r3, [r4, #0]
    82bc:	4bcd      	ldr	r3, [pc, #820]	(85f4 <.text+0x85f4>)
    82be:	401a      	ands	r2, r3
    82c0:	9203      	str	r2, [sp, #12]
    82c2:	e001      	b.n	82c8 <_dtoa_r+0x40>
    82c4:	2300      	movs	r3, #0
    82c6:	6023      	str	r3, [r4, #0]
    82c8:	9e03      	ldr	r6, [sp, #12]
    82ca:	4acb      	ldr	r2, [pc, #812]	(85f8 <.text+0x85f8>)
    82cc:	1c33      	adds	r3, r6, #0
    82ce:	4013      	ands	r3, r2
    82d0:	4293      	cmp	r3, r2
    82d2:	d119      	bne.n	8308 <_dtoa_r+0x80>
    82d4:	4bc9      	ldr	r3, [pc, #804]	(85fc <.text+0x85fc>)
    82d6:	992a      	ldr	r1, [sp, #168]
    82d8:	9a04      	ldr	r2, [sp, #16]
    82da:	600b      	str	r3, [r1, #0]
    82dc:	2a00      	cmp	r2, #0
    82de:	d104      	bne.n	82ea <_dtoa_r+0x62>
    82e0:	4bc7      	ldr	r3, [pc, #796]	(8600 <.text+0x8600>)
    82e2:	421e      	tst	r6, r3
    82e4:	d101      	bne.n	82ea <_dtoa_r+0x62>
    82e6:	48c7      	ldr	r0, [pc, #796]	(8604 <.text+0x8604>)
    82e8:	e000      	b.n	82ec <_dtoa_r+0x64>
    82ea:	48c7      	ldr	r0, [pc, #796]	(8608 <.text+0x8608>)
    82ec:	9b2c      	ldr	r3, [sp, #176]
    82ee:	2b00      	cmp	r3, #0
    82f0:	d101      	bne.n	82f6 <_dtoa_r+0x6e>
    82f2:	f000 fdc3 	bl	8e7c <.text+0x8e7c>
    82f6:	78c3      	ldrb	r3, [r0, #3]
    82f8:	1cc2      	adds	r2, r0, #3
    82fa:	2b00      	cmp	r3, #0
    82fc:	d000      	beq.n	8300 <_dtoa_r+0x78>
    82fe:	3205      	adds	r2, #5
    8300:	9c2c      	ldr	r4, [sp, #176]
    8302:	6022      	str	r2, [r4, #0]
    8304:	f000 fdba 	bl	8e7c <.text+0x8e7c>
    8308:	9803      	ldr	r0, [sp, #12]
    830a:	9904      	ldr	r1, [sp, #16]
    830c:	4abf      	ldr	r2, [pc, #764]	(860c <.text+0x860c>)
    830e:	4bc0      	ldr	r3, [pc, #768]	(8610 <.text+0x8610>)
    8310:	9005      	str	r0, [sp, #20]
    8312:	9106      	str	r1, [sp, #24]
    8314:	f004 fea4 	bl	d060 <____nedf2_from_thumb>
    8318:	2800      	cmp	r0, #0
    831a:	d10e      	bne.n	833a <_dtoa_r+0xb2>
    831c:	992a      	ldr	r1, [sp, #168]
    831e:	9a2c      	ldr	r2, [sp, #176]
    8320:	2301      	movs	r3, #1
    8322:	600b      	str	r3, [r1, #0]
    8324:	2a00      	cmp	r2, #0
    8326:	d102      	bne.n	832e <_dtoa_r+0xa6>
    8328:	48ba      	ldr	r0, [pc, #744]	(8614 <.text+0x8614>)
    832a:	f000 fda7 	bl	8e7c <.text+0x8e7c>
    832e:	4bba      	ldr	r3, [pc, #744]	(8618 <.text+0x8618>)
    8330:	9c2c      	ldr	r4, [sp, #176]
    8332:	1e58      	subs	r0, r3, #1
    8334:	6023      	str	r3, [r4, #0]
    8336:	f000 fda1 	bl	8e7c <.text+0x8e7c>
    833a:	ab22      	add	r3, sp, #136
    833c:	9300      	str	r3, [sp, #0]
    833e:	9802      	ldr	r0, [sp, #8]
    8340:	ab23      	add	r3, sp, #140
    8342:	9905      	ldr	r1, [sp, #20]
    8344:	9a06      	ldr	r2, [sp, #24]
    8346:	f001 fe2f 	bl	9fa8 <_d2b>
    834a:	0073      	lsls	r3, r6, #1
    834c:	0d5c      	lsrs	r4, r3, #21
    834e:	9014      	str	r0, [sp, #80]
    8350:	2c00      	cmp	r4, #0
    8352:	d00b      	beq.n	836c <_dtoa_r+0xe4>
    8354:	9805      	ldr	r0, [sp, #20]
    8356:	9906      	ldr	r1, [sp, #24]
    8358:	4ba9      	ldr	r3, [pc, #676]	(8600 <.text+0x8600>)
    835a:	4ab0      	ldr	r2, [pc, #704]	(861c <.text+0x861c>)
    835c:	4003      	ands	r3, r0
    835e:	1c18      	adds	r0, r3, #0
    8360:	4310      	orrs	r0, r2
    8362:	4aaf      	ldr	r2, [pc, #700]	(8620 <.text+0x8620>)
    8364:	2300      	movs	r3, #0
    8366:	18a6      	adds	r6, r4, r2
    8368:	9313      	str	r3, [sp, #76]
    836a:	e023      	b.n	83b4 <_dtoa_r+0x12c>
    836c:	9b22      	ldr	r3, [sp, #136]
    836e:	4cad      	ldr	r4, [pc, #692]	(8624 <.text+0x8624>)
    8370:	9a23      	ldr	r2, [sp, #140]
    8372:	191b      	adds	r3, r3, r4
    8374:	189d      	adds	r5, r3, r2
    8376:	2d20      	cmp	r5, #32
    8378:	dd09      	ble.n	838e <_dtoa_r+0x106>
    837a:	2240      	movs	r2, #64
    837c:	1b52      	subs	r2, r2, r5
    837e:	1c2b      	adds	r3, r5, #0
    8380:	9804      	ldr	r0, [sp, #16]
    8382:	4096      	lsls	r6, r2
    8384:	3b20      	subs	r3, #32
    8386:	40d8      	lsrs	r0, r3
    8388:	1c34      	adds	r4, r6, #0
    838a:	4304      	orrs	r4, r0
    838c:	e003      	b.n	8396 <_dtoa_r+0x10e>
    838e:	2320      	movs	r3, #32
    8390:	9c04      	ldr	r4, [sp, #16]
    8392:	1b5b      	subs	r3, r3, r5
    8394:	409c      	lsls	r4, r3
    8396:	1c20      	adds	r0, r4, #0
    8398:	f004 fe6a 	bl	d070 <____floatsidf_from_thumb>
    839c:	2c00      	cmp	r4, #0
    839e:	da03      	bge.n	83a8 <_dtoa_r+0x120>
    83a0:	4aa1      	ldr	r2, [pc, #644]	(8628 <.text+0x8628>)
    83a2:	4ba2      	ldr	r3, [pc, #648]	(862c <.text+0x862c>)
    83a4:	f004 fe68 	bl	d078 <____adddf3_from_thumb>
    83a8:	4aa1      	ldr	r2, [pc, #644]	(8630 <.text+0x8630>)
    83aa:	4ba2      	ldr	r3, [pc, #648]	(8634 <.text+0x8634>)
    83ac:	2401      	movs	r4, #1
    83ae:	9413      	str	r4, [sp, #76]
    83b0:	1880      	adds	r0, r0, r2
    83b2:	18ee      	adds	r6, r5, r3
    83b4:	4aa0      	ldr	r2, [pc, #640]	(8638 <.text+0x8638>)
    83b6:	4ba1      	ldr	r3, [pc, #644]	(863c <.text+0x863c>)
    83b8:	f004 fe62 	bl	d080 <____subdf3_from_thumb>
    83bc:	4aa0      	ldr	r2, [pc, #640]	(8640 <.text+0x8640>)
    83be:	4ba1      	ldr	r3, [pc, #644]	(8644 <.text+0x8644>)
    83c0:	f004 fe62 	bl	d088 <____muldf3_from_thumb>
    83c4:	4aa0      	ldr	r2, [pc, #640]	(8648 <.text+0x8648>)
    83c6:	4ba1      	ldr	r3, [pc, #644]	(864c <.text+0x864c>)
    83c8:	f004 fe56 	bl	d078 <____adddf3_from_thumb>
    83cc:	1c04      	adds	r4, r0, #0
    83ce:	1c30      	adds	r0, r6, #0
    83d0:	1c0d      	adds	r5, r1, #0
    83d2:	f004 fe4d 	bl	d070 <____floatsidf_from_thumb>
    83d6:	4a9e      	ldr	r2, [pc, #632]	(8650 <.text+0x8650>)
    83d8:	4b9e      	ldr	r3, [pc, #632]	(8654 <.text+0x8654>)
    83da:	f004 fe55 	bl	d088 <____muldf3_from_thumb>
    83de:	1c02      	adds	r2, r0, #0
    83e0:	1c0b      	adds	r3, r1, #0
    83e2:	1c20      	adds	r0, r4, #0
    83e4:	1c29      	adds	r1, r5, #0
    83e6:	f004 fe47 	bl	d078 <____adddf3_from_thumb>
    83ea:	1c04      	adds	r4, r0, #0
    83ec:	1c0d      	adds	r5, r1, #0
    83ee:	f004 fe4f 	bl	d090 <____fixdfsi_from_thumb>
    83f2:	1c29      	adds	r1, r5, #0
    83f4:	900e      	str	r0, [sp, #56]
    83f6:	4a85      	ldr	r2, [pc, #532]	(860c <.text+0x860c>)
    83f8:	4b85      	ldr	r3, [pc, #532]	(8610 <.text+0x8610>)
    83fa:	1c20      	adds	r0, r4, #0
    83fc:	f004 fe2c 	bl	d058 <____ltdf2_from_thumb>
    8400:	2800      	cmp	r0, #0
    8402:	da0d      	bge.n	8420 <_dtoa_r+0x198>
    8404:	980e      	ldr	r0, [sp, #56]
    8406:	f004 fe33 	bl	d070 <____floatsidf_from_thumb>
    840a:	1c02      	adds	r2, r0, #0
    840c:	1c0b      	adds	r3, r1, #0
    840e:	1c20      	adds	r0, r4, #0
    8410:	1c29      	adds	r1, r5, #0
    8412:	f004 fe25 	bl	d060 <____nedf2_from_thumb>
    8416:	2800      	cmp	r0, #0
    8418:	d002      	beq.n	8420 <_dtoa_r+0x198>
    841a:	980e      	ldr	r0, [sp, #56]
    841c:	3801      	subs	r0, #1
    841e:	900e      	str	r0, [sp, #56]
    8420:	990e      	ldr	r1, [sp, #56]
    8422:	2916      	cmp	r1, #22
    8424:	d901      	bls.n	842a <_dtoa_r+0x1a2>
    8426:	2201      	movs	r2, #1
    8428:	e012      	b.n	8450 <_dtoa_r+0x1c8>
    842a:	9c0e      	ldr	r4, [sp, #56]
    842c:	4b8a      	ldr	r3, [pc, #552]	(8658 <.text+0x8658>)
    842e:	00e2      	lsls	r2, r4, #3
    8430:	18d2      	adds	r2, r2, r3
    8432:	9805      	ldr	r0, [sp, #20]
    8434:	9906      	ldr	r1, [sp, #24]
    8436:	6853      	ldr	r3, [r2, #4]
    8438:	6812      	ldr	r2, [r2, #0]
    843a:	f004 fe0d 	bl	d058 <____ltdf2_from_thumb>
    843e:	2800      	cmp	r0, #0
    8440:	db02      	blt.n	8448 <_dtoa_r+0x1c0>
    8442:	2000      	movs	r0, #0
    8444:	900f      	str	r0, [sp, #60]
    8446:	e004      	b.n	8452 <_dtoa_r+0x1ca>
    8448:	990e      	ldr	r1, [sp, #56]
    844a:	3901      	subs	r1, #1
    844c:	910e      	str	r1, [sp, #56]
    844e:	2200      	movs	r2, #0
    8450:	920f      	str	r2, [sp, #60]
    8452:	9b22      	ldr	r3, [sp, #136]
    8454:	1b9b      	subs	r3, r3, r6
    8456:	1e5a      	subs	r2, r3, #1
    8458:	d403      	bmi.n	8462 <_dtoa_r+0x1da>
    845a:	2300      	movs	r3, #0
    845c:	9211      	str	r2, [sp, #68]
    845e:	9309      	str	r3, [sp, #36]
    8460:	e003      	b.n	846a <_dtoa_r+0x1e2>
    8462:	4252      	negs	r2, r2
    8464:	2400      	movs	r4, #0
    8466:	9209      	str	r2, [sp, #36]
    8468:	9411      	str	r4, [sp, #68]
    846a:	980e      	ldr	r0, [sp, #56]
    846c:	2800      	cmp	r0, #0
    846e:	db06      	blt.n	847e <_dtoa_r+0x1f6>
    8470:	9911      	ldr	r1, [sp, #68]
    8472:	2200      	movs	r2, #0
    8474:	1809      	adds	r1, r1, r0
    8476:	9111      	str	r1, [sp, #68]
    8478:	9012      	str	r0, [sp, #72]
    847a:	920a      	str	r2, [sp, #40]
    847c:	e007      	b.n	848e <_dtoa_r+0x206>
    847e:	9b09      	ldr	r3, [sp, #36]
    8480:	9c0e      	ldr	r4, [sp, #56]
    8482:	2100      	movs	r1, #0
    8484:	1b1b      	subs	r3, r3, r4
    8486:	4260      	negs	r0, r4
    8488:	9309      	str	r3, [sp, #36]
    848a:	900a      	str	r0, [sp, #40]
    848c:	9112      	str	r1, [sp, #72]
    848e:	9a01      	ldr	r2, [sp, #4]
    8490:	2a09      	cmp	r2, #9
    8492:	d81b      	bhi.n	84cc <_dtoa_r+0x244>
    8494:	2a05      	cmp	r2, #5
    8496:	dc01      	bgt.n	849c <_dtoa_r+0x214>
    8498:	2401      	movs	r4, #1
    849a:	e003      	b.n	84a4 <_dtoa_r+0x21c>
    849c:	9b01      	ldr	r3, [sp, #4]
    849e:	3b04      	subs	r3, #4
    84a0:	9301      	str	r3, [sp, #4]
    84a2:	2400      	movs	r4, #0
    84a4:	9801      	ldr	r0, [sp, #4]
    84a6:	2805      	cmp	r0, #5
    84a8:	d803      	bhi.n	84b2 <_dtoa_r+0x22a>
    84aa:	4a6c      	ldr	r2, [pc, #432]	(865c <.text+0x865c>)
    84ac:	0083      	lsls	r3, r0, #2
    84ae:	589b      	ldr	r3, [r3, r2]
    84b0:	469f      	mov	pc, r3
    84b2:	2101      	movs	r1, #1
    84b4:	4249      	negs	r1, r1
    84b6:	2201      	movs	r2, #1
    84b8:	910c      	str	r1, [sp, #48]
    84ba:	910d      	str	r1, [sp, #52]
    84bc:	9210      	str	r2, [sp, #64]
    84be:	e02f      	b.n	8520 <_dtoa_r+0x298>
    84c0:	2301      	movs	r3, #1
    84c2:	9310      	str	r3, [sp, #64]
    84c4:	e020      	b.n	8508 <_dtoa_r+0x280>
    84c6:	2001      	movs	r0, #1
    84c8:	9010      	str	r0, [sp, #64]
    84ca:	e00e      	b.n	84ea <_dtoa_r+0x262>
    84cc:	2100      	movs	r1, #0
    84ce:	9101      	str	r1, [sp, #4]
    84d0:	2401      	movs	r4, #1
    84d2:	2301      	movs	r3, #1
    84d4:	425b      	negs	r3, r3
    84d6:	2200      	movs	r2, #0
    84d8:	2001      	movs	r0, #1
    84da:	2612      	movs	r6, #18
    84dc:	9229      	str	r2, [sp, #164]
    84de:	930c      	str	r3, [sp, #48]
    84e0:	930d      	str	r3, [sp, #52]
    84e2:	9010      	str	r0, [sp, #64]
    84e4:	e01c      	b.n	8520 <_dtoa_r+0x298>
    84e6:	2100      	movs	r1, #0
    84e8:	9110      	str	r1, [sp, #64]
    84ea:	9a29      	ldr	r2, [sp, #164]
    84ec:	2a00      	cmp	r2, #0
    84ee:	dd03      	ble.n	84f8 <_dtoa_r+0x270>
    84f0:	1c16      	adds	r6, r2, #0
    84f2:	920c      	str	r2, [sp, #48]
    84f4:	920d      	str	r2, [sp, #52]
    84f6:	e013      	b.n	8520 <_dtoa_r+0x298>
    84f8:	2601      	movs	r6, #1
    84fa:	2301      	movs	r3, #1
    84fc:	9329      	str	r3, [sp, #164]
    84fe:	960c      	str	r6, [sp, #48]
    8500:	960d      	str	r6, [sp, #52]
    8502:	e00d      	b.n	8520 <_dtoa_r+0x298>
    8504:	2000      	movs	r0, #0
    8506:	9010      	str	r0, [sp, #64]
    8508:	9b29      	ldr	r3, [sp, #164]
    850a:	990e      	ldr	r1, [sp, #56]
    850c:	3301      	adds	r3, #1
    850e:	18ce      	adds	r6, r1, r3
    8510:	1e72      	subs	r2, r6, #1
    8512:	920d      	str	r2, [sp, #52]
    8514:	2e00      	cmp	r6, #0
    8516:	dc02      	bgt.n	851e <_dtoa_r+0x296>
    8518:	960c      	str	r6, [sp, #48]
    851a:	2601      	movs	r6, #1
    851c:	e000      	b.n	8520 <_dtoa_r+0x298>
    851e:	960c      	str	r6, [sp, #48]
    8520:	9802      	ldr	r0, [sp, #8]
    8522:	2300      	movs	r3, #0
    8524:	2204      	movs	r2, #4
    8526:	6443      	str	r3, [r0, #68]
    8528:	e003      	b.n	8532 <_dtoa_r+0x2aa>
    852a:	1c4b      	adds	r3, r1, #1
    852c:	9902      	ldr	r1, [sp, #8]
    852e:	644b      	str	r3, [r1, #68]
    8530:	0052      	lsls	r2, r2, #1
    8532:	1c13      	adds	r3, r2, #0
    8534:	9802      	ldr	r0, [sp, #8]
    8536:	3314      	adds	r3, #20
    8538:	6c41      	ldr	r1, [r0, #68]
    853a:	42b3      	cmp	r3, r6
    853c:	d9f5      	bls.n	852a <_dtoa_r+0x2a2>
    853e:	f001 fd05 	bl	9f4c <_Balloc>
    8542:	9902      	ldr	r1, [sp, #8]
    8544:	9a0c      	ldr	r2, [sp, #48]
    8546:	901a      	str	r0, [sp, #104]
    8548:	6408      	str	r0, [r1, #64]
    854a:	2a0e      	cmp	r2, #14
    854c:	d900      	bls.n	8550 <_dtoa_r+0x2c8>
    854e:	e1a5      	b.n	889c <.text+0x889c>
    8550:	2c00      	cmp	r4, #0
    8552:	d100      	bne.n	8556 <_dtoa_r+0x2ce>
    8554:	e1a2      	b.n	889c <.text+0x889c>
    8556:	9b0e      	ldr	r3, [sp, #56]
    8558:	2b00      	cmp	r3, #0
    855a:	dd33      	ble.n	85c4 <_dtoa_r+0x33c>
    855c:	210f      	movs	r1, #15
    855e:	4a3e      	ldr	r2, [pc, #248]	(8658 <.text+0x8658>)
    8560:	400b      	ands	r3, r1
    8562:	980e      	ldr	r0, [sp, #56]
    8564:	00db      	lsls	r3, r3, #3
    8566:	189b      	adds	r3, r3, r2
    8568:	1104      	asrs	r4, r0, #4
    856a:	681e      	ldr	r6, [r3, #0]
    856c:	685f      	ldr	r7, [r3, #4]
    856e:	06e2      	lsls	r2, r4, #27
    8570:	d402      	bmi.n	8578 <_dtoa_r+0x2f0>
    8572:	2302      	movs	r3, #2
    8574:	930b      	str	r3, [sp, #44]
    8576:	e00b      	b.n	8590 <_dtoa_r+0x308>
    8578:	4b39      	ldr	r3, [pc, #228]	(8660 <.text+0x8660>)
    857a:	400c      	ands	r4, r1
    857c:	6a1a      	ldr	r2, [r3, #32]
    857e:	6a5b      	ldr	r3, [r3, #36]
    8580:	9805      	ldr	r0, [sp, #20]
    8582:	9906      	ldr	r1, [sp, #24]
    8584:	f004 fd88 	bl	d098 <____divdf3_from_thumb>
    8588:	9003      	str	r0, [sp, #12]
    858a:	9104      	str	r1, [sp, #16]
    858c:	2003      	movs	r0, #3
    858e:	900b      	str	r0, [sp, #44]
    8590:	4d33      	ldr	r5, [pc, #204]	(8660 <.text+0x8660>)
    8592:	e00e      	b.n	85b2 <_dtoa_r+0x32a>
    8594:	07e1      	lsls	r1, r4, #31
    8596:	d50a      	bpl.n	85ae <_dtoa_r+0x326>
    8598:	9a0b      	ldr	r2, [sp, #44]
    859a:	3201      	adds	r2, #1
    859c:	920b      	str	r2, [sp, #44]
    859e:	1c30      	adds	r0, r6, #0
    85a0:	1c39      	adds	r1, r7, #0
    85a2:	682a      	ldr	r2, [r5, #0]
    85a4:	686b      	ldr	r3, [r5, #4]
    85a6:	f004 fd6f 	bl	d088 <____muldf3_from_thumb>
    85aa:	1c06      	adds	r6, r0, #0
    85ac:	1c0f      	adds	r7, r1, #0
    85ae:	1064      	asrs	r4, r4, #1
    85b0:	3508      	adds	r5, #8
    85b2:	2c00      	cmp	r4, #0
    85b4:	d1ee      	bne.n	8594 <_dtoa_r+0x30c>
    85b6:	9803      	ldr	r0, [sp, #12]
    85b8:	9904      	ldr	r1, [sp, #16]
    85ba:	1c32      	adds	r2, r6, #0
    85bc:	1c3b      	adds	r3, r7, #0
    85be:	f004 fd6b 	bl	d098 <____divdf3_from_thumb>
    85c2:	e05c      	b.n	867e <.text+0x867e>
    85c4:	9b0e      	ldr	r3, [sp, #56]
    85c6:	425c      	negs	r4, r3
    85c8:	2c00      	cmp	r4, #0
    85ca:	d102      	bne.n	85d2 <_dtoa_r+0x34a>
    85cc:	2402      	movs	r4, #2
    85ce:	940b      	str	r4, [sp, #44]
    85d0:	e057      	b.n	8682 <.text+0x8682>
    85d2:	230f      	movs	r3, #15
    85d4:	4a20      	ldr	r2, [pc, #128]	(8658 <.text+0x8658>)
    85d6:	4023      	ands	r3, r4
    85d8:	00db      	lsls	r3, r3, #3
    85da:	189b      	adds	r3, r3, r2
    85dc:	681a      	ldr	r2, [r3, #0]
    85de:	685b      	ldr	r3, [r3, #4]
    85e0:	9805      	ldr	r0, [sp, #20]
    85e2:	9906      	ldr	r1, [sp, #24]
    85e4:	f004 fd50 	bl	d088 <____muldf3_from_thumb>
    85e8:	4d1d      	ldr	r5, [pc, #116]	(8660 <.text+0x8660>)
    85ea:	2202      	movs	r2, #2
    85ec:	1124      	asrs	r4, r4, #4
    85ee:	920b      	str	r2, [sp, #44]
    85f0:	e043      	b.n	867a <.text+0x867a>
    85f2:	0000      	lsls	r0, r0, #0
    85f4:	ffff 7fff 	undefined
    85f8:	0000      	lsls	r0, r0, #0
    85fa:	7ff0      	ldrb	r0, [r6, #31]
    85fc:	270f      	movs	r7, #15
    85fe:	0000      	lsls	r0, r0, #0
    8600:	ffff 000f 	vaddl.u<illegal width 64>	q8, d15, d15
    8604:	d95c      	bls.n	86c0 <.text+0x86c0>
    8606:	0000      	lsls	r0, r0, #0
    8608:	d968      	bls.n	86dc <.text+0x86dc>
	...
    8612:	0000      	lsls	r0, r0, #0
    8614:	d92c      	bls.n	8670 <.text+0x8670>
    8616:	0000      	lsls	r0, r0, #0
    8618:	d92d      	bls.n	8676 <.text+0x8676>
    861a:	0000      	lsls	r0, r0, #0
    861c:	0000      	lsls	r0, r0, #0
    861e:	3ff0      	subs	r7, #240
    8620:	fc01 ffff 	stc2	15, cr15, [r1], {255}
    8624:	0432      	lsls	r2, r6, #16
    8626:	0000      	lsls	r0, r0, #0
    8628:	0000      	lsls	r0, r0, #0
    862a:	41f0      	rors	r0, r6
    862c:	0000      	lsls	r0, r0, #0
    862e:	0000      	lsls	r0, r0, #0
    8630:	0000      	lsls	r0, r0, #0
    8632:	fe10 fbcd 	cdp2	11, 1, cr15, cr0, cr13, {6}
    8636:	ffff 0000 	vaddl.u<illegal width 64>	q8, d15, d0
    863a:	3ff8      	subs	r7, #248
    863c:	0000      	lsls	r0, r0, #0
    863e:	0000      	lsls	r0, r0, #0
    8640:	87a7      	strh	r7, [r4, #60]
    8642:	3fd2      	subs	r7, #210
    8644:	4361      	muls	r1, r4
    8646:	636f      	str	r7, [r5, #52]
    8648:	8a28      	ldrh	r0, [r5, #16]
    864a:	3fc6      	subs	r7, #198
    864c:	c8b3      	ldmia	r0!, {r0, r1, r4, r5, r7}
    864e:	8b60      	ldrh	r0, [r4, #26]
    8650:	4413      	add	r3, r2
    8652:	3fd3      	subs	r7, #211
    8654:	79fb      	ldrb	r3, [r7, #7]
    8656:	509f      	str	r7, [r3, r2]
    8658:	d430      	bmi.n	86bc <.text+0x86bc>
    865a:	0000      	lsls	r0, r0, #0
    865c:	d3e0      	bcc.n	8620 <.text+0x8620>
    865e:	0000      	lsls	r0, r0, #0
    8660:	d4f8      	bmi.n	8654 <.text+0x8654>
    8662:	0000      	lsls	r0, r0, #0
    8664:	07e3      	lsls	r3, r4, #31
    8666:	d506      	bpl.n	8676 <.text+0x8676>
    8668:	9a0b      	ldr	r2, [sp, #44]
    866a:	3201      	adds	r2, #1
    866c:	920b      	str	r2, [sp, #44]
    866e:	682a      	ldr	r2, [r5, #0]
    8670:	686b      	ldr	r3, [r5, #4]
    8672:	f004 fd09 	bl	d088 <____muldf3_from_thumb>
    8676:	1064      	asrs	r4, r4, #1
    8678:	3508      	adds	r5, #8
    867a:	2c00      	cmp	r4, #0
    867c:	d1f2      	bne.n	8664 <.text+0x8664>
    867e:	9003      	str	r0, [sp, #12]
    8680:	9104      	str	r1, [sp, #16]
    8682:	9b0f      	ldr	r3, [sp, #60]
    8684:	2b00      	cmp	r3, #0
    8686:	d02f      	beq.n	86e8 <.text+0x86e8>
    8688:	9c03      	ldr	r4, [sp, #12]
    868a:	9d04      	ldr	r5, [sp, #16]
    868c:	4bce      	ldr	r3, [pc, #824]	(89c8 <.text+0x89c8>)
    868e:	4acd      	ldr	r2, [pc, #820]	(89c4 <.text+0x89c4>)
    8690:	1c20      	adds	r0, r4, #0
    8692:	1c29      	adds	r1, r5, #0
    8694:	f004 fce0 	bl	d058 <____ltdf2_from_thumb>
    8698:	2800      	cmp	r0, #0
    869a:	da25      	bge.n	86e8 <.text+0x86e8>
    869c:	980c      	ldr	r0, [sp, #48]
    869e:	2800      	cmp	r0, #0
    86a0:	dd22      	ble.n	86e8 <.text+0x86e8>
    86a2:	990d      	ldr	r1, [sp, #52]
    86a4:	2900      	cmp	r1, #0
    86a6:	dc00      	bgt.n	86aa <.text+0x86aa>
    86a8:	e0f4      	b.n	8894 <.text+0x8894>
    86aa:	9a0e      	ldr	r2, [sp, #56]
    86ac:	3a01      	subs	r2, #1
    86ae:	9220      	str	r2, [sp, #128]
    86b0:	1c20      	adds	r0, r4, #0
    86b2:	4ac6      	ldr	r2, [pc, #792]	(89cc <.text+0x89cc>)
    86b4:	4bc6      	ldr	r3, [pc, #792]	(89d0 <.text+0x89d0>)
    86b6:	1c29      	adds	r1, r5, #0
    86b8:	f004 fce6 	bl	d088 <____muldf3_from_thumb>
    86bc:	1c04      	adds	r4, r0, #0
    86be:	980b      	ldr	r0, [sp, #44]
    86c0:	1c0d      	adds	r5, r1, #0
    86c2:	3001      	adds	r0, #1
    86c4:	9403      	str	r4, [sp, #12]
    86c6:	9504      	str	r5, [sp, #16]
    86c8:	f004 fcd2 	bl	d070 <____floatsidf_from_thumb>
    86cc:	1c22      	adds	r2, r4, #0
    86ce:	1c2b      	adds	r3, r5, #0
    86d0:	f004 fcda 	bl	d088 <____muldf3_from_thumb>
    86d4:	4abf      	ldr	r2, [pc, #764]	(89d4 <.text+0x89d4>)
    86d6:	4bc0      	ldr	r3, [pc, #768]	(89d8 <.text+0x89d8>)
    86d8:	f004 fcce 	bl	d078 <____adddf3_from_thumb>
    86dc:	4bbf      	ldr	r3, [pc, #764]	(89dc <.text+0x89dc>)
    86de:	18c4      	adds	r4, r0, r3
    86e0:	980d      	ldr	r0, [sp, #52]
    86e2:	1c0d      	adds	r5, r1, #0
    86e4:	9021      	str	r0, [sp, #132]
    86e6:	e032      	b.n	874e <.text+0x874e>
    86e8:	9e03      	ldr	r6, [sp, #12]
    86ea:	9f04      	ldr	r7, [sp, #16]
    86ec:	980b      	ldr	r0, [sp, #44]
    86ee:	f004 fcbf 	bl	d070 <____floatsidf_from_thumb>
    86f2:	1c32      	adds	r2, r6, #0
    86f4:	1c3b      	adds	r3, r7, #0
    86f6:	f004 fcc7 	bl	d088 <____muldf3_from_thumb>
    86fa:	4ab6      	ldr	r2, [pc, #728]	(89d4 <.text+0x89d4>)
    86fc:	4bb6      	ldr	r3, [pc, #728]	(89d8 <.text+0x89d8>)
    86fe:	f004 fcbb 	bl	d078 <____adddf3_from_thumb>
    8702:	9a0c      	ldr	r2, [sp, #48]
    8704:	1c0d      	adds	r5, r1, #0
    8706:	49b5      	ldr	r1, [pc, #724]	(89dc <.text+0x89dc>)
    8708:	1c04      	adds	r4, r0, #0
    870a:	1864      	adds	r4, r4, r1
    870c:	2a00      	cmp	r2, #0
    870e:	d11a      	bne.n	8746 <.text+0x8746>
    8710:	4ab3      	ldr	r2, [pc, #716]	(89e0 <.text+0x89e0>)
    8712:	4bb4      	ldr	r3, [pc, #720]	(89e4 <.text+0x89e4>)
    8714:	1c30      	adds	r0, r6, #0
    8716:	1c39      	adds	r1, r7, #0
    8718:	f004 fcb2 	bl	d080 <____subdf3_from_thumb>
    871c:	1c22      	adds	r2, r4, #0
    871e:	1c2b      	adds	r3, r5, #0
    8720:	1c06      	adds	r6, r0, #0
    8722:	1c0f      	adds	r7, r1, #0
    8724:	f004 fcbc 	bl	d0a0 <____gtdf2_from_thumb>
    8728:	2800      	cmp	r0, #0
    872a:	dd00      	ble.n	872e <.text+0x872e>
    872c:	e26f      	b.n	8c0e <.text+0x8c0e>
    872e:	2080      	movs	r0, #128
    8730:	0600      	lsls	r0, r0, #24
    8732:	1822      	adds	r2, r4, r0
    8734:	1c2b      	adds	r3, r5, #0
    8736:	1c30      	adds	r0, r6, #0
    8738:	1c39      	adds	r1, r7, #0
    873a:	f004 fc8d 	bl	d058 <____ltdf2_from_thumb>
    873e:	2800      	cmp	r0, #0
    8740:	da00      	bge.n	8744 <.text+0x8744>
    8742:	e25a      	b.n	8bfa <.text+0x8bfa>
    8744:	e0a6      	b.n	8894 <.text+0x8894>
    8746:	990c      	ldr	r1, [sp, #48]
    8748:	9a0e      	ldr	r2, [sp, #56]
    874a:	9121      	str	r1, [sp, #132]
    874c:	9220      	str	r2, [sp, #128]
    874e:	9821      	ldr	r0, [sp, #132]
    8750:	9910      	ldr	r1, [sp, #64]
    8752:	4aa5      	ldr	r2, [pc, #660]	(89e8 <.text+0x89e8>)
    8754:	00c3      	lsls	r3, r0, #3
    8756:	2900      	cmp	r1, #0
    8758:	d04c      	beq.n	87f4 <.text+0x87f4>
    875a:	189b      	adds	r3, r3, r2
    875c:	3b08      	subs	r3, #8
    875e:	681a      	ldr	r2, [r3, #0]
    8760:	685b      	ldr	r3, [r3, #4]
    8762:	48a2      	ldr	r0, [pc, #648]	(89ec <.text+0x89ec>)
    8764:	49a2      	ldr	r1, [pc, #648]	(89f0 <.text+0x89f0>)
    8766:	f004 fc97 	bl	d098 <____divdf3_from_thumb>
    876a:	1c2b      	adds	r3, r5, #0
    876c:	1c22      	adds	r2, r4, #0
    876e:	f004 fc87 	bl	d080 <____subdf3_from_thumb>
    8772:	9018      	str	r0, [sp, #96]
    8774:	9119      	str	r1, [sp, #100]
    8776:	9d03      	ldr	r5, [sp, #12]
    8778:	9e04      	ldr	r6, [sp, #16]
    877a:	9f1a      	ldr	r7, [sp, #104]
    877c:	1c31      	adds	r1, r6, #0
    877e:	1c28      	adds	r0, r5, #0
    8780:	f004 fc86 	bl	d090 <____fixdfsi_from_thumb>
    8784:	1c04      	adds	r4, r0, #0
    8786:	f004 fc73 	bl	d070 <____floatsidf_from_thumb>
    878a:	1c02      	adds	r2, r0, #0
    878c:	1c0b      	adds	r3, r1, #0
    878e:	1c28      	adds	r0, r5, #0
    8790:	1c31      	adds	r1, r6, #0
    8792:	f004 fc75 	bl	d080 <____subdf3_from_thumb>
    8796:	3430      	adds	r4, #48
    8798:	703c      	strb	r4, [r7, #0]
    879a:	9a18      	ldr	r2, [sp, #96]
    879c:	9b19      	ldr	r3, [sp, #100]
    879e:	1c05      	adds	r5, r0, #0
    87a0:	1c0e      	adds	r6, r1, #0
    87a2:	3701      	adds	r7, #1
    87a4:	f004 fc58 	bl	d058 <____ltdf2_from_thumb>
    87a8:	2800      	cmp	r0, #0
    87aa:	da00      	bge.n	87ae <.text+0x87ae>
    87ac:	e334      	b.n	8e18 <.text+0x8e18>
    87ae:	1c2a      	adds	r2, r5, #0
    87b0:	1c33      	adds	r3, r6, #0
    87b2:	4985      	ldr	r1, [pc, #532]	(89c8 <.text+0x89c8>)
    87b4:	4883      	ldr	r0, [pc, #524]	(89c4 <.text+0x89c4>)
    87b6:	f004 fc63 	bl	d080 <____subdf3_from_thumb>
    87ba:	9a18      	ldr	r2, [sp, #96]
    87bc:	9b19      	ldr	r3, [sp, #100]
    87be:	f004 fc4b 	bl	d058 <____ltdf2_from_thumb>
    87c2:	2800      	cmp	r0, #0
    87c4:	da00      	bge.n	87c8 <.text+0x87c8>
    87c6:	e0da      	b.n	897e <.text+0x897e>
    87c8:	9a1a      	ldr	r2, [sp, #104]
    87ca:	9c21      	ldr	r4, [sp, #132]
    87cc:	1abb      	subs	r3, r7, r2
    87ce:	42a3      	cmp	r3, r4
    87d0:	da60      	bge.n	8894 <.text+0x8894>
    87d2:	9818      	ldr	r0, [sp, #96]
    87d4:	9919      	ldr	r1, [sp, #100]
    87d6:	4a7d      	ldr	r2, [pc, #500]	(89cc <.text+0x89cc>)
    87d8:	4b7d      	ldr	r3, [pc, #500]	(89d0 <.text+0x89d0>)
    87da:	f004 fc55 	bl	d088 <____muldf3_from_thumb>
    87de:	4a7b      	ldr	r2, [pc, #492]	(89cc <.text+0x89cc>)
    87e0:	4b7b      	ldr	r3, [pc, #492]	(89d0 <.text+0x89d0>)
    87e2:	9018      	str	r0, [sp, #96]
    87e4:	9119      	str	r1, [sp, #100]
    87e6:	1c28      	adds	r0, r5, #0
    87e8:	1c31      	adds	r1, r6, #0
    87ea:	f004 fc4d 	bl	d088 <____muldf3_from_thumb>
    87ee:	1c05      	adds	r5, r0, #0
    87f0:	1c0e      	adds	r6, r1, #0
    87f2:	e7c3      	b.n	877c <.text+0x877c>
    87f4:	189b      	adds	r3, r3, r2
    87f6:	3b08      	subs	r3, #8
    87f8:	1c29      	adds	r1, r5, #0
    87fa:	1c20      	adds	r0, r4, #0
    87fc:	681a      	ldr	r2, [r3, #0]
    87fe:	685b      	ldr	r3, [r3, #4]
    8800:	f004 fc42 	bl	d088 <____muldf3_from_thumb>
    8804:	901b      	str	r0, [sp, #108]
    8806:	911c      	str	r1, [sp, #112]
    8808:	9d03      	ldr	r5, [sp, #12]
    880a:	9e04      	ldr	r6, [sp, #16]
    880c:	2700      	movs	r7, #0
    880e:	1c31      	adds	r1, r6, #0
    8810:	1c28      	adds	r0, r5, #0
    8812:	f004 fc3d 	bl	d090 <____fixdfsi_from_thumb>
    8816:	1c04      	adds	r4, r0, #0
    8818:	f004 fc2a 	bl	d070 <____floatsidf_from_thumb>
    881c:	1c02      	adds	r2, r0, #0
    881e:	1c0b      	adds	r3, r1, #0
    8820:	1c28      	adds	r0, r5, #0
    8822:	1c31      	adds	r1, r6, #0
    8824:	f004 fc2c 	bl	d080 <____subdf3_from_thumb>
    8828:	1c05      	adds	r5, r0, #0
    882a:	981a      	ldr	r0, [sp, #104]
    882c:	3430      	adds	r4, #48
    882e:	543c      	strb	r4, [r7, r0]
    8830:	1c0e      	adds	r6, r1, #0
    8832:	9921      	ldr	r1, [sp, #132]
    8834:	3701      	adds	r7, #1
    8836:	428f      	cmp	r7, r1
    8838:	d123      	bne.n	8882 <.text+0x8882>
    883a:	4a6c      	ldr	r2, [pc, #432]	(89ec <.text+0x89ec>)
    883c:	4b6c      	ldr	r3, [pc, #432]	(89f0 <.text+0x89f0>)
    883e:	19c7      	adds	r7, r0, r7
    8840:	981b      	ldr	r0, [sp, #108]
    8842:	991c      	ldr	r1, [sp, #112]
    8844:	f004 fc18 	bl	d078 <____adddf3_from_thumb>
    8848:	1c02      	adds	r2, r0, #0
    884a:	1c0b      	adds	r3, r1, #0
    884c:	1c28      	adds	r0, r5, #0
    884e:	1c31      	adds	r1, r6, #0
    8850:	f004 fc26 	bl	d0a0 <____gtdf2_from_thumb>
    8854:	2800      	cmp	r0, #0
    8856:	dd00      	ble.n	885a <.text+0x885a>
    8858:	e091      	b.n	897e <.text+0x897e>
    885a:	9a1b      	ldr	r2, [sp, #108]
    885c:	9b1c      	ldr	r3, [sp, #112]
    885e:	4863      	ldr	r0, [pc, #396]	(89ec <.text+0x89ec>)
    8860:	4963      	ldr	r1, [pc, #396]	(89f0 <.text+0x89f0>)
    8862:	f004 fc0d 	bl	d080 <____subdf3_from_thumb>
    8866:	1c02      	adds	r2, r0, #0
    8868:	1c0b      	adds	r3, r1, #0
    886a:	1c28      	adds	r0, r5, #0
    886c:	1c31      	adds	r1, r6, #0
    886e:	f004 fbf3 	bl	d058 <____ltdf2_from_thumb>
    8872:	2800      	cmp	r0, #0
    8874:	da0e      	bge.n	8894 <.text+0x8894>
    8876:	3f01      	subs	r7, #1
    8878:	783b      	ldrb	r3, [r7, #0]
    887a:	2b30      	cmp	r3, #48
    887c:	d0fb      	beq.n	8876 <.text+0x8876>
    887e:	3701      	adds	r7, #1
    8880:	e086      	b.n	8990 <.text+0x8990>
    8882:	1c28      	adds	r0, r5, #0
    8884:	1c31      	adds	r1, r6, #0
    8886:	4a51      	ldr	r2, [pc, #324]	(89cc <.text+0x89cc>)
    8888:	4b51      	ldr	r3, [pc, #324]	(89d0 <.text+0x89d0>)
    888a:	f004 fbfd 	bl	d088 <____muldf3_from_thumb>
    888e:	1c05      	adds	r5, r0, #0
    8890:	1c0e      	adds	r6, r1, #0
    8892:	e7bc      	b.n	880e <.text+0x880e>
    8894:	9b05      	ldr	r3, [sp, #20]
    8896:	9c06      	ldr	r4, [sp, #24]
    8898:	9303      	str	r3, [sp, #12]
    889a:	9404      	str	r4, [sp, #16]
    889c:	9b23      	ldr	r3, [sp, #140]
    889e:	2b00      	cmp	r3, #0
    88a0:	da00      	bge.n	88a4 <.text+0x88a4>
    88a2:	e088      	b.n	89b6 <.text+0x89b6>
    88a4:	9c0e      	ldr	r4, [sp, #56]
    88a6:	2c0e      	cmp	r4, #14
    88a8:	dd00      	ble.n	88ac <.text+0x88ac>
    88aa:	e084      	b.n	89b6 <.text+0x89b6>
    88ac:	4a4e      	ldr	r2, [pc, #312]	(89e8 <.text+0x89e8>)
    88ae:	00e3      	lsls	r3, r4, #3
    88b0:	189b      	adds	r3, r3, r2
    88b2:	6818      	ldr	r0, [r3, #0]
    88b4:	6859      	ldr	r1, [r3, #4]
    88b6:	901d      	str	r0, [sp, #116]
    88b8:	911e      	str	r1, [sp, #120]
    88ba:	9929      	ldr	r1, [sp, #164]
    88bc:	2900      	cmp	r1, #0
    88be:	da02      	bge.n	88c6 <.text+0x88c6>
    88c0:	9a0c      	ldr	r2, [sp, #48]
    88c2:	2a00      	cmp	r2, #0
    88c4:	dd03      	ble.n	88ce <.text+0x88ce>
    88c6:	9c03      	ldr	r4, [sp, #12]
    88c8:	9d04      	ldr	r5, [sp, #16]
    88ca:	9f1a      	ldr	r7, [sp, #104]
    88cc:	e011      	b.n	88f2 <.text+0x88f2>
    88ce:	9b0c      	ldr	r3, [sp, #48]
    88d0:	2b00      	cmp	r3, #0
    88d2:	d000      	beq.n	88d6 <.text+0x88d6>
    88d4:	e191      	b.n	8bfa <.text+0x8bfa>
    88d6:	4a42      	ldr	r2, [pc, #264]	(89e0 <.text+0x89e0>)
    88d8:	4b42      	ldr	r3, [pc, #264]	(89e4 <.text+0x89e4>)
    88da:	981d      	ldr	r0, [sp, #116]
    88dc:	991e      	ldr	r1, [sp, #120]
    88de:	f004 fbd3 	bl	d088 <____muldf3_from_thumb>
    88e2:	9a03      	ldr	r2, [sp, #12]
    88e4:	9b04      	ldr	r3, [sp, #16]
    88e6:	f004 fbdf 	bl	d0a8 <____gedf2_from_thumb>
    88ea:	2800      	cmp	r0, #0
    88ec:	db00      	blt.n	88f0 <.text+0x88f0>
    88ee:	e184      	b.n	8bfa <.text+0x8bfa>
    88f0:	e18d      	b.n	8c0e <.text+0x8c0e>
    88f2:	9a1d      	ldr	r2, [sp, #116]
    88f4:	9b1e      	ldr	r3, [sp, #120]
    88f6:	1c20      	adds	r0, r4, #0
    88f8:	1c29      	adds	r1, r5, #0
    88fa:	f004 fbcd 	bl	d098 <____divdf3_from_thumb>
    88fe:	f004 fbc7 	bl	d090 <____fixdfsi_from_thumb>
    8902:	1c06      	adds	r6, r0, #0
    8904:	f004 fbb4 	bl	d070 <____floatsidf_from_thumb>
    8908:	9a1d      	ldr	r2, [sp, #116]
    890a:	9b1e      	ldr	r3, [sp, #120]
    890c:	f004 fbbc 	bl	d088 <____muldf3_from_thumb>
    8910:	1c0b      	adds	r3, r1, #0
    8912:	1c02      	adds	r2, r0, #0
    8914:	1c29      	adds	r1, r5, #0
    8916:	1c20      	adds	r0, r4, #0
    8918:	f004 fbb2 	bl	d080 <____subdf3_from_thumb>
    891c:	1c33      	adds	r3, r6, #0
    891e:	3330      	adds	r3, #48
    8920:	703b      	strb	r3, [r7, #0]
    8922:	1c04      	adds	r4, r0, #0
    8924:	1c0d      	adds	r5, r1, #0
    8926:	981a      	ldr	r0, [sp, #104]
    8928:	990c      	ldr	r1, [sp, #48]
    892a:	3701      	adds	r7, #1
    892c:	1843      	adds	r3, r0, r1
    892e:	429f      	cmp	r7, r3
    8930:	d131      	bne.n	8996 <.text+0x8996>
    8932:	1c22      	adds	r2, r4, #0
    8934:	1c2b      	adds	r3, r5, #0
    8936:	1c20      	adds	r0, r4, #0
    8938:	1c29      	adds	r1, r5, #0
    893a:	f004 fb9d 	bl	d078 <____adddf3_from_thumb>
    893e:	9a1d      	ldr	r2, [sp, #116]
    8940:	9b1e      	ldr	r3, [sp, #120]
    8942:	1c04      	adds	r4, r0, #0
    8944:	1c0d      	adds	r5, r1, #0
    8946:	f004 fbab 	bl	d0a0 <____gtdf2_from_thumb>
    894a:	2800      	cmp	r0, #0
    894c:	dc15      	bgt.n	897a <.text+0x897a>
    894e:	1c20      	adds	r0, r4, #0
    8950:	1c29      	adds	r1, r5, #0
    8952:	9a1d      	ldr	r2, [sp, #116]
    8954:	9b1e      	ldr	r3, [sp, #120]
    8956:	f004 fb87 	bl	d068 <____eqdf2_from_thumb>
    895a:	2800      	cmp	r0, #0
    895c:	d000      	beq.n	8960 <.text+0x8960>
    895e:	e277      	b.n	8e50 <.text+0x8e50>
    8960:	07f2      	lsls	r2, r6, #31
    8962:	d40a      	bmi.n	897a <.text+0x897a>
    8964:	e274      	b.n	8e50 <.text+0x8e50>
    8966:	9b1a      	ldr	r3, [sp, #104]
    8968:	429a      	cmp	r2, r3
    896a:	d109      	bne.n	8980 <.text+0x8980>
    896c:	9c20      	ldr	r4, [sp, #128]
    896e:	981a      	ldr	r0, [sp, #104]
    8970:	3401      	adds	r4, #1
    8972:	2330      	movs	r3, #48
    8974:	9420      	str	r4, [sp, #128]
    8976:	7003      	strb	r3, [r0, #0]
    8978:	e006      	b.n	8988 <.text+0x8988>
    897a:	990e      	ldr	r1, [sp, #56]
    897c:	9120      	str	r1, [sp, #128]
    897e:	1c3a      	adds	r2, r7, #0
    8980:	3a01      	subs	r2, #1
    8982:	7813      	ldrb	r3, [r2, #0]
    8984:	2b39      	cmp	r3, #57
    8986:	d0ee      	beq.n	8966 <.text+0x8966>
    8988:	7813      	ldrb	r3, [r2, #0]
    898a:	3301      	adds	r3, #1
    898c:	7013      	strb	r3, [r2, #0]
    898e:	1c57      	adds	r7, r2, #1
    8990:	9a20      	ldr	r2, [sp, #128]
    8992:	920e      	str	r2, [sp, #56]
    8994:	e25c      	b.n	8e50 <.text+0x8e50>
    8996:	1c20      	adds	r0, r4, #0
    8998:	1c29      	adds	r1, r5, #0
    899a:	4a0c      	ldr	r2, [pc, #48]	(89cc <.text+0x89cc>)
    899c:	4b0c      	ldr	r3, [pc, #48]	(89d0 <.text+0x89d0>)
    899e:	f004 fb73 	bl	d088 <____muldf3_from_thumb>
    89a2:	4a14      	ldr	r2, [pc, #80]	(89f4 <.text+0x89f4>)
    89a4:	4b14      	ldr	r3, [pc, #80]	(89f8 <.text+0x89f8>)
    89a6:	1c04      	adds	r4, r0, #0
    89a8:	1c0d      	adds	r5, r1, #0
    89aa:	f004 fb59 	bl	d060 <____nedf2_from_thumb>
    89ae:	2800      	cmp	r0, #0
    89b0:	d100      	bne.n	89b4 <.text+0x89b4>
    89b2:	e24d      	b.n	8e50 <.text+0x8e50>
    89b4:	e79d      	b.n	88f2 <.text+0x88f2>
    89b6:	9c10      	ldr	r4, [sp, #64]
    89b8:	2c00      	cmp	r4, #0
    89ba:	d11f      	bne.n	89fc <.text+0x89fc>
    89bc:	9e09      	ldr	r6, [sp, #36]
    89be:	9d0a      	ldr	r5, [sp, #40]
    89c0:	2000      	movs	r0, #0
    89c2:	e04c      	b.n	8a5e <.text+0x8a5e>
    89c4:	0000      	lsls	r0, r0, #0
    89c6:	3ff0      	subs	r7, #240
    89c8:	0000      	lsls	r0, r0, #0
    89ca:	0000      	lsls	r0, r0, #0
    89cc:	0000      	lsls	r0, r0, #0
    89ce:	4024      	ands	r4, r4
    89d0:	0000      	lsls	r0, r0, #0
    89d2:	0000      	lsls	r0, r0, #0
    89d4:	0000      	lsls	r0, r0, #0
    89d6:	401c      	ands	r4, r3
    89d8:	0000      	lsls	r0, r0, #0
    89da:	0000      	lsls	r0, r0, #0
    89dc:	0000      	lsls	r0, r0, #0
    89de:	fcc0 0000 	stc2l	0, cr0, [r0], {0}
    89e2:	4014      	ands	r4, r2
    89e4:	0000      	lsls	r0, r0, #0
    89e6:	0000      	lsls	r0, r0, #0
    89e8:	d430      	bmi.n	8a4c <.text+0x8a4c>
    89ea:	0000      	lsls	r0, r0, #0
    89ec:	0000      	lsls	r0, r0, #0
    89ee:	3fe0      	subs	r7, #224
	...
    89fc:	9901      	ldr	r1, [sp, #4]
    89fe:	2901      	cmp	r1, #1
    8a00:	dc0b      	bgt.n	8a1a <.text+0x8a1a>
    8a02:	9a13      	ldr	r2, [sp, #76]
    8a04:	2a00      	cmp	r2, #0
    8a06:	d002      	beq.n	8a0e <.text+0x8a0e>
    8a08:	4cc6      	ldr	r4, [pc, #792]	(8d24 <.text+0x8d24>)
    8a0a:	191b      	adds	r3, r3, r4
    8a0c:	e002      	b.n	8a14 <.text+0x8a14>
    8a0e:	9a22      	ldr	r2, [sp, #136]
    8a10:	2336      	movs	r3, #54
    8a12:	1a9b      	subs	r3, r3, r2
    8a14:	9e09      	ldr	r6, [sp, #36]
    8a16:	9d0a      	ldr	r5, [sp, #40]
    8a18:	e017      	b.n	8a4a <.text+0x8a4a>
    8a1a:	9a0c      	ldr	r2, [sp, #48]
    8a1c:	980a      	ldr	r0, [sp, #40]
    8a1e:	3a01      	subs	r2, #1
    8a20:	4290      	cmp	r0, r2
    8a22:	db01      	blt.n	8a28 <.text+0x8a28>
    8a24:	1a85      	subs	r5, r0, r2
    8a26:	e007      	b.n	8a38 <.text+0x8a38>
    8a28:	990a      	ldr	r1, [sp, #40]
    8a2a:	1a53      	subs	r3, r2, r1
    8a2c:	9a12      	ldr	r2, [sp, #72]
    8a2e:	18c9      	adds	r1, r1, r3
    8a30:	18d2      	adds	r2, r2, r3
    8a32:	9212      	str	r2, [sp, #72]
    8a34:	910a      	str	r1, [sp, #40]
    8a36:	2500      	movs	r5, #0
    8a38:	9b0c      	ldr	r3, [sp, #48]
    8a3a:	2b00      	cmp	r3, #0
    8a3c:	db01      	blt.n	8a42 <.text+0x8a42>
    8a3e:	9e09      	ldr	r6, [sp, #36]
    8a40:	e003      	b.n	8a4a <.text+0x8a4a>
    8a42:	9c09      	ldr	r4, [sp, #36]
    8a44:	980c      	ldr	r0, [sp, #48]
    8a46:	2300      	movs	r3, #0
    8a48:	1a26      	subs	r6, r4, r0
    8a4a:	9909      	ldr	r1, [sp, #36]
    8a4c:	9a11      	ldr	r2, [sp, #68]
    8a4e:	18c9      	adds	r1, r1, r3
    8a50:	9109      	str	r1, [sp, #36]
    8a52:	18d2      	adds	r2, r2, r3
    8a54:	9802      	ldr	r0, [sp, #8]
    8a56:	2101      	movs	r1, #1
    8a58:	9211      	str	r2, [sp, #68]
    8a5a:	f001 fc5d 	bl	a318 <_i2b>
    8a5e:	9016      	str	r0, [sp, #88]
    8a60:	2e00      	cmp	r6, #0
    8a62:	dd0c      	ble.n	8a7e <.text+0x8a7e>
    8a64:	9b11      	ldr	r3, [sp, #68]
    8a66:	2b00      	cmp	r3, #0
    8a68:	dd09      	ble.n	8a7e <.text+0x8a7e>
    8a6a:	42b3      	cmp	r3, r6
    8a6c:	dd00      	ble.n	8a70 <.text+0x8a70>
    8a6e:	1c33      	adds	r3, r6, #0
    8a70:	9c09      	ldr	r4, [sp, #36]
    8a72:	9811      	ldr	r0, [sp, #68]
    8a74:	1ae4      	subs	r4, r4, r3
    8a76:	1ac0      	subs	r0, r0, r3
    8a78:	9409      	str	r4, [sp, #36]
    8a7a:	9011      	str	r0, [sp, #68]
    8a7c:	1af6      	subs	r6, r6, r3
    8a7e:	990a      	ldr	r1, [sp, #40]
    8a80:	2900      	cmp	r1, #0
    8a82:	dd22      	ble.n	8aca <.text+0x8aca>
    8a84:	9a10      	ldr	r2, [sp, #64]
    8a86:	2a00      	cmp	r2, #0
    8a88:	d019      	beq.n	8abe <.text+0x8abe>
    8a8a:	2d00      	cmp	r5, #0
    8a8c:	dd10      	ble.n	8ab0 <.text+0x8ab0>
    8a8e:	9916      	ldr	r1, [sp, #88]
    8a90:	1c2a      	adds	r2, r5, #0
    8a92:	9802      	ldr	r0, [sp, #8]
    8a94:	f001 fc92 	bl	a3bc <_pow5mult>
    8a98:	9016      	str	r0, [sp, #88]
    8a9a:	9916      	ldr	r1, [sp, #88]
    8a9c:	9a14      	ldr	r2, [sp, #80]
    8a9e:	9802      	ldr	r0, [sp, #8]
    8aa0:	f001 fba4 	bl	a1ec <_multiply>
    8aa4:	9914      	ldr	r1, [sp, #80]
    8aa6:	1c04      	adds	r4, r0, #0
    8aa8:	9802      	ldr	r0, [sp, #8]
    8aaa:	f001 f8f5 	bl	9c98 <_Bfree>
    8aae:	9414      	str	r4, [sp, #80]
    8ab0:	9b0a      	ldr	r3, [sp, #40]
    8ab2:	1b5a      	subs	r2, r3, r5
    8ab4:	2a00      	cmp	r2, #0
    8ab6:	d008      	beq.n	8aca <.text+0x8aca>
    8ab8:	9802      	ldr	r0, [sp, #8]
    8aba:	9914      	ldr	r1, [sp, #80]
    8abc:	e002      	b.n	8ac4 <.text+0x8ac4>
    8abe:	9802      	ldr	r0, [sp, #8]
    8ac0:	9914      	ldr	r1, [sp, #80]
    8ac2:	9a0a      	ldr	r2, [sp, #40]
    8ac4:	f001 fc7a 	bl	a3bc <_pow5mult>
    8ac8:	9014      	str	r0, [sp, #80]
    8aca:	9802      	ldr	r0, [sp, #8]
    8acc:	2101      	movs	r1, #1
    8ace:	f001 fc23 	bl	a318 <_i2b>
    8ad2:	9c12      	ldr	r4, [sp, #72]
    8ad4:	9017      	str	r0, [sp, #92]
    8ad6:	2c00      	cmp	r4, #0
    8ad8:	dd05      	ble.n	8ae6 <.text+0x8ae6>
    8ada:	9802      	ldr	r0, [sp, #8]
    8adc:	9917      	ldr	r1, [sp, #92]
    8ade:	1c22      	adds	r2, r4, #0
    8ae0:	f001 fc6c 	bl	a3bc <_pow5mult>
    8ae4:	9017      	str	r0, [sp, #92]
    8ae6:	9801      	ldr	r0, [sp, #4]
    8ae8:	2801      	cmp	r0, #1
    8aea:	dc11      	bgt.n	8b10 <.text+0x8b10>
    8aec:	9904      	ldr	r1, [sp, #16]
    8aee:	2900      	cmp	r1, #0
    8af0:	d10e      	bne.n	8b10 <.text+0x8b10>
    8af2:	9a03      	ldr	r2, [sp, #12]
    8af4:	4b8c      	ldr	r3, [pc, #560]	(8d28 <.text+0x8d28>)
    8af6:	421a      	tst	r2, r3
    8af8:	d10a      	bne.n	8b10 <.text+0x8b10>
    8afa:	4b8c      	ldr	r3, [pc, #560]	(8d2c <.text+0x8d2c>)
    8afc:	421a      	tst	r2, r3
    8afe:	d007      	beq.n	8b10 <.text+0x8b10>
    8b00:	9a09      	ldr	r2, [sp, #36]
    8b02:	9b11      	ldr	r3, [sp, #68]
    8b04:	3201      	adds	r2, #1
    8b06:	3301      	adds	r3, #1
    8b08:	2401      	movs	r4, #1
    8b0a:	9209      	str	r2, [sp, #36]
    8b0c:	9311      	str	r3, [sp, #68]
    8b0e:	e000      	b.n	8b12 <.text+0x8b12>
    8b10:	2400      	movs	r4, #0
    8b12:	9812      	ldr	r0, [sp, #72]
    8b14:	2800      	cmp	r0, #0
    8b16:	d101      	bne.n	8b1c <.text+0x8b1c>
    8b18:	2201      	movs	r2, #1
    8b1a:	e008      	b.n	8b2e <.text+0x8b2e>
    8b1c:	9917      	ldr	r1, [sp, #92]
    8b1e:	690b      	ldr	r3, [r1, #16]
    8b20:	009b      	lsls	r3, r3, #2
    8b22:	185b      	adds	r3, r3, r1
    8b24:	6918      	ldr	r0, [r3, #16]
    8b26:	f001 f8c3 	bl	9cb0 <_hi0bits>
    8b2a:	2320      	movs	r3, #32
    8b2c:	1a1a      	subs	r2, r3, r0
    8b2e:	9b11      	ldr	r3, [sp, #68]
    8b30:	18d2      	adds	r2, r2, r3
    8b32:	231f      	movs	r3, #31
    8b34:	401a      	ands	r2, r3
    8b36:	d00e      	beq.n	8b56 <.text+0x8b56>
    8b38:	2320      	movs	r3, #32
    8b3a:	1a9a      	subs	r2, r3, r2
    8b3c:	2a04      	cmp	r2, #4
    8b3e:	dd08      	ble.n	8b52 <.text+0x8b52>
    8b40:	9809      	ldr	r0, [sp, #36]
    8b42:	9911      	ldr	r1, [sp, #68]
    8b44:	1f13      	subs	r3, r2, #4
    8b46:	18c0      	adds	r0, r0, r3
    8b48:	18c9      	adds	r1, r1, r3
    8b4a:	18f6      	adds	r6, r6, r3
    8b4c:	9009      	str	r0, [sp, #36]
    8b4e:	9111      	str	r1, [sp, #68]
    8b50:	e00a      	b.n	8b68 <.text+0x8b68>
    8b52:	2a03      	cmp	r2, #3
    8b54:	dc08      	bgt.n	8b68 <.text+0x8b68>
    8b56:	1c13      	adds	r3, r2, #0
    8b58:	9811      	ldr	r0, [sp, #68]
    8b5a:	9a09      	ldr	r2, [sp, #36]
    8b5c:	331c      	adds	r3, #28
    8b5e:	18d2      	adds	r2, r2, r3
    8b60:	18c0      	adds	r0, r0, r3
    8b62:	9209      	str	r2, [sp, #36]
    8b64:	9011      	str	r0, [sp, #68]
    8b66:	18f6      	adds	r6, r6, r3
    8b68:	9909      	ldr	r1, [sp, #36]
    8b6a:	2900      	cmp	r1, #0
    8b6c:	dd05      	ble.n	8b7a <.text+0x8b7a>
    8b6e:	9802      	ldr	r0, [sp, #8]
    8b70:	9914      	ldr	r1, [sp, #80]
    8b72:	9a09      	ldr	r2, [sp, #36]
    8b74:	f001 faf2 	bl	a15c <_lshift>
    8b78:	9014      	str	r0, [sp, #80]
    8b7a:	9a11      	ldr	r2, [sp, #68]
    8b7c:	2a00      	cmp	r2, #0
    8b7e:	dd04      	ble.n	8b8a <.text+0x8b8a>
    8b80:	9802      	ldr	r0, [sp, #8]
    8b82:	9917      	ldr	r1, [sp, #92]
    8b84:	f001 faea 	bl	a15c <_lshift>
    8b88:	9017      	str	r0, [sp, #92]
    8b8a:	9b0f      	ldr	r3, [sp, #60]
    8b8c:	2b00      	cmp	r3, #0
    8b8e:	d01e      	beq.n	8bce <.text+0x8bce>
    8b90:	9814      	ldr	r0, [sp, #80]
    8b92:	9917      	ldr	r1, [sp, #92]
    8b94:	f001 f8e6 	bl	9d64 <__mcmp>
    8b98:	2800      	cmp	r0, #0
    8b9a:	da18      	bge.n	8bce <.text+0x8bce>
    8b9c:	980e      	ldr	r0, [sp, #56]
    8b9e:	3801      	subs	r0, #1
    8ba0:	900e      	str	r0, [sp, #56]
    8ba2:	9914      	ldr	r1, [sp, #80]
    8ba4:	9802      	ldr	r0, [sp, #8]
    8ba6:	220a      	movs	r2, #10
    8ba8:	2300      	movs	r3, #0
    8baa:	f001 fbc1 	bl	a330 <_multadd>
    8bae:	9910      	ldr	r1, [sp, #64]
    8bb0:	9014      	str	r0, [sp, #80]
    8bb2:	2900      	cmp	r1, #0
    8bb4:	d102      	bne.n	8bbc <.text+0x8bbc>
    8bb6:	9a0d      	ldr	r2, [sp, #52]
    8bb8:	920c      	str	r2, [sp, #48]
    8bba:	e008      	b.n	8bce <.text+0x8bce>
    8bbc:	2300      	movs	r3, #0
    8bbe:	9802      	ldr	r0, [sp, #8]
    8bc0:	9916      	ldr	r1, [sp, #88]
    8bc2:	220a      	movs	r2, #10
    8bc4:	f001 fbb4 	bl	a330 <_multadd>
    8bc8:	9b0d      	ldr	r3, [sp, #52]
    8bca:	9016      	str	r0, [sp, #88]
    8bcc:	930c      	str	r3, [sp, #48]
    8bce:	980c      	ldr	r0, [sp, #48]
    8bd0:	2800      	cmp	r0, #0
    8bd2:	dc2a      	bgt.n	8c2a <.text+0x8c2a>
    8bd4:	9901      	ldr	r1, [sp, #4]
    8bd6:	2902      	cmp	r1, #2
    8bd8:	dd27      	ble.n	8c2a <.text+0x8c2a>
    8bda:	2800      	cmp	r0, #0
    8bdc:	d110      	bne.n	8c00 <.text+0x8c00>
    8bde:	9917      	ldr	r1, [sp, #92]
    8be0:	9802      	ldr	r0, [sp, #8]
    8be2:	2205      	movs	r2, #5
    8be4:	2300      	movs	r3, #0
    8be6:	f001 fba3 	bl	a330 <_multadd>
    8bea:	9017      	str	r0, [sp, #92]
    8bec:	9917      	ldr	r1, [sp, #92]
    8bee:	9814      	ldr	r0, [sp, #80]
    8bf0:	f001 f8b8 	bl	9d64 <__mcmp>
    8bf4:	2800      	cmp	r0, #0
    8bf6:	dc0d      	bgt.n	8c14 <.text+0x8c14>
    8bf8:	e002      	b.n	8c00 <.text+0x8c00>
    8bfa:	2200      	movs	r2, #0
    8bfc:	9216      	str	r2, [sp, #88]
    8bfe:	9217      	str	r2, [sp, #92]
    8c00:	9b29      	ldr	r3, [sp, #164]
    8c02:	9f1a      	ldr	r7, [sp, #104]
    8c04:	43db      	mvns	r3, r3
    8c06:	2400      	movs	r4, #0
    8c08:	930e      	str	r3, [sp, #56]
    8c0a:	9415      	str	r4, [sp, #84]
    8c0c:	e10c      	b.n	8e28 <.text+0x8e28>
    8c0e:	2000      	movs	r0, #0
    8c10:	9016      	str	r0, [sp, #88]
    8c12:	9017      	str	r0, [sp, #92]
    8c14:	991a      	ldr	r1, [sp, #104]
    8c16:	2331      	movs	r3, #49
    8c18:	700b      	strb	r3, [r1, #0]
    8c1a:	9a0e      	ldr	r2, [sp, #56]
    8c1c:	1c0f      	adds	r7, r1, #0
    8c1e:	3201      	adds	r2, #1
    8c20:	2300      	movs	r3, #0
    8c22:	3701      	adds	r7, #1
    8c24:	920e      	str	r2, [sp, #56]
    8c26:	9315      	str	r3, [sp, #84]
    8c28:	e0fe      	b.n	8e28 <.text+0x8e28>
    8c2a:	9810      	ldr	r0, [sp, #64]
    8c2c:	2800      	cmp	r0, #0
    8c2e:	d100      	bne.n	8c32 <.text+0x8c32>
    8c30:	e0b8      	b.n	8da4 <.text+0x8da4>
    8c32:	2e00      	cmp	r6, #0
    8c34:	dd05      	ble.n	8c42 <.text+0x8c42>
    8c36:	9802      	ldr	r0, [sp, #8]
    8c38:	9916      	ldr	r1, [sp, #88]
    8c3a:	1c32      	adds	r2, r6, #0
    8c3c:	f001 fa8e 	bl	a15c <_lshift>
    8c40:	9016      	str	r0, [sp, #88]
    8c42:	2c00      	cmp	r4, #0
    8c44:	d101      	bne.n	8c4a <.text+0x8c4a>
    8c46:	9816      	ldr	r0, [sp, #88]
    8c48:	e013      	b.n	8c72 <.text+0x8c72>
    8c4a:	9a16      	ldr	r2, [sp, #88]
    8c4c:	9802      	ldr	r0, [sp, #8]
    8c4e:	6851      	ldr	r1, [r2, #4]
    8c50:	f001 f97c 	bl	9f4c <_Balloc>
    8c54:	9b16      	ldr	r3, [sp, #88]
    8c56:	691a      	ldr	r2, [r3, #16]
    8c58:	9916      	ldr	r1, [sp, #88]
    8c5a:	0092      	lsls	r2, r2, #2
    8c5c:	1c04      	adds	r4, r0, #0
    8c5e:	310c      	adds	r1, #12
    8c60:	3208      	adds	r2, #8
    8c62:	300c      	adds	r0, #12
    8c64:	f000 ffe0 	bl	9c28 <memcpy>
    8c68:	9802      	ldr	r0, [sp, #8]
    8c6a:	1c21      	adds	r1, r4, #0
    8c6c:	2201      	movs	r2, #1
    8c6e:	f001 fa75 	bl	a15c <_lshift>
    8c72:	9c04      	ldr	r4, [sp, #16]
    8c74:	9916      	ldr	r1, [sp, #88]
    8c76:	2301      	movs	r3, #1
    8c78:	401c      	ands	r4, r3
    8c7a:	9408      	str	r4, [sp, #32]
    8c7c:	9115      	str	r1, [sp, #84]
    8c7e:	9016      	str	r0, [sp, #88]
    8c80:	9c1a      	ldr	r4, [sp, #104]
    8c82:	9917      	ldr	r1, [sp, #92]
    8c84:	9814      	ldr	r0, [sp, #80]
    8c86:	f7ff fa65 	bl	8154 <quorem>
    8c8a:	9915      	ldr	r1, [sp, #84]
    8c8c:	9007      	str	r0, [sp, #28]
    8c8e:	1c05      	adds	r5, r0, #0
    8c90:	9814      	ldr	r0, [sp, #80]
    8c92:	f001 f867 	bl	9d64 <__mcmp>
    8c96:	9917      	ldr	r1, [sp, #92]
    8c98:	901f      	str	r0, [sp, #124]
    8c9a:	9a16      	ldr	r2, [sp, #88]
    8c9c:	9802      	ldr	r0, [sp, #8]
    8c9e:	f001 f9ed 	bl	a07c <__mdiff>
    8ca2:	68c3      	ldr	r3, [r0, #12]
    8ca4:	3530      	adds	r5, #48
    8ca6:	1c06      	adds	r6, r0, #0
    8ca8:	2b00      	cmp	r3, #0
    8caa:	d000      	beq.n	8cae <.text+0x8cae>
    8cac:	e0e0      	b.n	8e70 <.text+0x8e70>
    8cae:	1c31      	adds	r1, r6, #0
    8cb0:	9814      	ldr	r0, [sp, #80]
    8cb2:	f001 f857 	bl	9d64 <__mcmp>
    8cb6:	1c31      	adds	r1, r6, #0
    8cb8:	1c07      	adds	r7, r0, #0
    8cba:	9802      	ldr	r0, [sp, #8]
    8cbc:	f000 ffec 	bl	9c98 <_Bfree>
    8cc0:	2f00      	cmp	r7, #0
    8cc2:	d10d      	bne.n	8ce0 <.text+0x8ce0>
    8cc4:	9a01      	ldr	r2, [sp, #4]
    8cc6:	2a00      	cmp	r2, #0
    8cc8:	d10a      	bne.n	8ce0 <.text+0x8ce0>
    8cca:	9b08      	ldr	r3, [sp, #32]
    8ccc:	2b00      	cmp	r3, #0
    8cce:	d107      	bne.n	8ce0 <.text+0x8ce0>
    8cd0:	2d39      	cmp	r5, #57
    8cd2:	d031      	beq.n	8d38 <.text+0x8d38>
    8cd4:	981f      	ldr	r0, [sp, #124]
    8cd6:	2800      	cmp	r0, #0
    8cd8:	dd21      	ble.n	8d1e <.text+0x8d1e>
    8cda:	9d07      	ldr	r5, [sp, #28]
    8cdc:	3531      	adds	r5, #49
    8cde:	e01e      	b.n	8d1e <.text+0x8d1e>
    8ce0:	991f      	ldr	r1, [sp, #124]
    8ce2:	2900      	cmp	r1, #0
    8ce4:	db07      	blt.n	8cf6 <.text+0x8cf6>
    8ce6:	2900      	cmp	r1, #0
    8ce8:	d122      	bne.n	8d30 <.text+0x8d30>
    8cea:	9a01      	ldr	r2, [sp, #4]
    8cec:	2a00      	cmp	r2, #0
    8cee:	d11f      	bne.n	8d30 <.text+0x8d30>
    8cf0:	9b08      	ldr	r3, [sp, #32]
    8cf2:	2b00      	cmp	r3, #0
    8cf4:	d11c      	bne.n	8d30 <.text+0x8d30>
    8cf6:	2f00      	cmp	r7, #0
    8cf8:	dd11      	ble.n	8d1e <.text+0x8d1e>
    8cfa:	9914      	ldr	r1, [sp, #80]
    8cfc:	9802      	ldr	r0, [sp, #8]
    8cfe:	2201      	movs	r2, #1
    8d00:	f001 fa2c 	bl	a15c <_lshift>
    8d04:	9917      	ldr	r1, [sp, #92]
    8d06:	9014      	str	r0, [sp, #80]
    8d08:	f001 f82c 	bl	9d64 <__mcmp>
    8d0c:	2800      	cmp	r0, #0
    8d0e:	dc03      	bgt.n	8d18 <.text+0x8d18>
    8d10:	2800      	cmp	r0, #0
    8d12:	d104      	bne.n	8d1e <.text+0x8d1e>
    8d14:	07e8      	lsls	r0, r5, #31
    8d16:	d502      	bpl.n	8d1e <.text+0x8d1e>
    8d18:	3501      	adds	r5, #1
    8d1a:	2d3a      	cmp	r5, #58
    8d1c:	d00c      	beq.n	8d38 <.text+0x8d38>
    8d1e:	7025      	strb	r5, [r4, #0]
    8d20:	e081      	b.n	8e26 <.text+0x8e26>
    8d22:	0000      	lsls	r0, r0, #0
    8d24:	0433      	lsls	r3, r6, #16
    8d26:	0000      	lsls	r0, r0, #0
    8d28:	ffff 000f 	vaddl.u<illegal width 64>	q8, d15, d15
    8d2c:	0000      	lsls	r0, r0, #0
    8d2e:	7ff0      	ldrb	r0, [r6, #31]
    8d30:	2f00      	cmp	r7, #0
    8d32:	dd08      	ble.n	8d46 <.text+0x8d46>
    8d34:	2d39      	cmp	r5, #57
    8d36:	d103      	bne.n	8d40 <.text+0x8d40>
    8d38:	2339      	movs	r3, #57
    8d3a:	7023      	strb	r3, [r4, #0]
    8d3c:	3401      	adds	r4, #1
    8d3e:	e062      	b.n	8e06 <.text+0x8e06>
    8d40:	1c6b      	adds	r3, r5, #1
    8d42:	7023      	strb	r3, [r4, #0]
    8d44:	e06f      	b.n	8e26 <.text+0x8e26>
    8d46:	7025      	strb	r5, [r4, #0]
    8d48:	991a      	ldr	r1, [sp, #104]
    8d4a:	9a0c      	ldr	r2, [sp, #48]
    8d4c:	3401      	adds	r4, #1
    8d4e:	188b      	adds	r3, r1, r2
    8d50:	429c      	cmp	r4, r3
    8d52:	d03c      	beq.n	8dce <.text+0x8dce>
    8d54:	2300      	movs	r3, #0
    8d56:	9802      	ldr	r0, [sp, #8]
    8d58:	9914      	ldr	r1, [sp, #80]
    8d5a:	220a      	movs	r2, #10
    8d5c:	f001 fae8 	bl	a330 <_multadd>
    8d60:	9b15      	ldr	r3, [sp, #84]
    8d62:	9014      	str	r0, [sp, #80]
    8d64:	9816      	ldr	r0, [sp, #88]
    8d66:	4283      	cmp	r3, r0
    8d68:	d108      	bne.n	8d7c <.text+0x8d7c>
    8d6a:	9802      	ldr	r0, [sp, #8]
    8d6c:	9916      	ldr	r1, [sp, #88]
    8d6e:	220a      	movs	r2, #10
    8d70:	2300      	movs	r3, #0
    8d72:	f001 fadd 	bl	a330 <_multadd>
    8d76:	9016      	str	r0, [sp, #88]
    8d78:	9015      	str	r0, [sp, #84]
    8d7a:	e782      	b.n	8c82 <.text+0x8c82>
    8d7c:	9915      	ldr	r1, [sp, #84]
    8d7e:	220a      	movs	r2, #10
    8d80:	2300      	movs	r3, #0
    8d82:	9802      	ldr	r0, [sp, #8]
    8d84:	f001 fad4 	bl	a330 <_multadd>
    8d88:	9916      	ldr	r1, [sp, #88]
    8d8a:	9015      	str	r0, [sp, #84]
    8d8c:	220a      	movs	r2, #10
    8d8e:	9802      	ldr	r0, [sp, #8]
    8d90:	2300      	movs	r3, #0
    8d92:	f001 facd 	bl	a330 <_multadd>
    8d96:	9016      	str	r0, [sp, #88]
    8d98:	e773      	b.n	8c82 <.text+0x8c82>
    8d9a:	991a      	ldr	r1, [sp, #104]
    8d9c:	2200      	movs	r2, #0
    8d9e:	190c      	adds	r4, r1, r4
    8da0:	9215      	str	r2, [sp, #84]
    8da2:	e014      	b.n	8dce <.text+0x8dce>
    8da4:	2400      	movs	r4, #0
    8da6:	9814      	ldr	r0, [sp, #80]
    8da8:	9917      	ldr	r1, [sp, #92]
    8daa:	f7ff f9d3 	bl	8154 <quorem>
    8dae:	9b1a      	ldr	r3, [sp, #104]
    8db0:	1c05      	adds	r5, r0, #0
    8db2:	3530      	adds	r5, #48
    8db4:	54e5      	strb	r5, [r4, r3]
    8db6:	980c      	ldr	r0, [sp, #48]
    8db8:	3401      	adds	r4, #1
    8dba:	4284      	cmp	r4, r0
    8dbc:	daed      	bge.n	8d9a <.text+0x8d9a>
    8dbe:	9802      	ldr	r0, [sp, #8]
    8dc0:	9914      	ldr	r1, [sp, #80]
    8dc2:	220a      	movs	r2, #10
    8dc4:	2300      	movs	r3, #0
    8dc6:	f001 fab3 	bl	a330 <_multadd>
    8dca:	9014      	str	r0, [sp, #80]
    8dcc:	e7eb      	b.n	8da6 <.text+0x8da6>
    8dce:	9914      	ldr	r1, [sp, #80]
    8dd0:	9802      	ldr	r0, [sp, #8]
    8dd2:	2201      	movs	r2, #1
    8dd4:	f001 f9c2 	bl	a15c <_lshift>
    8dd8:	9917      	ldr	r1, [sp, #92]
    8dda:	9014      	str	r0, [sp, #80]
    8ddc:	f000 ffc2 	bl	9d64 <__mcmp>
    8de0:	2800      	cmp	r0, #0
    8de2:	dc10      	bgt.n	8e06 <.text+0x8e06>
    8de4:	2800      	cmp	r0, #0
    8de6:	d11a      	bne.n	8e1e <.text+0x8e1e>
    8de8:	07e9      	lsls	r1, r5, #31
    8dea:	d40c      	bmi.n	8e06 <.text+0x8e06>
    8dec:	e017      	b.n	8e1e <.text+0x8e1e>
    8dee:	9b1a      	ldr	r3, [sp, #104]
    8df0:	429a      	cmp	r2, r3
    8df2:	d109      	bne.n	8e08 <.text+0x8e08>
    8df4:	981a      	ldr	r0, [sp, #104]
    8df6:	9c0e      	ldr	r4, [sp, #56]
    8df8:	1c07      	adds	r7, r0, #0
    8dfa:	3401      	adds	r4, #1
    8dfc:	2331      	movs	r3, #49
    8dfe:	3701      	adds	r7, #1
    8e00:	940e      	str	r4, [sp, #56]
    8e02:	7003      	strb	r3, [r0, #0]
    8e04:	e010      	b.n	8e28 <.text+0x8e28>
    8e06:	1c22      	adds	r2, r4, #0
    8e08:	3a01      	subs	r2, #1
    8e0a:	7813      	ldrb	r3, [r2, #0]
    8e0c:	2b39      	cmp	r3, #57
    8e0e:	d0ee      	beq.n	8dee <.text+0x8dee>
    8e10:	3301      	adds	r3, #1
    8e12:	1c57      	adds	r7, r2, #1
    8e14:	7013      	strb	r3, [r2, #0]
    8e16:	e007      	b.n	8e28 <.text+0x8e28>
    8e18:	9920      	ldr	r1, [sp, #128]
    8e1a:	910e      	str	r1, [sp, #56]
    8e1c:	e018      	b.n	8e50 <.text+0x8e50>
    8e1e:	3c01      	subs	r4, #1
    8e20:	7823      	ldrb	r3, [r4, #0]
    8e22:	2b30      	cmp	r3, #48
    8e24:	d0fb      	beq.n	8e1e <.text+0x8e1e>
    8e26:	1c67      	adds	r7, r4, #1
    8e28:	9802      	ldr	r0, [sp, #8]
    8e2a:	9917      	ldr	r1, [sp, #92]
    8e2c:	f000 ff34 	bl	9c98 <_Bfree>
    8e30:	9a16      	ldr	r2, [sp, #88]
    8e32:	2a00      	cmp	r2, #0
    8e34:	d00c      	beq.n	8e50 <.text+0x8e50>
    8e36:	9b15      	ldr	r3, [sp, #84]
    8e38:	2b00      	cmp	r3, #0
    8e3a:	d005      	beq.n	8e48 <.text+0x8e48>
    8e3c:	4293      	cmp	r3, r2
    8e3e:	d003      	beq.n	8e48 <.text+0x8e48>
    8e40:	9802      	ldr	r0, [sp, #8]
    8e42:	1c19      	adds	r1, r3, #0
    8e44:	f000 ff28 	bl	9c98 <_Bfree>
    8e48:	9802      	ldr	r0, [sp, #8]
    8e4a:	9916      	ldr	r1, [sp, #88]
    8e4c:	f000 ff24 	bl	9c98 <_Bfree>
    8e50:	9802      	ldr	r0, [sp, #8]
    8e52:	9914      	ldr	r1, [sp, #80]
    8e54:	f000 ff20 	bl	9c98 <_Bfree>
    8e58:	2300      	movs	r3, #0
    8e5a:	703b      	strb	r3, [r7, #0]
    8e5c:	9b0e      	ldr	r3, [sp, #56]
    8e5e:	9c2a      	ldr	r4, [sp, #168]
    8e60:	982c      	ldr	r0, [sp, #176]
    8e62:	3301      	adds	r3, #1
    8e64:	6023      	str	r3, [r4, #0]
    8e66:	2800      	cmp	r0, #0
    8e68:	d000      	beq.n	8e6c <.text+0x8e6c>
    8e6a:	6007      	str	r7, [r0, #0]
    8e6c:	981a      	ldr	r0, [sp, #104]
    8e6e:	e005      	b.n	8e7c <.text+0x8e7c>
    8e70:	9802      	ldr	r0, [sp, #8]
    8e72:	1c31      	adds	r1, r6, #0
    8e74:	f000 ff10 	bl	9c98 <_Bfree>
    8e78:	2701      	movs	r7, #1
    8e7a:	e731      	b.n	8ce0 <.text+0x8ce0>
    8e7c:	b024      	add	sp, #144
    8e7e:	bcf0      	pop	{r4, r5, r6, r7}
    8e80:	bc02      	pop	{r1}
    8e82:	4708      	bx	r1

00008e84 <fflush>:
    8e84:	b570      	push	{r4, r5, r6, lr}
    8e86:	1c04      	adds	r4, r0, #0
    8e88:	2800      	cmp	r0, #0
    8e8a:	d105      	bne.n	8e98 <fflush+0x14>
    8e8c:	4b1b      	ldr	r3, [pc, #108]	(8efc <.text+0x8efc>)
    8e8e:	491c      	ldr	r1, [pc, #112]	(8f00 <.text+0x8f00>)
    8e90:	6818      	ldr	r0, [r3, #0]
    8e92:	f000 fb93 	bl	95bc <_fwalk>
    8e96:	e02e      	b.n	8ef6 <fflush+0x72>
    8e98:	4b1a      	ldr	r3, [pc, #104]	(8f04 <.text+0x8f04>)
    8e9a:	6818      	ldr	r0, [r3, #0]
    8e9c:	2800      	cmp	r0, #0
    8e9e:	d004      	beq.n	8eaa <fflush+0x26>
    8ea0:	6b83      	ldr	r3, [r0, #56]
    8ea2:	2b00      	cmp	r3, #0
    8ea4:	d101      	bne.n	8eaa <fflush+0x26>
    8ea6:	f000 f84d 	bl	8f44 <__sinit>
    8eaa:	230c      	movs	r3, #12
    8eac:	5ee1      	ldrsh	r1, [r4, r3]
    8eae:	070b      	lsls	r3, r1, #28
    8eb0:	d520      	bpl.n	8ef4 <fflush+0x70>
    8eb2:	6926      	ldr	r6, [r4, #16]
    8eb4:	2e00      	cmp	r6, #0
    8eb6:	d01d      	beq.n	8ef4 <fflush+0x70>
    8eb8:	2303      	movs	r3, #3
    8eba:	6822      	ldr	r2, [r4, #0]
    8ebc:	6026      	str	r6, [r4, #0]
    8ebe:	4219      	tst	r1, r3
    8ec0:	d008      	beq.n	8ed4 <fflush+0x50>
    8ec2:	2300      	movs	r3, #0
    8ec4:	e007      	b.n	8ed6 <fflush+0x52>
    8ec6:	89a3      	ldrh	r3, [r4, #12]
    8ec8:	2240      	movs	r2, #64
    8eca:	2001      	movs	r0, #1
    8ecc:	4313      	orrs	r3, r2
    8ece:	4240      	negs	r0, r0
    8ed0:	81a3      	strh	r3, [r4, #12]
    8ed2:	e010      	b.n	8ef6 <fflush+0x72>
    8ed4:	6963      	ldr	r3, [r4, #20]
    8ed6:	1b95      	subs	r5, r2, r6
    8ed8:	60a3      	str	r3, [r4, #8]
    8eda:	e009      	b.n	8ef0 <fflush+0x6c>
    8edc:	69e0      	ldr	r0, [r4, #28]
    8ede:	6a63      	ldr	r3, [r4, #36]
    8ee0:	1c31      	adds	r1, r6, #0
    8ee2:	1c2a      	adds	r2, r5, #0
    8ee4:	f000 f810 	bl	8f08 <.text+0x8f08>
    8ee8:	2800      	cmp	r0, #0
    8eea:	ddec      	ble.n	8ec6 <fflush+0x42>
    8eec:	1836      	adds	r6, r6, r0
    8eee:	1a2d      	subs	r5, r5, r0
    8ef0:	2d00      	cmp	r5, #0
    8ef2:	dcf3      	bgt.n	8edc <fflush+0x58>
    8ef4:	2000      	movs	r0, #0
    8ef6:	bc70      	pop	{r4, r5, r6}
    8ef8:	bc02      	pop	{r1}
    8efa:	4708      	bx	r1
    8efc:	d3f8      	bcc.n	8ef0 <fflush+0x6c>
    8efe:	0000      	lsls	r0, r0, #0
    8f00:	8e85      	ldrh	r5, [r0, #52]
    8f02:	0000      	lsls	r0, r0, #0
    8f04:	001c      	lsls	r4, r3, #0
    8f06:	4000      	ands	r0, r0
    8f08:	4718      	bx	r3
    8f0a:	46c0      	nop			(mov r8, r8)

00008f0c <std>:
    8f0c:	2300      	movs	r3, #0
    8f0e:	6003      	str	r3, [r0, #0]
    8f10:	6043      	str	r3, [r0, #4]
    8f12:	6083      	str	r3, [r0, #8]
    8f14:	6103      	str	r3, [r0, #16]
    8f16:	6143      	str	r3, [r0, #20]
    8f18:	6183      	str	r3, [r0, #24]
    8f1a:	4b06      	ldr	r3, [pc, #24]	(8f34 <.text+0x8f34>)
    8f1c:	6203      	str	r3, [r0, #32]
    8f1e:	4b06      	ldr	r3, [pc, #24]	(8f38 <.text+0x8f38>)
    8f20:	6243      	str	r3, [r0, #36]
    8f22:	4b06      	ldr	r3, [pc, #24]	(8f3c <.text+0x8f3c>)
    8f24:	6283      	str	r3, [r0, #40]
    8f26:	4b06      	ldr	r3, [pc, #24]	(8f40 <.text+0x8f40>)
    8f28:	8181      	strh	r1, [r0, #12]
    8f2a:	81c2      	strh	r2, [r0, #14]
    8f2c:	61c0      	str	r0, [r0, #28]
    8f2e:	62c3      	str	r3, [r0, #44]
    8f30:	4770      	bx	lr
    8f32:	0000      	lsls	r0, r0, #0
    8f34:	a8bd      	add	r0, sp, #756
    8f36:	0000      	lsls	r0, r0, #0
    8f38:	a879      	add	r0, sp, #484
    8f3a:	0000      	lsls	r0, r0, #0
    8f3c:	a83d      	add	r0, sp, #244
    8f3e:	0000      	lsls	r0, r0, #0
    8f40:	a825      	add	r0, sp, #148
	...

00008f44 <__sinit>:
    8f44:	b510      	push	{r4, lr}
    8f46:	6b82      	ldr	r2, [r0, #56]
    8f48:	1c04      	adds	r4, r0, #0
    8f4a:	2a00      	cmp	r2, #0
    8f4c:	d122      	bne.n	8f94 <__sinit+0x50>
    8f4e:	4b13      	ldr	r3, [pc, #76]	(8f9c <.text+0x8f9c>)
    8f50:	63c3      	str	r3, [r0, #60]
    8f52:	2301      	movs	r3, #1
    8f54:	6383      	str	r3, [r0, #56]
    8f56:	23b8      	movs	r3, #184
    8f58:	009b      	lsls	r3, r3, #2
    8f5a:	50c2      	str	r2, [r0, r3]
    8f5c:	23b9      	movs	r3, #185
    8f5e:	009b      	lsls	r3, r3, #2
    8f60:	2203      	movs	r2, #3
    8f62:	21bb      	movs	r1, #187
    8f64:	50c2      	str	r2, [r0, r3]
    8f66:	0089      	lsls	r1, r1, #2
    8f68:	23ba      	movs	r3, #186
    8f6a:	1842      	adds	r2, r0, r1
    8f6c:	009b      	lsls	r3, r3, #2
    8f6e:	50c2      	str	r2, [r0, r3]
    8f70:	2104      	movs	r1, #4
    8f72:	6840      	ldr	r0, [r0, #4]
    8f74:	2200      	movs	r2, #0
    8f76:	1c23      	adds	r3, r4, #0
    8f78:	f7ff ffc8 	bl	8f0c <std>
    8f7c:	68a0      	ldr	r0, [r4, #8]
    8f7e:	2109      	movs	r1, #9
    8f80:	2201      	movs	r2, #1
    8f82:	1c23      	adds	r3, r4, #0
    8f84:	f7ff ffc2 	bl	8f0c <std>
    8f88:	68e0      	ldr	r0, [r4, #12]
    8f8a:	210a      	movs	r1, #10
    8f8c:	2202      	movs	r2, #2
    8f8e:	1c23      	adds	r3, r4, #0
    8f90:	f7ff ffbc 	bl	8f0c <std>
    8f94:	bc10      	pop	{r4}
    8f96:	bc01      	pop	{r0}
    8f98:	4700      	bx	r0
    8f9a:	0000      	lsls	r0, r0, #0
    8f9c:	8fb9      	ldrh	r1, [r7, #60]
	...

00008fa0 <__sfp_lock_acquire>:
    8fa0:	4770      	bx	lr
	...

00008fa4 <__sfp_lock_release>:
    8fa4:	4770      	bx	lr
	...

00008fa8 <__sinit_lock_acquire>:
    8fa8:	4770      	bx	lr
	...

00008fac <__sinit_lock_release>:
    8fac:	4770      	bx	lr
	...

00008fb0 <__fp_lock>:
    8fb0:	2000      	movs	r0, #0
    8fb2:	4770      	bx	lr

00008fb4 <__fp_unlock>:
    8fb4:	2000      	movs	r0, #0
    8fb6:	4770      	bx	lr

00008fb8 <_cleanup_r>:
    8fb8:	b500      	push	{lr}
    8fba:	4902      	ldr	r1, [pc, #8]	(8fc4 <.text+0x8fc4>)
    8fbc:	f000 fafe 	bl	95bc <_fwalk>
    8fc0:	bc01      	pop	{r0}
    8fc2:	4700      	bx	r0
    8fc4:	aa09      	add	r2, sp, #36
	...

00008fc8 <_cleanup>:
    8fc8:	b500      	push	{lr}
    8fca:	4b03      	ldr	r3, [pc, #12]	(8fd8 <.text+0x8fd8>)
    8fcc:	6818      	ldr	r0, [r3, #0]
    8fce:	f7ff fff3 	bl	8fb8 <_cleanup_r>
    8fd2:	bc01      	pop	{r0}
    8fd4:	4700      	bx	r0
    8fd6:	0000      	lsls	r0, r0, #0
    8fd8:	d3f8      	bcc.n	8fcc <_cleanup+0x4>
	...

00008fdc <__sfmoreglue>:
    8fdc:	b570      	push	{r4, r5, r6, lr}
    8fde:	235c      	movs	r3, #92
    8fe0:	1c0e      	adds	r6, r1, #0
    8fe2:	435e      	muls	r6, r3
    8fe4:	1c0d      	adds	r5, r1, #0
    8fe6:	1c31      	adds	r1, r6, #0
    8fe8:	310c      	adds	r1, #12
    8fea:	f000 fbbb 	bl	9764 <_malloc_r>
    8fee:	2800      	cmp	r0, #0
    8ff0:	d101      	bne.n	8ff6 <__sfmoreglue+0x1a>
    8ff2:	2400      	movs	r4, #0
    8ff4:	e009      	b.n	900a <__sfmoreglue+0x2e>
    8ff6:	1c04      	adds	r4, r0, #0
    8ff8:	2300      	movs	r3, #0
    8ffa:	300c      	adds	r0, #12
    8ffc:	6023      	str	r3, [r4, #0]
    8ffe:	6065      	str	r5, [r4, #4]
    9000:	60a0      	str	r0, [r4, #8]
    9002:	2100      	movs	r1, #0
    9004:	1c32      	adds	r2, r6, #0
    9006:	f000 fe3b 	bl	9c80 <memset>
    900a:	1c20      	adds	r0, r4, #0
    900c:	bc70      	pop	{r4, r5, r6}
    900e:	bc02      	pop	{r1}
    9010:	4708      	bx	r1
	...

00009014 <__fp_unlock_all>:
    9014:	b500      	push	{lr}
    9016:	4b03      	ldr	r3, [pc, #12]	(9024 <.text+0x9024>)
    9018:	4903      	ldr	r1, [pc, #12]	(9028 <.text+0x9028>)
    901a:	6818      	ldr	r0, [r3, #0]
    901c:	f000 face 	bl	95bc <_fwalk>
    9020:	bc01      	pop	{r0}
    9022:	4700      	bx	r0
    9024:	001c      	lsls	r4, r3, #0
    9026:	4000      	ands	r0, r0
    9028:	8fb5      	ldrh	r5, [r6, #60]
	...

0000902c <__fp_lock_all>:
    902c:	b500      	push	{lr}
    902e:	4b03      	ldr	r3, [pc, #12]	(903c <.text+0x903c>)
    9030:	4903      	ldr	r1, [pc, #12]	(9040 <.text+0x9040>)
    9032:	6818      	ldr	r0, [r3, #0]
    9034:	f000 fac2 	bl	95bc <_fwalk>
    9038:	bc01      	pop	{r0}
    903a:	4700      	bx	r0
    903c:	001c      	lsls	r4, r3, #0
    903e:	4000      	ands	r0, r0
    9040:	8fb1      	ldrh	r1, [r6, #60]
	...

00009044 <__sfp>:
    9044:	b530      	push	{r4, r5, lr}
    9046:	4b1c      	ldr	r3, [pc, #112]	(90b8 <.text+0x90b8>)
    9048:	681c      	ldr	r4, [r3, #0]
    904a:	6ba3      	ldr	r3, [r4, #56]
    904c:	1c05      	adds	r5, r0, #0
    904e:	2b00      	cmp	r3, #0
    9050:	d102      	bne.n	9058 <__sfp+0x14>
    9052:	1c20      	adds	r0, r4, #0
    9054:	f7ff ff76 	bl	8f44 <__sinit>
    9058:	21b8      	movs	r1, #184
    905a:	0089      	lsls	r1, r1, #2
    905c:	1864      	adds	r4, r4, r1
    905e:	68a0      	ldr	r0, [r4, #8]
    9060:	6863      	ldr	r3, [r4, #4]
    9062:	e004      	b.n	906e <__sfp+0x2a>
    9064:	210c      	movs	r1, #12
    9066:	5e42      	ldrsh	r2, [r0, r1]
    9068:	2a00      	cmp	r2, #0
    906a:	d012      	beq.n	9092 <__sfp+0x4e>
    906c:	305c      	adds	r0, #92
    906e:	3b01      	subs	r3, #1
    9070:	d5f8      	bpl.n	9064 <__sfp+0x20>
    9072:	6823      	ldr	r3, [r4, #0]
    9074:	2b00      	cmp	r3, #0
    9076:	d106      	bne.n	9086 <__sfp+0x42>
    9078:	1c28      	adds	r0, r5, #0
    907a:	2104      	movs	r1, #4
    907c:	f7ff ffae 	bl	8fdc <__sfmoreglue>
    9080:	6020      	str	r0, [r4, #0]
    9082:	2800      	cmp	r0, #0
    9084:	d001      	beq.n	908a <__sfp+0x46>
    9086:	6824      	ldr	r4, [r4, #0]
    9088:	e7e9      	b.n	905e <__sfp+0x1a>
    908a:	230c      	movs	r3, #12
    908c:	2000      	movs	r0, #0
    908e:	602b      	str	r3, [r5, #0]
    9090:	e00e      	b.n	90b0 <__sfp+0x6c>
    9092:	2301      	movs	r3, #1
    9094:	425b      	negs	r3, r3
    9096:	81c3      	strh	r3, [r0, #14]
    9098:	2301      	movs	r3, #1
    909a:	8183      	strh	r3, [r0, #12]
    909c:	6002      	str	r2, [r0, #0]
    909e:	6082      	str	r2, [r0, #8]
    90a0:	6042      	str	r2, [r0, #4]
    90a2:	6102      	str	r2, [r0, #16]
    90a4:	6142      	str	r2, [r0, #20]
    90a6:	6182      	str	r2, [r0, #24]
    90a8:	6302      	str	r2, [r0, #48]
    90aa:	6342      	str	r2, [r0, #52]
    90ac:	6442      	str	r2, [r0, #68]
    90ae:	6482      	str	r2, [r0, #72]
    90b0:	bc30      	pop	{r4, r5}
    90b2:	bc02      	pop	{r1}
    90b4:	4708      	bx	r1
    90b6:	0000      	lsls	r0, r0, #0
    90b8:	d3f8      	bcc.n	90ac <__sfp+0x68>
	...

000090bc <_malloc_trim_r>:
    90bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    90be:	1c0c      	adds	r4, r1, #0
    90c0:	1c05      	adds	r5, r0, #0
    90c2:	f000 fde5 	bl	9c90 <__malloc_lock>
    90c6:	4f21      	ldr	r7, [pc, #132]	(914c <.text+0x914c>)
    90c8:	68bb      	ldr	r3, [r7, #8]
    90ca:	685a      	ldr	r2, [r3, #4]
    90cc:	2303      	movs	r3, #3
    90ce:	1c16      	adds	r6, r2, #0
    90d0:	439e      	bics	r6, r3
    90d2:	4b1f      	ldr	r3, [pc, #124]	(9150 <.text+0x9150>)
    90d4:	1b34      	subs	r4, r6, r4
    90d6:	18e4      	adds	r4, r4, r3
    90d8:	0b24      	lsrs	r4, r4, #12
    90da:	3c01      	subs	r4, #1
    90dc:	0324      	lsls	r4, r4, #12
    90de:	3310      	adds	r3, #16
    90e0:	429c      	cmp	r4, r3
    90e2:	dd1d      	ble.n	9120 <_malloc_trim_r+0x64>
    90e4:	1c28      	adds	r0, r5, #0
    90e6:	2100      	movs	r1, #0
    90e8:	f003 ffe2 	bl	d0b0 <___sbrk_r_from_thumb>
    90ec:	68bb      	ldr	r3, [r7, #8]
    90ee:	18f3      	adds	r3, r6, r3
    90f0:	4298      	cmp	r0, r3
    90f2:	d115      	bne.n	9120 <_malloc_trim_r+0x64>
    90f4:	4261      	negs	r1, r4
    90f6:	1c28      	adds	r0, r5, #0
    90f8:	f003 ffda 	bl	d0b0 <___sbrk_r_from_thumb>
    90fc:	3001      	adds	r0, #1
    90fe:	d114      	bne.n	912a <_malloc_trim_r+0x6e>
    9100:	2100      	movs	r1, #0
    9102:	1c28      	adds	r0, r5, #0
    9104:	f003 ffd4 	bl	d0b0 <___sbrk_r_from_thumb>
    9108:	68bc      	ldr	r4, [r7, #8]
    910a:	1b01      	subs	r1, r0, r4
    910c:	290f      	cmp	r1, #15
    910e:	dd07      	ble.n	9120 <_malloc_trim_r+0x64>
    9110:	4b10      	ldr	r3, [pc, #64]	(9154 <.text+0x9154>)
    9112:	681b      	ldr	r3, [r3, #0]
    9114:	4a10      	ldr	r2, [pc, #64]	(9158 <.text+0x9158>)
    9116:	1ac3      	subs	r3, r0, r3
    9118:	6013      	str	r3, [r2, #0]
    911a:	2301      	movs	r3, #1
    911c:	430b      	orrs	r3, r1
    911e:	6063      	str	r3, [r4, #4]
    9120:	1c28      	adds	r0, r5, #0
    9122:	f000 fdb7 	bl	9c94 <__malloc_unlock>
    9126:	2000      	movs	r0, #0
    9128:	e00c      	b.n	9144 <_malloc_trim_r+0x88>
    912a:	2201      	movs	r2, #1
    912c:	1b33      	subs	r3, r6, r4
    912e:	4313      	orrs	r3, r2
    9130:	68b9      	ldr	r1, [r7, #8]
    9132:	4a09      	ldr	r2, [pc, #36]	(9158 <.text+0x9158>)
    9134:	604b      	str	r3, [r1, #4]
    9136:	6813      	ldr	r3, [r2, #0]
    9138:	1b1b      	subs	r3, r3, r4
    913a:	1c28      	adds	r0, r5, #0
    913c:	6013      	str	r3, [r2, #0]
    913e:	f000 fda9 	bl	9c94 <__malloc_unlock>
    9142:	2001      	movs	r0, #1
    9144:	bcf0      	pop	{r4, r5, r6, r7}
    9146:	bc02      	pop	{r1}
    9148:	4708      	bx	r1
    914a:	0000      	lsls	r0, r0, #0
    914c:	0430      	lsls	r0, r6, #16
    914e:	4000      	ands	r0, r0
    9150:	0fef      	lsrs	r7, r5, #31
    9152:	0000      	lsls	r0, r0, #0
    9154:	083c      	lsrs	r4, r7, #32
    9156:	4000      	ands	r0, r0
    9158:	0c6c      	lsrs	r4, r5, #17
    915a:	4000      	ands	r0, r0

0000915c <_free_r>:
    915c:	b5f0      	push	{r4, r5, r6, r7, lr}
    915e:	b081      	sub	sp, #4
    9160:	9000      	str	r0, [sp, #0]
    9162:	1c0c      	adds	r4, r1, #0
    9164:	2900      	cmp	r1, #0
    9166:	d100      	bne.n	916a <_free_r+0xe>
    9168:	e0bd      	b.n	92e6 <_free_r+0x18a>
    916a:	1c26      	adds	r6, r4, #0
    916c:	3e08      	subs	r6, #8
    916e:	f000 fd8f 	bl	9c90 <__malloc_lock>
    9172:	6871      	ldr	r1, [r6, #4]
    9174:	2201      	movs	r2, #1
    9176:	1c0c      	adds	r4, r1, #0
    9178:	4394      	bics	r4, r2
    917a:	1930      	adds	r0, r6, r4
    917c:	4694      	mov	ip, r2
    917e:	6842      	ldr	r2, [r0, #4]
    9180:	4f5b      	ldr	r7, [pc, #364]	(92f0 <.text+0x92f0>)
    9182:	2303      	movs	r3, #3
    9184:	1c15      	adds	r5, r2, #0
    9186:	439d      	bics	r5, r3
    9188:	68bb      	ldr	r3, [r7, #8]
    918a:	4662      	mov	r2, ip
    918c:	4011      	ands	r1, r2
    918e:	4298      	cmp	r0, r3
    9190:	d118      	bne.n	91c4 <_free_r+0x68>
    9192:	1960      	adds	r0, r4, r5
    9194:	2900      	cmp	r1, #0
    9196:	d106      	bne.n	91a6 <_free_r+0x4a>
    9198:	6833      	ldr	r3, [r6, #0]
    919a:	1af6      	subs	r6, r6, r3
    919c:	68f2      	ldr	r2, [r6, #12]
    919e:	18c0      	adds	r0, r0, r3
    91a0:	68b3      	ldr	r3, [r6, #8]
    91a2:	60da      	str	r2, [r3, #12]
    91a4:	6093      	str	r3, [r2, #8]
    91a6:	4663      	mov	r3, ip
    91a8:	4303      	orrs	r3, r0
    91aa:	6073      	str	r3, [r6, #4]
    91ac:	4b51      	ldr	r3, [pc, #324]	(92f4 <.text+0x92f4>)
    91ae:	681b      	ldr	r3, [r3, #0]
    91b0:	60be      	str	r6, [r7, #8]
    91b2:	4298      	cmp	r0, r3
    91b4:	d200      	bcs.n	91b8 <_free_r+0x5c>
    91b6:	e093      	b.n	92e0 <_free_r+0x184>
    91b8:	4b4f      	ldr	r3, [pc, #316]	(92f8 <.text+0x92f8>)
    91ba:	9800      	ldr	r0, [sp, #0]
    91bc:	6819      	ldr	r1, [r3, #0]
    91be:	f7ff ff7d 	bl	90bc <_malloc_trim_r>
    91c2:	e08d      	b.n	92e0 <_free_r+0x184>
    91c4:	6045      	str	r5, [r0, #4]
    91c6:	2900      	cmp	r1, #0
    91c8:	d10c      	bne.n	91e4 <_free_r+0x88>
    91ca:	6833      	ldr	r3, [r6, #0]
    91cc:	1af6      	subs	r6, r6, r3
    91ce:	18e4      	adds	r4, r4, r3
    91d0:	68b2      	ldr	r2, [r6, #8]
    91d2:	1c3b      	adds	r3, r7, #0
    91d4:	3308      	adds	r3, #8
    91d6:	429a      	cmp	r2, r3
    91d8:	d101      	bne.n	91de <_free_r+0x82>
    91da:	2101      	movs	r1, #1
    91dc:	e003      	b.n	91e6 <_free_r+0x8a>
    91de:	68f3      	ldr	r3, [r6, #12]
    91e0:	60d3      	str	r3, [r2, #12]
    91e2:	609a      	str	r2, [r3, #8]
    91e4:	2100      	movs	r1, #0
    91e6:	1943      	adds	r3, r0, r5
    91e8:	685b      	ldr	r3, [r3, #4]
    91ea:	2201      	movs	r2, #1
    91ec:	4694      	mov	ip, r2
    91ee:	4213      	tst	r3, r2
    91f0:	d114      	bne.n	921c <_free_r+0xc0>
    91f2:	1964      	adds	r4, r4, r5
    91f4:	2900      	cmp	r1, #0
    91f6:	d10d      	bne.n	9214 <_free_r+0xb8>
    91f8:	4b3d      	ldr	r3, [pc, #244]	(92f0 <.text+0x92f0>)
    91fa:	6882      	ldr	r2, [r0, #8]
    91fc:	3308      	adds	r3, #8
    91fe:	429a      	cmp	r2, r3
    9200:	d108      	bne.n	9214 <_free_r+0xb8>
    9202:	4663      	mov	r3, ip
    9204:	4323      	orrs	r3, r4
    9206:	60d6      	str	r6, [r2, #12]
    9208:	6096      	str	r6, [r2, #8]
    920a:	60f2      	str	r2, [r6, #12]
    920c:	60b2      	str	r2, [r6, #8]
    920e:	6073      	str	r3, [r6, #4]
    9210:	5134      	str	r4, [r6, r4]
    9212:	e065      	b.n	92e0 <_free_r+0x184>
    9214:	68c2      	ldr	r2, [r0, #12]
    9216:	6883      	ldr	r3, [r0, #8]
    9218:	60da      	str	r2, [r3, #12]
    921a:	6093      	str	r3, [r2, #8]
    921c:	2001      	movs	r0, #1
    921e:	1c23      	adds	r3, r4, #0
    9220:	4303      	orrs	r3, r0
    9222:	6073      	str	r3, [r6, #4]
    9224:	5134      	str	r4, [r6, r4]
    9226:	2900      	cmp	r1, #0
    9228:	d15a      	bne.n	92e0 <_free_r+0x184>
    922a:	4b34      	ldr	r3, [pc, #208]	(92fc <.text+0x92fc>)
    922c:	429c      	cmp	r4, r3
    922e:	d812      	bhi.n	9256 <_free_r+0xfa>
    9230:	08e1      	lsrs	r1, r4, #3
    9232:	1c0a      	adds	r2, r1, #0
    9234:	2900      	cmp	r1, #0
    9236:	da00      	bge.n	923a <_free_r+0xde>
    9238:	1cca      	adds	r2, r1, #3
    923a:	1092      	asrs	r2, r2, #2
    923c:	687b      	ldr	r3, [r7, #4]
    923e:	4090      	lsls	r0, r2
    9240:	4303      	orrs	r3, r0
    9242:	4a2b      	ldr	r2, [pc, #172]	(92f0 <.text+0x92f0>)
    9244:	607b      	str	r3, [r7, #4]
    9246:	00cb      	lsls	r3, r1, #3
    9248:	189b      	adds	r3, r3, r2
    924a:	689a      	ldr	r2, [r3, #8]
    924c:	60f3      	str	r3, [r6, #12]
    924e:	60b2      	str	r2, [r6, #8]
    9250:	60d6      	str	r6, [r2, #12]
    9252:	609e      	str	r6, [r3, #8]
    9254:	e044      	b.n	92e0 <_free_r+0x184>
    9256:	0a62      	lsrs	r2, r4, #9
    9258:	2a00      	cmp	r2, #0
    925a:	d101      	bne.n	9260 <_free_r+0x104>
    925c:	08e1      	lsrs	r1, r4, #3
    925e:	e020      	b.n	92a2 <_free_r+0x146>
    9260:	2a04      	cmp	r2, #4
    9262:	d803      	bhi.n	926c <_free_r+0x110>
    9264:	09a3      	lsrs	r3, r4, #6
    9266:	1c19      	adds	r1, r3, #0
    9268:	3138      	adds	r1, #56
    926a:	e01a      	b.n	92a2 <_free_r+0x146>
    926c:	2a14      	cmp	r2, #20
    926e:	d802      	bhi.n	9276 <_free_r+0x11a>
    9270:	1c11      	adds	r1, r2, #0
    9272:	315b      	adds	r1, #91
    9274:	e015      	b.n	92a2 <_free_r+0x146>
    9276:	2a54      	cmp	r2, #84
    9278:	d803      	bhi.n	9282 <_free_r+0x126>
    927a:	0b23      	lsrs	r3, r4, #12
    927c:	1c19      	adds	r1, r3, #0
    927e:	316e      	adds	r1, #110
    9280:	e00f      	b.n	92a2 <_free_r+0x146>
    9282:	23aa      	movs	r3, #170
    9284:	005b      	lsls	r3, r3, #1
    9286:	429a      	cmp	r2, r3
    9288:	d803      	bhi.n	9292 <_free_r+0x136>
    928a:	0be3      	lsrs	r3, r4, #15
    928c:	1c19      	adds	r1, r3, #0
    928e:	3177      	adds	r1, #119
    9290:	e007      	b.n	92a2 <_free_r+0x146>
    9292:	4b1b      	ldr	r3, [pc, #108]	(9300 <.text+0x9300>)
    9294:	429a      	cmp	r2, r3
    9296:	d901      	bls.n	929c <_free_r+0x140>
    9298:	217e      	movs	r1, #126
    929a:	e002      	b.n	92a2 <_free_r+0x146>
    929c:	0ca3      	lsrs	r3, r4, #18
    929e:	1c19      	adds	r1, r3, #0
    92a0:	317c      	adds	r1, #124
    92a2:	4a13      	ldr	r2, [pc, #76]	(92f0 <.text+0x92f0>)
    92a4:	00cb      	lsls	r3, r1, #3
    92a6:	189d      	adds	r5, r3, r2
    92a8:	68a8      	ldr	r0, [r5, #8]
    92aa:	42a8      	cmp	r0, r5
    92ac:	d10e      	bne.n	92cc <_free_r+0x170>
    92ae:	1c0b      	adds	r3, r1, #0
    92b0:	2900      	cmp	r1, #0
    92b2:	da00      	bge.n	92b6 <_free_r+0x15a>
    92b4:	3303      	adds	r3, #3
    92b6:	109b      	asrs	r3, r3, #2
    92b8:	2201      	movs	r2, #1
    92ba:	409a      	lsls	r2, r3
    92bc:	687b      	ldr	r3, [r7, #4]
    92be:	4313      	orrs	r3, r2
    92c0:	607b      	str	r3, [r7, #4]
    92c2:	1c03      	adds	r3, r0, #0
    92c4:	e008      	b.n	92d8 <_free_r+0x17c>
    92c6:	6880      	ldr	r0, [r0, #8]
    92c8:	42a8      	cmp	r0, r5
    92ca:	d004      	beq.n	92d6 <_free_r+0x17a>
    92cc:	6843      	ldr	r3, [r0, #4]
    92ce:	2203      	movs	r2, #3
    92d0:	4393      	bics	r3, r2
    92d2:	429c      	cmp	r4, r3
    92d4:	d3f7      	bcc.n	92c6 <_free_r+0x16a>
    92d6:	68c3      	ldr	r3, [r0, #12]
    92d8:	60f3      	str	r3, [r6, #12]
    92da:	60b0      	str	r0, [r6, #8]
    92dc:	60c6      	str	r6, [r0, #12]
    92de:	609e      	str	r6, [r3, #8]
    92e0:	9800      	ldr	r0, [sp, #0]
    92e2:	f000 fcd7 	bl	9c94 <__malloc_unlock>
    92e6:	b001      	add	sp, #4
    92e8:	bcf0      	pop	{r4, r5, r6, r7}
    92ea:	bc01      	pop	{r0}
    92ec:	4700      	bx	r0
    92ee:	0000      	lsls	r0, r0, #0
    92f0:	0430      	lsls	r0, r6, #16
    92f2:	4000      	ands	r0, r0
    92f4:	0838      	lsrs	r0, r7, #32
    92f6:	4000      	ands	r0, r0
    92f8:	0c60      	lsrs	r0, r4, #17
    92fa:	4000      	ands	r0, r0
    92fc:	01ff      	lsls	r7, r7, #7
    92fe:	0000      	lsls	r0, r0, #0
    9300:	0554      	lsls	r4, r2, #21
	...

00009304 <__sfvwrite>:
    9304:	b5f0      	push	{r4, r5, r6, r7, lr}
    9306:	688b      	ldr	r3, [r1, #8]
    9308:	b087      	sub	sp, #28
    930a:	1c05      	adds	r5, r0, #0
    930c:	9100      	str	r1, [sp, #0]
    930e:	2b00      	cmp	r3, #0
    9310:	d100      	bne.n	9314 <__sfvwrite+0x10>
    9312:	e11c      	b.n	954e <__sfvwrite+0x24a>
    9314:	8983      	ldrh	r3, [r0, #12]
    9316:	071a      	lsls	r2, r3, #28
    9318:	d502      	bpl.n	9320 <__sfvwrite+0x1c>
    931a:	6903      	ldr	r3, [r0, #16]
    931c:	2b00      	cmp	r3, #0
    931e:	d105      	bne.n	932c <__sfvwrite+0x28>
    9320:	1c28      	adds	r0, r5, #0
    9322:	f7fe fecd 	bl	80c0 <__swsetup>
    9326:	2800      	cmp	r0, #0
    9328:	d000      	beq.n	932c <__sfvwrite+0x28>
    932a:	e10d      	b.n	9548 <__sfvwrite+0x244>
    932c:	9b00      	ldr	r3, [sp, #0]
    932e:	681b      	ldr	r3, [r3, #0]
    9330:	9304      	str	r3, [sp, #16]
    9332:	89ab      	ldrh	r3, [r5, #12]
    9334:	079a      	lsls	r2, r3, #30
    9336:	d521      	bpl.n	937c <__sfvwrite+0x78>
    9338:	2400      	movs	r4, #0
    933a:	2600      	movs	r6, #0
    933c:	e004      	b.n	9348 <__sfvwrite+0x44>
    933e:	9b04      	ldr	r3, [sp, #16]
    9340:	681e      	ldr	r6, [r3, #0]
    9342:	685c      	ldr	r4, [r3, #4]
    9344:	3308      	adds	r3, #8
    9346:	9304      	str	r3, [sp, #16]
    9348:	2c00      	cmp	r4, #0
    934a:	d0f8      	beq.n	933e <__sfvwrite+0x3a>
    934c:	2380      	movs	r3, #128
    934e:	00db      	lsls	r3, r3, #3
    9350:	69e8      	ldr	r0, [r5, #28]
    9352:	1c22      	adds	r2, r4, #0
    9354:	429c      	cmp	r4, r3
    9356:	d900      	bls.n	935a <__sfvwrite+0x56>
    9358:	1c1a      	adds	r2, r3, #0
    935a:	6a6b      	ldr	r3, [r5, #36]
    935c:	1c31      	adds	r1, r6, #0
    935e:	f000 f8fd 	bl	955c <.text+0x955c>
    9362:	2800      	cmp	r0, #0
    9364:	dc00      	bgt.n	9368 <__sfvwrite+0x64>
    9366:	e0eb      	b.n	9540 <__sfvwrite+0x23c>
    9368:	9a00      	ldr	r2, [sp, #0]
    936a:	6893      	ldr	r3, [r2, #8]
    936c:	1a1b      	subs	r3, r3, r0
    936e:	6093      	str	r3, [r2, #8]
    9370:	2b00      	cmp	r3, #0
    9372:	d100      	bne.n	9376 <__sfvwrite+0x72>
    9374:	e0eb      	b.n	954e <__sfvwrite+0x24a>
    9376:	1836      	adds	r6, r6, r0
    9378:	1a24      	subs	r4, r4, r0
    937a:	e7e5      	b.n	9348 <__sfvwrite+0x44>
    937c:	07da      	lsls	r2, r3, #31
    937e:	d50a      	bpl.n	9396 <__sfvwrite+0x92>
    9380:	2300      	movs	r3, #0
    9382:	2700      	movs	r7, #0
    9384:	9302      	str	r3, [sp, #8]
    9386:	9303      	str	r3, [sp, #12]
    9388:	9305      	str	r3, [sp, #20]
    938a:	e07b      	b.n	9484 <__sfvwrite+0x180>
    938c:	6820      	ldr	r0, [r4, #0]
    938e:	6929      	ldr	r1, [r5, #16]
    9390:	f7ff fee4 	bl	915c <_free_r>
    9394:	e0d4      	b.n	9540 <__sfvwrite+0x23c>
    9396:	2600      	movs	r6, #0
    9398:	9606      	str	r6, [sp, #24]
    939a:	e006      	b.n	93aa <__sfvwrite+0xa6>
    939c:	9a04      	ldr	r2, [sp, #16]
    939e:	9b04      	ldr	r3, [sp, #16]
    93a0:	6812      	ldr	r2, [r2, #0]
    93a2:	685e      	ldr	r6, [r3, #4]
    93a4:	3308      	adds	r3, #8
    93a6:	9206      	str	r2, [sp, #24]
    93a8:	9304      	str	r3, [sp, #16]
    93aa:	2e00      	cmp	r6, #0
    93ac:	d0f6      	beq.n	939c <__sfvwrite+0x98>
    93ae:	89ab      	ldrh	r3, [r5, #12]
    93b0:	68ac      	ldr	r4, [r5, #8]
    93b2:	059a      	lsls	r2, r3, #22
    93b4:	d526      	bpl.n	9404 <__sfvwrite+0x100>
    93b6:	42a6      	cmp	r6, r4
    93b8:	d914      	bls.n	93e4 <__sfvwrite+0xe0>
    93ba:	061a      	lsls	r2, r3, #24
    93bc:	d512      	bpl.n	93e4 <__sfvwrite+0xe0>
    93be:	682b      	ldr	r3, [r5, #0]
    93c0:	6929      	ldr	r1, [r5, #16]
    93c2:	4c65      	ldr	r4, [pc, #404]	(9558 <.text+0x9558>)
    93c4:	1a5f      	subs	r7, r3, r1
    93c6:	19bb      	adds	r3, r7, r6
    93c8:	6820      	ldr	r0, [r4, #0]
    93ca:	1c1a      	adds	r2, r3, #0
    93cc:	9301      	str	r3, [sp, #4]
    93ce:	f001 f87d 	bl	a4cc <_realloc_r>
    93d2:	2800      	cmp	r0, #0
    93d4:	d0da      	beq.n	938c <__sfvwrite+0x88>
    93d6:	9a01      	ldr	r2, [sp, #4]
    93d8:	19c3      	adds	r3, r0, r7
    93da:	6128      	str	r0, [r5, #16]
    93dc:	602b      	str	r3, [r5, #0]
    93de:	616a      	str	r2, [r5, #20]
    93e0:	60ae      	str	r6, [r5, #8]
    93e2:	1c34      	adds	r4, r6, #0
    93e4:	42a6      	cmp	r6, r4
    93e6:	d200      	bcs.n	93ea <__sfvwrite+0xe6>
    93e8:	1c34      	adds	r4, r6, #0
    93ea:	1c22      	adds	r2, r4, #0
    93ec:	6828      	ldr	r0, [r5, #0]
    93ee:	9906      	ldr	r1, [sp, #24]
    93f0:	f000 fc2a 	bl	9c48 <memmove>
    93f4:	68ab      	ldr	r3, [r5, #8]
    93f6:	1b1b      	subs	r3, r3, r4
    93f8:	60ab      	str	r3, [r5, #8]
    93fa:	682b      	ldr	r3, [r5, #0]
    93fc:	191b      	adds	r3, r3, r4
    93fe:	1c34      	adds	r4, r6, #0
    9400:	602b      	str	r3, [r5, #0]
    9402:	e029      	b.n	9458 <__sfvwrite+0x154>
    9404:	6828      	ldr	r0, [r5, #0]
    9406:	692b      	ldr	r3, [r5, #16]
    9408:	4298      	cmp	r0, r3
    940a:	d90e      	bls.n	942a <__sfvwrite+0x126>
    940c:	42a6      	cmp	r6, r4
    940e:	d90c      	bls.n	942a <__sfvwrite+0x126>
    9410:	9906      	ldr	r1, [sp, #24]
    9412:	1c22      	adds	r2, r4, #0
    9414:	f000 fc18 	bl	9c48 <memmove>
    9418:	682b      	ldr	r3, [r5, #0]
    941a:	191b      	adds	r3, r3, r4
    941c:	602b      	str	r3, [r5, #0]
    941e:	1c28      	adds	r0, r5, #0
    9420:	f7ff fd30 	bl	8e84 <fflush>
    9424:	2800      	cmp	r0, #0
    9426:	d017      	beq.n	9458 <__sfvwrite+0x154>
    9428:	e08a      	b.n	9540 <__sfvwrite+0x23c>
    942a:	696a      	ldr	r2, [r5, #20]
    942c:	4296      	cmp	r6, r2
    942e:	d308      	bcc.n	9442 <__sfvwrite+0x13e>
    9430:	69e8      	ldr	r0, [r5, #28]
    9432:	6a6b      	ldr	r3, [r5, #36]
    9434:	9906      	ldr	r1, [sp, #24]
    9436:	f000 f891 	bl	955c <.text+0x955c>
    943a:	1c04      	adds	r4, r0, #0
    943c:	2800      	cmp	r0, #0
    943e:	dc0b      	bgt.n	9458 <__sfvwrite+0x154>
    9440:	e07e      	b.n	9540 <__sfvwrite+0x23c>
    9442:	9906      	ldr	r1, [sp, #24]
    9444:	1c32      	adds	r2, r6, #0
    9446:	f000 fbff 	bl	9c48 <memmove>
    944a:	68ab      	ldr	r3, [r5, #8]
    944c:	1b9b      	subs	r3, r3, r6
    944e:	60ab      	str	r3, [r5, #8]
    9450:	682b      	ldr	r3, [r5, #0]
    9452:	199b      	adds	r3, r3, r6
    9454:	602b      	str	r3, [r5, #0]
    9456:	1c34      	adds	r4, r6, #0
    9458:	9a00      	ldr	r2, [sp, #0]
    945a:	6893      	ldr	r3, [r2, #8]
    945c:	1b1b      	subs	r3, r3, r4
    945e:	6093      	str	r3, [r2, #8]
    9460:	2b00      	cmp	r3, #0
    9462:	d074      	beq.n	954e <__sfvwrite+0x24a>
    9464:	9b06      	ldr	r3, [sp, #24]
    9466:	1b36      	subs	r6, r6, r4
    9468:	191b      	adds	r3, r3, r4
    946a:	9306      	str	r3, [sp, #24]
    946c:	e79d      	b.n	93aa <__sfvwrite+0xa6>
    946e:	9a04      	ldr	r2, [sp, #16]
    9470:	9b04      	ldr	r3, [sp, #16]
    9472:	6812      	ldr	r2, [r2, #0]
    9474:	685b      	ldr	r3, [r3, #4]
    9476:	9203      	str	r2, [sp, #12]
    9478:	9a04      	ldr	r2, [sp, #16]
    947a:	9302      	str	r3, [sp, #8]
    947c:	3208      	adds	r2, #8
    947e:	2300      	movs	r3, #0
    9480:	9204      	str	r2, [sp, #16]
    9482:	9305      	str	r3, [sp, #20]
    9484:	9a02      	ldr	r2, [sp, #8]
    9486:	2a00      	cmp	r2, #0
    9488:	d0f1      	beq.n	946e <__sfvwrite+0x16a>
    948a:	9b05      	ldr	r3, [sp, #20]
    948c:	2b00      	cmp	r3, #0
    948e:	d10f      	bne.n	94b0 <__sfvwrite+0x1ac>
    9490:	9803      	ldr	r0, [sp, #12]
    9492:	210a      	movs	r1, #10
    9494:	f000 fbbc 	bl	9c10 <memchr>
    9498:	2800      	cmp	r0, #0
    949a:	d005      	beq.n	94a8 <__sfvwrite+0x1a4>
    949c:	9a03      	ldr	r2, [sp, #12]
    949e:	1a83      	subs	r3, r0, r2
    94a0:	1c5f      	adds	r7, r3, #1
    94a2:	2301      	movs	r3, #1
    94a4:	9305      	str	r3, [sp, #20]
    94a6:	e003      	b.n	94b0 <__sfvwrite+0x1ac>
    94a8:	9f02      	ldr	r7, [sp, #8]
    94aa:	2201      	movs	r2, #1
    94ac:	9205      	str	r2, [sp, #20]
    94ae:	3701      	adds	r7, #1
    94b0:	9b02      	ldr	r3, [sp, #8]
    94b2:	1c3e      	adds	r6, r7, #0
    94b4:	429f      	cmp	r7, r3
    94b6:	d900      	bls.n	94ba <__sfvwrite+0x1b6>
    94b8:	1c1e      	adds	r6, r3, #0
    94ba:	6828      	ldr	r0, [r5, #0]
    94bc:	692b      	ldr	r3, [r5, #16]
    94be:	68a9      	ldr	r1, [r5, #8]
    94c0:	696a      	ldr	r2, [r5, #20]
    94c2:	4298      	cmp	r0, r3
    94c4:	d90f      	bls.n	94e6 <__sfvwrite+0x1e2>
    94c6:	188c      	adds	r4, r1, r2
    94c8:	42a6      	cmp	r6, r4
    94ca:	dd0c      	ble.n	94e6 <__sfvwrite+0x1e2>
    94cc:	9903      	ldr	r1, [sp, #12]
    94ce:	1c22      	adds	r2, r4, #0
    94d0:	f000 fbba 	bl	9c48 <memmove>
    94d4:	682b      	ldr	r3, [r5, #0]
    94d6:	191b      	adds	r3, r3, r4
    94d8:	602b      	str	r3, [r5, #0]
    94da:	1c28      	adds	r0, r5, #0
    94dc:	f7ff fcd2 	bl	8e84 <fflush>
    94e0:	2800      	cmp	r0, #0
    94e2:	d016      	beq.n	9512 <__sfvwrite+0x20e>
    94e4:	e02c      	b.n	9540 <__sfvwrite+0x23c>
    94e6:	4296      	cmp	r6, r2
    94e8:	db08      	blt.n	94fc <__sfvwrite+0x1f8>
    94ea:	69e8      	ldr	r0, [r5, #28]
    94ec:	6a6b      	ldr	r3, [r5, #36]
    94ee:	9903      	ldr	r1, [sp, #12]
    94f0:	f000 f834 	bl	955c <.text+0x955c>
    94f4:	1c04      	adds	r4, r0, #0
    94f6:	2800      	cmp	r0, #0
    94f8:	dc0b      	bgt.n	9512 <__sfvwrite+0x20e>
    94fa:	e021      	b.n	9540 <__sfvwrite+0x23c>
    94fc:	9903      	ldr	r1, [sp, #12]
    94fe:	1c32      	adds	r2, r6, #0
    9500:	f000 fba2 	bl	9c48 <memmove>
    9504:	68ab      	ldr	r3, [r5, #8]
    9506:	1b9b      	subs	r3, r3, r6
    9508:	60ab      	str	r3, [r5, #8]
    950a:	682b      	ldr	r3, [r5, #0]
    950c:	199b      	adds	r3, r3, r6
    950e:	602b      	str	r3, [r5, #0]
    9510:	1c34      	adds	r4, r6, #0
    9512:	1b3f      	subs	r7, r7, r4
    9514:	2f00      	cmp	r7, #0
    9516:	d106      	bne.n	9526 <__sfvwrite+0x222>
    9518:	1c28      	adds	r0, r5, #0
    951a:	f7ff fcb3 	bl	8e84 <fflush>
    951e:	2800      	cmp	r0, #0
    9520:	d10e      	bne.n	9540 <__sfvwrite+0x23c>
    9522:	2200      	movs	r2, #0
    9524:	9205      	str	r2, [sp, #20]
    9526:	9a00      	ldr	r2, [sp, #0]
    9528:	6893      	ldr	r3, [r2, #8]
    952a:	1b1b      	subs	r3, r3, r4
    952c:	6093      	str	r3, [r2, #8]
    952e:	2b00      	cmp	r3, #0
    9530:	d00d      	beq.n	954e <__sfvwrite+0x24a>
    9532:	9b03      	ldr	r3, [sp, #12]
    9534:	9a02      	ldr	r2, [sp, #8]
    9536:	191b      	adds	r3, r3, r4
    9538:	1b12      	subs	r2, r2, r4
    953a:	9303      	str	r3, [sp, #12]
    953c:	9202      	str	r2, [sp, #8]
    953e:	e7a1      	b.n	9484 <__sfvwrite+0x180>
    9540:	89ab      	ldrh	r3, [r5, #12]
    9542:	2240      	movs	r2, #64
    9544:	4313      	orrs	r3, r2
    9546:	81ab      	strh	r3, [r5, #12]
    9548:	2001      	movs	r0, #1
    954a:	4240      	negs	r0, r0
    954c:	e000      	b.n	9550 <__sfvwrite+0x24c>
    954e:	2000      	movs	r0, #0
    9550:	b007      	add	sp, #28
    9552:	bcf0      	pop	{r4, r5, r6, r7}
    9554:	bc02      	pop	{r1}
    9556:	4708      	bx	r1
    9558:	001c      	lsls	r4, r3, #0
    955a:	4000      	ands	r0, r0
    955c:	4718      	bx	r3
    955e:	46c0      	nop			(mov r8, r8)

00009560 <_fwalk_reent>:
    9560:	b5f0      	push	{r4, r5, r6, r7, lr}
    9562:	b082      	sub	sp, #8
    9564:	9001      	str	r0, [sp, #4]
    9566:	9100      	str	r1, [sp, #0]
    9568:	f7ff fd1a 	bl	8fa0 <__sfp_lock_acquire>
    956c:	9a01      	ldr	r2, [sp, #4]
    956e:	23b8      	movs	r3, #184
    9570:	009b      	lsls	r3, r3, #2
    9572:	18d5      	adds	r5, r2, r3
    9574:	2700      	movs	r7, #0
    9576:	e017      	b.n	95a8 <_fwalk_reent+0x48>
    9578:	68ab      	ldr	r3, [r5, #8]
    957a:	686e      	ldr	r6, [r5, #4]
    957c:	1c1c      	adds	r4, r3, #0
    957e:	340c      	adds	r4, #12
    9580:	e00d      	b.n	959e <_fwalk_reent+0x3e>
    9582:	2200      	movs	r2, #0
    9584:	5ea3      	ldrsh	r3, [r4, r2]
    9586:	2b00      	cmp	r3, #0
    9588:	d008      	beq.n	959c <_fwalk_reent+0x3c>
    958a:	2202      	movs	r2, #2
    958c:	5ea3      	ldrsh	r3, [r4, r2]
    958e:	3301      	adds	r3, #1
    9590:	d004      	beq.n	959c <_fwalk_reent+0x3c>
    9592:	9801      	ldr	r0, [sp, #4]
    9594:	9b00      	ldr	r3, [sp, #0]
    9596:	f000 f83c 	bl	9612 <_fwalk+0x56>
    959a:	4307      	orrs	r7, r0
    959c:	345c      	adds	r4, #92
    959e:	1c21      	adds	r1, r4, #0
    95a0:	390c      	subs	r1, #12
    95a2:	3e01      	subs	r6, #1
    95a4:	d5ed      	bpl.n	9582 <_fwalk_reent+0x22>
    95a6:	682d      	ldr	r5, [r5, #0]
    95a8:	2d00      	cmp	r5, #0
    95aa:	d1e5      	bne.n	9578 <_fwalk_reent+0x18>
    95ac:	f7ff fcfa 	bl	8fa4 <__sfp_lock_release>
    95b0:	1c38      	adds	r0, r7, #0
    95b2:	b002      	add	sp, #8
    95b4:	bcf0      	pop	{r4, r5, r6, r7}
    95b6:	bc02      	pop	{r1}
    95b8:	4708      	bx	r1
	...

000095bc <_fwalk>:
    95bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    95be:	b081      	sub	sp, #4
    95c0:	1c04      	adds	r4, r0, #0
    95c2:	9100      	str	r1, [sp, #0]
    95c4:	f7ff fcec 	bl	8fa0 <__sfp_lock_acquire>
    95c8:	22b8      	movs	r2, #184
    95ca:	0092      	lsls	r2, r2, #2
    95cc:	18a5      	adds	r5, r4, r2
    95ce:	2700      	movs	r7, #0
    95d0:	e016      	b.n	9600 <_fwalk+0x44>
    95d2:	68ab      	ldr	r3, [r5, #8]
    95d4:	686e      	ldr	r6, [r5, #4]
    95d6:	1c1c      	adds	r4, r3, #0
    95d8:	340c      	adds	r4, #12
    95da:	e00c      	b.n	95f6 <_fwalk+0x3a>
    95dc:	2200      	movs	r2, #0
    95de:	5ea3      	ldrsh	r3, [r4, r2]
    95e0:	2b00      	cmp	r3, #0
    95e2:	d007      	beq.n	95f4 <_fwalk+0x38>
    95e4:	2202      	movs	r2, #2
    95e6:	5ea3      	ldrsh	r3, [r4, r2]
    95e8:	3301      	adds	r3, #1
    95ea:	d003      	beq.n	95f4 <_fwalk+0x38>
    95ec:	9b00      	ldr	r3, [sp, #0]
    95ee:	f000 f810 	bl	9612 <_fwalk+0x56>
    95f2:	4307      	orrs	r7, r0
    95f4:	345c      	adds	r4, #92
    95f6:	1c20      	adds	r0, r4, #0
    95f8:	380c      	subs	r0, #12
    95fa:	3e01      	subs	r6, #1
    95fc:	d5ee      	bpl.n	95dc <_fwalk+0x20>
    95fe:	682d      	ldr	r5, [r5, #0]
    9600:	2d00      	cmp	r5, #0
    9602:	d1e6      	bne.n	95d2 <_fwalk+0x16>
    9604:	f7ff fcce 	bl	8fa4 <__sfp_lock_release>
    9608:	1c38      	adds	r0, r7, #0
    960a:	b001      	add	sp, #4
    960c:	bcf0      	pop	{r4, r5, r6, r7}
    960e:	bc02      	pop	{r1}
    9610:	4708      	bx	r1
    9612:	4718      	bx	r3

00009614 <__locale_charset>:
    9614:	4b01      	ldr	r3, [pc, #4]	(961c <.text+0x961c>)
    9616:	6818      	ldr	r0, [r3, #0]
    9618:	4770      	bx	lr
    961a:	0000      	lsls	r0, r0, #0
    961c:	d42c      	bmi.n	9678 <setlocale+0x10>
	...

00009620 <_localeconv_r>:
    9620:	4800      	ldr	r0, [pc, #0]	(9624 <.text+0x9624>)
    9622:	4770      	bx	lr
    9624:	d3fc      	bcc.n	9620 <_localeconv_r>
	...

00009628 <_setlocale_r>:
    9628:	b570      	push	{r4, r5, r6, lr}
    962a:	1c0e      	adds	r6, r1, #0
    962c:	1c05      	adds	r5, r0, #0
    962e:	1c14      	adds	r4, r2, #0
    9630:	490b      	ldr	r1, [pc, #44]	(9660 <.text+0x9660>)
    9632:	2a00      	cmp	r2, #0
    9634:	d101      	bne.n	963a <_setlocale_r+0x12>
    9636:	1c08      	adds	r0, r1, #0
    9638:	e00f      	b.n	965a <_setlocale_r+0x32>
    963a:	1c10      	adds	r0, r2, #0
    963c:	f001 f95a 	bl	a8f4 <strcmp>
    9640:	2800      	cmp	r0, #0
    9642:	d007      	beq.n	9654 <_setlocale_r+0x2c>
    9644:	4907      	ldr	r1, [pc, #28]	(9664 <.text+0x9664>)
    9646:	1c20      	adds	r0, r4, #0
    9648:	f001 f954 	bl	a8f4 <strcmp>
    964c:	2800      	cmp	r0, #0
    964e:	d001      	beq.n	9654 <_setlocale_r+0x2c>
    9650:	2000      	movs	r0, #0
    9652:	e002      	b.n	965a <_setlocale_r+0x32>
    9654:	632e      	str	r6, [r5, #48]
    9656:	636c      	str	r4, [r5, #52]
    9658:	4801      	ldr	r0, [pc, #4]	(9660 <.text+0x9660>)
    965a:	bc70      	pop	{r4, r5, r6}
    965c:	bc02      	pop	{r1}
    965e:	4708      	bx	r1
    9660:	d96c      	bls.n	973c <__smakebuf+0xb0>
    9662:	0000      	lsls	r0, r0, #0
    9664:	d850      	bhi.n	9708 <__smakebuf+0x7c>
	...

00009668 <setlocale>:
    9668:	b510      	push	{r4, lr}
    966a:	4b05      	ldr	r3, [pc, #20]	(9680 <.text+0x9680>)
    966c:	1c04      	adds	r4, r0, #0
    966e:	1c0a      	adds	r2, r1, #0
    9670:	6818      	ldr	r0, [r3, #0]
    9672:	1c21      	adds	r1, r4, #0
    9674:	f7ff ffd8 	bl	9628 <_setlocale_r>
    9678:	bc10      	pop	{r4}
    967a:	bc02      	pop	{r1}
    967c:	4708      	bx	r1
    967e:	0000      	lsls	r0, r0, #0
    9680:	001c      	lsls	r4, r3, #0
    9682:	4000      	ands	r0, r0

00009684 <localeconv>:
    9684:	4800      	ldr	r0, [pc, #0]	(9688 <.text+0x9688>)
    9686:	4770      	bx	lr
    9688:	d3fc      	bcc.n	9684 <localeconv>
	...

0000968c <__smakebuf>:
    968c:	b5f0      	push	{r4, r5, r6, r7, lr}
    968e:	8983      	ldrh	r3, [r0, #12]
    9690:	b08f      	sub	sp, #60
    9692:	1c04      	adds	r4, r0, #0
    9694:	079a      	lsls	r2, r3, #30
    9696:	d43d      	bmi.n	9714 <__smakebuf+0x88>
    9698:	89c3      	ldrh	r3, [r0, #14]
    969a:	041b      	lsls	r3, r3, #16
    969c:	1419      	asrs	r1, r3, #16
    969e:	2900      	cmp	r1, #0
    96a0:	db06      	blt.n	96b0 <__smakebuf+0x24>
    96a2:	4b2d      	ldr	r3, [pc, #180]	(9758 <.text+0x9758>)
    96a4:	466a      	mov	r2, sp
    96a6:	6818      	ldr	r0, [r3, #0]
    96a8:	f003 fd06 	bl	d0b8 <___fstat_r_from_thumb>
    96ac:	2800      	cmp	r0, #0
    96ae:	da06      	bge.n	96be <__smakebuf+0x32>
    96b0:	89a3      	ldrh	r3, [r4, #12]
    96b2:	2280      	movs	r2, #128
    96b4:	0112      	lsls	r2, r2, #4
    96b6:	4313      	orrs	r3, r2
    96b8:	2700      	movs	r7, #0
    96ba:	81a3      	strh	r3, [r4, #12]
    96bc:	e01d      	b.n	96fa <__smakebuf+0x6e>
    96be:	23f0      	movs	r3, #240
    96c0:	9a01      	ldr	r2, [sp, #4]
    96c2:	021b      	lsls	r3, r3, #8
    96c4:	401a      	ands	r2, r3
    96c6:	2380      	movs	r3, #128
    96c8:	019b      	lsls	r3, r3, #6
    96ca:	2700      	movs	r7, #0
    96cc:	429a      	cmp	r2, r3
    96ce:	d100      	bne.n	96d2 <__smakebuf+0x46>
    96d0:	2701      	movs	r7, #1
    96d2:	2380      	movs	r3, #128
    96d4:	021b      	lsls	r3, r3, #8
    96d6:	429a      	cmp	r2, r3
    96d8:	d10a      	bne.n	96f0 <__smakebuf+0x64>
    96da:	4a20      	ldr	r2, [pc, #128]	(975c <.text+0x975c>)
    96dc:	6aa3      	ldr	r3, [r4, #40]
    96de:	4293      	cmp	r3, r2
    96e0:	d106      	bne.n	96f0 <__smakebuf+0x64>
    96e2:	89a3      	ldrh	r3, [r4, #12]
    96e4:	2280      	movs	r2, #128
    96e6:	00d2      	lsls	r2, r2, #3
    96e8:	4313      	orrs	r3, r2
    96ea:	81a3      	strh	r3, [r4, #12]
    96ec:	64e2      	str	r2, [r4, #76]
    96ee:	e004      	b.n	96fa <__smakebuf+0x6e>
    96f0:	89a3      	ldrh	r3, [r4, #12]
    96f2:	2280      	movs	r2, #128
    96f4:	0112      	lsls	r2, r2, #4
    96f6:	4313      	orrs	r3, r2
    96f8:	81a3      	strh	r3, [r4, #12]
    96fa:	4d17      	ldr	r5, [pc, #92]	(9758 <.text+0x9758>)
    96fc:	2680      	movs	r6, #128
    96fe:	00f6      	lsls	r6, r6, #3
    9700:	6828      	ldr	r0, [r5, #0]
    9702:	1c31      	adds	r1, r6, #0
    9704:	f000 f82e 	bl	9764 <_malloc_r>
    9708:	2800      	cmp	r0, #0
    970a:	d10a      	bne.n	9722 <__smakebuf+0x96>
    970c:	89a3      	ldrh	r3, [r4, #12]
    970e:	2202      	movs	r2, #2
    9710:	4313      	orrs	r3, r2
    9712:	81a3      	strh	r3, [r4, #12]
    9714:	1c23      	adds	r3, r4, #0
    9716:	3343      	adds	r3, #67
    9718:	6023      	str	r3, [r4, #0]
    971a:	6123      	str	r3, [r4, #16]
    971c:	2301      	movs	r3, #1
    971e:	6163      	str	r3, [r4, #20]
    9720:	e015      	b.n	974e <__smakebuf+0xc2>
    9722:	682a      	ldr	r2, [r5, #0]
    9724:	4b0e      	ldr	r3, [pc, #56]	(9760 <.text+0x9760>)
    9726:	63d3      	str	r3, [r2, #60]
    9728:	89a3      	ldrh	r3, [r4, #12]
    972a:	2280      	movs	r2, #128
    972c:	4313      	orrs	r3, r2
    972e:	81a3      	strh	r3, [r4, #12]
    9730:	6020      	str	r0, [r4, #0]
    9732:	6120      	str	r0, [r4, #16]
    9734:	6166      	str	r6, [r4, #20]
    9736:	2f00      	cmp	r7, #0
    9738:	d009      	beq.n	974e <__smakebuf+0xc2>
    973a:	230e      	movs	r3, #14
    973c:	5ee0      	ldrsh	r0, [r4, r3]
    973e:	f003 fcbf 	bl	d0c0 <__isatty_from_thumb>
    9742:	2800      	cmp	r0, #0
    9744:	d003      	beq.n	974e <__smakebuf+0xc2>
    9746:	89a3      	ldrh	r3, [r4, #12]
    9748:	2201      	movs	r2, #1
    974a:	4313      	orrs	r3, r2
    974c:	81a3      	strh	r3, [r4, #12]
    974e:	b00f      	add	sp, #60
    9750:	bcf0      	pop	{r4, r5, r6, r7}
    9752:	bc01      	pop	{r0}
    9754:	4700      	bx	r0
    9756:	0000      	lsls	r0, r0, #0
    9758:	001c      	lsls	r4, r3, #0
    975a:	4000      	ands	r0, r0
    975c:	a83d      	add	r0, sp, #244
    975e:	0000      	lsls	r0, r0, #0
    9760:	8fb9      	ldrh	r1, [r7, #60]
	...

00009764 <_malloc_r>:
    9764:	b5f0      	push	{r4, r5, r6, r7, lr}
    9766:	1c0a      	adds	r2, r1, #0
    9768:	b086      	sub	sp, #24
    976a:	320b      	adds	r2, #11
    976c:	9000      	str	r0, [sp, #0]
    976e:	2a16      	cmp	r2, #22
    9770:	d802      	bhi.n	9778 <_malloc_r+0x14>
    9772:	2010      	movs	r0, #16
    9774:	9004      	str	r0, [sp, #16]
    9776:	e004      	b.n	9782 <_malloc_r+0x1e>
    9778:	2307      	movs	r3, #7
    977a:	439a      	bics	r2, r3
    977c:	9204      	str	r2, [sp, #16]
    977e:	2a00      	cmp	r2, #0
    9780:	db02      	blt.n	9788 <_malloc_r+0x24>
    9782:	9a04      	ldr	r2, [sp, #16]
    9784:	428a      	cmp	r2, r1
    9786:	d203      	bcs.n	9790 <_malloc_r+0x2c>
    9788:	9800      	ldr	r0, [sp, #0]
    978a:	230c      	movs	r3, #12
    978c:	6003      	str	r3, [r0, #0]
    978e:	e1f2      	b.n	9b76 <.text+0x9b76>
    9790:	9800      	ldr	r0, [sp, #0]
    9792:	f000 fa7d 	bl	9c90 <__malloc_lock>
    9796:	4bc0      	ldr	r3, [pc, #768]	(9a98 <.text+0x9a98>)
    9798:	9904      	ldr	r1, [sp, #16]
    979a:	4299      	cmp	r1, r3
    979c:	d816      	bhi.n	97cc <_malloc_r+0x68>
    979e:	08c9      	lsrs	r1, r1, #3
    97a0:	4abe      	ldr	r2, [pc, #760]	(9a9c <.text+0x9a9c>)
    97a2:	00cb      	lsls	r3, r1, #3
    97a4:	189b      	adds	r3, r3, r2
    97a6:	68dc      	ldr	r4, [r3, #12]
    97a8:	429c      	cmp	r4, r3
    97aa:	d104      	bne.n	97b6 <_malloc_r+0x52>
    97ac:	1c23      	adds	r3, r4, #0
    97ae:	3308      	adds	r3, #8
    97b0:	68dc      	ldr	r4, [r3, #12]
    97b2:	429c      	cmp	r4, r3
    97b4:	d008      	beq.n	97c8 <_malloc_r+0x64>
    97b6:	6861      	ldr	r1, [r4, #4]
    97b8:	2303      	movs	r3, #3
    97ba:	4399      	bics	r1, r3
    97bc:	68e2      	ldr	r2, [r4, #12]
    97be:	68a3      	ldr	r3, [r4, #8]
    97c0:	1861      	adds	r1, r4, r1
    97c2:	60da      	str	r2, [r3, #12]
    97c4:	6093      	str	r3, [r2, #8]
    97c6:	e20c      	b.n	9be2 <.text+0x9be2>
    97c8:	1c8f      	adds	r7, r1, #2
    97ca:	e041      	b.n	9850 <_malloc_r+0xec>
    97cc:	9b04      	ldr	r3, [sp, #16]
    97ce:	0a5a      	lsrs	r2, r3, #9
    97d0:	2a00      	cmp	r2, #0
    97d2:	d101      	bne.n	97d8 <_malloc_r+0x74>
    97d4:	08d9      	lsrs	r1, r3, #3
    97d6:	e026      	b.n	9826 <_malloc_r+0xc2>
    97d8:	2a04      	cmp	r2, #4
    97da:	d804      	bhi.n	97e6 <_malloc_r+0x82>
    97dc:	9804      	ldr	r0, [sp, #16]
    97de:	0983      	lsrs	r3, r0, #6
    97e0:	1c19      	adds	r1, r3, #0
    97e2:	3138      	adds	r1, #56
    97e4:	e01f      	b.n	9826 <_malloc_r+0xc2>
    97e6:	2a14      	cmp	r2, #20
    97e8:	d802      	bhi.n	97f0 <_malloc_r+0x8c>
    97ea:	1c11      	adds	r1, r2, #0
    97ec:	315b      	adds	r1, #91
    97ee:	e01a      	b.n	9826 <_malloc_r+0xc2>
    97f0:	2a54      	cmp	r2, #84
    97f2:	d804      	bhi.n	97fe <_malloc_r+0x9a>
    97f4:	9904      	ldr	r1, [sp, #16]
    97f6:	0b0b      	lsrs	r3, r1, #12
    97f8:	1c19      	adds	r1, r3, #0
    97fa:	316e      	adds	r1, #110
    97fc:	e013      	b.n	9826 <_malloc_r+0xc2>
    97fe:	23aa      	movs	r3, #170
    9800:	005b      	lsls	r3, r3, #1
    9802:	429a      	cmp	r2, r3
    9804:	d804      	bhi.n	9810 <_malloc_r+0xac>
    9806:	9a04      	ldr	r2, [sp, #16]
    9808:	0bd3      	lsrs	r3, r2, #15
    980a:	1c19      	adds	r1, r3, #0
    980c:	3177      	adds	r1, #119
    980e:	e00a      	b.n	9826 <_malloc_r+0xc2>
    9810:	4ba3      	ldr	r3, [pc, #652]	(9aa0 <.text+0x9aa0>)
    9812:	429a      	cmp	r2, r3
    9814:	d903      	bls.n	981e <_malloc_r+0xba>
    9816:	217e      	movs	r1, #126
    9818:	e005      	b.n	9826 <_malloc_r+0xc2>
    981a:	3901      	subs	r1, #1
    981c:	e017      	b.n	984e <_malloc_r+0xea>
    981e:	9804      	ldr	r0, [sp, #16]
    9820:	0c83      	lsrs	r3, r0, #18
    9822:	1c19      	adds	r1, r3, #0
    9824:	317c      	adds	r1, #124
    9826:	4a9d      	ldr	r2, [pc, #628]	(9a9c <.text+0x9a9c>)
    9828:	00cb      	lsls	r3, r1, #3
    982a:	189d      	adds	r5, r3, r2
    982c:	68ec      	ldr	r4, [r5, #12]
    982e:	e00c      	b.n	984a <_malloc_r+0xe6>
    9830:	6862      	ldr	r2, [r4, #4]
    9832:	2303      	movs	r3, #3
    9834:	1c10      	adds	r0, r2, #0
    9836:	9a04      	ldr	r2, [sp, #16]
    9838:	4398      	bics	r0, r3
    983a:	1a83      	subs	r3, r0, r2
    983c:	2b0f      	cmp	r3, #15
    983e:	dcec      	bgt.n	981a <_malloc_r+0xb6>
    9840:	68e2      	ldr	r2, [r4, #12]
    9842:	2b00      	cmp	r3, #0
    9844:	db00      	blt.n	9848 <_malloc_r+0xe4>
    9846:	e1c8      	b.n	9bda <.text+0x9bda>
    9848:	1c14      	adds	r4, r2, #0
    984a:	42ac      	cmp	r4, r5
    984c:	d1f0      	bne.n	9830 <_malloc_r+0xcc>
    984e:	1c4f      	adds	r7, r1, #1
    9850:	4894      	ldr	r0, [pc, #592]	(9aa4 <.text+0x9aa4>)
    9852:	4b92      	ldr	r3, [pc, #584]	(9a9c <.text+0x9a9c>)
    9854:	6885      	ldr	r5, [r0, #8]
    9856:	9301      	str	r3, [sp, #4]
    9858:	4285      	cmp	r5, r0
    985a:	d100      	bne.n	985e <_malloc_r+0xfa>
    985c:	e081      	b.n	9962 <_malloc_r+0x1fe>
    985e:	686a      	ldr	r2, [r5, #4]
    9860:	2303      	movs	r3, #3
    9862:	1c14      	adds	r4, r2, #0
    9864:	9904      	ldr	r1, [sp, #16]
    9866:	439c      	bics	r4, r3
    9868:	1a60      	subs	r0, r4, r1
    986a:	280f      	cmp	r0, #15
    986c:	dd0e      	ble.n	988c <_malloc_r+0x128>
    986e:	9b04      	ldr	r3, [sp, #16]
    9870:	186a      	adds	r2, r5, r1
    9872:	2101      	movs	r1, #1
    9874:	430b      	orrs	r3, r1
    9876:	606b      	str	r3, [r5, #4]
    9878:	4b8a      	ldr	r3, [pc, #552]	(9aa4 <.text+0x9aa4>)
    987a:	60da      	str	r2, [r3, #12]
    987c:	609a      	str	r2, [r3, #8]
    987e:	60d3      	str	r3, [r2, #12]
    9880:	6093      	str	r3, [r2, #8]
    9882:	1c03      	adds	r3, r0, #0
    9884:	430b      	orrs	r3, r1
    9886:	6053      	str	r3, [r2, #4]
    9888:	5010      	str	r0, [r2, r0]
    988a:	e009      	b.n	98a0 <_malloc_r+0x13c>
    988c:	4985      	ldr	r1, [pc, #532]	(9aa4 <.text+0x9aa4>)
    988e:	60c9      	str	r1, [r1, #12]
    9890:	6089      	str	r1, [r1, #8]
    9892:	2800      	cmp	r0, #0
    9894:	db09      	blt.n	98aa <_malloc_r+0x146>
    9896:	192b      	adds	r3, r5, r4
    9898:	685a      	ldr	r2, [r3, #4]
    989a:	2101      	movs	r1, #1
    989c:	430a      	orrs	r2, r1
    989e:	605a      	str	r2, [r3, #4]
    98a0:	9800      	ldr	r0, [sp, #0]
    98a2:	f000 f9f7 	bl	9c94 <__malloc_unlock>
    98a6:	1c28      	adds	r0, r5, #0
    98a8:	e1a3      	b.n	9bf2 <.text+0x9bf2>
    98aa:	4b7f      	ldr	r3, [pc, #508]	(9aa8 <.text+0x9aa8>)
    98ac:	429c      	cmp	r4, r3
    98ae:	d813      	bhi.n	98d8 <_malloc_r+0x174>
    98b0:	08e1      	lsrs	r1, r4, #3
    98b2:	1c0b      	adds	r3, r1, #0
    98b4:	2900      	cmp	r1, #0
    98b6:	da00      	bge.n	98ba <_malloc_r+0x156>
    98b8:	1ccb      	adds	r3, r1, #3
    98ba:	9801      	ldr	r0, [sp, #4]
    98bc:	109b      	asrs	r3, r3, #2
    98be:	2201      	movs	r2, #1
    98c0:	409a      	lsls	r2, r3
    98c2:	6843      	ldr	r3, [r0, #4]
    98c4:	4313      	orrs	r3, r2
    98c6:	6043      	str	r3, [r0, #4]
    98c8:	00cb      	lsls	r3, r1, #3
    98ca:	181b      	adds	r3, r3, r0
    98cc:	689a      	ldr	r2, [r3, #8]
    98ce:	60eb      	str	r3, [r5, #12]
    98d0:	60aa      	str	r2, [r5, #8]
    98d2:	60d5      	str	r5, [r2, #12]
    98d4:	609d      	str	r5, [r3, #8]
    98d6:	e044      	b.n	9962 <_malloc_r+0x1fe>
    98d8:	0a62      	lsrs	r2, r4, #9
    98da:	2a00      	cmp	r2, #0
    98dc:	d101      	bne.n	98e2 <_malloc_r+0x17e>
    98de:	08e2      	lsrs	r2, r4, #3
    98e0:	e01f      	b.n	9922 <_malloc_r+0x1be>
    98e2:	2a04      	cmp	r2, #4
    98e4:	d803      	bhi.n	98ee <_malloc_r+0x18a>
    98e6:	09a3      	lsrs	r3, r4, #6
    98e8:	1c1a      	adds	r2, r3, #0
    98ea:	3238      	adds	r2, #56
    98ec:	e019      	b.n	9922 <_malloc_r+0x1be>
    98ee:	2a14      	cmp	r2, #20
    98f0:	d801      	bhi.n	98f6 <_malloc_r+0x192>
    98f2:	325b      	adds	r2, #91
    98f4:	e015      	b.n	9922 <_malloc_r+0x1be>
    98f6:	2a54      	cmp	r2, #84
    98f8:	d803      	bhi.n	9902 <_malloc_r+0x19e>
    98fa:	0b23      	lsrs	r3, r4, #12
    98fc:	1c1a      	adds	r2, r3, #0
    98fe:	326e      	adds	r2, #110
    9900:	e00f      	b.n	9922 <_malloc_r+0x1be>
    9902:	23aa      	movs	r3, #170
    9904:	005b      	lsls	r3, r3, #1
    9906:	429a      	cmp	r2, r3
    9908:	d803      	bhi.n	9912 <_malloc_r+0x1ae>
    990a:	0be3      	lsrs	r3, r4, #15
    990c:	1c1a      	adds	r2, r3, #0
    990e:	3277      	adds	r2, #119
    9910:	e007      	b.n	9922 <_malloc_r+0x1be>
    9912:	4b63      	ldr	r3, [pc, #396]	(9aa0 <.text+0x9aa0>)
    9914:	429a      	cmp	r2, r3
    9916:	d901      	bls.n	991c <_malloc_r+0x1b8>
    9918:	227e      	movs	r2, #126
    991a:	e002      	b.n	9922 <_malloc_r+0x1be>
    991c:	0ca3      	lsrs	r3, r4, #18
    991e:	1c1a      	adds	r2, r3, #0
    9920:	327c      	adds	r2, #124
    9922:	9901      	ldr	r1, [sp, #4]
    9924:	00d3      	lsls	r3, r2, #3
    9926:	1858      	adds	r0, r3, r1
    9928:	6881      	ldr	r1, [r0, #8]
    992a:	4281      	cmp	r1, r0
    992c:	d10f      	bne.n	994e <_malloc_r+0x1ea>
    992e:	485b      	ldr	r0, [pc, #364]	(9a9c <.text+0x9a9c>)
    9930:	1c13      	adds	r3, r2, #0
    9932:	2a00      	cmp	r2, #0
    9934:	da00      	bge.n	9938 <_malloc_r+0x1d4>
    9936:	3303      	adds	r3, #3
    9938:	109b      	asrs	r3, r3, #2
    993a:	2201      	movs	r2, #1
    993c:	409a      	lsls	r2, r3
    993e:	6843      	ldr	r3, [r0, #4]
    9940:	4313      	orrs	r3, r2
    9942:	6043      	str	r3, [r0, #4]
    9944:	1c0b      	adds	r3, r1, #0
    9946:	e008      	b.n	995a <_malloc_r+0x1f6>
    9948:	6889      	ldr	r1, [r1, #8]
    994a:	4281      	cmp	r1, r0
    994c:	d004      	beq.n	9958 <_malloc_r+0x1f4>
    994e:	684b      	ldr	r3, [r1, #4]
    9950:	2203      	movs	r2, #3
    9952:	4393      	bics	r3, r2
    9954:	429c      	cmp	r4, r3
    9956:	d3f7      	bcc.n	9948 <_malloc_r+0x1e4>
    9958:	68cb      	ldr	r3, [r1, #12]
    995a:	60eb      	str	r3, [r5, #12]
    995c:	60a9      	str	r1, [r5, #8]
    995e:	60cd      	str	r5, [r1, #12]
    9960:	609d      	str	r5, [r3, #8]
    9962:	1c3a      	adds	r2, r7, #0
    9964:	2f00      	cmp	r7, #0
    9966:	da00      	bge.n	996a <_malloc_r+0x206>
    9968:	1cfa      	adds	r2, r7, #3
    996a:	2301      	movs	r3, #1
    996c:	1092      	asrs	r2, r2, #2
    996e:	1c19      	adds	r1, r3, #0
    9970:	4091      	lsls	r1, r2
    9972:	4a4a      	ldr	r2, [pc, #296]	(9a9c <.text+0x9a9c>)
    9974:	9202      	str	r2, [sp, #8]
    9976:	6852      	ldr	r2, [r2, #4]
    9978:	4291      	cmp	r1, r2
    997a:	d84a      	bhi.n	9a12 <_malloc_r+0x2ae>
    997c:	4211      	tst	r1, r2
    997e:	d107      	bne.n	9990 <_malloc_r+0x22c>
    9980:	2303      	movs	r3, #3
    9982:	439f      	bics	r7, r3
    9984:	3704      	adds	r7, #4
    9986:	e000      	b.n	998a <_malloc_r+0x226>
    9988:	3704      	adds	r7, #4
    998a:	0049      	lsls	r1, r1, #1
    998c:	4211      	tst	r1, r2
    998e:	d0fb      	beq.n	9988 <_malloc_r+0x224>
    9990:	9801      	ldr	r0, [sp, #4]
    9992:	00fb      	lsls	r3, r7, #3
    9994:	181b      	adds	r3, r3, r0
    9996:	9305      	str	r3, [sp, #20]
    9998:	46bc      	mov	ip, r7
    999a:	1c1e      	adds	r6, r3, #0
    999c:	68f4      	ldr	r4, [r6, #12]
    999e:	e00d      	b.n	99bc <_malloc_r+0x258>
    99a0:	6862      	ldr	r2, [r4, #4]
    99a2:	2303      	movs	r3, #3
    99a4:	439a      	bics	r2, r3
    99a6:	1c13      	adds	r3, r2, #0
    99a8:	9a04      	ldr	r2, [sp, #16]
    99aa:	1a9d      	subs	r5, r3, r2
    99ac:	2d0f      	cmp	r5, #15
    99ae:	dd00      	ble.n	99b2 <_malloc_r+0x24e>
    99b0:	e0f6      	b.n	9ba0 <.text+0x9ba0>
    99b2:	68e0      	ldr	r0, [r4, #12]
    99b4:	2d00      	cmp	r5, #0
    99b6:	db00      	blt.n	99ba <_malloc_r+0x256>
    99b8:	e106      	b.n	9bc8 <.text+0x9bc8>
    99ba:	1c04      	adds	r4, r0, #0
    99bc:	42b4      	cmp	r4, r6
    99be:	d1ef      	bne.n	99a0 <_malloc_r+0x23c>
    99c0:	2301      	movs	r3, #1
    99c2:	449c      	add	ip, r3
    99c4:	4660      	mov	r0, ip
    99c6:	2303      	movs	r3, #3
    99c8:	4218      	tst	r0, r3
    99ca:	d002      	beq.n	99d2 <_malloc_r+0x26e>
    99cc:	1c26      	adds	r6, r4, #0
    99ce:	3608      	adds	r6, #8
    99d0:	e7e4      	b.n	999c <_malloc_r+0x238>
    99d2:	9805      	ldr	r0, [sp, #20]
    99d4:	1c3c      	adds	r4, r7, #0
    99d6:	2303      	movs	r3, #3
    99d8:	421c      	tst	r4, r3
    99da:	d015      	beq.n	9a08 <_malloc_r+0x2a4>
    99dc:	1c03      	adds	r3, r0, #0
    99de:	6802      	ldr	r2, [r0, #0]
    99e0:	3b08      	subs	r3, #8
    99e2:	1c18      	adds	r0, r3, #0
    99e4:	429a      	cmp	r2, r3
    99e6:	d101      	bne.n	99ec <_malloc_r+0x288>
    99e8:	3c01      	subs	r4, #1
    99ea:	e7f4      	b.n	99d6 <_malloc_r+0x272>
    99ec:	9a02      	ldr	r2, [sp, #8]
    99ee:	6853      	ldr	r3, [r2, #4]
    99f0:	0049      	lsls	r1, r1, #1
    99f2:	4299      	cmp	r1, r3
    99f4:	d80d      	bhi.n	9a12 <_malloc_r+0x2ae>
    99f6:	2900      	cmp	r1, #0
    99f8:	d00b      	beq.n	9a12 <_malloc_r+0x2ae>
    99fa:	4667      	mov	r7, ip
    99fc:	e001      	b.n	9a02 <_malloc_r+0x29e>
    99fe:	3704      	adds	r7, #4
    9a00:	0049      	lsls	r1, r1, #1
    9a02:	4219      	tst	r1, r3
    9a04:	d0fb      	beq.n	99fe <_malloc_r+0x29a>
    9a06:	e7c3      	b.n	9990 <_malloc_r+0x22c>
    9a08:	9802      	ldr	r0, [sp, #8]
    9a0a:	6843      	ldr	r3, [r0, #4]
    9a0c:	438b      	bics	r3, r1
    9a0e:	6043      	str	r3, [r0, #4]
    9a10:	e7ec      	b.n	99ec <_malloc_r+0x288>
    9a12:	9902      	ldr	r1, [sp, #8]
    9a14:	688f      	ldr	r7, [r1, #8]
    9a16:	687a      	ldr	r2, [r7, #4]
    9a18:	2303      	movs	r3, #3
    9a1a:	439a      	bics	r2, r3
    9a1c:	9b04      	ldr	r3, [sp, #16]
    9a1e:	9203      	str	r2, [sp, #12]
    9a20:	429a      	cmp	r2, r3
    9a22:	d303      	bcc.n	9a2c <_malloc_r+0x2c8>
    9a24:	1ad0      	subs	r0, r2, r3
    9a26:	280f      	cmp	r0, #15
    9a28:	dd00      	ble.n	9a2c <_malloc_r+0x2c8>
    9a2a:	e0a6      	b.n	9b7a <.text+0x9b7a>
    9a2c:	4b1f      	ldr	r3, [pc, #124]	(9aac <.text+0x9aac>)
    9a2e:	681b      	ldr	r3, [r3, #0]
    9a30:	9804      	ldr	r0, [sp, #16]
    9a32:	3310      	adds	r3, #16
    9a34:	18c4      	adds	r4, r0, r3
    9a36:	4b1e      	ldr	r3, [pc, #120]	(9ab0 <.text+0x9ab0>)
    9a38:	681b      	ldr	r3, [r3, #0]
    9a3a:	3301      	adds	r3, #1
    9a3c:	d004      	beq.n	9a48 <_malloc_r+0x2e4>
    9a3e:	491d      	ldr	r1, [pc, #116]	(9ab4 <.text+0x9ab4>)
    9a40:	4b1d      	ldr	r3, [pc, #116]	(9ab8 <.text+0x9ab8>)
    9a42:	1862      	adds	r2, r4, r1
    9a44:	1c14      	adds	r4, r2, #0
    9a46:	401c      	ands	r4, r3
    9a48:	9800      	ldr	r0, [sp, #0]
    9a4a:	1c21      	adds	r1, r4, #0
    9a4c:	f003 fb30 	bl	d0b0 <___sbrk_r_from_thumb>
    9a50:	1c42      	adds	r2, r0, #1
    9a52:	d100      	bne.n	9a56 <_malloc_r+0x2f2>
    9a54:	e081      	b.n	9b5a <.text+0x9b5a>
    9a56:	9b03      	ldr	r3, [sp, #12]
    9a58:	18fe      	adds	r6, r7, r3
    9a5a:	1c05      	adds	r5, r0, #0
    9a5c:	42b0      	cmp	r0, r6
    9a5e:	d203      	bcs.n	9a68 <_malloc_r+0x304>
    9a60:	9902      	ldr	r1, [sp, #8]
    9a62:	428f      	cmp	r7, r1
    9a64:	d179      	bne.n	9b5a <.text+0x9b5a>
    9a66:	e096      	b.n	9b96 <.text+0x9b96>
    9a68:	4a14      	ldr	r2, [pc, #80]	(9abc <.text+0x9abc>)
    9a6a:	6813      	ldr	r3, [r2, #0]
    9a6c:	18e1      	adds	r1, r4, r3
    9a6e:	6011      	str	r1, [r2, #0]
    9a70:	42b0      	cmp	r0, r6
    9a72:	d10a      	bne.n	9a8a <_malloc_r+0x326>
    9a74:	4b0f      	ldr	r3, [pc, #60]	(9ab4 <.text+0x9ab4>)
    9a76:	4218      	tst	r0, r3
    9a78:	d107      	bne.n	9a8a <_malloc_r+0x326>
    9a7a:	9a02      	ldr	r2, [sp, #8]
    9a7c:	9803      	ldr	r0, [sp, #12]
    9a7e:	6893      	ldr	r3, [r2, #8]
    9a80:	2101      	movs	r1, #1
    9a82:	1822      	adds	r2, r4, r0
    9a84:	430a      	orrs	r2, r1
    9a86:	605a      	str	r2, [r3, #4]
    9a88:	e05b      	b.n	9b42 <.text+0x9b42>
    9a8a:	4a09      	ldr	r2, [pc, #36]	(9ab0 <.text+0x9ab0>)
    9a8c:	6813      	ldr	r3, [r2, #0]
    9a8e:	3301      	adds	r3, #1
    9a90:	d116      	bne.n	9ac0 <.text+0x9ac0>
    9a92:	6010      	str	r0, [r2, #0]
    9a94:	e018      	b.n	9ac8 <.text+0x9ac8>
    9a96:	0000      	lsls	r0, r0, #0
    9a98:	01f7      	lsls	r7, r6, #7
    9a9a:	0000      	lsls	r0, r0, #0
    9a9c:	0430      	lsls	r0, r6, #16
    9a9e:	4000      	ands	r0, r0
    9aa0:	0554      	lsls	r4, r2, #21
    9aa2:	0000      	lsls	r0, r0, #0
    9aa4:	0438      	lsls	r0, r7, #16
    9aa6:	4000      	ands	r0, r0
    9aa8:	01ff      	lsls	r7, r7, #7
    9aaa:	0000      	lsls	r0, r0, #0
    9aac:	0c60      	lsrs	r0, r4, #17
    9aae:	4000      	ands	r0, r0
    9ab0:	083c      	lsrs	r4, r7, #32
    9ab2:	4000      	ands	r0, r0
    9ab4:	0fff      	lsrs	r7, r7, #31
    9ab6:	0000      	lsls	r0, r0, #0
    9ab8:	f000 ffff 	bl	aaba <.text+0xaaba>
    9abc:	0c6c      	lsrs	r4, r5, #17
    9abe:	4000      	ands	r0, r0
    9ac0:	4a4e      	ldr	r2, [pc, #312]	(9bfc <.text+0x9bfc>)
    9ac2:	1b83      	subs	r3, r0, r6
    9ac4:	18cb      	adds	r3, r1, r3
    9ac6:	6013      	str	r3, [r2, #0]
    9ac8:	2307      	movs	r3, #7
    9aca:	1c02      	adds	r2, r0, #0
    9acc:	401a      	ands	r2, r3
    9ace:	d101      	bne.n	9ad4 <.text+0x9ad4>
    9ad0:	2100      	movs	r1, #0
    9ad2:	e002      	b.n	9ada <.text+0x9ada>
    9ad4:	2308      	movs	r3, #8
    9ad6:	1a99      	subs	r1, r3, r2
    9ad8:	1845      	adds	r5, r0, r1
    9ada:	4b49      	ldr	r3, [pc, #292]	(9c00 <.text+0x9c00>)
    9adc:	192a      	adds	r2, r5, r4
    9ade:	401a      	ands	r2, r3
    9ae0:	2380      	movs	r3, #128
    9ae2:	015b      	lsls	r3, r3, #5
    9ae4:	1a9b      	subs	r3, r3, r2
    9ae6:	18cc      	adds	r4, r1, r3
    9ae8:	1c21      	adds	r1, r4, #0
    9aea:	9800      	ldr	r0, [sp, #0]
    9aec:	f003 fae0 	bl	d0b0 <___sbrk_r_from_thumb>
    9af0:	1c41      	adds	r1, r0, #1
    9af2:	d101      	bne.n	9af8 <.text+0x9af8>
    9af4:	1c28      	adds	r0, r5, #0
    9af6:	2400      	movs	r4, #0
    9af8:	4b40      	ldr	r3, [pc, #256]	(9bfc <.text+0x9bfc>)
    9afa:	681a      	ldr	r2, [r3, #0]
    9afc:	1912      	adds	r2, r2, r4
    9afe:	601a      	str	r2, [r3, #0]
    9b00:	1b43      	subs	r3, r0, r5
    9b02:	9a02      	ldr	r2, [sp, #8]
    9b04:	191b      	adds	r3, r3, r4
    9b06:	2101      	movs	r1, #1
    9b08:	430b      	orrs	r3, r1
    9b0a:	6095      	str	r5, [r2, #8]
    9b0c:	606b      	str	r3, [r5, #4]
    9b0e:	4297      	cmp	r7, r2
    9b10:	d017      	beq.n	9b42 <.text+0x9b42>
    9b12:	9b03      	ldr	r3, [sp, #12]
    9b14:	2b0f      	cmp	r3, #15
    9b16:	d801      	bhi.n	9b1c <.text+0x9b1c>
    9b18:	6069      	str	r1, [r5, #4]
    9b1a:	e01e      	b.n	9b5a <.text+0x9b5a>
    9b1c:	9a03      	ldr	r2, [sp, #12]
    9b1e:	2307      	movs	r3, #7
    9b20:	3a0c      	subs	r2, #12
    9b22:	439a      	bics	r2, r3
    9b24:	687b      	ldr	r3, [r7, #4]
    9b26:	400b      	ands	r3, r1
    9b28:	4313      	orrs	r3, r2
    9b2a:	607b      	str	r3, [r7, #4]
    9b2c:	18b9      	adds	r1, r7, r2
    9b2e:	2305      	movs	r3, #5
    9b30:	604b      	str	r3, [r1, #4]
    9b32:	608b      	str	r3, [r1, #8]
    9b34:	2a0f      	cmp	r2, #15
    9b36:	d904      	bls.n	9b42 <.text+0x9b42>
    9b38:	1c39      	adds	r1, r7, #0
    9b3a:	3108      	adds	r1, #8
    9b3c:	9800      	ldr	r0, [sp, #0]
    9b3e:	f7ff fb0d 	bl	915c <_free_r>
    9b42:	4b2e      	ldr	r3, [pc, #184]	(9bfc <.text+0x9bfc>)
    9b44:	492f      	ldr	r1, [pc, #188]	(9c04 <.text+0x9c04>)
    9b46:	681a      	ldr	r2, [r3, #0]
    9b48:	680b      	ldr	r3, [r1, #0]
    9b4a:	429a      	cmp	r2, r3
    9b4c:	d900      	bls.n	9b50 <.text+0x9b50>
    9b4e:	600a      	str	r2, [r1, #0]
    9b50:	492d      	ldr	r1, [pc, #180]	(9c08 <.text+0x9c08>)
    9b52:	680b      	ldr	r3, [r1, #0]
    9b54:	429a      	cmp	r2, r3
    9b56:	d900      	bls.n	9b5a <.text+0x9b5a>
    9b58:	600a      	str	r2, [r1, #0]
    9b5a:	9802      	ldr	r0, [sp, #8]
    9b5c:	6883      	ldr	r3, [r0, #8]
    9b5e:	685a      	ldr	r2, [r3, #4]
    9b60:	9904      	ldr	r1, [sp, #16]
    9b62:	2303      	movs	r3, #3
    9b64:	439a      	bics	r2, r3
    9b66:	428a      	cmp	r2, r1
    9b68:	d302      	bcc.n	9b70 <.text+0x9b70>
    9b6a:	1a50      	subs	r0, r2, r1
    9b6c:	280f      	cmp	r0, #15
    9b6e:	dc04      	bgt.n	9b7a <.text+0x9b7a>
    9b70:	9800      	ldr	r0, [sp, #0]
    9b72:	f000 f88f 	bl	9c94 <__malloc_unlock>
    9b76:	2000      	movs	r0, #0
    9b78:	e03c      	b.n	9bf4 <.text+0x9bf4>
    9b7a:	9a02      	ldr	r2, [sp, #8]
    9b7c:	9b04      	ldr	r3, [sp, #16]
    9b7e:	6894      	ldr	r4, [r2, #8]
    9b80:	2101      	movs	r1, #1
    9b82:	430b      	orrs	r3, r1
    9b84:	6063      	str	r3, [r4, #4]
    9b86:	9b04      	ldr	r3, [sp, #16]
    9b88:	18e2      	adds	r2, r4, r3
    9b8a:	9b02      	ldr	r3, [sp, #8]
    9b8c:	609a      	str	r2, [r3, #8]
    9b8e:	1c03      	adds	r3, r0, #0
    9b90:	430b      	orrs	r3, r1
    9b92:	6053      	str	r3, [r2, #4]
    9b94:	e029      	b.n	9bea <.text+0x9bea>
    9b96:	4a19      	ldr	r2, [pc, #100]	(9bfc <.text+0x9bfc>)
    9b98:	6813      	ldr	r3, [r2, #0]
    9b9a:	18e1      	adds	r1, r4, r3
    9b9c:	6011      	str	r1, [r2, #0]
    9b9e:	e774      	b.n	9a8a <_malloc_r+0x326>
    9ba0:	9804      	ldr	r0, [sp, #16]
    9ba2:	9b04      	ldr	r3, [sp, #16]
    9ba4:	1822      	adds	r2, r4, r0
    9ba6:	2001      	movs	r0, #1
    9ba8:	4303      	orrs	r3, r0
    9baa:	68e1      	ldr	r1, [r4, #12]
    9bac:	6063      	str	r3, [r4, #4]
    9bae:	68a3      	ldr	r3, [r4, #8]
    9bb0:	60d9      	str	r1, [r3, #12]
    9bb2:	608b      	str	r3, [r1, #8]
    9bb4:	4915      	ldr	r1, [pc, #84]	(9c0c <.text+0x9c0c>)
    9bb6:	1c2b      	adds	r3, r5, #0
    9bb8:	4303      	orrs	r3, r0
    9bba:	60ca      	str	r2, [r1, #12]
    9bbc:	608a      	str	r2, [r1, #8]
    9bbe:	60d1      	str	r1, [r2, #12]
    9bc0:	6091      	str	r1, [r2, #8]
    9bc2:	6053      	str	r3, [r2, #4]
    9bc4:	5155      	str	r5, [r2, r5]
    9bc6:	e010      	b.n	9bea <.text+0x9bea>
    9bc8:	18e1      	adds	r1, r4, r3
    9bca:	684b      	ldr	r3, [r1, #4]
    9bcc:	2201      	movs	r2, #1
    9bce:	4313      	orrs	r3, r2
    9bd0:	604b      	str	r3, [r1, #4]
    9bd2:	68a3      	ldr	r3, [r4, #8]
    9bd4:	60d8      	str	r0, [r3, #12]
    9bd6:	6083      	str	r3, [r0, #8]
    9bd8:	e007      	b.n	9bea <.text+0x9bea>
    9bda:	68a3      	ldr	r3, [r4, #8]
    9bdc:	60da      	str	r2, [r3, #12]
    9bde:	6093      	str	r3, [r2, #8]
    9be0:	1821      	adds	r1, r4, r0
    9be2:	684b      	ldr	r3, [r1, #4]
    9be4:	2201      	movs	r2, #1
    9be6:	4313      	orrs	r3, r2
    9be8:	604b      	str	r3, [r1, #4]
    9bea:	9800      	ldr	r0, [sp, #0]
    9bec:	f000 f852 	bl	9c94 <__malloc_unlock>
    9bf0:	1c20      	adds	r0, r4, #0
    9bf2:	3008      	adds	r0, #8
    9bf4:	b006      	add	sp, #24
    9bf6:	bcf0      	pop	{r4, r5, r6, r7}
    9bf8:	bc02      	pop	{r1}
    9bfa:	4708      	bx	r1
    9bfc:	0c6c      	lsrs	r4, r5, #17
    9bfe:	4000      	ands	r0, r0
    9c00:	0fff      	lsrs	r7, r7, #31
    9c02:	0000      	lsls	r0, r0, #0
    9c04:	0c64      	lsrs	r4, r4, #17
    9c06:	4000      	ands	r0, r0
    9c08:	0c68      	lsrs	r0, r5, #17
    9c0a:	4000      	ands	r0, r0
    9c0c:	0438      	lsls	r0, r7, #16
    9c0e:	4000      	ands	r0, r0

00009c10 <memchr>:
    9c10:	23ff      	movs	r3, #255
    9c12:	4019      	ands	r1, r3
    9c14:	e003      	b.n	9c1e <memchr+0xe>
    9c16:	7803      	ldrb	r3, [r0, #0]
    9c18:	428b      	cmp	r3, r1
    9c1a:	d003      	beq.n	9c24 <memchr+0x14>
    9c1c:	3001      	adds	r0, #1
    9c1e:	3a01      	subs	r2, #1
    9c20:	d2f9      	bcs.n	9c16 <memchr+0x6>
    9c22:	2000      	movs	r0, #0
    9c24:	4770      	bx	lr
    9c26:	46c0      	nop			(mov r8, r8)

00009c28 <memcpy>:
    9c28:	b510      	push	{r4, lr}
    9c2a:	1c04      	adds	r4, r0, #0
    9c2c:	1c10      	adds	r0, r2, #0
    9c2e:	1c22      	adds	r2, r4, #0
    9c30:	e003      	b.n	9c3a <memcpy+0x12>
    9c32:	780b      	ldrb	r3, [r1, #0]
    9c34:	3101      	adds	r1, #1
    9c36:	7013      	strb	r3, [r2, #0]
    9c38:	3201      	adds	r2, #1
    9c3a:	3801      	subs	r0, #1
    9c3c:	d2f9      	bcs.n	9c32 <memcpy+0xa>
    9c3e:	1c20      	adds	r0, r4, #0
    9c40:	bc10      	pop	{r4}
    9c42:	bc02      	pop	{r1}
    9c44:	4708      	bx	r1
    9c46:	46c0      	nop			(mov r8, r8)

00009c48 <memmove>:
    9c48:	b530      	push	{r4, r5, lr}
    9c4a:	1c05      	adds	r5, r0, #0
    9c4c:	1c04      	adds	r4, r0, #0
    9c4e:	42a9      	cmp	r1, r5
    9c50:	d20f      	bcs.n	9c72 <memmove+0x2a>
    9c52:	1888      	adds	r0, r1, r2
    9c54:	4285      	cmp	r5, r0
    9c56:	d20c      	bcs.n	9c72 <memmove+0x2a>
    9c58:	18a9      	adds	r1, r5, r2
    9c5a:	e003      	b.n	9c64 <memmove+0x1c>
    9c5c:	3801      	subs	r0, #1
    9c5e:	7803      	ldrb	r3, [r0, #0]
    9c60:	3901      	subs	r1, #1
    9c62:	700b      	strb	r3, [r1, #0]
    9c64:	3a01      	subs	r2, #1
    9c66:	d2f9      	bcs.n	9c5c <memmove+0x14>
    9c68:	e005      	b.n	9c76 <memmove+0x2e>
    9c6a:	780b      	ldrb	r3, [r1, #0]
    9c6c:	3101      	adds	r1, #1
    9c6e:	7023      	strb	r3, [r4, #0]
    9c70:	3401      	adds	r4, #1
    9c72:	3a01      	subs	r2, #1
    9c74:	d2f9      	bcs.n	9c6a <memmove+0x22>
    9c76:	1c28      	adds	r0, r5, #0
    9c78:	bc30      	pop	{r4, r5}
    9c7a:	bc02      	pop	{r1}
    9c7c:	4708      	bx	r1
    9c7e:	46c0      	nop			(mov r8, r8)

00009c80 <memset>:
    9c80:	1c03      	adds	r3, r0, #0
    9c82:	e001      	b.n	9c88 <memset+0x8>
    9c84:	7019      	strb	r1, [r3, #0]
    9c86:	3301      	adds	r3, #1
    9c88:	3a01      	subs	r2, #1
    9c8a:	d2fb      	bcs.n	9c84 <memset+0x4>
    9c8c:	4770      	bx	lr
    9c8e:	46c0      	nop			(mov r8, r8)

00009c90 <__malloc_lock>:
    9c90:	4770      	bx	lr
	...

00009c94 <__malloc_unlock>:
    9c94:	4770      	bx	lr
    9c96:	46c0      	nop			(mov r8, r8)

00009c98 <_Bfree>:
    9c98:	1c02      	adds	r2, r0, #0
    9c9a:	1c08      	adds	r0, r1, #0
    9c9c:	2900      	cmp	r1, #0
    9c9e:	d005      	beq.n	9cac <_Bfree+0x14>
    9ca0:	684b      	ldr	r3, [r1, #4]
    9ca2:	6cd1      	ldr	r1, [r2, #76]
    9ca4:	009b      	lsls	r3, r3, #2
    9ca6:	585a      	ldr	r2, [r3, r1]
    9ca8:	6002      	str	r2, [r0, #0]
    9caa:	5058      	str	r0, [r3, r1]
    9cac:	4770      	bx	lr
	...

00009cb0 <_hi0bits>:
    9cb0:	4b10      	ldr	r3, [pc, #64]	(9cf4 <.text+0x9cf4>)
    9cb2:	4218      	tst	r0, r3
    9cb4:	d001      	beq.n	9cba <_hi0bits+0xa>
    9cb6:	2200      	movs	r2, #0
    9cb8:	e001      	b.n	9cbe <_hi0bits+0xe>
    9cba:	0400      	lsls	r0, r0, #16
    9cbc:	2210      	movs	r2, #16
    9cbe:	23ff      	movs	r3, #255
    9cc0:	061b      	lsls	r3, r3, #24
    9cc2:	4218      	tst	r0, r3
    9cc4:	d101      	bne.n	9cca <_hi0bits+0x1a>
    9cc6:	3208      	adds	r2, #8
    9cc8:	0200      	lsls	r0, r0, #8
    9cca:	23f0      	movs	r3, #240
    9ccc:	061b      	lsls	r3, r3, #24
    9cce:	4218      	tst	r0, r3
    9cd0:	d101      	bne.n	9cd6 <_hi0bits+0x26>
    9cd2:	3204      	adds	r2, #4
    9cd4:	0100      	lsls	r0, r0, #4
    9cd6:	23c0      	movs	r3, #192
    9cd8:	061b      	lsls	r3, r3, #24
    9cda:	4218      	tst	r0, r3
    9cdc:	d101      	bne.n	9ce2 <_hi0bits+0x32>
    9cde:	3202      	adds	r2, #2
    9ce0:	0080      	lsls	r0, r0, #2
    9ce2:	2800      	cmp	r0, #0
    9ce4:	db04      	blt.n	9cf0 <_hi0bits+0x40>
    9ce6:	0043      	lsls	r3, r0, #1
    9ce8:	d401      	bmi.n	9cee <_hi0bits+0x3e>
    9cea:	2220      	movs	r2, #32
    9cec:	e000      	b.n	9cf0 <_hi0bits+0x40>
    9cee:	3201      	adds	r2, #1
    9cf0:	1c10      	adds	r0, r2, #0
    9cf2:	4770      	bx	lr
    9cf4:	0000      	lsls	r0, r0, #0
    9cf6:	ffff 6802 	vtbl.8	d22, {d15}, d2

00009cf8 <_lo0bits>:
    9cf8:	6802      	ldr	r2, [r0, #0]
    9cfa:	2307      	movs	r3, #7
    9cfc:	1c01      	adds	r1, r0, #0
    9cfe:	421a      	tst	r2, r3
    9d00:	d00d      	beq.n	9d1e <_lo0bits+0x26>
    9d02:	07d3      	lsls	r3, r2, #31
    9d04:	d501      	bpl.n	9d0a <_lo0bits+0x12>
    9d06:	2000      	movs	r0, #0
    9d08:	e028      	b.n	9d5c <_lo0bits+0x64>
    9d0a:	0793      	lsls	r3, r2, #30
    9d0c:	d503      	bpl.n	9d16 <_lo0bits+0x1e>
    9d0e:	0853      	lsrs	r3, r2, #1
    9d10:	6003      	str	r3, [r0, #0]
    9d12:	2001      	movs	r0, #1
    9d14:	e022      	b.n	9d5c <_lo0bits+0x64>
    9d16:	0893      	lsrs	r3, r2, #2
    9d18:	6003      	str	r3, [r0, #0]
    9d1a:	2002      	movs	r0, #2
    9d1c:	e01e      	b.n	9d5c <_lo0bits+0x64>
    9d1e:	4b10      	ldr	r3, [pc, #64]	(9d60 <.text+0x9d60>)
    9d20:	421a      	tst	r2, r3
    9d22:	d001      	beq.n	9d28 <_lo0bits+0x30>
    9d24:	2000      	movs	r0, #0
    9d26:	e001      	b.n	9d2c <_lo0bits+0x34>
    9d28:	0c12      	lsrs	r2, r2, #16
    9d2a:	2010      	movs	r0, #16
    9d2c:	23ff      	movs	r3, #255
    9d2e:	421a      	tst	r2, r3
    9d30:	d101      	bne.n	9d36 <_lo0bits+0x3e>
    9d32:	3008      	adds	r0, #8
    9d34:	0a12      	lsrs	r2, r2, #8
    9d36:	230f      	movs	r3, #15
    9d38:	421a      	tst	r2, r3
    9d3a:	d101      	bne.n	9d40 <_lo0bits+0x48>
    9d3c:	3004      	adds	r0, #4
    9d3e:	0912      	lsrs	r2, r2, #4
    9d40:	2303      	movs	r3, #3
    9d42:	421a      	tst	r2, r3
    9d44:	d101      	bne.n	9d4a <_lo0bits+0x52>
    9d46:	3002      	adds	r0, #2
    9d48:	0892      	lsrs	r2, r2, #2
    9d4a:	07d3      	lsls	r3, r2, #31
    9d4c:	d405      	bmi.n	9d5a <_lo0bits+0x62>
    9d4e:	0852      	lsrs	r2, r2, #1
    9d50:	2a00      	cmp	r2, #0
    9d52:	d101      	bne.n	9d58 <_lo0bits+0x60>
    9d54:	2020      	movs	r0, #32
    9d56:	e001      	b.n	9d5c <_lo0bits+0x64>
    9d58:	3001      	adds	r0, #1
    9d5a:	600a      	str	r2, [r1, #0]
    9d5c:	4770      	bx	lr
    9d5e:	0000      	lsls	r0, r0, #0
    9d60:	ffff 0000 	vaddl.u<illegal width 64>	q8, d15, d0

00009d64 <__mcmp>:
    9d64:	b530      	push	{r4, r5, lr}
    9d66:	6903      	ldr	r3, [r0, #16]
    9d68:	690a      	ldr	r2, [r1, #16]
    9d6a:	1c04      	adds	r4, r0, #0
    9d6c:	1a98      	subs	r0, r3, r2
    9d6e:	2800      	cmp	r0, #0
    9d70:	d114      	bne.n	9d9c <__mcmp+0x38>
    9d72:	1c25      	adds	r5, r4, #0
    9d74:	0093      	lsls	r3, r2, #2
    9d76:	3514      	adds	r5, #20
    9d78:	18ea      	adds	r2, r5, r3
    9d7a:	3314      	adds	r3, #20
    9d7c:	18c9      	adds	r1, r1, r3
    9d7e:	3a04      	subs	r2, #4
    9d80:	3904      	subs	r1, #4
    9d82:	6814      	ldr	r4, [r2, #0]
    9d84:	680b      	ldr	r3, [r1, #0]
    9d86:	429c      	cmp	r4, r3
    9d88:	d006      	beq.n	9d98 <__mcmp+0x34>
    9d8a:	429c      	cmp	r4, r3
    9d8c:	d202      	bcs.n	9d94 <__mcmp+0x30>
    9d8e:	2001      	movs	r0, #1
    9d90:	4240      	negs	r0, r0
    9d92:	e003      	b.n	9d9c <__mcmp+0x38>
    9d94:	2001      	movs	r0, #1
    9d96:	e001      	b.n	9d9c <__mcmp+0x38>
    9d98:	42aa      	cmp	r2, r5
    9d9a:	d8f0      	bhi.n	9d7e <__mcmp+0x1a>
    9d9c:	bc30      	pop	{r4, r5}
    9d9e:	bc02      	pop	{r1}
    9da0:	4708      	bx	r1
	...

00009da4 <_ulp>:
    9da4:	b530      	push	{r4, r5, lr}
    9da6:	4b11      	ldr	r3, [pc, #68]	(9dec <.text+0x9dec>)
    9da8:	4a11      	ldr	r2, [pc, #68]	(9df0 <.text+0x9df0>)
    9daa:	4003      	ands	r3, r0
    9dac:	189b      	adds	r3, r3, r2
    9dae:	2b00      	cmp	r3, #0
    9db0:	dd01      	ble.n	9db6 <_ulp+0x12>
    9db2:	1c1c      	adds	r4, r3, #0
    9db4:	e007      	b.n	9dc6 <_ulp+0x22>
    9db6:	425b      	negs	r3, r3
    9db8:	151a      	asrs	r2, r3, #20
    9dba:	2a13      	cmp	r2, #19
    9dbc:	dc05      	bgt.n	9dca <_ulp+0x26>
    9dbe:	2380      	movs	r3, #128
    9dc0:	031b      	lsls	r3, r3, #12
    9dc2:	1c1c      	adds	r4, r3, #0
    9dc4:	4114      	asrs	r4, r2
    9dc6:	2500      	movs	r5, #0
    9dc8:	e00a      	b.n	9de0 <_ulp+0x3c>
    9dca:	3a14      	subs	r2, #20
    9dcc:	2a1e      	cmp	r2, #30
    9dce:	dd01      	ble.n	9dd4 <_ulp+0x30>
    9dd0:	2201      	movs	r2, #1
    9dd2:	e003      	b.n	9ddc <_ulp+0x38>
    9dd4:	231f      	movs	r3, #31
    9dd6:	1a9b      	subs	r3, r3, r2
    9dd8:	2201      	movs	r2, #1
    9dda:	409a      	lsls	r2, r3
    9ddc:	2400      	movs	r4, #0
    9dde:	1c15      	adds	r5, r2, #0
    9de0:	1c29      	adds	r1, r5, #0
    9de2:	1c20      	adds	r0, r4, #0
    9de4:	bc30      	pop	{r4, r5}
    9de6:	bc04      	pop	{r2}
    9de8:	4710      	bx	r2
    9dea:	0000      	lsls	r0, r0, #0
    9dec:	0000      	lsls	r0, r0, #0
    9dee:	7ff0      	ldrb	r0, [r6, #31]
    9df0:	0000      	lsls	r0, r0, #0
    9df2:	fcc0 b5f0 	stc2l	5, cr11, [r0], {240}

00009df4 <_b2d>:
    9df4:	b5f0      	push	{r4, r5, r6, r7, lr}
    9df6:	b083      	sub	sp, #12
    9df8:	6903      	ldr	r3, [r0, #16]
    9dfa:	9100      	str	r1, [sp, #0]
    9dfc:	1c01      	adds	r1, r0, #0
    9dfe:	3114      	adds	r1, #20
    9e00:	009b      	lsls	r3, r3, #2
    9e02:	18cc      	adds	r4, r1, r3
    9e04:	1f25      	subs	r5, r4, #4
    9e06:	682a      	ldr	r2, [r5, #0]
    9e08:	1c10      	adds	r0, r2, #0
    9e0a:	9101      	str	r1, [sp, #4]
    9e0c:	9202      	str	r2, [sp, #8]
    9e0e:	f7ff ff4f 	bl	9cb0 <_hi0bits>
    9e12:	2320      	movs	r3, #32
    9e14:	9900      	ldr	r1, [sp, #0]
    9e16:	1a1b      	subs	r3, r3, r0
    9e18:	600b      	str	r3, [r1, #0]
    9e1a:	280a      	cmp	r0, #10
    9e1c:	dc18      	bgt.n	9e50 <_b2d+0x5c>
    9e1e:	9a01      	ldr	r2, [sp, #4]
    9e20:	230b      	movs	r3, #11
    9e22:	1a19      	subs	r1, r3, r0
    9e24:	4295      	cmp	r5, r2
    9e26:	d801      	bhi.n	9e2c <_b2d+0x38>
    9e28:	2400      	movs	r4, #0
    9e2a:	e002      	b.n	9e32 <_b2d+0x3e>
    9e2c:	1c23      	adds	r3, r4, #0
    9e2e:	3b08      	subs	r3, #8
    9e30:	681c      	ldr	r4, [r3, #0]
    9e32:	9a02      	ldr	r2, [sp, #8]
    9e34:	4b1e      	ldr	r3, [pc, #120]	(9eb0 <.text+0x9eb0>)
    9e36:	40ca      	lsrs	r2, r1
    9e38:	1c16      	adds	r6, r2, #0
    9e3a:	431e      	orrs	r6, r3
    9e3c:	9a02      	ldr	r2, [sp, #8]
    9e3e:	1c03      	adds	r3, r0, #0
    9e40:	3315      	adds	r3, #21
    9e42:	409a      	lsls	r2, r3
    9e44:	1c13      	adds	r3, r2, #0
    9e46:	1c22      	adds	r2, r4, #0
    9e48:	40ca      	lsrs	r2, r1
    9e4a:	1c1f      	adds	r7, r3, #0
    9e4c:	4317      	orrs	r7, r2
    9e4e:	e029      	b.n	9ea4 <_b2d+0xb0>
    9e50:	9b01      	ldr	r3, [sp, #4]
    9e52:	429d      	cmp	r5, r3
    9e54:	d801      	bhi.n	9e5a <_b2d+0x66>
    9e56:	2400      	movs	r4, #0
    9e58:	e002      	b.n	9e60 <_b2d+0x6c>
    9e5a:	1c25      	adds	r5, r4, #0
    9e5c:	3d08      	subs	r5, #8
    9e5e:	682c      	ldr	r4, [r5, #0]
    9e60:	380b      	subs	r0, #11
    9e62:	2800      	cmp	r0, #0
    9e64:	d01a      	beq.n	9e9c <_b2d+0xa8>
    9e66:	2320      	movs	r3, #32
    9e68:	9901      	ldr	r1, [sp, #4]
    9e6a:	1a1b      	subs	r3, r3, r0
    9e6c:	469c      	mov	ip, r3
    9e6e:	428d      	cmp	r5, r1
    9e70:	d801      	bhi.n	9e76 <_b2d+0x82>
    9e72:	2500      	movs	r5, #0
    9e74:	e001      	b.n	9e7a <_b2d+0x86>
    9e76:	1f2b      	subs	r3, r5, #4
    9e78:	681d      	ldr	r5, [r3, #0]
    9e7a:	4662      	mov	r2, ip
    9e7c:	1c21      	adds	r1, r4, #0
    9e7e:	9b02      	ldr	r3, [sp, #8]
    9e80:	40d1      	lsrs	r1, r2
    9e82:	4a0b      	ldr	r2, [pc, #44]	(9eb0 <.text+0x9eb0>)
    9e84:	4083      	lsls	r3, r0
    9e86:	4313      	orrs	r3, r2
    9e88:	1c0e      	adds	r6, r1, #0
    9e8a:	1c22      	adds	r2, r4, #0
    9e8c:	431e      	orrs	r6, r3
    9e8e:	4082      	lsls	r2, r0
    9e90:	1c2b      	adds	r3, r5, #0
    9e92:	4661      	mov	r1, ip
    9e94:	40cb      	lsrs	r3, r1
    9e96:	1c17      	adds	r7, r2, #0
    9e98:	431f      	orrs	r7, r3
    9e9a:	e003      	b.n	9ea4 <_b2d+0xb0>
    9e9c:	4b04      	ldr	r3, [pc, #16]	(9eb0 <.text+0x9eb0>)
    9e9e:	9e02      	ldr	r6, [sp, #8]
    9ea0:	1c27      	adds	r7, r4, #0
    9ea2:	431e      	orrs	r6, r3
    9ea4:	1c30      	adds	r0, r6, #0
    9ea6:	1c39      	adds	r1, r7, #0
    9ea8:	b003      	add	sp, #12
    9eaa:	bcf0      	pop	{r4, r5, r6, r7}
    9eac:	bc04      	pop	{r2}
    9eae:	4710      	bx	r2
    9eb0:	0000      	lsls	r0, r0, #0
    9eb2:	3ff0      	subs	r7, #240

00009eb4 <_ratio>:
    9eb4:	b5f0      	push	{r4, r5, r6, r7, lr}
    9eb6:	b084      	sub	sp, #16
    9eb8:	1c0d      	adds	r5, r1, #0
    9eba:	a902      	add	r1, sp, #8
    9ebc:	1c04      	adds	r4, r0, #0
    9ebe:	f7ff ff99 	bl	9df4 <_b2d>
    9ec2:	9000      	str	r0, [sp, #0]
    9ec4:	9101      	str	r1, [sp, #4]
    9ec6:	1c28      	adds	r0, r5, #0
    9ec8:	a903      	add	r1, sp, #12
    9eca:	f7ff ff93 	bl	9df4 <_b2d>
    9ece:	9b03      	ldr	r3, [sp, #12]
    9ed0:	1c0f      	adds	r7, r1, #0
    9ed2:	9902      	ldr	r1, [sp, #8]
    9ed4:	692a      	ldr	r2, [r5, #16]
    9ed6:	1ac9      	subs	r1, r1, r3
    9ed8:	6923      	ldr	r3, [r4, #16]
    9eda:	1a9b      	subs	r3, r3, r2
    9edc:	015b      	lsls	r3, r3, #5
    9ede:	18c9      	adds	r1, r1, r3
    9ee0:	1c06      	adds	r6, r0, #0
    9ee2:	2900      	cmp	r1, #0
    9ee4:	dd04      	ble.n	9ef0 <_ratio+0x3c>
    9ee6:	9a00      	ldr	r2, [sp, #0]
    9ee8:	050b      	lsls	r3, r1, #20
    9eea:	189b      	adds	r3, r3, r2
    9eec:	9300      	str	r3, [sp, #0]
    9eee:	e001      	b.n	9ef4 <_ratio+0x40>
    9ef0:	050b      	lsls	r3, r1, #20
    9ef2:	1af6      	subs	r6, r6, r3
    9ef4:	9800      	ldr	r0, [sp, #0]
    9ef6:	9901      	ldr	r1, [sp, #4]
    9ef8:	1c32      	adds	r2, r6, #0
    9efa:	1c3b      	adds	r3, r7, #0
    9efc:	f003 f8cc 	bl	d098 <____divdf3_from_thumb>
    9f00:	b004      	add	sp, #16
    9f02:	bcf0      	pop	{r4, r5, r6, r7}
    9f04:	bc04      	pop	{r2}
    9f06:	4710      	bx	r2

00009f08 <_mprec_log10>:
    9f08:	b510      	push	{r4, lr}
    9f0a:	1c04      	adds	r4, r0, #0
    9f0c:	2817      	cmp	r0, #23
    9f0e:	dd02      	ble.n	9f16 <_mprec_log10+0xe>
    9f10:	490a      	ldr	r1, [pc, #40]	(9f3c <.text+0x9f3c>)
    9f12:	4809      	ldr	r0, [pc, #36]	(9f38 <.text+0x9f38>)
    9f14:	e00a      	b.n	9f2c <_mprec_log10+0x24>
    9f16:	4a0a      	ldr	r2, [pc, #40]	(9f40 <.text+0x9f40>)
    9f18:	00c3      	lsls	r3, r0, #3
    9f1a:	189b      	adds	r3, r3, r2
    9f1c:	6818      	ldr	r0, [r3, #0]
    9f1e:	6859      	ldr	r1, [r3, #4]
    9f20:	e006      	b.n	9f30 <_mprec_log10+0x28>
    9f22:	4a08      	ldr	r2, [pc, #32]	(9f44 <.text+0x9f44>)
    9f24:	4b08      	ldr	r3, [pc, #32]	(9f48 <.text+0x9f48>)
    9f26:	f003 f8af 	bl	d088 <____muldf3_from_thumb>
    9f2a:	3c01      	subs	r4, #1
    9f2c:	2c00      	cmp	r4, #0
    9f2e:	d1f8      	bne.n	9f22 <_mprec_log10+0x1a>
    9f30:	bc10      	pop	{r4}
    9f32:	bc04      	pop	{r2}
    9f34:	4710      	bx	r2
    9f36:	0000      	lsls	r0, r0, #0
    9f38:	0000      	lsls	r0, r0, #0
    9f3a:	3ff0      	subs	r7, #240
    9f3c:	0000      	lsls	r0, r0, #0
    9f3e:	0000      	lsls	r0, r0, #0
    9f40:	d430      	bmi.n	9fa4 <_Balloc+0x58>
    9f42:	0000      	lsls	r0, r0, #0
    9f44:	0000      	lsls	r0, r0, #0
    9f46:	4024      	ands	r4, r4
    9f48:	0000      	lsls	r0, r0, #0
	...

00009f4c <_Balloc>:
    9f4c:	b5f0      	push	{r4, r5, r6, r7, lr}
    9f4e:	6cc3      	ldr	r3, [r0, #76]
    9f50:	1c05      	adds	r5, r0, #0
    9f52:	1c0e      	adds	r6, r1, #0
    9f54:	2b00      	cmp	r3, #0
    9f56:	d108      	bne.n	9f6a <_Balloc+0x1e>
    9f58:	2104      	movs	r1, #4
    9f5a:	2210      	movs	r2, #16
    9f5c:	f000 fcd6 	bl	a90c <_calloc_r>
    9f60:	64e8      	str	r0, [r5, #76]
    9f62:	2800      	cmp	r0, #0
    9f64:	d101      	bne.n	9f6a <_Balloc+0x1e>
    9f66:	2400      	movs	r4, #0
    9f68:	e019      	b.n	9f9e <_Balloc+0x52>
    9f6a:	6ceb      	ldr	r3, [r5, #76]
    9f6c:	00b2      	lsls	r2, r6, #2
    9f6e:	18d2      	adds	r2, r2, r3
    9f70:	6814      	ldr	r4, [r2, #0]
    9f72:	2c00      	cmp	r4, #0
    9f74:	d002      	beq.n	9f7c <_Balloc+0x30>
    9f76:	6823      	ldr	r3, [r4, #0]
    9f78:	6013      	str	r3, [r2, #0]
    9f7a:	e00d      	b.n	9f98 <_Balloc+0x4c>
    9f7c:	2301      	movs	r3, #1
    9f7e:	1c1f      	adds	r7, r3, #0
    9f80:	40b7      	lsls	r7, r6
    9f82:	00ba      	lsls	r2, r7, #2
    9f84:	3214      	adds	r2, #20
    9f86:	1c28      	adds	r0, r5, #0
    9f88:	2101      	movs	r1, #1
    9f8a:	f000 fcbf 	bl	a90c <_calloc_r>
    9f8e:	2800      	cmp	r0, #0
    9f90:	d005      	beq.n	9f9e <_Balloc+0x52>
    9f92:	6046      	str	r6, [r0, #4]
    9f94:	6087      	str	r7, [r0, #8]
    9f96:	1c04      	adds	r4, r0, #0
    9f98:	2300      	movs	r3, #0
    9f9a:	6123      	str	r3, [r4, #16]
    9f9c:	60e3      	str	r3, [r4, #12]
    9f9e:	1c20      	adds	r0, r4, #0
    9fa0:	bcf0      	pop	{r4, r5, r6, r7}
    9fa2:	bc02      	pop	{r1}
    9fa4:	4708      	bx	r1
	...

00009fa8 <_d2b>:
    9fa8:	b5f0      	push	{r4, r5, r6, r7, lr}
    9faa:	b084      	sub	sp, #16
    9fac:	1c0c      	adds	r4, r1, #0
    9fae:	2101      	movs	r1, #1
    9fb0:	9300      	str	r3, [sp, #0]
    9fb2:	1c15      	adds	r5, r2, #0
    9fb4:	f7ff ffca 	bl	9f4c <_Balloc>
    9fb8:	1c01      	adds	r1, r0, #0
    9fba:	3114      	adds	r1, #20
    9fbc:	4b2b      	ldr	r3, [pc, #172]	(a06c <.text+0xa06c>)
    9fbe:	9101      	str	r1, [sp, #4]
    9fc0:	1c21      	adds	r1, r4, #0
    9fc2:	4019      	ands	r1, r3
    9fc4:	4b2a      	ldr	r3, [pc, #168]	(a070 <.text+0xa070>)
    9fc6:	1c22      	adds	r2, r4, #0
    9fc8:	401a      	ands	r2, r3
    9fca:	0d17      	lsrs	r7, r2, #20
    9fcc:	1c06      	adds	r6, r0, #0
    9fce:	9103      	str	r1, [sp, #12]
    9fd0:	2f00      	cmp	r7, #0
    9fd2:	d003      	beq.n	9fdc <_d2b+0x34>
    9fd4:	2380      	movs	r3, #128
    9fd6:	035b      	lsls	r3, r3, #13
    9fd8:	430b      	orrs	r3, r1
    9fda:	9303      	str	r3, [sp, #12]
    9fdc:	2d00      	cmp	r5, #0
    9fde:	d01b      	beq.n	a018 <_d2b+0x70>
    9fe0:	a802      	add	r0, sp, #8
    9fe2:	9502      	str	r5, [sp, #8]
    9fe4:	f7ff fe88 	bl	9cf8 <_lo0bits>
    9fe8:	9902      	ldr	r1, [sp, #8]
    9fea:	2800      	cmp	r0, #0
    9fec:	d009      	beq.n	a002 <_d2b+0x5a>
    9fee:	9b03      	ldr	r3, [sp, #12]
    9ff0:	2220      	movs	r2, #32
    9ff2:	1a12      	subs	r2, r2, r0
    9ff4:	4093      	lsls	r3, r2
    9ff6:	430b      	orrs	r3, r1
    9ff8:	6173      	str	r3, [r6, #20]
    9ffa:	9b03      	ldr	r3, [sp, #12]
    9ffc:	40c3      	lsrs	r3, r0
    9ffe:	9303      	str	r3, [sp, #12]
    a000:	e000      	b.n	a004 <_d2b+0x5c>
    a002:	6171      	str	r1, [r6, #20]
    a004:	9b03      	ldr	r3, [sp, #12]
    a006:	9a01      	ldr	r2, [sp, #4]
    a008:	6053      	str	r3, [r2, #4]
    a00a:	2b00      	cmp	r3, #0
    a00c:	d001      	beq.n	a012 <_d2b+0x6a>
    a00e:	2202      	movs	r2, #2
    a010:	e000      	b.n	a014 <_d2b+0x6c>
    a012:	2201      	movs	r2, #1
    a014:	6132      	str	r2, [r6, #16]
    a016:	e008      	b.n	a02a <_d2b+0x82>
    a018:	a803      	add	r0, sp, #12
    a01a:	f7ff fe6d 	bl	9cf8 <_lo0bits>
    a01e:	9b03      	ldr	r3, [sp, #12]
    a020:	6173      	str	r3, [r6, #20]
    a022:	2301      	movs	r3, #1
    a024:	6133      	str	r3, [r6, #16]
    a026:	3020      	adds	r0, #32
    a028:	2201      	movs	r2, #1
    a02a:	2f00      	cmp	r7, #0
    a02c:	d009      	beq.n	a042 <_d2b+0x9a>
    a02e:	4911      	ldr	r1, [pc, #68]	(a074 <.text+0xa074>)
    a030:	183b      	adds	r3, r7, r0
    a032:	9a00      	ldr	r2, [sp, #0]
    a034:	185b      	adds	r3, r3, r1
    a036:	6013      	str	r3, [r2, #0]
    a038:	9909      	ldr	r1, [sp, #36]
    a03a:	2335      	movs	r3, #53
    a03c:	1a1b      	subs	r3, r3, r0
    a03e:	600b      	str	r3, [r1, #0]
    a040:	e00e      	b.n	a060 <_d2b+0xb8>
    a042:	490d      	ldr	r1, [pc, #52]	(a078 <.text+0xa078>)
    a044:	1843      	adds	r3, r0, r1
    a046:	9900      	ldr	r1, [sp, #0]
    a048:	0154      	lsls	r4, r2, #5
    a04a:	600b      	str	r3, [r1, #0]
    a04c:	0093      	lsls	r3, r2, #2
    a04e:	9a01      	ldr	r2, [sp, #4]
    a050:	189b      	adds	r3, r3, r2
    a052:	3b04      	subs	r3, #4
    a054:	6818      	ldr	r0, [r3, #0]
    a056:	f7ff fe2b 	bl	9cb0 <_hi0bits>
    a05a:	9b09      	ldr	r3, [sp, #36]
    a05c:	1a24      	subs	r4, r4, r0
    a05e:	601c      	str	r4, [r3, #0]
    a060:	1c30      	adds	r0, r6, #0
    a062:	b004      	add	sp, #16
    a064:	bcf0      	pop	{r4, r5, r6, r7}
    a066:	bc02      	pop	{r1}
    a068:	4708      	bx	r1
    a06a:	0000      	lsls	r0, r0, #0
    a06c:	ffff 000f 	vaddl.u<illegal width 64>	q8, d15, d15
    a070:	ffff 7fff 	undefined
    a074:	fbcd ffff 	undefined
    a078:	fbce ffff 	undefined

0000a07c <__mdiff>:
    a07c:	b5f0      	push	{r4, r5, r6, r7, lr}
    a07e:	b083      	sub	sp, #12
    a080:	1c07      	adds	r7, r0, #0
    a082:	1c0d      	adds	r5, r1, #0
    a084:	1c08      	adds	r0, r1, #0
    a086:	1c11      	adds	r1, r2, #0
    a088:	1c16      	adds	r6, r2, #0
    a08a:	f7ff fe6b 	bl	9d64 <__mcmp>
    a08e:	1c04      	adds	r4, r0, #0
    a090:	2800      	cmp	r0, #0
    a092:	d108      	bne.n	a0a6 <__mdiff+0x2a>
    a094:	1c38      	adds	r0, r7, #0
    a096:	2100      	movs	r1, #0
    a098:	f7ff ff58 	bl	9f4c <_Balloc>
    a09c:	2301      	movs	r3, #1
    a09e:	1c07      	adds	r7, r0, #0
    a0a0:	6103      	str	r3, [r0, #16]
    a0a2:	6144      	str	r4, [r0, #20]
    a0a4:	e053      	b.n	a14e <__mdiff+0xd2>
    a0a6:	2800      	cmp	r0, #0
    a0a8:	da04      	bge.n	a0b4 <__mdiff+0x38>
    a0aa:	46b4      	mov	ip, r6
    a0ac:	2401      	movs	r4, #1
    a0ae:	1c2e      	adds	r6, r5, #0
    a0b0:	4665      	mov	r5, ip
    a0b2:	e000      	b.n	a0b6 <__mdiff+0x3a>
    a0b4:	2400      	movs	r4, #0
    a0b6:	6869      	ldr	r1, [r5, #4]
    a0b8:	1c38      	adds	r0, r7, #0
    a0ba:	f7ff ff47 	bl	9f4c <_Balloc>
    a0be:	692a      	ldr	r2, [r5, #16]
    a0c0:	3514      	adds	r5, #20
    a0c2:	46ac      	mov	ip, r5
    a0c4:	0093      	lsls	r3, r2, #2
    a0c6:	4463      	add	r3, ip
    a0c8:	9301      	str	r3, [sp, #4]
    a0ca:	6933      	ldr	r3, [r6, #16]
    a0cc:	1c35      	adds	r5, r6, #0
    a0ce:	3514      	adds	r5, #20
    a0d0:	009b      	lsls	r3, r3, #2
    a0d2:	18eb      	adds	r3, r5, r3
    a0d4:	60c4      	str	r4, [r0, #12]
    a0d6:	9200      	str	r2, [sp, #0]
    a0d8:	1c04      	adds	r4, r0, #0
    a0da:	9302      	str	r3, [sp, #8]
    a0dc:	1c07      	adds	r7, r0, #0
    a0de:	3414      	adds	r4, #20
    a0e0:	2600      	movs	r6, #0
    a0e2:	4662      	mov	r2, ip
    a0e4:	3204      	adds	r2, #4
    a0e6:	4694      	mov	ip, r2
    a0e8:	3a04      	subs	r2, #4
    a0ea:	ca08      	ldmia	r2!, {r3}
    a0ec:	cd01      	ldmia	r5!, {r0}
    a0ee:	4a1a      	ldr	r2, [pc, #104]	(a158 <.text+0xa158>)
    a0f0:	1c19      	adds	r1, r3, #0
    a0f2:	4011      	ands	r1, r2
    a0f4:	4002      	ands	r2, r0
    a0f6:	1a89      	subs	r1, r1, r2
    a0f8:	1989      	adds	r1, r1, r6
    a0fa:	0c1b      	lsrs	r3, r3, #16
    a0fc:	0c00      	lsrs	r0, r0, #16
    a0fe:	1a1b      	subs	r3, r3, r0
    a100:	140a      	asrs	r2, r1, #16
    a102:	189b      	adds	r3, r3, r2
    a104:	8063      	strh	r3, [r4, #2]
    a106:	141e      	asrs	r6, r3, #16
    a108:	9b02      	ldr	r3, [sp, #8]
    a10a:	8021      	strh	r1, [r4, #0]
    a10c:	3404      	adds	r4, #4
    a10e:	429d      	cmp	r5, r3
    a110:	d210      	bcs.n	a134 <__mdiff+0xb8>
    a112:	e7e6      	b.n	a0e2 <__mdiff+0x66>
    a114:	4662      	mov	r2, ip
    a116:	3204      	adds	r2, #4
    a118:	4694      	mov	ip, r2
    a11a:	3a04      	subs	r2, #4
    a11c:	ca08      	ldmia	r2!, {r3}
    a11e:	4a0e      	ldr	r2, [pc, #56]	(a158 <.text+0xa158>)
    a120:	1c19      	adds	r1, r3, #0
    a122:	4011      	ands	r1, r2
    a124:	1989      	adds	r1, r1, r6
    a126:	0c1b      	lsrs	r3, r3, #16
    a128:	140a      	asrs	r2, r1, #16
    a12a:	189b      	adds	r3, r3, r2
    a12c:	8063      	strh	r3, [r4, #2]
    a12e:	8021      	strh	r1, [r4, #0]
    a130:	141e      	asrs	r6, r3, #16
    a132:	3404      	adds	r4, #4
    a134:	9b01      	ldr	r3, [sp, #4]
    a136:	459c      	cmp	ip, r3
    a138:	d3ec      	bcc.n	a114 <__mdiff+0x98>
    a13a:	e002      	b.n	a142 <__mdiff+0xc6>
    a13c:	9a00      	ldr	r2, [sp, #0]
    a13e:	3a01      	subs	r2, #1
    a140:	9200      	str	r2, [sp, #0]
    a142:	3c04      	subs	r4, #4
    a144:	6823      	ldr	r3, [r4, #0]
    a146:	2b00      	cmp	r3, #0
    a148:	d0f8      	beq.n	a13c <__mdiff+0xc0>
    a14a:	9b00      	ldr	r3, [sp, #0]
    a14c:	613b      	str	r3, [r7, #16]
    a14e:	1c38      	adds	r0, r7, #0
    a150:	b003      	add	sp, #12
    a152:	bcf0      	pop	{r4, r5, r6, r7}
    a154:	bc02      	pop	{r1}
    a156:	4708      	bx	r1
    a158:	ffff 0000 	vaddl.u<illegal width 64>	q8, d15, d0

0000a15c <_lshift>:
    a15c:	b5f0      	push	{r4, r5, r6, r7, lr}
    a15e:	1c0d      	adds	r5, r1, #0
    a160:	692b      	ldr	r3, [r5, #16]
    a162:	1157      	asrs	r7, r2, #5
    a164:	3301      	adds	r3, #1
    a166:	18fe      	adds	r6, r7, r3
    a168:	6849      	ldr	r1, [r1, #4]
    a16a:	68ab      	ldr	r3, [r5, #8]
    a16c:	b082      	sub	sp, #8
    a16e:	1c14      	adds	r4, r2, #0
    a170:	9000      	str	r0, [sp, #0]
    a172:	e001      	b.n	a178 <_lshift+0x1c>
    a174:	3101      	adds	r1, #1
    a176:	005b      	lsls	r3, r3, #1
    a178:	429e      	cmp	r6, r3
    a17a:	dcfb      	bgt.n	a174 <_lshift+0x18>
    a17c:	9800      	ldr	r0, [sp, #0]
    a17e:	f7ff fee5 	bl	9f4c <_Balloc>
    a182:	1c01      	adds	r1, r0, #0
    a184:	3114      	adds	r1, #20
    a186:	2200      	movs	r2, #0
    a188:	9001      	str	r0, [sp, #4]
    a18a:	e002      	b.n	a192 <_lshift+0x36>
    a18c:	2300      	movs	r3, #0
    a18e:	c108      	stmia	r1!, {r3}
    a190:	3201      	adds	r2, #1
    a192:	42ba      	cmp	r2, r7
    a194:	dbfa      	blt.n	a18c <_lshift+0x30>
    a196:	692b      	ldr	r3, [r5, #16]
    a198:	1c2a      	adds	r2, r5, #0
    a19a:	3214      	adds	r2, #20
    a19c:	009b      	lsls	r3, r3, #2
    a19e:	189b      	adds	r3, r3, r2
    a1a0:	469c      	mov	ip, r3
    a1a2:	231f      	movs	r3, #31
    a1a4:	401c      	ands	r4, r3
    a1a6:	d010      	beq.n	a1ca <_lshift+0x6e>
    a1a8:	2320      	movs	r3, #32
    a1aa:	1b1f      	subs	r7, r3, r4
    a1ac:	2000      	movs	r0, #0
    a1ae:	6813      	ldr	r3, [r2, #0]
    a1b0:	40a3      	lsls	r3, r4
    a1b2:	4303      	orrs	r3, r0
    a1b4:	c108      	stmia	r1!, {r3}
    a1b6:	ca08      	ldmia	r2!, {r3}
    a1b8:	1c18      	adds	r0, r3, #0
    a1ba:	40f8      	lsrs	r0, r7
    a1bc:	4562      	cmp	r2, ip
    a1be:	d3f6      	bcc.n	a1ae <_lshift+0x52>
    a1c0:	6008      	str	r0, [r1, #0]
    a1c2:	2800      	cmp	r0, #0
    a1c4:	d005      	beq.n	a1d2 <_lshift+0x76>
    a1c6:	3601      	adds	r6, #1
    a1c8:	e003      	b.n	a1d2 <_lshift+0x76>
    a1ca:	ca08      	ldmia	r2!, {r3}
    a1cc:	c108      	stmia	r1!, {r3}
    a1ce:	4562      	cmp	r2, ip
    a1d0:	d3fb      	bcc.n	a1ca <_lshift+0x6e>
    a1d2:	9a01      	ldr	r2, [sp, #4]
    a1d4:	1e73      	subs	r3, r6, #1
    a1d6:	9800      	ldr	r0, [sp, #0]
    a1d8:	1c29      	adds	r1, r5, #0
    a1da:	6113      	str	r3, [r2, #16]
    a1dc:	f7ff fd5c 	bl	9c98 <_Bfree>
    a1e0:	9801      	ldr	r0, [sp, #4]
    a1e2:	b002      	add	sp, #8
    a1e4:	bcf0      	pop	{r4, r5, r6, r7}
    a1e6:	bc02      	pop	{r1}
    a1e8:	4708      	bx	r1
	...

0000a1ec <_multiply>:
    a1ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    a1ee:	1c15      	adds	r5, r2, #0
    a1f0:	692b      	ldr	r3, [r5, #16]
    a1f2:	690a      	ldr	r2, [r1, #16]
    a1f4:	b088      	sub	sp, #32
    a1f6:	1c0c      	adds	r4, r1, #0
    a1f8:	429a      	cmp	r2, r3
    a1fa:	da02      	bge.n	a202 <_multiply+0x16>
    a1fc:	46ac      	mov	ip, r5
    a1fe:	4664      	mov	r4, ip
    a200:	1c0d      	adds	r5, r1, #0
    a202:	6926      	ldr	r6, [r4, #16]
    a204:	692f      	ldr	r7, [r5, #16]
    a206:	68a3      	ldr	r3, [r4, #8]
    a208:	19f2      	adds	r2, r6, r7
    a20a:	6861      	ldr	r1, [r4, #4]
    a20c:	9201      	str	r2, [sp, #4]
    a20e:	429a      	cmp	r2, r3
    a210:	dd00      	ble.n	a214 <_multiply+0x28>
    a212:	3101      	adds	r1, #1
    a214:	f7ff fe9a 	bl	9f4c <_Balloc>
    a218:	9a01      	ldr	r2, [sp, #4]
    a21a:	1c01      	adds	r1, r0, #0
    a21c:	3114      	adds	r1, #20
    a21e:	0093      	lsls	r3, r2, #2
    a220:	18cb      	adds	r3, r1, r3
    a222:	1c0a      	adds	r2, r1, #0
    a224:	9000      	str	r0, [sp, #0]
    a226:	9302      	str	r3, [sp, #8]
    a228:	e001      	b.n	a22e <_multiply+0x42>
    a22a:	2300      	movs	r3, #0
    a22c:	c208      	stmia	r2!, {r3}
    a22e:	9b02      	ldr	r3, [sp, #8]
    a230:	429a      	cmp	r2, r3
    a232:	d3fa      	bcc.n	a22a <_multiply+0x3e>
    a234:	3414      	adds	r4, #20
    a236:	00b3      	lsls	r3, r6, #2
    a238:	18e3      	adds	r3, r4, r3
    a23a:	3514      	adds	r5, #20
    a23c:	9303      	str	r3, [sp, #12]
    a23e:	00bb      	lsls	r3, r7, #2
    a240:	18eb      	adds	r3, r5, r3
    a242:	9407      	str	r4, [sp, #28]
    a244:	9504      	str	r5, [sp, #16]
    a246:	9305      	str	r3, [sp, #20]
    a248:	9106      	str	r1, [sp, #24]
    a24a:	e04b      	b.n	a2e4 <_multiply+0xf8>
    a24c:	9a04      	ldr	r2, [sp, #16]
    a24e:	8817      	ldrh	r7, [r2, #0]
    a250:	2f00      	cmp	r7, #0
    a252:	d01e      	beq.n	a292 <_multiply+0xa6>
    a254:	2300      	movs	r3, #0
    a256:	9e07      	ldr	r6, [sp, #28]
    a258:	9d06      	ldr	r5, [sp, #24]
    a25a:	469c      	mov	ip, r3
    a25c:	ce04      	ldmia	r6!, {r2}
    a25e:	482d      	ldr	r0, [pc, #180]	(a314 <.text+0xa314>)
    a260:	1c13      	adds	r3, r2, #0
    a262:	4003      	ands	r3, r0
    a264:	1c3c      	adds	r4, r7, #0
    a266:	435c      	muls	r4, r3
    a268:	6829      	ldr	r1, [r5, #0]
    a26a:	1c0b      	adds	r3, r1, #0
    a26c:	4003      	ands	r3, r0
    a26e:	4463      	add	r3, ip
    a270:	0c12      	lsrs	r2, r2, #16
    a272:	18e4      	adds	r4, r4, r3
    a274:	1c3b      	adds	r3, r7, #0
    a276:	4353      	muls	r3, r2
    a278:	0c09      	lsrs	r1, r1, #16
    a27a:	0c22      	lsrs	r2, r4, #16
    a27c:	185b      	adds	r3, r3, r1
    a27e:	189b      	adds	r3, r3, r2
    a280:	0c1a      	lsrs	r2, r3, #16
    a282:	806b      	strh	r3, [r5, #2]
    a284:	9b03      	ldr	r3, [sp, #12]
    a286:	802c      	strh	r4, [r5, #0]
    a288:	4694      	mov	ip, r2
    a28a:	3504      	adds	r5, #4
    a28c:	429e      	cmp	r6, r3
    a28e:	d3e5      	bcc.n	a25c <_multiply+0x70>
    a290:	602a      	str	r2, [r5, #0]
    a292:	9a04      	ldr	r2, [sp, #16]
    a294:	8857      	ldrh	r7, [r2, #2]
    a296:	2f00      	cmp	r7, #0
    a298:	d01e      	beq.n	a2d8 <_multiply+0xec>
    a29a:	9b06      	ldr	r3, [sp, #24]
    a29c:	2200      	movs	r2, #0
    a29e:	681d      	ldr	r5, [r3, #0]
    a2a0:	9e07      	ldr	r6, [sp, #28]
    a2a2:	1c1c      	adds	r4, r3, #0
    a2a4:	4694      	mov	ip, r2
    a2a6:	ce04      	ldmia	r6!, {r2}
    a2a8:	481a      	ldr	r0, [pc, #104]	(a314 <.text+0xa314>)
    a2aa:	1c13      	adds	r3, r2, #0
    a2ac:	4003      	ands	r3, r0
    a2ae:	1c39      	adds	r1, r7, #0
    a2b0:	4359      	muls	r1, r3
    a2b2:	0c12      	lsrs	r2, r2, #16
    a2b4:	437a      	muls	r2, r7
    a2b6:	8863      	ldrh	r3, [r4, #2]
    a2b8:	4463      	add	r3, ip
    a2ba:	18c9      	adds	r1, r1, r3
    a2bc:	8061      	strh	r1, [r4, #2]
    a2be:	8025      	strh	r5, [r4, #0]
    a2c0:	3404      	adds	r4, #4
    a2c2:	6823      	ldr	r3, [r4, #0]
    a2c4:	4003      	ands	r3, r0
    a2c6:	18d2      	adds	r2, r2, r3
    a2c8:	0c09      	lsrs	r1, r1, #16
    a2ca:	1855      	adds	r5, r2, r1
    a2cc:	9a03      	ldr	r2, [sp, #12]
    a2ce:	0c2b      	lsrs	r3, r5, #16
    a2d0:	469c      	mov	ip, r3
    a2d2:	4296      	cmp	r6, r2
    a2d4:	d3e7      	bcc.n	a2a6 <_multiply+0xba>
    a2d6:	6025      	str	r5, [r4, #0]
    a2d8:	9b04      	ldr	r3, [sp, #16]
    a2da:	9a06      	ldr	r2, [sp, #24]
    a2dc:	3304      	adds	r3, #4
    a2de:	3204      	adds	r2, #4
    a2e0:	9304      	str	r3, [sp, #16]
    a2e2:	9206      	str	r2, [sp, #24]
    a2e4:	9b04      	ldr	r3, [sp, #16]
    a2e6:	9a05      	ldr	r2, [sp, #20]
    a2e8:	4293      	cmp	r3, r2
    a2ea:	d3af      	bcc.n	a24c <_multiply+0x60>
    a2ec:	9a02      	ldr	r2, [sp, #8]
    a2ee:	e002      	b.n	a2f6 <_multiply+0x10a>
    a2f0:	9b01      	ldr	r3, [sp, #4]
    a2f2:	3b01      	subs	r3, #1
    a2f4:	9301      	str	r3, [sp, #4]
    a2f6:	9b01      	ldr	r3, [sp, #4]
    a2f8:	2b00      	cmp	r3, #0
    a2fa:	dd03      	ble.n	a304 <_multiply+0x118>
    a2fc:	3a04      	subs	r2, #4
    a2fe:	6813      	ldr	r3, [r2, #0]
    a300:	2b00      	cmp	r3, #0
    a302:	d0f5      	beq.n	a2f0 <_multiply+0x104>
    a304:	9b00      	ldr	r3, [sp, #0]
    a306:	9a01      	ldr	r2, [sp, #4]
    a308:	1c18      	adds	r0, r3, #0
    a30a:	b008      	add	sp, #32
    a30c:	611a      	str	r2, [r3, #16]
    a30e:	bcf0      	pop	{r4, r5, r6, r7}
    a310:	bc02      	pop	{r1}
    a312:	4708      	bx	r1
    a314:	ffff 0000 	vaddl.u<illegal width 64>	q8, d15, d0

0000a318 <_i2b>:
    a318:	b510      	push	{r4, lr}
    a31a:	1c0c      	adds	r4, r1, #0
    a31c:	2101      	movs	r1, #1
    a31e:	f7ff fe15 	bl	9f4c <_Balloc>
    a322:	2301      	movs	r3, #1
    a324:	6144      	str	r4, [r0, #20]
    a326:	6103      	str	r3, [r0, #16]
    a328:	bc10      	pop	{r4}
    a32a:	bc02      	pop	{r1}
    a32c:	4708      	bx	r1
	...

0000a330 <_multadd>:
    a330:	b5f0      	push	{r4, r5, r6, r7, lr}
    a332:	b082      	sub	sp, #8
    a334:	1c1e      	adds	r6, r3, #0
    a336:	1c0c      	adds	r4, r1, #0
    a338:	2300      	movs	r3, #0
    a33a:	9001      	str	r0, [sp, #4]
    a33c:	9200      	str	r2, [sp, #0]
    a33e:	690f      	ldr	r7, [r1, #16]
    a340:	1c0d      	adds	r5, r1, #0
    a342:	3414      	adds	r4, #20
    a344:	469c      	mov	ip, r3
    a346:	6822      	ldr	r2, [r4, #0]
    a348:	481b      	ldr	r0, [pc, #108]	(a3b8 <.text+0xa3b8>)
    a34a:	9b00      	ldr	r3, [sp, #0]
    a34c:	1c11      	adds	r1, r2, #0
    a34e:	4001      	ands	r1, r0
    a350:	4359      	muls	r1, r3
    a352:	0c12      	lsrs	r2, r2, #16
    a354:	1989      	adds	r1, r1, r6
    a356:	1c1e      	adds	r6, r3, #0
    a358:	1c33      	adds	r3, r6, #0
    a35a:	4353      	muls	r3, r2
    a35c:	0c0a      	lsrs	r2, r1, #16
    a35e:	189b      	adds	r3, r3, r2
    a360:	0c1e      	lsrs	r6, r3, #16
    a362:	4001      	ands	r1, r0
    a364:	041b      	lsls	r3, r3, #16
    a366:	185b      	adds	r3, r3, r1
    a368:	c408      	stmia	r4!, {r3}
    a36a:	2301      	movs	r3, #1
    a36c:	449c      	add	ip, r3
    a36e:	45bc      	cmp	ip, r7
    a370:	dbe9      	blt.n	a346 <_multadd+0x16>
    a372:	2e00      	cmp	r6, #0
    a374:	d01a      	beq.n	a3ac <_multadd+0x7c>
    a376:	68ab      	ldr	r3, [r5, #8]
    a378:	429f      	cmp	r7, r3
    a37a:	db12      	blt.n	a3a2 <_multadd+0x72>
    a37c:	6869      	ldr	r1, [r5, #4]
    a37e:	9801      	ldr	r0, [sp, #4]
    a380:	3101      	adds	r1, #1
    a382:	f7ff fde3 	bl	9f4c <_Balloc>
    a386:	692a      	ldr	r2, [r5, #16]
    a388:	1c29      	adds	r1, r5, #0
    a38a:	0092      	lsls	r2, r2, #2
    a38c:	1c04      	adds	r4, r0, #0
    a38e:	310c      	adds	r1, #12
    a390:	3208      	adds	r2, #8
    a392:	300c      	adds	r0, #12
    a394:	f7ff fc48 	bl	9c28 <memcpy>
    a398:	1c29      	adds	r1, r5, #0
    a39a:	9801      	ldr	r0, [sp, #4]
    a39c:	f7ff fc7c 	bl	9c98 <_Bfree>
    a3a0:	1c25      	adds	r5, r4, #0
    a3a2:	00bb      	lsls	r3, r7, #2
    a3a4:	195b      	adds	r3, r3, r5
    a3a6:	615e      	str	r6, [r3, #20]
    a3a8:	1c7b      	adds	r3, r7, #1
    a3aa:	612b      	str	r3, [r5, #16]
    a3ac:	1c28      	adds	r0, r5, #0
    a3ae:	b002      	add	sp, #8
    a3b0:	bcf0      	pop	{r4, r5, r6, r7}
    a3b2:	bc02      	pop	{r1}
    a3b4:	4708      	bx	r1
    a3b6:	0000      	lsls	r0, r0, #0
    a3b8:	ffff 0000 	vaddl.u<illegal width 64>	q8, d15, d0

0000a3bc <_pow5mult>:
    a3bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    a3be:	b081      	sub	sp, #4
    a3c0:	2303      	movs	r3, #3
    a3c2:	1c06      	adds	r6, r0, #0
    a3c4:	9100      	str	r1, [sp, #0]
    a3c6:	1c14      	adds	r4, r2, #0
    a3c8:	401a      	ands	r2, r3
    a3ca:	d008      	beq.n	a3de <_pow5mult+0x22>
    a3cc:	4b1c      	ldr	r3, [pc, #112]	(a440 <.text+0xa440>)
    a3ce:	0092      	lsls	r2, r2, #2
    a3d0:	18d2      	adds	r2, r2, r3
    a3d2:	3a04      	subs	r2, #4
    a3d4:	6812      	ldr	r2, [r2, #0]
    a3d6:	2300      	movs	r3, #0
    a3d8:	f7ff ffaa 	bl	a330 <_multadd>
    a3dc:	9000      	str	r0, [sp, #0]
    a3de:	10a7      	asrs	r7, r4, #2
    a3e0:	2f00      	cmp	r7, #0
    a3e2:	d028      	beq.n	a436 <_pow5mult+0x7a>
    a3e4:	6cb5      	ldr	r5, [r6, #72]
    a3e6:	2d00      	cmp	r5, #0
    a3e8:	d109      	bne.n	a3fe <_pow5mult+0x42>
    a3ea:	1c30      	adds	r0, r6, #0
    a3ec:	4915      	ldr	r1, [pc, #84]	(a444 <.text+0xa444>)
    a3ee:	f7ff ff93 	bl	a318 <_i2b>
    a3f2:	2300      	movs	r3, #0
    a3f4:	1c05      	adds	r5, r0, #0
    a3f6:	64b0      	str	r0, [r6, #72]
    a3f8:	6003      	str	r3, [r0, #0]
    a3fa:	e000      	b.n	a3fe <_pow5mult+0x42>
    a3fc:	1c25      	adds	r5, r4, #0
    a3fe:	07fb      	lsls	r3, r7, #31
    a400:	d50a      	bpl.n	a418 <_pow5mult+0x5c>
    a402:	9900      	ldr	r1, [sp, #0]
    a404:	1c2a      	adds	r2, r5, #0
    a406:	1c30      	adds	r0, r6, #0
    a408:	f7ff fef0 	bl	a1ec <_multiply>
    a40c:	9900      	ldr	r1, [sp, #0]
    a40e:	1c04      	adds	r4, r0, #0
    a410:	1c30      	adds	r0, r6, #0
    a412:	f7ff fc41 	bl	9c98 <_Bfree>
    a416:	9400      	str	r4, [sp, #0]
    a418:	107f      	asrs	r7, r7, #1
    a41a:	2f00      	cmp	r7, #0
    a41c:	d00b      	beq.n	a436 <_pow5mult+0x7a>
    a41e:	682c      	ldr	r4, [r5, #0]
    a420:	2c00      	cmp	r4, #0
    a422:	d1eb      	bne.n	a3fc <_pow5mult+0x40>
    a424:	1c29      	adds	r1, r5, #0
    a426:	1c2a      	adds	r2, r5, #0
    a428:	1c30      	adds	r0, r6, #0
    a42a:	f7ff fedf 	bl	a1ec <_multiply>
    a42e:	6028      	str	r0, [r5, #0]
    a430:	1c05      	adds	r5, r0, #0
    a432:	6004      	str	r4, [r0, #0]
    a434:	e7e3      	b.n	a3fe <_pow5mult+0x42>
    a436:	9800      	ldr	r0, [sp, #0]
    a438:	b001      	add	sp, #4
    a43a:	bcf0      	pop	{r4, r5, r6, r7}
    a43c:	bc02      	pop	{r1}
    a43e:	4708      	bx	r1
    a440:	d548      	bpl.n	a4d4 <_realloc_r+0x8>
    a442:	0000      	lsls	r0, r0, #0
    a444:	0271      	lsls	r1, r6, #9
	...

0000a448 <_s2b>:
    a448:	b5f0      	push	{r4, r5, r6, r7, lr}
    a44a:	b082      	sub	sp, #8
    a44c:	9001      	str	r0, [sp, #4]
    a44e:	1c18      	adds	r0, r3, #0
    a450:	1c0d      	adds	r5, r1, #0
    a452:	3008      	adds	r0, #8
    a454:	2109      	movs	r1, #9
    a456:	9300      	str	r3, [sp, #0]
    a458:	1c16      	adds	r6, r2, #0
    a45a:	f001 fcad 	bl	bdb8 <__aeabi_idiv>
    a45e:	2301      	movs	r3, #1
    a460:	2100      	movs	r1, #0
    a462:	e001      	b.n	a468 <_s2b+0x20>
    a464:	005b      	lsls	r3, r3, #1
    a466:	3101      	adds	r1, #1
    a468:	4298      	cmp	r0, r3
    a46a:	dcfb      	bgt.n	a464 <_s2b+0x1c>
    a46c:	9801      	ldr	r0, [sp, #4]
    a46e:	f7ff fd6d 	bl	9f4c <_Balloc>
    a472:	9b07      	ldr	r3, [sp, #28]
    a474:	6143      	str	r3, [r0, #20]
    a476:	2301      	movs	r3, #1
    a478:	1c01      	adds	r1, r0, #0
    a47a:	6103      	str	r3, [r0, #16]
    a47c:	2e09      	cmp	r6, #9
    a47e:	dd11      	ble.n	a4a4 <_s2b+0x5c>
    a480:	1c2f      	adds	r7, r5, #0
    a482:	3709      	adds	r7, #9
    a484:	2409      	movs	r4, #9
    a486:	5d63      	ldrb	r3, [r4, r5]
    a488:	9801      	ldr	r0, [sp, #4]
    a48a:	3b30      	subs	r3, #48
    a48c:	220a      	movs	r2, #10
    a48e:	f7ff ff4f 	bl	a330 <_multadd>
    a492:	3401      	adds	r4, #1
    a494:	1c01      	adds	r1, r0, #0
    a496:	42b4      	cmp	r4, r6
    a498:	d1f5      	bne.n	a486 <_s2b+0x3e>
    a49a:	19bb      	adds	r3, r7, r6
    a49c:	1c1d      	adds	r5, r3, #0
    a49e:	3d08      	subs	r5, #8
    a4a0:	1c34      	adds	r4, r6, #0
    a4a2:	e00b      	b.n	a4bc <_s2b+0x74>
    a4a4:	350a      	adds	r5, #10
    a4a6:	2409      	movs	r4, #9
    a4a8:	e008      	b.n	a4bc <_s2b+0x74>
    a4aa:	782b      	ldrb	r3, [r5, #0]
    a4ac:	9801      	ldr	r0, [sp, #4]
    a4ae:	3b30      	subs	r3, #48
    a4b0:	220a      	movs	r2, #10
    a4b2:	f7ff ff3d 	bl	a330 <_multadd>
    a4b6:	3501      	adds	r5, #1
    a4b8:	1c01      	adds	r1, r0, #0
    a4ba:	3401      	adds	r4, #1
    a4bc:	9b00      	ldr	r3, [sp, #0]
    a4be:	429c      	cmp	r4, r3
    a4c0:	dbf3      	blt.n	a4aa <_s2b+0x62>
    a4c2:	1c08      	adds	r0, r1, #0
    a4c4:	b002      	add	sp, #8
    a4c6:	bcf0      	pop	{r4, r5, r6, r7}
    a4c8:	bc02      	pop	{r1}
    a4ca:	4708      	bx	r1

0000a4cc <_realloc_r>:
    a4cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    a4ce:	b08b      	sub	sp, #44
    a4d0:	9003      	str	r0, [sp, #12]
    a4d2:	1c0f      	adds	r7, r1, #0
    a4d4:	9202      	str	r2, [sp, #8]
    a4d6:	2900      	cmp	r1, #0
    a4d8:	d103      	bne.n	a4e2 <_realloc_r+0x16>
    a4da:	1c11      	adds	r1, r2, #0
    a4dc:	f7ff f942 	bl	9764 <_malloc_r>
    a4e0:	e01c      	b.n	a51c <_realloc_r+0x50>
    a4e2:	9803      	ldr	r0, [sp, #12]
    a4e4:	1c3e      	adds	r6, r7, #0
    a4e6:	f7ff fbd3 	bl	9c90 <__malloc_lock>
    a4ea:	3e08      	subs	r6, #8
    a4ec:	9a02      	ldr	r2, [sp, #8]
    a4ee:	6870      	ldr	r0, [r6, #4]
    a4f0:	320b      	adds	r2, #11
    a4f2:	9004      	str	r0, [sp, #16]
    a4f4:	2a16      	cmp	r2, #22
    a4f6:	d803      	bhi.n	a500 <_realloc_r+0x34>
    a4f8:	2110      	movs	r1, #16
    a4fa:	9108      	str	r1, [sp, #32]
    a4fc:	9101      	str	r1, [sp, #4]
    a4fe:	e005      	b.n	a50c <_realloc_r+0x40>
    a500:	2307      	movs	r3, #7
    a502:	439a      	bics	r2, r3
    a504:	9201      	str	r2, [sp, #4]
    a506:	9208      	str	r2, [sp, #32]
    a508:	2a00      	cmp	r2, #0
    a50a:	db03      	blt.n	a514 <_realloc_r+0x48>
    a50c:	9a08      	ldr	r2, [sp, #32]
    a50e:	9b02      	ldr	r3, [sp, #8]
    a510:	429a      	cmp	r2, r3
    a512:	d205      	bcs.n	a520 <_realloc_r+0x54>
    a514:	9d03      	ldr	r5, [sp, #12]
    a516:	230c      	movs	r3, #12
    a518:	602b      	str	r3, [r5, #0]
    a51a:	2000      	movs	r0, #0
    a51c:	900a      	str	r0, [sp, #40]
    a51e:	e152      	b.n	a7c6 <_realloc_r+0x2fa>
    a520:	9d04      	ldr	r5, [sp, #16]
    a522:	2403      	movs	r4, #3
    a524:	9901      	ldr	r1, [sp, #4]
    a526:	43a5      	bics	r5, r4
    a528:	428d      	cmp	r5, r1
    a52a:	db00      	blt.n	a52e <_realloc_r+0x62>
    a52c:	e11a      	b.n	a764 <_realloc_r+0x298>
    a52e:	4aa8      	ldr	r2, [pc, #672]	(a7d0 <.text+0xa7d0>)
    a530:	6893      	ldr	r3, [r2, #8]
    a532:	1971      	adds	r1, r6, r5
    a534:	9205      	str	r2, [sp, #20]
    a536:	9306      	str	r3, [sp, #24]
    a538:	6848      	ldr	r0, [r1, #4]
    a53a:	4299      	cmp	r1, r3
    a53c:	d008      	beq.n	a550 <_realloc_r+0x84>
    a53e:	2301      	movs	r3, #1
    a540:	1c02      	adds	r2, r0, #0
    a542:	439a      	bics	r2, r3
    a544:	188a      	adds	r2, r1, r2
    a546:	6852      	ldr	r2, [r2, #4]
    a548:	421a      	tst	r2, r3
    a54a:	d100      	bne.n	a54e <_realloc_r+0x82>
    a54c:	e133      	b.n	a7b6 <_realloc_r+0x2ea>
    a54e:	e01c      	b.n	a58a <_realloc_r+0xbe>
    a550:	9b08      	ldr	r3, [sp, #32]
    a552:	43a0      	bics	r0, r4
    a554:	1942      	adds	r2, r0, r5
    a556:	3310      	adds	r3, #16
    a558:	429a      	cmp	r2, r3
    a55a:	db18      	blt.n	a58e <_realloc_r+0xc2>
    a55c:	9d08      	ldr	r5, [sp, #32]
    a55e:	1b53      	subs	r3, r2, r5
    a560:	2201      	movs	r2, #1
    a562:	1971      	adds	r1, r6, r5
    a564:	4313      	orrs	r3, r2
    a566:	604b      	str	r3, [r1, #4]
    a568:	6873      	ldr	r3, [r6, #4]
    a56a:	9805      	ldr	r0, [sp, #20]
    a56c:	4013      	ands	r3, r2
    a56e:	432b      	orrs	r3, r5
    a570:	6081      	str	r1, [r0, #8]
    a572:	6073      	str	r3, [r6, #4]
    a574:	9803      	ldr	r0, [sp, #12]
    a576:	f7ff fb8d 	bl	9c94 <__malloc_unlock>
    a57a:	3608      	adds	r6, #8
    a57c:	960a      	str	r6, [sp, #40]
    a57e:	e122      	b.n	a7c6 <_realloc_r+0x2fa>
    a580:	68ca      	ldr	r2, [r1, #12]
    a582:	688b      	ldr	r3, [r1, #8]
    a584:	60da      	str	r2, [r3, #12]
    a586:	6093      	str	r3, [r2, #8]
    a588:	e0b3      	b.n	a6f2 <_realloc_r+0x226>
    a58a:	2100      	movs	r1, #0
    a58c:	2000      	movs	r0, #0
    a58e:	9a04      	ldr	r2, [sp, #16]
    a590:	07d2      	lsls	r2, r2, #31
    a592:	d500      	bpl.n	a596 <_realloc_r+0xca>
    a594:	e099      	b.n	a6ca <_realloc_r+0x1fe>
    a596:	6833      	ldr	r3, [r6, #0]
    a598:	1af4      	subs	r4, r6, r3
    a59a:	6862      	ldr	r2, [r4, #4]
    a59c:	2303      	movs	r3, #3
    a59e:	439a      	bics	r2, r3
    a5a0:	2900      	cmp	r1, #0
    a5a2:	d059      	beq.n	a658 <_realloc_r+0x18c>
    a5a4:	18ab      	adds	r3, r5, r2
    a5a6:	9300      	str	r3, [sp, #0]
    a5a8:	9b06      	ldr	r3, [sp, #24]
    a5aa:	4299      	cmp	r1, r3
    a5ac:	d149      	bne.n	a642 <_realloc_r+0x176>
    a5ae:	9900      	ldr	r1, [sp, #0]
    a5b0:	9b08      	ldr	r3, [sp, #32]
    a5b2:	1840      	adds	r0, r0, r1
    a5b4:	3310      	adds	r3, #16
    a5b6:	9007      	str	r0, [sp, #28]
    a5b8:	4298      	cmp	r0, r3
    a5ba:	db4d      	blt.n	a658 <_realloc_r+0x18c>
    a5bc:	68e2      	ldr	r2, [r4, #12]
    a5be:	68a3      	ldr	r3, [r4, #8]
    a5c0:	60da      	str	r2, [r3, #12]
    a5c2:	6093      	str	r3, [r2, #8]
    a5c4:	1c22      	adds	r2, r4, #0
    a5c6:	3208      	adds	r2, #8
    a5c8:	1f2e      	subs	r6, r5, #4
    a5ca:	920a      	str	r2, [sp, #40]
    a5cc:	2e24      	cmp	r6, #36
    a5ce:	d824      	bhi.n	a61a <_realloc_r+0x14e>
    a5d0:	1c38      	adds	r0, r7, #0
    a5d2:	1c15      	adds	r5, r2, #0
    a5d4:	2e13      	cmp	r6, #19
    a5d6:	d917      	bls.n	a608 <_realloc_r+0x13c>
    a5d8:	1c3a      	adds	r2, r7, #0
    a5da:	ca08      	ldmia	r2!, {r3}
    a5dc:	60a3      	str	r3, [r4, #8]
    a5de:	687b      	ldr	r3, [r7, #4]
    a5e0:	3508      	adds	r5, #8
    a5e2:	60e3      	str	r3, [r4, #12]
    a5e4:	1d10      	adds	r0, r2, #4
    a5e6:	2e1b      	cmp	r6, #27
    a5e8:	d90e      	bls.n	a608 <_realloc_r+0x13c>
    a5ea:	6853      	ldr	r3, [r2, #4]
    a5ec:	6123      	str	r3, [r4, #16]
    a5ee:	6843      	ldr	r3, [r0, #4]
    a5f0:	1d02      	adds	r2, r0, #4
    a5f2:	6163      	str	r3, [r4, #20]
    a5f4:	3508      	adds	r5, #8
    a5f6:	1d10      	adds	r0, r2, #4
    a5f8:	2e24      	cmp	r6, #36
    a5fa:	d105      	bne.n	a608 <_realloc_r+0x13c>
    a5fc:	6853      	ldr	r3, [r2, #4]
    a5fe:	61a3      	str	r3, [r4, #24]
    a600:	6843      	ldr	r3, [r0, #4]
    a602:	61e3      	str	r3, [r4, #28]
    a604:	3508      	adds	r5, #8
    a606:	3008      	adds	r0, #8
    a608:	1c01      	adds	r1, r0, #0
    a60a:	c908      	ldmia	r1!, {r3}
    a60c:	1c2a      	adds	r2, r5, #0
    a60e:	c208      	stmia	r2!, {r3}
    a610:	6843      	ldr	r3, [r0, #4]
    a612:	606b      	str	r3, [r5, #4]
    a614:	684b      	ldr	r3, [r1, #4]
    a616:	6053      	str	r3, [r2, #4]
    a618:	e004      	b.n	a624 <_realloc_r+0x158>
    a61a:	980a      	ldr	r0, [sp, #40]
    a61c:	1c39      	adds	r1, r7, #0
    a61e:	1c32      	adds	r2, r6, #0
    a620:	f7ff fb12 	bl	9c48 <memmove>
    a624:	9b08      	ldr	r3, [sp, #32]
    a626:	9807      	ldr	r0, [sp, #28]
    a628:	18e1      	adds	r1, r4, r3
    a62a:	2201      	movs	r2, #1
    a62c:	1ac3      	subs	r3, r0, r3
    a62e:	4313      	orrs	r3, r2
    a630:	604b      	str	r3, [r1, #4]
    a632:	9d05      	ldr	r5, [sp, #20]
    a634:	6863      	ldr	r3, [r4, #4]
    a636:	60a9      	str	r1, [r5, #8]
    a638:	9d08      	ldr	r5, [sp, #32]
    a63a:	4013      	ands	r3, r2
    a63c:	432b      	orrs	r3, r5
    a63e:	6063      	str	r3, [r4, #4]
    a640:	e08c      	b.n	a75c <_realloc_r+0x290>
    a642:	9b00      	ldr	r3, [sp, #0]
    a644:	18c0      	adds	r0, r0, r3
    a646:	9b01      	ldr	r3, [sp, #4]
    a648:	9009      	str	r0, [sp, #36]
    a64a:	4298      	cmp	r0, r3
    a64c:	db04      	blt.n	a658 <_realloc_r+0x18c>
    a64e:	68ca      	ldr	r2, [r1, #12]
    a650:	688b      	ldr	r3, [r1, #8]
    a652:	60da      	str	r2, [r3, #12]
    a654:	6093      	str	r3, [r2, #8]
    a656:	e004      	b.n	a662 <_realloc_r+0x196>
    a658:	9801      	ldr	r0, [sp, #4]
    a65a:	1952      	adds	r2, r2, r5
    a65c:	9209      	str	r2, [sp, #36]
    a65e:	4282      	cmp	r2, r0
    a660:	db33      	blt.n	a6ca <_realloc_r+0x1fe>
    a662:	68e2      	ldr	r2, [r4, #12]
    a664:	68a3      	ldr	r3, [r4, #8]
    a666:	1f2e      	subs	r6, r5, #4
    a668:	60da      	str	r2, [r3, #12]
    a66a:	6093      	str	r3, [r2, #8]
    a66c:	1c22      	adds	r2, r4, #0
    a66e:	3208      	adds	r2, #8
    a670:	2e24      	cmp	r6, #36
    a672:	d824      	bhi.n	a6be <_realloc_r+0x1f2>
    a674:	1c38      	adds	r0, r7, #0
    a676:	1c15      	adds	r5, r2, #0
    a678:	2e13      	cmp	r6, #19
    a67a:	d917      	bls.n	a6ac <_realloc_r+0x1e0>
    a67c:	1c3a      	adds	r2, r7, #0
    a67e:	ca08      	ldmia	r2!, {r3}
    a680:	60a3      	str	r3, [r4, #8]
    a682:	687b      	ldr	r3, [r7, #4]
    a684:	3508      	adds	r5, #8
    a686:	60e3      	str	r3, [r4, #12]
    a688:	1d10      	adds	r0, r2, #4
    a68a:	2e1b      	cmp	r6, #27
    a68c:	d90e      	bls.n	a6ac <_realloc_r+0x1e0>
    a68e:	6853      	ldr	r3, [r2, #4]
    a690:	6123      	str	r3, [r4, #16]
    a692:	6843      	ldr	r3, [r0, #4]
    a694:	1d02      	adds	r2, r0, #4
    a696:	6163      	str	r3, [r4, #20]
    a698:	3508      	adds	r5, #8
    a69a:	1d10      	adds	r0, r2, #4
    a69c:	2e24      	cmp	r6, #36
    a69e:	d105      	bne.n	a6ac <_realloc_r+0x1e0>
    a6a0:	6853      	ldr	r3, [r2, #4]
    a6a2:	61a3      	str	r3, [r4, #24]
    a6a4:	6843      	ldr	r3, [r0, #4]
    a6a6:	61e3      	str	r3, [r4, #28]
    a6a8:	3508      	adds	r5, #8
    a6aa:	3008      	adds	r0, #8
    a6ac:	1c01      	adds	r1, r0, #0
    a6ae:	c908      	ldmia	r1!, {r3}
    a6b0:	1c2a      	adds	r2, r5, #0
    a6b2:	c208      	stmia	r2!, {r3}
    a6b4:	6843      	ldr	r3, [r0, #4]
    a6b6:	606b      	str	r3, [r5, #4]
    a6b8:	684b      	ldr	r3, [r1, #4]
    a6ba:	6053      	str	r3, [r2, #4]
    a6bc:	e054      	b.n	a768 <_realloc_r+0x29c>
    a6be:	1c10      	adds	r0, r2, #0
    a6c0:	1c39      	adds	r1, r7, #0
    a6c2:	1c32      	adds	r2, r6, #0
    a6c4:	f7ff fac0 	bl	9c48 <memmove>
    a6c8:	e04e      	b.n	a768 <_realloc_r+0x29c>
    a6ca:	9803      	ldr	r0, [sp, #12]
    a6cc:	9902      	ldr	r1, [sp, #8]
    a6ce:	f7ff f849 	bl	9764 <_malloc_r>
    a6d2:	900a      	str	r0, [sp, #40]
    a6d4:	2800      	cmp	r0, #0
    a6d6:	d041      	beq.n	a75c <_realloc_r+0x290>
    a6d8:	6873      	ldr	r3, [r6, #4]
    a6da:	990a      	ldr	r1, [sp, #40]
    a6dc:	2201      	movs	r2, #1
    a6de:	4393      	bics	r3, r2
    a6e0:	3908      	subs	r1, #8
    a6e2:	18f3      	adds	r3, r6, r3
    a6e4:	4299      	cmp	r1, r3
    a6e6:	d106      	bne.n	a6f6 <_realloc_r+0x22a>
    a6e8:	684b      	ldr	r3, [r1, #4]
    a6ea:	2203      	movs	r2, #3
    a6ec:	4393      	bics	r3, r2
    a6ee:	18ed      	adds	r5, r5, r3
    a6f0:	9509      	str	r5, [sp, #36]
    a6f2:	1c34      	adds	r4, r6, #0
    a6f4:	e038      	b.n	a768 <_realloc_r+0x29c>
    a6f6:	3d04      	subs	r5, #4
    a6f8:	2d24      	cmp	r5, #36
    a6fa:	d826      	bhi.n	a74a <_realloc_r+0x27e>
    a6fc:	1c38      	adds	r0, r7, #0
    a6fe:	9c0a      	ldr	r4, [sp, #40]
    a700:	2d13      	cmp	r5, #19
    a702:	d919      	bls.n	a738 <_realloc_r+0x26c>
    a704:	1c3a      	adds	r2, r7, #0
    a706:	ca08      	ldmia	r2!, {r3}
    a708:	1c21      	adds	r1, r4, #0
    a70a:	c108      	stmia	r1!, {r3}
    a70c:	687b      	ldr	r3, [r7, #4]
    a70e:	1d10      	adds	r0, r2, #4
    a710:	6063      	str	r3, [r4, #4]
    a712:	1d0c      	adds	r4, r1, #4
    a714:	2d1b      	cmp	r5, #27
    a716:	d90f      	bls.n	a738 <_realloc_r+0x26c>
    a718:	6853      	ldr	r3, [r2, #4]
    a71a:	604b      	str	r3, [r1, #4]
    a71c:	6843      	ldr	r3, [r0, #4]
    a71e:	1d21      	adds	r1, r4, #4
    a720:	1d02      	adds	r2, r0, #4
    a722:	6063      	str	r3, [r4, #4]
    a724:	1d10      	adds	r0, r2, #4
    a726:	1d0c      	adds	r4, r1, #4
    a728:	2d24      	cmp	r5, #36
    a72a:	d105      	bne.n	a738 <_realloc_r+0x26c>
    a72c:	6853      	ldr	r3, [r2, #4]
    a72e:	604b      	str	r3, [r1, #4]
    a730:	6843      	ldr	r3, [r0, #4]
    a732:	3008      	adds	r0, #8
    a734:	6063      	str	r3, [r4, #4]
    a736:	3408      	adds	r4, #8
    a738:	1c01      	adds	r1, r0, #0
    a73a:	c908      	ldmia	r1!, {r3}
    a73c:	1c22      	adds	r2, r4, #0
    a73e:	c208      	stmia	r2!, {r3}
    a740:	6843      	ldr	r3, [r0, #4]
    a742:	6063      	str	r3, [r4, #4]
    a744:	684b      	ldr	r3, [r1, #4]
    a746:	6053      	str	r3, [r2, #4]
    a748:	e004      	b.n	a754 <_realloc_r+0x288>
    a74a:	980a      	ldr	r0, [sp, #40]
    a74c:	1c39      	adds	r1, r7, #0
    a74e:	1c2a      	adds	r2, r5, #0
    a750:	f7ff fa7a 	bl	9c48 <memmove>
    a754:	9803      	ldr	r0, [sp, #12]
    a756:	1c39      	adds	r1, r7, #0
    a758:	f7fe fd00 	bl	915c <_free_r>
    a75c:	9803      	ldr	r0, [sp, #12]
    a75e:	f7ff fa99 	bl	9c94 <__malloc_unlock>
    a762:	e030      	b.n	a7c6 <_realloc_r+0x2fa>
    a764:	9509      	str	r5, [sp, #36]
    a766:	1c34      	adds	r4, r6, #0
    a768:	9909      	ldr	r1, [sp, #36]
    a76a:	9a08      	ldr	r2, [sp, #32]
    a76c:	1a88      	subs	r0, r1, r2
    a76e:	6863      	ldr	r3, [r4, #4]
    a770:	280f      	cmp	r0, #15
    a772:	d911      	bls.n	a798 <_realloc_r+0x2cc>
    a774:	18a1      	adds	r1, r4, r2
    a776:	9d08      	ldr	r5, [sp, #32]
    a778:	2201      	movs	r2, #1
    a77a:	4013      	ands	r3, r2
    a77c:	432b      	orrs	r3, r5
    a77e:	6063      	str	r3, [r4, #4]
    a780:	1c03      	adds	r3, r0, #0
    a782:	4313      	orrs	r3, r2
    a784:	604b      	str	r3, [r1, #4]
    a786:	1808      	adds	r0, r1, r0
    a788:	6843      	ldr	r3, [r0, #4]
    a78a:	4313      	orrs	r3, r2
    a78c:	6043      	str	r3, [r0, #4]
    a78e:	3108      	adds	r1, #8
    a790:	9803      	ldr	r0, [sp, #12]
    a792:	f7fe fce3 	bl	915c <_free_r>
    a796:	e008      	b.n	a7aa <_realloc_r+0x2de>
    a798:	2101      	movs	r1, #1
    a79a:	9809      	ldr	r0, [sp, #36]
    a79c:	400b      	ands	r3, r1
    a79e:	4303      	orrs	r3, r0
    a7a0:	6063      	str	r3, [r4, #4]
    a7a2:	1822      	adds	r2, r4, r0
    a7a4:	6853      	ldr	r3, [r2, #4]
    a7a6:	430b      	orrs	r3, r1
    a7a8:	6053      	str	r3, [r2, #4]
    a7aa:	9803      	ldr	r0, [sp, #12]
    a7ac:	f7ff fa72 	bl	9c94 <__malloc_unlock>
    a7b0:	3408      	adds	r4, #8
    a7b2:	940a      	str	r4, [sp, #40]
    a7b4:	e007      	b.n	a7c6 <_realloc_r+0x2fa>
    a7b6:	43a0      	bics	r0, r4
    a7b8:	9b01      	ldr	r3, [sp, #4]
    a7ba:	1942      	adds	r2, r0, r5
    a7bc:	9209      	str	r2, [sp, #36]
    a7be:	429a      	cmp	r2, r3
    a7c0:	db00      	blt.n	a7c4 <_realloc_r+0x2f8>
    a7c2:	e6dd      	b.n	a580 <_realloc_r+0xb4>
    a7c4:	e6e3      	b.n	a58e <_realloc_r+0xc2>
    a7c6:	980a      	ldr	r0, [sp, #40]
    a7c8:	b00b      	add	sp, #44
    a7ca:	bcf0      	pop	{r4, r5, r6, r7}
    a7cc:	bc02      	pop	{r1}
    a7ce:	4708      	bx	r1
    a7d0:	0430      	lsls	r0, r6, #16
    a7d2:	4000      	ands	r0, r0

0000a7d4 <isinf>:
    a7d4:	b510      	push	{r4, lr}
    a7d6:	1c0c      	adds	r4, r1, #0
    a7d8:	4262      	negs	r2, r4
    a7da:	4907      	ldr	r1, [pc, #28]	(a7f8 <.text+0xa7f8>)
    a7dc:	4322      	orrs	r2, r4
    a7de:	4001      	ands	r1, r0
    a7e0:	0fd2      	lsrs	r2, r2, #31
    a7e2:	4b06      	ldr	r3, [pc, #24]	(a7fc <.text+0xa7fc>)
    a7e4:	4311      	orrs	r1, r2
    a7e6:	1a5b      	subs	r3, r3, r1
    a7e8:	425a      	negs	r2, r3
    a7ea:	4313      	orrs	r3, r2
    a7ec:	0fdb      	lsrs	r3, r3, #31
    a7ee:	2001      	movs	r0, #1
    a7f0:	1ac0      	subs	r0, r0, r3
    a7f2:	bc10      	pop	{r4}
    a7f4:	bc02      	pop	{r1}
    a7f6:	4708      	bx	r1
    a7f8:	ffff 7fff 	undefined
    a7fc:	0000      	lsls	r0, r0, #0
    a7fe:	7ff0      	ldrb	r0, [r6, #31]

0000a800 <isnan>:
    a800:	b510      	push	{r4, lr}
    a802:	1c0c      	adds	r4, r1, #0
    a804:	4262      	negs	r2, r4
    a806:	4905      	ldr	r1, [pc, #20]	(a81c <.text+0xa81c>)
    a808:	4322      	orrs	r2, r4
    a80a:	4001      	ands	r1, r0
    a80c:	0fd2      	lsrs	r2, r2, #31
    a80e:	4804      	ldr	r0, [pc, #16]	(a820 <.text+0xa820>)
    a810:	4311      	orrs	r1, r2
    a812:	1a40      	subs	r0, r0, r1
    a814:	0fc0      	lsrs	r0, r0, #31
    a816:	bc10      	pop	{r4}
    a818:	bc02      	pop	{r1}
    a81a:	4708      	bx	r1
    a81c:	ffff 7fff 	undefined
    a820:	0000      	lsls	r0, r0, #0
    a822:	7ff0      	ldrb	r0, [r6, #31]

0000a824 <__sclose>:
    a824:	b500      	push	{lr}
    a826:	4b04      	ldr	r3, [pc, #16]	(a838 <.text+0xa838>)
    a828:	1c02      	adds	r2, r0, #0
    a82a:	6818      	ldr	r0, [r3, #0]
    a82c:	230e      	movs	r3, #14
    a82e:	5ed1      	ldrsh	r1, [r2, r3]
    a830:	f002 fc4a 	bl	d0c8 <___close_r_from_thumb>
    a834:	bc02      	pop	{r1}
    a836:	4708      	bx	r1
    a838:	001c      	lsls	r4, r3, #0
    a83a:	4000      	ands	r0, r0

0000a83c <__sseek>:
    a83c:	b530      	push	{r4, r5, lr}
    a83e:	1c13      	adds	r3, r2, #0
    a840:	4a0b      	ldr	r2, [pc, #44]	(a870 <.text+0xa870>)
    a842:	1c05      	adds	r5, r0, #0
    a844:	1c0c      	adds	r4, r1, #0
    a846:	6810      	ldr	r0, [r2, #0]
    a848:	220e      	movs	r2, #14
    a84a:	5ea9      	ldrsh	r1, [r5, r2]
    a84c:	1c22      	adds	r2, r4, #0
    a84e:	f002 fc3f 	bl	d0d0 <___lseek_r_from_thumb>
    a852:	89aa      	ldrh	r2, [r5, #12]
    a854:	1c43      	adds	r3, r0, #1
    a856:	d103      	bne.n	a860 <__sseek+0x24>
    a858:	4b06      	ldr	r3, [pc, #24]	(a874 <.text+0xa874>)
    a85a:	4013      	ands	r3, r2
    a85c:	81ab      	strh	r3, [r5, #12]
    a85e:	e004      	b.n	a86a <__sseek+0x2e>
    a860:	2380      	movs	r3, #128
    a862:	015b      	lsls	r3, r3, #5
    a864:	4313      	orrs	r3, r2
    a866:	81ab      	strh	r3, [r5, #12]
    a868:	6528      	str	r0, [r5, #80]
    a86a:	bc30      	pop	{r4, r5}
    a86c:	bc02      	pop	{r1}
    a86e:	4708      	bx	r1
    a870:	001c      	lsls	r4, r3, #0
    a872:	4000      	ands	r0, r0
    a874:	efff ffff 	undefined

0000a878 <__swrite>:
    a878:	b570      	push	{r4, r5, r6, lr}
    a87a:	8983      	ldrh	r3, [r0, #12]
    a87c:	1c04      	adds	r4, r0, #0
    a87e:	1c0d      	adds	r5, r1, #0
    a880:	1c16      	adds	r6, r2, #0
    a882:	05da      	lsls	r2, r3, #23
    a884:	d507      	bpl.n	a896 <__swrite+0x1e>
    a886:	4b0b      	ldr	r3, [pc, #44]	(a8b4 <.text+0xa8b4>)
    a888:	2200      	movs	r2, #0
    a88a:	6818      	ldr	r0, [r3, #0]
    a88c:	230e      	movs	r3, #14
    a88e:	5ee1      	ldrsh	r1, [r4, r3]
    a890:	2302      	movs	r3, #2
    a892:	f002 fc1d 	bl	d0d0 <___lseek_r_from_thumb>
    a896:	89a3      	ldrh	r3, [r4, #12]
    a898:	4a07      	ldr	r2, [pc, #28]	(a8b8 <.text+0xa8b8>)
    a89a:	4013      	ands	r3, r2
    a89c:	81a3      	strh	r3, [r4, #12]
    a89e:	4b05      	ldr	r3, [pc, #20]	(a8b4 <.text+0xa8b4>)
    a8a0:	220e      	movs	r2, #14
    a8a2:	5ea1      	ldrsh	r1, [r4, r2]
    a8a4:	6818      	ldr	r0, [r3, #0]
    a8a6:	1c2a      	adds	r2, r5, #0
    a8a8:	1c33      	adds	r3, r6, #0
    a8aa:	f002 fc15 	bl	d0d8 <___write_r_from_thumb>
    a8ae:	bc70      	pop	{r4, r5, r6}
    a8b0:	bc02      	pop	{r1}
    a8b2:	4708      	bx	r1
    a8b4:	001c      	lsls	r4, r3, #0
    a8b6:	4000      	ands	r0, r0
    a8b8:	efff ffff 	undefined

0000a8bc <__sread>:
    a8bc:	b530      	push	{r4, r5, lr}
    a8be:	1c13      	adds	r3, r2, #0
    a8c0:	4a0a      	ldr	r2, [pc, #40]	(a8ec <.text+0xa8ec>)
    a8c2:	1c05      	adds	r5, r0, #0
    a8c4:	1c0c      	adds	r4, r1, #0
    a8c6:	6810      	ldr	r0, [r2, #0]
    a8c8:	220e      	movs	r2, #14
    a8ca:	5ea9      	ldrsh	r1, [r5, r2]
    a8cc:	1c22      	adds	r2, r4, #0
    a8ce:	f002 fc07 	bl	d0e0 <___read_r_from_thumb>
    a8d2:	2800      	cmp	r0, #0
    a8d4:	db03      	blt.n	a8de <__sread+0x22>
    a8d6:	6d2b      	ldr	r3, [r5, #80]
    a8d8:	181b      	adds	r3, r3, r0
    a8da:	652b      	str	r3, [r5, #80]
    a8dc:	e003      	b.n	a8e6 <__sread+0x2a>
    a8de:	89ab      	ldrh	r3, [r5, #12]
    a8e0:	4a03      	ldr	r2, [pc, #12]	(a8f0 <.text+0xa8f0>)
    a8e2:	4013      	ands	r3, r2
    a8e4:	81ab      	strh	r3, [r5, #12]
    a8e6:	bc30      	pop	{r4, r5}
    a8e8:	bc02      	pop	{r1}
    a8ea:	4708      	bx	r1
    a8ec:	001c      	lsls	r4, r3, #0
    a8ee:	4000      	ands	r0, r0
    a8f0:	efff ffff 	undefined

0000a8f4 <strcmp>:
    a8f4:	e001      	b.n	a8fa <strcmp+0x6>
    a8f6:	3001      	adds	r0, #1
    a8f8:	3101      	adds	r1, #1
    a8fa:	7802      	ldrb	r2, [r0, #0]
    a8fc:	2a00      	cmp	r2, #0
    a8fe:	d002      	beq.n	a906 <strcmp+0x12>
    a900:	780b      	ldrb	r3, [r1, #0]
    a902:	4293      	cmp	r3, r2
    a904:	d0f7      	beq.n	a8f6 <strcmp+0x2>
    a906:	7808      	ldrb	r0, [r1, #0]
    a908:	1a10      	subs	r0, r2, r0
    a90a:	4770      	bx	lr

0000a90c <_calloc_r>:
    a90c:	b530      	push	{r4, r5, lr}
    a90e:	4351      	muls	r1, r2
    a910:	f7fe ff28 	bl	9764 <_malloc_r>
    a914:	1c04      	adds	r4, r0, #0
    a916:	2800      	cmp	r0, #0
    a918:	d022      	beq.n	a960 <_calloc_r+0x54>
    a91a:	1c03      	adds	r3, r0, #0
    a91c:	3b08      	subs	r3, #8
    a91e:	685b      	ldr	r3, [r3, #4]
    a920:	2203      	movs	r2, #3
    a922:	4393      	bics	r3, r2
    a924:	1f1a      	subs	r2, r3, #4
    a926:	2a24      	cmp	r2, #36
    a928:	d817      	bhi.n	a95a <_calloc_r+0x4e>
    a92a:	1c01      	adds	r1, r0, #0
    a92c:	2a13      	cmp	r2, #19
    a92e:	d90e      	bls.n	a94e <_calloc_r+0x42>
    a930:	2500      	movs	r5, #0
    a932:	c020      	stmia	r0!, {r5}
    a934:	6065      	str	r5, [r4, #4]
    a936:	1d01      	adds	r1, r0, #4
    a938:	2a1b      	cmp	r2, #27
    a93a:	d908      	bls.n	a94e <_calloc_r+0x42>
    a93c:	1d0b      	adds	r3, r1, #4
    a93e:	6045      	str	r5, [r0, #4]
    a940:	604d      	str	r5, [r1, #4]
    a942:	1d19      	adds	r1, r3, #4
    a944:	2a24      	cmp	r2, #36
    a946:	d102      	bne.n	a94e <_calloc_r+0x42>
    a948:	605d      	str	r5, [r3, #4]
    a94a:	604d      	str	r5, [r1, #4]
    a94c:	3108      	adds	r1, #8
    a94e:	2200      	movs	r2, #0
    a950:	1c0b      	adds	r3, r1, #0
    a952:	c304      	stmia	r3!, {r2}
    a954:	604a      	str	r2, [r1, #4]
    a956:	605a      	str	r2, [r3, #4]
    a958:	e002      	b.n	a960 <_calloc_r+0x54>
    a95a:	2100      	movs	r1, #0
    a95c:	f7ff f990 	bl	9c80 <memset>
    a960:	1c20      	adds	r0, r4, #0
    a962:	bc30      	pop	{r4, r5}
    a964:	bc02      	pop	{r1}
    a966:	4708      	bx	r1

0000a968 <_fclose_r>:
    a968:	b570      	push	{r4, r5, r6, lr}
    a96a:	1c05      	adds	r5, r0, #0
    a96c:	1c0c      	adds	r4, r1, #0
    a96e:	2900      	cmp	r1, #0
    a970:	d00e      	beq.n	a990 <_fclose_r+0x28>
    a972:	f7fe fb15 	bl	8fa0 <__sfp_lock_acquire>
    a976:	2d00      	cmp	r5, #0
    a978:	d005      	beq.n	a986 <_fclose_r+0x1e>
    a97a:	6bab      	ldr	r3, [r5, #56]
    a97c:	2b00      	cmp	r3, #0
    a97e:	d102      	bne.n	a986 <_fclose_r+0x1e>
    a980:	1c28      	adds	r0, r5, #0
    a982:	f7fe fadf 	bl	8f44 <__sinit>
    a986:	89a3      	ldrh	r3, [r4, #12]
    a988:	2b00      	cmp	r3, #0
    a98a:	d103      	bne.n	a994 <_fclose_r+0x2c>
    a98c:	f7fe fb0a 	bl	8fa4 <__sfp_lock_release>
    a990:	2600      	movs	r6, #0
    a992:	e032      	b.n	a9fa <_fclose_r+0x92>
    a994:	071a      	lsls	r2, r3, #28
    a996:	d401      	bmi.n	a99c <_fclose_r+0x34>
    a998:	2600      	movs	r6, #0
    a99a:	e003      	b.n	a9a4 <_fclose_r+0x3c>
    a99c:	1c20      	adds	r0, r4, #0
    a99e:	f7fe fa71 	bl	8e84 <fflush>
    a9a2:	1c06      	adds	r6, r0, #0
    a9a4:	6ae3      	ldr	r3, [r4, #44]
    a9a6:	2b00      	cmp	r3, #0
    a9a8:	d006      	beq.n	a9b8 <_fclose_r+0x50>
    a9aa:	69e0      	ldr	r0, [r4, #28]
    a9ac:	f000 f836 	bl	aa1c <.text+0xaa1c>
    a9b0:	2800      	cmp	r0, #0
    a9b2:	da01      	bge.n	a9b8 <_fclose_r+0x50>
    a9b4:	2601      	movs	r6, #1
    a9b6:	4276      	negs	r6, r6
    a9b8:	89a3      	ldrh	r3, [r4, #12]
    a9ba:	061a      	lsls	r2, r3, #24
    a9bc:	d503      	bpl.n	a9c6 <_fclose_r+0x5e>
    a9be:	6921      	ldr	r1, [r4, #16]
    a9c0:	1c28      	adds	r0, r5, #0
    a9c2:	f7fe fbcb 	bl	915c <_free_r>
    a9c6:	6b21      	ldr	r1, [r4, #48]
    a9c8:	2900      	cmp	r1, #0
    a9ca:	d009      	beq.n	a9e0 <_fclose_r+0x78>
    a9cc:	1c23      	adds	r3, r4, #0
    a9ce:	3340      	adds	r3, #64
    a9d0:	4299      	cmp	r1, r3
    a9d2:	d003      	beq.n	a9dc <_fclose_r+0x74>
    a9d4:	4b0b      	ldr	r3, [pc, #44]	(aa04 <.text+0xaa04>)
    a9d6:	6818      	ldr	r0, [r3, #0]
    a9d8:	f7fe fbc0 	bl	915c <_free_r>
    a9dc:	2300      	movs	r3, #0
    a9de:	6323      	str	r3, [r4, #48]
    a9e0:	6c61      	ldr	r1, [r4, #68]
    a9e2:	2900      	cmp	r1, #0
    a9e4:	d005      	beq.n	a9f2 <_fclose_r+0x8a>
    a9e6:	4b07      	ldr	r3, [pc, #28]	(aa04 <.text+0xaa04>)
    a9e8:	6818      	ldr	r0, [r3, #0]
    a9ea:	f7fe fbb7 	bl	915c <_free_r>
    a9ee:	2300      	movs	r3, #0
    a9f0:	6463      	str	r3, [r4, #68]
    a9f2:	2300      	movs	r3, #0
    a9f4:	81a3      	strh	r3, [r4, #12]
    a9f6:	f7fe fad5 	bl	8fa4 <__sfp_lock_release>
    a9fa:	1c30      	adds	r0, r6, #0
    a9fc:	bc70      	pop	{r4, r5, r6}
    a9fe:	bc02      	pop	{r1}
    aa00:	4708      	bx	r1
    aa02:	0000      	lsls	r0, r0, #0
    aa04:	001c      	lsls	r4, r3, #0
    aa06:	4000      	ands	r0, r0

0000aa08 <fclose>:
    aa08:	b500      	push	{lr}
    aa0a:	4b03      	ldr	r3, [pc, #12]	(aa18 <.text+0xaa18>)
    aa0c:	1c01      	adds	r1, r0, #0
    aa0e:	6818      	ldr	r0, [r3, #0]
    aa10:	f7ff ffaa 	bl	a968 <_fclose_r>
    aa14:	bc02      	pop	{r1}
    aa16:	4708      	bx	r1
    aa18:	001c      	lsls	r4, r3, #0
    aa1a:	4000      	ands	r0, r0
    aa1c:	4718      	bx	r3
    aa1e:	46c0      	nop			(mov r8, r8)

0000aa20 <cos>:
    aa20:	b5f0      	push	{r4, r5, r6, r7, lr}
    aa22:	4a24      	ldr	r2, [pc, #144]	(aab4 <.text+0xaab4>)
    aa24:	4b24      	ldr	r3, [pc, #144]	(aab8 <.text+0xaab8>)
    aa26:	4002      	ands	r2, r0
    aa28:	b085      	sub	sp, #20
    aa2a:	1c05      	adds	r5, r0, #0
    aa2c:	1c0e      	adds	r6, r1, #0
    aa2e:	429a      	cmp	r2, r3
    aa30:	dc02      	bgt.n	aa38 <cos+0x18>
    aa32:	4a22      	ldr	r2, [pc, #136]	(aabc <.text+0xaabc>)
    aa34:	4b22      	ldr	r3, [pc, #136]	(aac0 <.text+0xaac0>)
    aa36:	e019      	b.n	aa6c <cos+0x4c>
    aa38:	4b22      	ldr	r3, [pc, #136]	(aac4 <.text+0xaac4>)
    aa3a:	429a      	cmp	r2, r3
    aa3c:	dd04      	ble.n	aa48 <cos+0x28>
    aa3e:	1c2a      	adds	r2, r5, #0
    aa40:	1c33      	adds	r3, r6, #0
    aa42:	f002 fb1d 	bl	d080 <____subdf3_from_thumb>
    aa46:	e02d      	b.n	aaa4 <cos+0x84>
    aa48:	aa01      	add	r2, sp, #4
    aa4a:	f000 f893 	bl	ab74 <__ieee754_rem_pio2>
    aa4e:	2303      	movs	r3, #3
    aa50:	1c05      	adds	r5, r0, #0
    aa52:	401d      	ands	r5, r3
    aa54:	2d01      	cmp	r5, #1
    aa56:	d00c      	beq.n	aa72 <cos+0x52>
    aa58:	2d02      	cmp	r5, #2
    aa5a:	d012      	beq.n	aa82 <cos+0x62>
    aa5c:	9801      	ldr	r0, [sp, #4]
    aa5e:	9902      	ldr	r1, [sp, #8]
    aa60:	9e03      	ldr	r6, [sp, #12]
    aa62:	9f04      	ldr	r7, [sp, #16]
    aa64:	2d00      	cmp	r5, #0
    aa66:	d117      	bne.n	aa98 <cos+0x78>
    aa68:	1c32      	adds	r2, r6, #0
    aa6a:	1c3b      	adds	r3, r7, #0
    aa6c:	f000 fa92 	bl	af94 <__kernel_cos>
    aa70:	e018      	b.n	aaa4 <cos+0x84>
    aa72:	9801      	ldr	r0, [sp, #4]
    aa74:	9902      	ldr	r1, [sp, #8]
    aa76:	9a03      	ldr	r2, [sp, #12]
    aa78:	9b04      	ldr	r3, [sp, #16]
    aa7a:	9500      	str	r5, [sp, #0]
    aa7c:	f000 ff5e 	bl	b93c <__kernel_sin>
    aa80:	e005      	b.n	aa8e <cos+0x6e>
    aa82:	9801      	ldr	r0, [sp, #4]
    aa84:	9902      	ldr	r1, [sp, #8]
    aa86:	9a03      	ldr	r2, [sp, #12]
    aa88:	9b04      	ldr	r3, [sp, #16]
    aa8a:	f000 fa83 	bl	af94 <__kernel_cos>
    aa8e:	2480      	movs	r4, #128
    aa90:	0624      	lsls	r4, r4, #24
    aa92:	1902      	adds	r2, r0, r4
    aa94:	1c0b      	adds	r3, r1, #0
    aa96:	e007      	b.n	aaa8 <cos+0x88>
    aa98:	2301      	movs	r3, #1
    aa9a:	9300      	str	r3, [sp, #0]
    aa9c:	1c32      	adds	r2, r6, #0
    aa9e:	1c3b      	adds	r3, r7, #0
    aaa0:	f000 ff4c 	bl	b93c <__kernel_sin>
    aaa4:	1c02      	adds	r2, r0, #0
    aaa6:	1c0b      	adds	r3, r1, #0
    aaa8:	1c10      	adds	r0, r2, #0
    aaaa:	1c19      	adds	r1, r3, #0
    aaac:	b005      	add	sp, #20
    aaae:	bcf0      	pop	{r4, r5, r6, r7}
    aab0:	bc04      	pop	{r2}
    aab2:	4710      	bx	r2
    aab4:	ffff 7fff 	undefined
    aab8:	21fb      	movs	r1, #251
    aaba:	3fe9      	subs	r7, #233
	...
    aac4:	ffff 7fef 	undefined

0000aac8 <sin>:
    aac8:	b570      	push	{r4, r5, r6, lr}
    aaca:	4a25      	ldr	r2, [pc, #148]	(ab60 <.text+0xab60>)
    aacc:	4b25      	ldr	r3, [pc, #148]	(ab64 <.text+0xab64>)
    aace:	4002      	ands	r2, r0
    aad0:	b085      	sub	sp, #20
    aad2:	1c05      	adds	r5, r0, #0
    aad4:	1c0e      	adds	r6, r1, #0
    aad6:	429a      	cmp	r2, r3
    aad8:	dc04      	bgt.n	aae4 <sin+0x1c>
    aada:	2300      	movs	r3, #0
    aadc:	9300      	str	r3, [sp, #0]
    aade:	4a22      	ldr	r2, [pc, #136]	(ab68 <.text+0xab68>)
    aae0:	4b22      	ldr	r3, [pc, #136]	(ab6c <.text+0xab6c>)
    aae2:	e01c      	b.n	ab1e <sin+0x56>
    aae4:	4b22      	ldr	r3, [pc, #136]	(ab70 <.text+0xab70>)
    aae6:	429a      	cmp	r2, r3
    aae8:	dd06      	ble.n	aaf8 <sin+0x30>
    aaea:	1c2a      	adds	r2, r5, #0
    aaec:	1c33      	adds	r3, r6, #0
    aaee:	f002 fac7 	bl	d080 <____subdf3_from_thumb>
    aaf2:	1c03      	adds	r3, r0, #0
    aaf4:	1c0c      	adds	r4, r1, #0
    aaf6:	e02d      	b.n	ab54 <sin+0x8c>
    aaf8:	aa01      	add	r2, sp, #4
    aafa:	f000 f83b 	bl	ab74 <__ieee754_rem_pio2>
    aafe:	2303      	movs	r3, #3
    ab00:	4003      	ands	r3, r0
    ab02:	2b01      	cmp	r3, #1
    ab04:	d00e      	beq.n	ab24 <sin+0x5c>
    ab06:	2b02      	cmp	r3, #2
    ab08:	d013      	beq.n	ab32 <sin+0x6a>
    ab0a:	9801      	ldr	r0, [sp, #4]
    ab0c:	9902      	ldr	r1, [sp, #8]
    ab0e:	9c03      	ldr	r4, [sp, #12]
    ab10:	9d04      	ldr	r5, [sp, #16]
    ab12:	2b00      	cmp	r3, #0
    ab14:	d116      	bne.n	ab44 <sin+0x7c>
    ab16:	2301      	movs	r3, #1
    ab18:	9300      	str	r3, [sp, #0]
    ab1a:	1c22      	adds	r2, r4, #0
    ab1c:	1c2b      	adds	r3, r5, #0
    ab1e:	f000 ff0d 	bl	b93c <__kernel_sin>
    ab22:	e7e6      	b.n	aaf2 <sin+0x2a>
    ab24:	9801      	ldr	r0, [sp, #4]
    ab26:	9902      	ldr	r1, [sp, #8]
    ab28:	9a03      	ldr	r2, [sp, #12]
    ab2a:	9b04      	ldr	r3, [sp, #16]
    ab2c:	f000 fa32 	bl	af94 <__kernel_cos>
    ab30:	e7df      	b.n	aaf2 <sin+0x2a>
    ab32:	2401      	movs	r4, #1
    ab34:	9801      	ldr	r0, [sp, #4]
    ab36:	9902      	ldr	r1, [sp, #8]
    ab38:	9a03      	ldr	r2, [sp, #12]
    ab3a:	9b04      	ldr	r3, [sp, #16]
    ab3c:	9400      	str	r4, [sp, #0]
    ab3e:	f000 fefd 	bl	b93c <__kernel_sin>
    ab42:	e003      	b.n	ab4c <sin+0x84>
    ab44:	1c22      	adds	r2, r4, #0
    ab46:	1c2b      	adds	r3, r5, #0
    ab48:	f000 fa24 	bl	af94 <__kernel_cos>
    ab4c:	2280      	movs	r2, #128
    ab4e:	0612      	lsls	r2, r2, #24
    ab50:	1883      	adds	r3, r0, r2
    ab52:	1c0c      	adds	r4, r1, #0
    ab54:	1c18      	adds	r0, r3, #0
    ab56:	1c21      	adds	r1, r4, #0
    ab58:	b005      	add	sp, #20
    ab5a:	bc70      	pop	{r4, r5, r6}
    ab5c:	bc04      	pop	{r2}
    ab5e:	4710      	bx	r2
    ab60:	ffff 7fff 	undefined
    ab64:	21fb      	movs	r1, #251
    ab66:	3fe9      	subs	r7, #233
	...
    ab70:	ffff 7fef 	undefined

0000ab74 <__ieee754_rem_pio2>:
    ab74:	b5f0      	push	{r4, r5, r6, r7, lr}
    ab76:	b093      	sub	sp, #76
    ab78:	9009      	str	r0, [sp, #36]
    ab7a:	4bd7      	ldr	r3, [pc, #860]	(aed8 <.text+0xaed8>)
    ab7c:	9f09      	ldr	r7, [sp, #36]
    ab7e:	401f      	ands	r7, r3
    ab80:	4bd6      	ldr	r3, [pc, #856]	(aedc <.text+0xaedc>)
    ab82:	1c05      	adds	r5, r0, #0
    ab84:	1c0e      	adds	r6, r1, #0
    ab86:	9202      	str	r2, [sp, #8]
    ab88:	429f      	cmp	r7, r3
    ab8a:	dc07      	bgt.n	ab9c <__ieee754_rem_pio2+0x28>
    ab8c:	4bd4      	ldr	r3, [pc, #848]	(aee0 <.text+0xaee0>)
    ab8e:	4cd5      	ldr	r4, [pc, #852]	(aee4 <.text+0xaee4>)
    ab90:	6093      	str	r3, [r2, #8]
    ab92:	60d4      	str	r4, [r2, #12]
    ab94:	2300      	movs	r3, #0
    ab96:	6015      	str	r5, [r2, #0]
    ab98:	6056      	str	r6, [r2, #4]
    ab9a:	e023      	b.n	abe4 <__ieee754_rem_pio2+0x70>
    ab9c:	4bd2      	ldr	r3, [pc, #840]	(aee8 <.text+0xaee8>)
    ab9e:	429f      	cmp	r7, r3
    aba0:	dc6e      	bgt.n	ac80 <__ieee754_rem_pio2+0x10c>
    aba2:	9b09      	ldr	r3, [sp, #36]
    aba4:	2b00      	cmp	r3, #0
    aba6:	dd35      	ble.n	ac14 <__ieee754_rem_pio2+0xa0>
    aba8:	4ad0      	ldr	r2, [pc, #832]	(aeec <.text+0xaeec>)
    abaa:	4bd1      	ldr	r3, [pc, #836]	(aef0 <.text+0xaef0>)
    abac:	f002 fa68 	bl	d080 <____subdf3_from_thumb>
    abb0:	4bd0      	ldr	r3, [pc, #832]	(aef4 <.text+0xaef4>)
    abb2:	1c04      	adds	r4, r0, #0
    abb4:	1c0d      	adds	r5, r1, #0
    abb6:	429f      	cmp	r7, r3
    abb8:	d016      	beq.n	abe8 <__ieee754_rem_pio2+0x74>
    abba:	4acf      	ldr	r2, [pc, #828]	(aef8 <.text+0xaef8>)
    abbc:	4bcf      	ldr	r3, [pc, #828]	(aefc <.text+0xaefc>)
    abbe:	f002 fa5f 	bl	d080 <____subdf3_from_thumb>
    abc2:	1c0b      	adds	r3, r1, #0
    abc4:	9902      	ldr	r1, [sp, #8]
    abc6:	1c02      	adds	r2, r0, #0
    abc8:	600a      	str	r2, [r1, #0]
    abca:	604b      	str	r3, [r1, #4]
    abcc:	1c20      	adds	r0, r4, #0
    abce:	1c29      	adds	r1, r5, #0
    abd0:	f002 fa56 	bl	d080 <____subdf3_from_thumb>
    abd4:	4ac8      	ldr	r2, [pc, #800]	(aef8 <.text+0xaef8>)
    abd6:	4bc9      	ldr	r3, [pc, #804]	(aefc <.text+0xaefc>)
    abd8:	f002 fa52 	bl	d080 <____subdf3_from_thumb>
    abdc:	9a02      	ldr	r2, [sp, #8]
    abde:	6090      	str	r0, [r2, #8]
    abe0:	60d1      	str	r1, [r2, #12]
    abe2:	2301      	movs	r3, #1
    abe4:	9308      	str	r3, [sp, #32]
    abe6:	e1ce      	b.n	af86 <.text+0xaf86>
    abe8:	4ac5      	ldr	r2, [pc, #788]	(af00 <.text+0xaf00>)
    abea:	4bc6      	ldr	r3, [pc, #792]	(af04 <.text+0xaf04>)
    abec:	f002 fa48 	bl	d080 <____subdf3_from_thumb>
    abf0:	4ac5      	ldr	r2, [pc, #788]	(af08 <.text+0xaf08>)
    abf2:	4bc6      	ldr	r3, [pc, #792]	(af0c <.text+0xaf0c>)
    abf4:	1c04      	adds	r4, r0, #0
    abf6:	1c0d      	adds	r5, r1, #0
    abf8:	f002 fa42 	bl	d080 <____subdf3_from_thumb>
    abfc:	1c0b      	adds	r3, r1, #0
    abfe:	9902      	ldr	r1, [sp, #8]
    ac00:	1c02      	adds	r2, r0, #0
    ac02:	600a      	str	r2, [r1, #0]
    ac04:	604b      	str	r3, [r1, #4]
    ac06:	1c20      	adds	r0, r4, #0
    ac08:	1c29      	adds	r1, r5, #0
    ac0a:	f002 fa39 	bl	d080 <____subdf3_from_thumb>
    ac0e:	4abe      	ldr	r2, [pc, #760]	(af08 <.text+0xaf08>)
    ac10:	4bbe      	ldr	r3, [pc, #760]	(af0c <.text+0xaf0c>)
    ac12:	e7e1      	b.n	abd8 <__ieee754_rem_pio2+0x64>
    ac14:	4ab5      	ldr	r2, [pc, #724]	(aeec <.text+0xaeec>)
    ac16:	4bb6      	ldr	r3, [pc, #728]	(aef0 <.text+0xaef0>)
    ac18:	f002 fa2e 	bl	d078 <____adddf3_from_thumb>
    ac1c:	4bb5      	ldr	r3, [pc, #724]	(aef4 <.text+0xaef4>)
    ac1e:	1c04      	adds	r4, r0, #0
    ac20:	1c0d      	adds	r5, r1, #0
    ac22:	429f      	cmp	r7, r3
    ac24:	d00f      	beq.n	ac46 <__ieee754_rem_pio2+0xd2>
    ac26:	4ab4      	ldr	r2, [pc, #720]	(aef8 <.text+0xaef8>)
    ac28:	4bb4      	ldr	r3, [pc, #720]	(aefc <.text+0xaefc>)
    ac2a:	f002 fa25 	bl	d078 <____adddf3_from_thumb>
    ac2e:	1c0b      	adds	r3, r1, #0
    ac30:	9902      	ldr	r1, [sp, #8]
    ac32:	1c02      	adds	r2, r0, #0
    ac34:	600a      	str	r2, [r1, #0]
    ac36:	604b      	str	r3, [r1, #4]
    ac38:	1c20      	adds	r0, r4, #0
    ac3a:	1c29      	adds	r1, r5, #0
    ac3c:	f002 fa20 	bl	d080 <____subdf3_from_thumb>
    ac40:	4aad      	ldr	r2, [pc, #692]	(aef8 <.text+0xaef8>)
    ac42:	4bae      	ldr	r3, [pc, #696]	(aefc <.text+0xaefc>)
    ac44:	e014      	b.n	ac70 <__ieee754_rem_pio2+0xfc>
    ac46:	4aae      	ldr	r2, [pc, #696]	(af00 <.text+0xaf00>)
    ac48:	4bae      	ldr	r3, [pc, #696]	(af04 <.text+0xaf04>)
    ac4a:	f002 fa15 	bl	d078 <____adddf3_from_thumb>
    ac4e:	4aae      	ldr	r2, [pc, #696]	(af08 <.text+0xaf08>)
    ac50:	4bae      	ldr	r3, [pc, #696]	(af0c <.text+0xaf0c>)
    ac52:	1c04      	adds	r4, r0, #0
    ac54:	1c0d      	adds	r5, r1, #0
    ac56:	f002 fa0f 	bl	d078 <____adddf3_from_thumb>
    ac5a:	1c0b      	adds	r3, r1, #0
    ac5c:	9902      	ldr	r1, [sp, #8]
    ac5e:	1c02      	adds	r2, r0, #0
    ac60:	600a      	str	r2, [r1, #0]
    ac62:	604b      	str	r3, [r1, #4]
    ac64:	1c20      	adds	r0, r4, #0
    ac66:	1c29      	adds	r1, r5, #0
    ac68:	f002 fa0a 	bl	d080 <____subdf3_from_thumb>
    ac6c:	4aa6      	ldr	r2, [pc, #664]	(af08 <.text+0xaf08>)
    ac6e:	4ba7      	ldr	r3, [pc, #668]	(af0c <.text+0xaf0c>)
    ac70:	f002 fa02 	bl	d078 <____adddf3_from_thumb>
    ac74:	9a02      	ldr	r2, [sp, #8]
    ac76:	2301      	movs	r3, #1
    ac78:	425b      	negs	r3, r3
    ac7a:	6090      	str	r0, [r2, #8]
    ac7c:	60d1      	str	r1, [r2, #12]
    ac7e:	e7b1      	b.n	abe4 <__ieee754_rem_pio2+0x70>
    ac80:	4ba3      	ldr	r3, [pc, #652]	(af10 <.text+0xaf10>)
    ac82:	429f      	cmp	r7, r3
    ac84:	dd00      	ble.n	ac88 <__ieee754_rem_pio2+0x114>
    ac86:	e0dc      	b.n	ae42 <__ieee754_rem_pio2+0x2ce>
    ac88:	f000 ff14 	bl	bab4 <fabs>
    ac8c:	4aa1      	ldr	r2, [pc, #644]	(af14 <.text+0xaf14>)
    ac8e:	4ba2      	ldr	r3, [pc, #648]	(af18 <.text+0xaf18>)
    ac90:	1c04      	adds	r4, r0, #0
    ac92:	1c0d      	adds	r5, r1, #0
    ac94:	f002 f9f8 	bl	d088 <____muldf3_from_thumb>
    ac98:	4aa0      	ldr	r2, [pc, #640]	(af1c <.text+0xaf1c>)
    ac9a:	4ba1      	ldr	r3, [pc, #644]	(af20 <.text+0xaf20>)
    ac9c:	f002 f9ec 	bl	d078 <____adddf3_from_thumb>
    aca0:	f002 f9f6 	bl	d090 <____fixdfsi_from_thumb>
    aca4:	9008      	str	r0, [sp, #32]
    aca6:	f002 f9e3 	bl	d070 <____floatsidf_from_thumb>
    acaa:	4a9e      	ldr	r2, [pc, #632]	(af24 <.text+0xaf24>)
    acac:	4b9e      	ldr	r3, [pc, #632]	(af28 <.text+0xaf28>)
    acae:	9006      	str	r0, [sp, #24]
    acb0:	9107      	str	r1, [sp, #28]
    acb2:	f002 f9e9 	bl	d088 <____muldf3_from_thumb>
    acb6:	1c02      	adds	r2, r0, #0
    acb8:	1c0b      	adds	r3, r1, #0
    acba:	1c20      	adds	r0, r4, #0
    acbc:	1c29      	adds	r1, r5, #0
    acbe:	f002 f9db 	bl	d078 <____adddf3_from_thumb>
    acc2:	4a8d      	ldr	r2, [pc, #564]	(aef8 <.text+0xaef8>)
    acc4:	4b8d      	ldr	r3, [pc, #564]	(aefc <.text+0xaefc>)
    acc6:	9004      	str	r0, [sp, #16]
    acc8:	9105      	str	r1, [sp, #20]
    acca:	9806      	ldr	r0, [sp, #24]
    accc:	9907      	ldr	r1, [sp, #28]
    acce:	f002 f9db 	bl	d088 <____muldf3_from_thumb>
    acd2:	9c08      	ldr	r4, [sp, #32]
    acd4:	1c05      	adds	r5, r0, #0
    acd6:	1c0e      	adds	r6, r1, #0
    acd8:	2c1f      	cmp	r4, #31
    acda:	dc10      	bgt.n	acfe <__ieee754_rem_pio2+0x18a>
    acdc:	4b93      	ldr	r3, [pc, #588]	(af2c <.text+0xaf2c>)
    acde:	00a2      	lsls	r2, r4, #2
    ace0:	18d2      	adds	r2, r2, r3
    ace2:	3a04      	subs	r2, #4
    ace4:	6813      	ldr	r3, [r2, #0]
    ace6:	429f      	cmp	r7, r3
    ace8:	d009      	beq.n	acfe <__ieee754_rem_pio2+0x18a>
    acea:	1c2a      	adds	r2, r5, #0
    acec:	9804      	ldr	r0, [sp, #16]
    acee:	9905      	ldr	r1, [sp, #20]
    acf0:	1c33      	adds	r3, r6, #0
    acf2:	f002 f9c5 	bl	d080 <____subdf3_from_thumb>
    acf6:	9a02      	ldr	r2, [sp, #8]
    acf8:	6010      	str	r0, [r2, #0]
    acfa:	6051      	str	r1, [r2, #4]
    acfc:	e083      	b.n	ae06 <__ieee754_rem_pio2+0x292>
    acfe:	1c33      	adds	r3, r6, #0
    ad00:	9804      	ldr	r0, [sp, #16]
    ad02:	9905      	ldr	r1, [sp, #20]
    ad04:	1c2a      	adds	r2, r5, #0
    ad06:	f002 f9bb 	bl	d080 <____subdf3_from_thumb>
    ad0a:	9b02      	ldr	r3, [sp, #8]
    ad0c:	4c88      	ldr	r4, [pc, #544]	(af30 <.text+0xaf30>)
    ad0e:	6018      	str	r0, [r3, #0]
    ad10:	6059      	str	r1, [r3, #4]
    ad12:	0d03      	lsrs	r3, r0, #20
    ad14:	153f      	asrs	r7, r7, #20
    ad16:	4023      	ands	r3, r4
    ad18:	1afb      	subs	r3, r7, r3
    ad1a:	9703      	str	r7, [sp, #12]
    ad1c:	2b10      	cmp	r3, #16
    ad1e:	dc00      	bgt.n	ad22 <__ieee754_rem_pio2+0x1ae>
    ad20:	e071      	b.n	ae06 <__ieee754_rem_pio2+0x292>
    ad22:	4a77      	ldr	r2, [pc, #476]	(af00 <.text+0xaf00>)
    ad24:	4b77      	ldr	r3, [pc, #476]	(af04 <.text+0xaf04>)
    ad26:	9806      	ldr	r0, [sp, #24]
    ad28:	9907      	ldr	r1, [sp, #28]
    ad2a:	f002 f9ad 	bl	d088 <____muldf3_from_thumb>
    ad2e:	1c06      	adds	r6, r0, #0
    ad30:	1c0f      	adds	r7, r1, #0
    ad32:	1c32      	adds	r2, r6, #0
    ad34:	1c3b      	adds	r3, r7, #0
    ad36:	9804      	ldr	r0, [sp, #16]
    ad38:	9905      	ldr	r1, [sp, #20]
    ad3a:	f002 f9a1 	bl	d080 <____subdf3_from_thumb>
    ad3e:	4a72      	ldr	r2, [pc, #456]	(af08 <.text+0xaf08>)
    ad40:	4b72      	ldr	r3, [pc, #456]	(af0c <.text+0xaf0c>)
    ad42:	900b      	str	r0, [sp, #44]
    ad44:	910c      	str	r1, [sp, #48]
    ad46:	9806      	ldr	r0, [sp, #24]
    ad48:	9907      	ldr	r1, [sp, #28]
    ad4a:	f002 f99d 	bl	d088 <____muldf3_from_thumb>
    ad4e:	9a0b      	ldr	r2, [sp, #44]
    ad50:	9b0c      	ldr	r3, [sp, #48]
    ad52:	1c04      	adds	r4, r0, #0
    ad54:	1c0d      	adds	r5, r1, #0
    ad56:	9804      	ldr	r0, [sp, #16]
    ad58:	9905      	ldr	r1, [sp, #20]
    ad5a:	f002 f991 	bl	d080 <____subdf3_from_thumb>
    ad5e:	1c32      	adds	r2, r6, #0
    ad60:	1c3b      	adds	r3, r7, #0
    ad62:	f002 f98d 	bl	d080 <____subdf3_from_thumb>
    ad66:	1c02      	adds	r2, r0, #0
    ad68:	1c0b      	adds	r3, r1, #0
    ad6a:	1c20      	adds	r0, r4, #0
    ad6c:	1c29      	adds	r1, r5, #0
    ad6e:	f002 f987 	bl	d080 <____subdf3_from_thumb>
    ad72:	1c05      	adds	r5, r0, #0
    ad74:	1c0e      	adds	r6, r1, #0
    ad76:	1c2a      	adds	r2, r5, #0
    ad78:	1c33      	adds	r3, r6, #0
    ad7a:	980b      	ldr	r0, [sp, #44]
    ad7c:	990c      	ldr	r1, [sp, #48]
    ad7e:	f002 f97f 	bl	d080 <____subdf3_from_thumb>
    ad82:	9a02      	ldr	r2, [sp, #8]
    ad84:	4c6a      	ldr	r4, [pc, #424]	(af30 <.text+0xaf30>)
    ad86:	6010      	str	r0, [r2, #0]
    ad88:	6051      	str	r1, [r2, #4]
    ad8a:	0d03      	lsrs	r3, r0, #20
    ad8c:	9903      	ldr	r1, [sp, #12]
    ad8e:	4023      	ands	r3, r4
    ad90:	1acb      	subs	r3, r1, r3
    ad92:	2b31      	cmp	r3, #49
    ad94:	dc04      	bgt.n	ada0 <__ieee754_rem_pio2+0x22c>
    ad96:	9a0b      	ldr	r2, [sp, #44]
    ad98:	9b0c      	ldr	r3, [sp, #48]
    ad9a:	9204      	str	r2, [sp, #16]
    ad9c:	9305      	str	r3, [sp, #20]
    ad9e:	e032      	b.n	ae06 <__ieee754_rem_pio2+0x292>
    ada0:	4a64      	ldr	r2, [pc, #400]	(af34 <.text+0xaf34>)
    ada2:	4b65      	ldr	r3, [pc, #404]	(af38 <.text+0xaf38>)
    ada4:	9806      	ldr	r0, [sp, #24]
    ada6:	9907      	ldr	r1, [sp, #28]
    ada8:	f002 f96e 	bl	d088 <____muldf3_from_thumb>
    adac:	1c06      	adds	r6, r0, #0
    adae:	1c0f      	adds	r7, r1, #0
    adb0:	1c32      	adds	r2, r6, #0
    adb2:	1c3b      	adds	r3, r7, #0
    adb4:	980b      	ldr	r0, [sp, #44]
    adb6:	990c      	ldr	r1, [sp, #48]
    adb8:	f002 f962 	bl	d080 <____subdf3_from_thumb>
    adbc:	4a5f      	ldr	r2, [pc, #380]	(af3c <.text+0xaf3c>)
    adbe:	4b60      	ldr	r3, [pc, #384]	(af40 <.text+0xaf40>)
    adc0:	9004      	str	r0, [sp, #16]
    adc2:	9105      	str	r1, [sp, #20]
    adc4:	9806      	ldr	r0, [sp, #24]
    adc6:	9907      	ldr	r1, [sp, #28]
    adc8:	f002 f95e 	bl	d088 <____muldf3_from_thumb>
    adcc:	9a04      	ldr	r2, [sp, #16]
    adce:	9b05      	ldr	r3, [sp, #20]
    add0:	1c0d      	adds	r5, r1, #0
    add2:	1c04      	adds	r4, r0, #0
    add4:	980b      	ldr	r0, [sp, #44]
    add6:	990c      	ldr	r1, [sp, #48]
    add8:	f002 f952 	bl	d080 <____subdf3_from_thumb>
    addc:	1c32      	adds	r2, r6, #0
    adde:	1c3b      	adds	r3, r7, #0
    ade0:	f002 f94e 	bl	d080 <____subdf3_from_thumb>
    ade4:	1c02      	adds	r2, r0, #0
    ade6:	1c0b      	adds	r3, r1, #0
    ade8:	1c20      	adds	r0, r4, #0
    adea:	1c29      	adds	r1, r5, #0
    adec:	f002 f948 	bl	d080 <____subdf3_from_thumb>
    adf0:	1c05      	adds	r5, r0, #0
    adf2:	1c0e      	adds	r6, r1, #0
    adf4:	1c33      	adds	r3, r6, #0
    adf6:	9804      	ldr	r0, [sp, #16]
    adf8:	9905      	ldr	r1, [sp, #20]
    adfa:	1c2a      	adds	r2, r5, #0
    adfc:	f002 f940 	bl	d080 <____subdf3_from_thumb>
    ae00:	9b02      	ldr	r3, [sp, #8]
    ae02:	6018      	str	r0, [r3, #0]
    ae04:	6059      	str	r1, [r3, #4]
    ae06:	9c02      	ldr	r4, [sp, #8]
    ae08:	9804      	ldr	r0, [sp, #16]
    ae0a:	9905      	ldr	r1, [sp, #20]
    ae0c:	6822      	ldr	r2, [r4, #0]
    ae0e:	6863      	ldr	r3, [r4, #4]
    ae10:	f002 f936 	bl	d080 <____subdf3_from_thumb>
    ae14:	1c2a      	adds	r2, r5, #0
    ae16:	1c33      	adds	r3, r6, #0
    ae18:	f002 f932 	bl	d080 <____subdf3_from_thumb>
    ae1c:	9b09      	ldr	r3, [sp, #36]
    ae1e:	1c22      	adds	r2, r4, #0
    ae20:	60a0      	str	r0, [r4, #8]
    ae22:	60e1      	str	r1, [r4, #12]
    ae24:	2b00      	cmp	r3, #0
    ae26:	db00      	blt.n	ae2a <__ieee754_rem_pio2+0x2b6>
    ae28:	e0ad      	b.n	af86 <.text+0xaf86>
    ae2a:	6823      	ldr	r3, [r4, #0]
    ae2c:	2480      	movs	r4, #128
    ae2e:	0624      	lsls	r4, r4, #24
    ae30:	191b      	adds	r3, r3, r4
    ae32:	9908      	ldr	r1, [sp, #32]
    ae34:	6013      	str	r3, [r2, #0]
    ae36:	6893      	ldr	r3, [r2, #8]
    ae38:	4249      	negs	r1, r1
    ae3a:	191b      	adds	r3, r3, r4
    ae3c:	6093      	str	r3, [r2, #8]
    ae3e:	9108      	str	r1, [sp, #32]
    ae40:	e0a1      	b.n	af86 <.text+0xaf86>
    ae42:	4b40      	ldr	r3, [pc, #256]	(af44 <.text+0xaf44>)
    ae44:	429f      	cmp	r7, r3
    ae46:	dd0b      	ble.n	ae60 <__ieee754_rem_pio2+0x2ec>
    ae48:	1c2a      	adds	r2, r5, #0
    ae4a:	1c33      	adds	r3, r6, #0
    ae4c:	f002 f918 	bl	d080 <____subdf3_from_thumb>
    ae50:	9a02      	ldr	r2, [sp, #8]
    ae52:	2400      	movs	r4, #0
    ae54:	6090      	str	r0, [r2, #8]
    ae56:	60d1      	str	r1, [r2, #12]
    ae58:	6010      	str	r0, [r2, #0]
    ae5a:	6051      	str	r1, [r2, #4]
    ae5c:	9408      	str	r4, [sp, #32]
    ae5e:	e092      	b.n	af86 <.text+0xaf86>
    ae60:	4939      	ldr	r1, [pc, #228]	(af48 <.text+0xaf48>)
    ae62:	153a      	asrs	r2, r7, #20
    ae64:	1851      	adds	r1, r2, r1
    ae66:	050a      	lsls	r2, r1, #20
    ae68:	1abb      	subs	r3, r7, r2
    ae6a:	1c18      	adds	r0, r3, #0
    ae6c:	910a      	str	r1, [sp, #40]
    ae6e:	1c31      	adds	r1, r6, #0
    ae70:	1c1c      	adds	r4, r3, #0
    ae72:	f002 f90d 	bl	d090 <____fixdfsi_from_thumb>
    ae76:	f002 f8fb 	bl	d070 <____floatsidf_from_thumb>
    ae7a:	1c02      	adds	r2, r0, #0
    ae7c:	1c0b      	adds	r3, r1, #0
    ae7e:	1c20      	adds	r0, r4, #0
    ae80:	1c31      	adds	r1, r6, #0
    ae82:	920d      	str	r2, [sp, #52]
    ae84:	930e      	str	r3, [sp, #56]
    ae86:	f002 f8fb 	bl	d080 <____subdf3_from_thumb>
    ae8a:	4a30      	ldr	r2, [pc, #192]	(af4c <.text+0xaf4c>)
    ae8c:	4b30      	ldr	r3, [pc, #192]	(af50 <.text+0xaf50>)
    ae8e:	f002 f8fb 	bl	d088 <____muldf3_from_thumb>
    ae92:	1c0d      	adds	r5, r1, #0
    ae94:	1c04      	adds	r4, r0, #0
    ae96:	f002 f8fb 	bl	d090 <____fixdfsi_from_thumb>
    ae9a:	f002 f8e9 	bl	d070 <____floatsidf_from_thumb>
    ae9e:	1c02      	adds	r2, r0, #0
    aea0:	1c0b      	adds	r3, r1, #0
    aea2:	1c20      	adds	r0, r4, #0
    aea4:	1c29      	adds	r1, r5, #0
    aea6:	920f      	str	r2, [sp, #60]
    aea8:	9310      	str	r3, [sp, #64]
    aeaa:	f002 f8e9 	bl	d080 <____subdf3_from_thumb>
    aeae:	4a27      	ldr	r2, [pc, #156]	(af4c <.text+0xaf4c>)
    aeb0:	4b27      	ldr	r3, [pc, #156]	(af50 <.text+0xaf50>)
    aeb2:	f002 f8e9 	bl	d088 <____muldf3_from_thumb>
    aeb6:	9011      	str	r0, [sp, #68]
    aeb8:	9112      	str	r1, [sp, #72]
    aeba:	2503      	movs	r5, #3
    aebc:	1e6c      	subs	r4, r5, #1
    aebe:	ae0d      	add	r6, sp, #52
    aec0:	00e3      	lsls	r3, r4, #3
    aec2:	18f3      	adds	r3, r6, r3
    aec4:	6818      	ldr	r0, [r3, #0]
    aec6:	6859      	ldr	r1, [r3, #4]
    aec8:	4a05      	ldr	r2, [pc, #20]	(aee0 <.text+0xaee0>)
    aeca:	4b06      	ldr	r3, [pc, #24]	(aee4 <.text+0xaee4>)
    aecc:	f002 f8cc 	bl	d068 <____eqdf2_from_thumb>
    aed0:	2800      	cmp	r0, #0
    aed2:	d13f      	bne.n	af54 <.text+0xaf54>
    aed4:	1c25      	adds	r5, r4, #0
    aed6:	e7f1      	b.n	aebc <__ieee754_rem_pio2+0x348>
    aed8:	ffff 7fff 	undefined
    aedc:	21fb      	movs	r1, #251
    aede:	3fe9      	subs	r7, #233
	...
    aee8:	d97b      	bls.n	afe2 <__kernel_cos+0x4e>
    aeea:	4002      	ands	r2, r0
    aeec:	21fb      	movs	r1, #251
    aeee:	3ff9      	subs	r7, #249
    aef0:	0000      	lsls	r0, r0, #0
    aef2:	5440      	strb	r0, [r0, r1]
    aef4:	21fb      	movs	r1, #251
    aef6:	3ff9      	subs	r7, #249
    aef8:	b461      	push	{r0, r5, r6}
    aefa:	3dd0      	subs	r5, #208
    aefc:	6331      	str	r1, [r6, #48]
    aefe:	1a62      	subs	r2, r4, r1
    af00:	b461      	push	{r0, r5, r6}
    af02:	3dd0      	subs	r5, #208
    af04:	0000      	lsls	r0, r0, #0
    af06:	1a60      	subs	r0, r4, r1
    af08:	198a      	adds	r2, r1, r6
    af0a:	3ba3      	subs	r3, #163
    af0c:	7073      	strb	r3, [r6, #1]
    af0e:	2e03      	cmp	r6, #3
    af10:	21fb      	movs	r1, #251
    af12:	4139      	asrs	r1, r7
    af14:	5f30      	ldrsh	r0, [r6, r4]
    af16:	3fe4      	subs	r7, #228
    af18:	c883      	ldmia	r0!, {r0, r1, r7}
    af1a:	6dc9      	ldr	r1, [r1, #92]
    af1c:	0000      	lsls	r0, r0, #0
    af1e:	3fe0      	subs	r7, #224
    af20:	0000      	lsls	r0, r0, #0
    af22:	0000      	lsls	r0, r0, #0
    af24:	21fb      	movs	r1, #251
    af26:	bff9      	ittee	<und>
    af28:	0000      	lsls	r0, r0, #0
    af2a:	5440      	strb	r0, [r0, r1]
    af2c:	d554      	bpl.n	afd8 <__kernel_cos+0x44>
    af2e:	0000      	lsls	r0, r0, #0
    af30:	07ff      	lsls	r7, r7, #31
    af32:	0000      	lsls	r0, r0, #0
    af34:	198a      	adds	r2, r1, r6
    af36:	3ba3      	subs	r3, #163
    af38:	0000      	lsls	r0, r0, #0
    af3a:	2e00      	cmp	r6, #0
    af3c:	839a      	strh	r2, [r3, #28]
    af3e:	397b      	subs	r1, #123
    af40:	49c1      	ldr	r1, [pc, #772]	(b248 <__kernel_rem_pio2+0x50>)
    af42:	2520      	movs	r5, #32
    af44:	ffff 7fef 	undefined
    af48:	fbea ffff 	undefined
    af4c:	0000      	lsls	r0, r0, #0
    af4e:	4170      	adcs	r0, r6
    af50:	0000      	lsls	r0, r0, #0
    af52:	0000      	lsls	r0, r0, #0
    af54:	2302      	movs	r3, #2
    af56:	9300      	str	r3, [sp, #0]
    af58:	4b0d      	ldr	r3, [pc, #52]	(af90 <.text+0xaf90>)
    af5a:	9a0a      	ldr	r2, [sp, #40]
    af5c:	9301      	str	r3, [sp, #4]
    af5e:	1c30      	adds	r0, r6, #0
    af60:	9902      	ldr	r1, [sp, #8]
    af62:	1c2b      	adds	r3, r5, #0
    af64:	f000 f948 	bl	b1f8 <__kernel_rem_pio2>
    af68:	9a09      	ldr	r2, [sp, #36]
    af6a:	9008      	str	r0, [sp, #32]
    af6c:	2a00      	cmp	r2, #0
    af6e:	da0a      	bge.n	af86 <.text+0xaf86>
    af70:	9c02      	ldr	r4, [sp, #8]
    af72:	2180      	movs	r1, #128
    af74:	6823      	ldr	r3, [r4, #0]
    af76:	0609      	lsls	r1, r1, #24
    af78:	185b      	adds	r3, r3, r1
    af7a:	6023      	str	r3, [r4, #0]
    af7c:	68a3      	ldr	r3, [r4, #8]
    af7e:	4242      	negs	r2, r0
    af80:	185b      	adds	r3, r3, r1
    af82:	60a3      	str	r3, [r4, #8]
    af84:	9208      	str	r2, [sp, #32]
    af86:	9808      	ldr	r0, [sp, #32]
    af88:	b013      	add	sp, #76
    af8a:	bcf0      	pop	{r4, r5, r6, r7}
    af8c:	bc02      	pop	{r1}
    af8e:	4708      	bx	r1
    af90:	d5d4      	bpl.n	af3c <.text+0xaf3c>
	...

0000af94 <__kernel_cos>:
    af94:	b5f0      	push	{r4, r5, r6, r7, lr}
    af96:	b089      	sub	sp, #36
    af98:	9202      	str	r2, [sp, #8]
    af9a:	9303      	str	r3, [sp, #12]
    af9c:	4a7f      	ldr	r2, [pc, #508]	(b19c <.text+0xb19c>)
    af9e:	4b80      	ldr	r3, [pc, #512]	(b1a0 <.text+0xb1a0>)
    afa0:	4002      	ands	r2, r0
    afa2:	9004      	str	r0, [sp, #16]
    afa4:	9105      	str	r1, [sp, #20]
    afa6:	9208      	str	r2, [sp, #32]
    afa8:	429a      	cmp	r2, r3
    afaa:	dc07      	bgt.n	afbc <__kernel_cos+0x28>
    afac:	f002 f870 	bl	d090 <____fixdfsi_from_thumb>
    afb0:	2800      	cmp	r0, #0
    afb2:	d000      	beq.n	afb6 <__kernel_cos+0x22>
    afb4:	e0ad      	b.n	b112 <__kernel_cos+0x17e>
    afb6:	487b      	ldr	r0, [pc, #492]	(b1a4 <.text+0xb1a4>)
    afb8:	497b      	ldr	r1, [pc, #492]	(b1a8 <.text+0xb1a8>)
    afba:	e0eb      	b.n	b194 <__kernel_cos+0x200>
    afbc:	9804      	ldr	r0, [sp, #16]
    afbe:	9905      	ldr	r1, [sp, #20]
    afc0:	1c02      	adds	r2, r0, #0
    afc2:	1c0b      	adds	r3, r1, #0
    afc4:	f002 f860 	bl	d088 <____muldf3_from_thumb>
    afc8:	4a78      	ldr	r2, [pc, #480]	(b1ac <.text+0xb1ac>)
    afca:	4b79      	ldr	r3, [pc, #484]	(b1b0 <.text+0xb1b0>)
    afcc:	1c04      	adds	r4, r0, #0
    afce:	1c0d      	adds	r5, r1, #0
    afd0:	f002 f85a 	bl	d088 <____muldf3_from_thumb>
    afd4:	4a77      	ldr	r2, [pc, #476]	(b1b4 <.text+0xb1b4>)
    afd6:	4b78      	ldr	r3, [pc, #480]	(b1b8 <.text+0xb1b8>)
    afd8:	f002 f84e 	bl	d078 <____adddf3_from_thumb>
    afdc:	1c02      	adds	r2, r0, #0
    afde:	1c0b      	adds	r3, r1, #0
    afe0:	1c20      	adds	r0, r4, #0
    afe2:	1c29      	adds	r1, r5, #0
    afe4:	f002 f850 	bl	d088 <____muldf3_from_thumb>
    afe8:	4a74      	ldr	r2, [pc, #464]	(b1bc <.text+0xb1bc>)
    afea:	4b75      	ldr	r3, [pc, #468]	(b1c0 <.text+0xb1c0>)
    afec:	f002 f848 	bl	d080 <____subdf3_from_thumb>
    aff0:	1c02      	adds	r2, r0, #0
    aff2:	1c0b      	adds	r3, r1, #0
    aff4:	1c20      	adds	r0, r4, #0
    aff6:	1c29      	adds	r1, r5, #0
    aff8:	f002 f846 	bl	d088 <____muldf3_from_thumb>
    affc:	4a71      	ldr	r2, [pc, #452]	(b1c4 <.text+0xb1c4>)
    affe:	4b72      	ldr	r3, [pc, #456]	(b1c8 <.text+0xb1c8>)
    b000:	f002 f83a 	bl	d078 <____adddf3_from_thumb>
    b004:	1c02      	adds	r2, r0, #0
    b006:	1c0b      	adds	r3, r1, #0
    b008:	1c20      	adds	r0, r4, #0
    b00a:	1c29      	adds	r1, r5, #0
    b00c:	f002 f83c 	bl	d088 <____muldf3_from_thumb>
    b010:	4a6e      	ldr	r2, [pc, #440]	(b1cc <.text+0xb1cc>)
    b012:	4b6f      	ldr	r3, [pc, #444]	(b1d0 <.text+0xb1d0>)
    b014:	f002 f834 	bl	d080 <____subdf3_from_thumb>
    b018:	1c02      	adds	r2, r0, #0
    b01a:	1c0b      	adds	r3, r1, #0
    b01c:	1c20      	adds	r0, r4, #0
    b01e:	1c29      	adds	r1, r5, #0
    b020:	f002 f832 	bl	d088 <____muldf3_from_thumb>
    b024:	4a6b      	ldr	r2, [pc, #428]	(b1d4 <.text+0xb1d4>)
    b026:	4b6c      	ldr	r3, [pc, #432]	(b1d8 <.text+0xb1d8>)
    b028:	f002 f826 	bl	d078 <____adddf3_from_thumb>
    b02c:	1c02      	adds	r2, r0, #0
    b02e:	1c0b      	adds	r3, r1, #0
    b030:	1c20      	adds	r0, r4, #0
    b032:	1c29      	adds	r1, r5, #0
    b034:	f002 f828 	bl	d088 <____muldf3_from_thumb>
    b038:	4b68      	ldr	r3, [pc, #416]	(b1dc <.text+0xb1dc>)
    b03a:	9a08      	ldr	r2, [sp, #32]
    b03c:	9006      	str	r0, [sp, #24]
    b03e:	9107      	str	r1, [sp, #28]
    b040:	429a      	cmp	r2, r3
    b042:	dc26      	bgt.n	b092 <__kernel_cos+0xfe>
    b044:	1c20      	adds	r0, r4, #0
    b046:	1c29      	adds	r1, r5, #0
    b048:	4a65      	ldr	r2, [pc, #404]	(b1e0 <.text+0xb1e0>)
    b04a:	4b66      	ldr	r3, [pc, #408]	(b1e4 <.text+0xb1e4>)
    b04c:	f002 f81c 	bl	d088 <____muldf3_from_thumb>
    b050:	9a06      	ldr	r2, [sp, #24]
    b052:	9b07      	ldr	r3, [sp, #28]
    b054:	1c06      	adds	r6, r0, #0
    b056:	1c0f      	adds	r7, r1, #0
    b058:	1c20      	adds	r0, r4, #0
    b05a:	1c29      	adds	r1, r5, #0
    b05c:	f002 f814 	bl	d088 <____muldf3_from_thumb>
    b060:	9a02      	ldr	r2, [sp, #8]
    b062:	9b03      	ldr	r3, [sp, #12]
    b064:	1c04      	adds	r4, r0, #0
    b066:	1c0d      	adds	r5, r1, #0
    b068:	9804      	ldr	r0, [sp, #16]
    b06a:	9905      	ldr	r1, [sp, #20]
    b06c:	f002 f80c 	bl	d088 <____muldf3_from_thumb>
    b070:	1c02      	adds	r2, r0, #0
    b072:	1c0b      	adds	r3, r1, #0
    b074:	1c20      	adds	r0, r4, #0
    b076:	1c29      	adds	r1, r5, #0
    b078:	f002 f802 	bl	d080 <____subdf3_from_thumb>
    b07c:	1c02      	adds	r2, r0, #0
    b07e:	1c0b      	adds	r3, r1, #0
    b080:	1c30      	adds	r0, r6, #0
    b082:	1c39      	adds	r1, r7, #0
    b084:	f001 fffc 	bl	d080 <____subdf3_from_thumb>
    b088:	1c02      	adds	r2, r0, #0
    b08a:	1c0b      	adds	r3, r1, #0
    b08c:	4845      	ldr	r0, [pc, #276]	(b1a4 <.text+0xb1a4>)
    b08e:	4946      	ldr	r1, [pc, #280]	(b1a8 <.text+0xb1a8>)
    b090:	e03c      	b.n	b10c <__kernel_cos+0x178>
    b092:	4b55      	ldr	r3, [pc, #340]	(b1e8 <.text+0xb1e8>)
    b094:	9a08      	ldr	r2, [sp, #32]
    b096:	429a      	cmp	r2, r3
    b098:	dd02      	ble.n	b0a0 <__kernel_cos+0x10c>
    b09a:	4e54      	ldr	r6, [pc, #336]	(b1ec <.text+0xb1ec>)
    b09c:	4f54      	ldr	r7, [pc, #336]	(b1f0 <.text+0xb1f0>)
    b09e:	e003      	b.n	b0a8 <__kernel_cos+0x114>
    b0a0:	9b08      	ldr	r3, [sp, #32]
    b0a2:	4a54      	ldr	r2, [pc, #336]	(b1f4 <.text+0xb1f4>)
    b0a4:	2700      	movs	r7, #0
    b0a6:	189e      	adds	r6, r3, r2
    b0a8:	1c32      	adds	r2, r6, #0
    b0aa:	1c3b      	adds	r3, r7, #0
    b0ac:	483d      	ldr	r0, [pc, #244]	(b1a4 <.text+0xb1a4>)
    b0ae:	493e      	ldr	r1, [pc, #248]	(b1a8 <.text+0xb1a8>)
    b0b0:	f001 ffe6 	bl	d080 <____subdf3_from_thumb>
    b0b4:	4a4a      	ldr	r2, [pc, #296]	(b1e0 <.text+0xb1e0>)
    b0b6:	4b4b      	ldr	r3, [pc, #300]	(b1e4 <.text+0xb1e4>)
    b0b8:	9000      	str	r0, [sp, #0]
    b0ba:	9101      	str	r1, [sp, #4]
    b0bc:	1c20      	adds	r0, r4, #0
    b0be:	1c29      	adds	r1, r5, #0
    b0c0:	f001 ffe2 	bl	d088 <____muldf3_from_thumb>
    b0c4:	1c32      	adds	r2, r6, #0
    b0c6:	1c3b      	adds	r3, r7, #0
    b0c8:	f001 ffda 	bl	d080 <____subdf3_from_thumb>
    b0cc:	9a06      	ldr	r2, [sp, #24]
    b0ce:	9b07      	ldr	r3, [sp, #28]
    b0d0:	1c06      	adds	r6, r0, #0
    b0d2:	1c0f      	adds	r7, r1, #0
    b0d4:	1c20      	adds	r0, r4, #0
    b0d6:	1c29      	adds	r1, r5, #0
    b0d8:	f001 ffd6 	bl	d088 <____muldf3_from_thumb>
    b0dc:	9a02      	ldr	r2, [sp, #8]
    b0de:	9b03      	ldr	r3, [sp, #12]
    b0e0:	1c04      	adds	r4, r0, #0
    b0e2:	1c0d      	adds	r5, r1, #0
    b0e4:	9804      	ldr	r0, [sp, #16]
    b0e6:	9905      	ldr	r1, [sp, #20]
    b0e8:	f001 ffce 	bl	d088 <____muldf3_from_thumb>
    b0ec:	1c02      	adds	r2, r0, #0
    b0ee:	1c0b      	adds	r3, r1, #0
    b0f0:	1c20      	adds	r0, r4, #0
    b0f2:	1c29      	adds	r1, r5, #0
    b0f4:	f001 ffc4 	bl	d080 <____subdf3_from_thumb>
    b0f8:	1c02      	adds	r2, r0, #0
    b0fa:	1c0b      	adds	r3, r1, #0
    b0fc:	1c30      	adds	r0, r6, #0
    b0fe:	1c39      	adds	r1, r7, #0
    b100:	f001 ffbe 	bl	d080 <____subdf3_from_thumb>
    b104:	1c02      	adds	r2, r0, #0
    b106:	1c0b      	adds	r3, r1, #0
    b108:	9800      	ldr	r0, [sp, #0]
    b10a:	9901      	ldr	r1, [sp, #4]
    b10c:	f001 ffb8 	bl	d080 <____subdf3_from_thumb>
    b110:	e040      	b.n	b194 <__kernel_cos+0x200>
    b112:	9804      	ldr	r0, [sp, #16]
    b114:	9905      	ldr	r1, [sp, #20]
    b116:	1c02      	adds	r2, r0, #0
    b118:	1c0b      	adds	r3, r1, #0
    b11a:	f001 ffb5 	bl	d088 <____muldf3_from_thumb>
    b11e:	4a23      	ldr	r2, [pc, #140]	(b1ac <.text+0xb1ac>)
    b120:	4b23      	ldr	r3, [pc, #140]	(b1b0 <.text+0xb1b0>)
    b122:	1c04      	adds	r4, r0, #0
    b124:	1c0d      	adds	r5, r1, #0
    b126:	f001 ffaf 	bl	d088 <____muldf3_from_thumb>
    b12a:	4a22      	ldr	r2, [pc, #136]	(b1b4 <.text+0xb1b4>)
    b12c:	4b22      	ldr	r3, [pc, #136]	(b1b8 <.text+0xb1b8>)
    b12e:	f001 ffa3 	bl	d078 <____adddf3_from_thumb>
    b132:	1c02      	adds	r2, r0, #0
    b134:	1c0b      	adds	r3, r1, #0
    b136:	1c20      	adds	r0, r4, #0
    b138:	1c29      	adds	r1, r5, #0
    b13a:	f001 ffa5 	bl	d088 <____muldf3_from_thumb>
    b13e:	4a1f      	ldr	r2, [pc, #124]	(b1bc <.text+0xb1bc>)
    b140:	4b1f      	ldr	r3, [pc, #124]	(b1c0 <.text+0xb1c0>)
    b142:	f001 ff9d 	bl	d080 <____subdf3_from_thumb>
    b146:	1c02      	adds	r2, r0, #0
    b148:	1c0b      	adds	r3, r1, #0
    b14a:	1c20      	adds	r0, r4, #0
    b14c:	1c29      	adds	r1, r5, #0
    b14e:	f001 ff9b 	bl	d088 <____muldf3_from_thumb>
    b152:	4a1c      	ldr	r2, [pc, #112]	(b1c4 <.text+0xb1c4>)
    b154:	4b1c      	ldr	r3, [pc, #112]	(b1c8 <.text+0xb1c8>)
    b156:	f001 ff8f 	bl	d078 <____adddf3_from_thumb>
    b15a:	1c02      	adds	r2, r0, #0
    b15c:	1c0b      	adds	r3, r1, #0
    b15e:	1c20      	adds	r0, r4, #0
    b160:	1c29      	adds	r1, r5, #0
    b162:	f001 ff91 	bl	d088 <____muldf3_from_thumb>
    b166:	4a19      	ldr	r2, [pc, #100]	(b1cc <.text+0xb1cc>)
    b168:	4b19      	ldr	r3, [pc, #100]	(b1d0 <.text+0xb1d0>)
    b16a:	f001 ff89 	bl	d080 <____subdf3_from_thumb>
    b16e:	1c02      	adds	r2, r0, #0
    b170:	1c0b      	adds	r3, r1, #0
    b172:	1c20      	adds	r0, r4, #0
    b174:	1c29      	adds	r1, r5, #0
    b176:	f001 ff87 	bl	d088 <____muldf3_from_thumb>
    b17a:	4a16      	ldr	r2, [pc, #88]	(b1d4 <.text+0xb1d4>)
    b17c:	4b16      	ldr	r3, [pc, #88]	(b1d8 <.text+0xb1d8>)
    b17e:	f001 ff7b 	bl	d078 <____adddf3_from_thumb>
    b182:	1c02      	adds	r2, r0, #0
    b184:	1c0b      	adds	r3, r1, #0
    b186:	1c20      	adds	r0, r4, #0
    b188:	1c29      	adds	r1, r5, #0
    b18a:	f001 ff7d 	bl	d088 <____muldf3_from_thumb>
    b18e:	9006      	str	r0, [sp, #24]
    b190:	9107      	str	r1, [sp, #28]
    b192:	e757      	b.n	b044 <__kernel_cos+0xb0>
    b194:	b009      	add	sp, #36
    b196:	bcf0      	pop	{r4, r5, r6, r7}
    b198:	bc04      	pop	{r2}
    b19a:	4710      	bx	r2
    b19c:	ffff 7fff 	undefined
    b1a0:	ffff 3e3f 	vcvt.f32.u32	d19, d31, #1
    b1a4:	0000      	lsls	r0, r0, #0
    b1a6:	3ff0      	subs	r7, #240
    b1a8:	0000      	lsls	r0, r0, #0
    b1aa:	0000      	lsls	r0, r0, #0
    b1ac:	fae9 bda8 	undefined
    b1b0:	38d4      	subs	r0, #212
    b1b2:	be88      	bkpt	0x0088
    b1b4:	ee9e 3e21 	cdp	14, 9, cr3, cr14, cr1, {1}
    b1b8:	b1c4      	cbz	r4, b1ec <.text+0xb1ec>
    b1ba:	bdb4      	pop	{r2, r4, r5, r7, pc}
    b1bc:	7e4f      	ldrb	r7, [r1, #25]
    b1be:	3e92      	subs	r6, #146
    b1c0:	52ad      	strh	r5, [r5, r2]
    b1c2:	809c      	strh	r4, [r3, #4]
    b1c4:	01a0      	lsls	r0, r4, #6
    b1c6:	3efa      	subs	r6, #250
    b1c8:	1590      	asrs	r0, r2, #22
    b1ca:	19cb      	adds	r3, r1, r7
    b1cc:	c16c      	stmia	r1!, {r2, r3, r5, r6}
    b1ce:	3f56      	subs	r7, #86
    b1d0:	5177      	str	r7, [r6, r5]
    b1d2:	16c1      	asrs	r1, r0, #27
    b1d4:	5555      	strb	r5, [r2, r5]
    b1d6:	3fa5      	subs	r7, #165
    b1d8:	554c      	strb	r4, [r1, r5]
    b1da:	5555      	strb	r5, [r2, r5]
    b1dc:	3332      	adds	r3, #50
    b1de:	3fd3      	subs	r7, #211
    b1e0:	0000      	lsls	r0, r0, #0
    b1e2:	3fe0      	subs	r7, #224
    b1e4:	0000      	lsls	r0, r0, #0
    b1e6:	0000      	lsls	r0, r0, #0
    b1e8:	0000      	lsls	r0, r0, #0
    b1ea:	3fe9      	subs	r7, #233
    b1ec:	0000      	lsls	r0, r0, #0
    b1ee:	3fd2      	subs	r7, #210
    b1f0:	0000      	lsls	r0, r0, #0
    b1f2:	0000      	lsls	r0, r0, #0
    b1f4:	0000      	lsls	r0, r0, #0
    b1f6:	ffe0 b5f0 	vsli.64	<illegal reg q13.5>, q8, #32

0000b1f8 <__kernel_rem_pio2>:
    b1f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    b1fa:	4ccf      	ldr	r4, [pc, #828]	(b538 <.text+0xb538>)
    b1fc:	44a5      	add	sp, r4
    b1fe:	9302      	str	r3, [sp, #8]
    b200:	9004      	str	r0, [sp, #16]
    b202:	98b3      	ldr	r0, [sp, #716]
    b204:	9103      	str	r1, [sp, #12]
    b206:	4bcd      	ldr	r3, [pc, #820]	(b53c <.text+0xb53c>)
    b208:	9902      	ldr	r1, [sp, #8]
    b20a:	1c14      	adds	r4, r2, #0
    b20c:	0082      	lsls	r2, r0, #2
    b20e:	58d2      	ldr	r2, [r2, r3]
    b210:	3901      	subs	r1, #1
    b212:	9107      	str	r1, [sp, #28]
    b214:	1ee0      	subs	r0, r4, #3
    b216:	2118      	movs	r1, #24
    b218:	9208      	str	r2, [sp, #32]
    b21a:	f000 fdcd 	bl	bdb8 <__aeabi_idiv>
    b21e:	9021      	str	r0, [sp, #132]
    b220:	2800      	cmp	r0, #0
    b222:	da01      	bge.n	b228 <__kernel_rem_pio2+0x30>
    b224:	2200      	movs	r2, #0
    b226:	9221      	str	r2, [sp, #132]
    b228:	9f21      	ldr	r7, [sp, #132]
    b22a:	06fb      	lsls	r3, r7, #27
    b22c:	1bdb      	subs	r3, r3, r7
    b22e:	009b      	lsls	r3, r3, #2
    b230:	19db      	adds	r3, r3, r7
    b232:	00db      	lsls	r3, r3, #3
    b234:	18e4      	adds	r4, r4, r3
    b236:	9807      	ldr	r0, [sp, #28]
    b238:	9405      	str	r4, [sp, #20]
    b23a:	3c18      	subs	r4, #24
    b23c:	940b      	str	r4, [sp, #44]
    b23e:	9908      	ldr	r1, [sp, #32]
    b240:	1a3c      	subs	r4, r7, r0
    b242:	9ab4      	ldr	r2, [sp, #720]
    b244:	00a3      	lsls	r3, r4, #2
    b246:	1847      	adds	r7, r0, r1
    b248:	18d5      	adds	r5, r2, r3
    b24a:	2600      	movs	r6, #0
    b24c:	e00f      	b.n	b26e <__kernel_rem_pio2+0x76>
    b24e:	2c00      	cmp	r4, #0
    b250:	da02      	bge.n	b258 <__kernel_rem_pio2+0x60>
    b252:	48bb      	ldr	r0, [pc, #748]	(b540 <.text+0xb540>)
    b254:	49bb      	ldr	r1, [pc, #748]	(b544 <.text+0xb544>)
    b256:	e002      	b.n	b25e <__kernel_rem_pio2+0x66>
    b258:	6828      	ldr	r0, [r5, #0]
    b25a:	f001 ff09 	bl	d070 <____floatsidf_from_thumb>
    b25e:	00f2      	lsls	r2, r6, #3
    b260:	ab22      	add	r3, sp, #136
    b262:	189b      	adds	r3, r3, r2
    b264:	6018      	str	r0, [r3, #0]
    b266:	6059      	str	r1, [r3, #4]
    b268:	3601      	adds	r6, #1
    b26a:	3401      	adds	r4, #1
    b26c:	3504      	adds	r5, #4
    b26e:	42be      	cmp	r6, r7
    b270:	dded      	ble.n	b24e <__kernel_rem_pio2+0x56>
    b272:	9b07      	ldr	r3, [sp, #28]
    b274:	2400      	movs	r4, #0
    b276:	9317      	str	r3, [sp, #92]
    b278:	9418      	str	r4, [sp, #96]
    b27a:	e01e      	b.n	b2ba <__kernel_rem_pio2+0xc2>
    b27c:	9a16      	ldr	r2, [sp, #88]
    b27e:	ca03      	ldmia	r2!, {r0, r1}
    b280:	9216      	str	r2, [sp, #88]
    b282:	683a      	ldr	r2, [r7, #0]
    b284:	687b      	ldr	r3, [r7, #4]
    b286:	f001 feff 	bl	d088 <____muldf3_from_thumb>
    b28a:	1c02      	adds	r2, r0, #0
    b28c:	1c0b      	adds	r3, r1, #0
    b28e:	1c20      	adds	r0, r4, #0
    b290:	1c29      	adds	r1, r5, #0
    b292:	f001 fef1 	bl	d078 <____adddf3_from_thumb>
    b296:	3601      	adds	r6, #1
    b298:	1c04      	adds	r4, r0, #0
    b29a:	1c0d      	adds	r5, r1, #0
    b29c:	3f08      	subs	r7, #8
    b29e:	9b07      	ldr	r3, [sp, #28]
    b2a0:	429e      	cmp	r6, r3
    b2a2:	ddeb      	ble.n	b27c <__kernel_rem_pio2+0x84>
    b2a4:	9f18      	ldr	r7, [sp, #96]
    b2a6:	9817      	ldr	r0, [sp, #92]
    b2a8:	00fa      	lsls	r2, r7, #3
    b2aa:	ab4a      	add	r3, sp, #296
    b2ac:	189b      	adds	r3, r3, r2
    b2ae:	3701      	adds	r7, #1
    b2b0:	3001      	adds	r0, #1
    b2b2:	601c      	str	r4, [r3, #0]
    b2b4:	605d      	str	r5, [r3, #4]
    b2b6:	9718      	str	r7, [sp, #96]
    b2b8:	9017      	str	r0, [sp, #92]
    b2ba:	9918      	ldr	r1, [sp, #96]
    b2bc:	9a08      	ldr	r2, [sp, #32]
    b2be:	4291      	cmp	r1, r2
    b2c0:	dc09      	bgt.n	b2d6 <__kernel_rem_pio2+0xde>
    b2c2:	9b04      	ldr	r3, [sp, #16]
    b2c4:	9c17      	ldr	r4, [sp, #92]
    b2c6:	9316      	str	r3, [sp, #88]
    b2c8:	00e2      	lsls	r2, r4, #3
    b2ca:	ab22      	add	r3, sp, #136
    b2cc:	4c9c      	ldr	r4, [pc, #624]	(b540 <.text+0xb540>)
    b2ce:	4d9d      	ldr	r5, [pc, #628]	(b544 <.text+0xb544>)
    b2d0:	189f      	adds	r7, r3, r2
    b2d2:	2600      	movs	r6, #0
    b2d4:	e7e3      	b.n	b29e <__kernel_rem_pio2+0xa6>
    b2d6:	9f08      	ldr	r7, [sp, #32]
    b2d8:	9706      	str	r7, [sp, #24]
    b2da:	9806      	ldr	r0, [sp, #24]
    b2dc:	ab4a      	add	r3, sp, #296
    b2de:	00c2      	lsls	r2, r0, #3
    b2e0:	18d2      	adds	r2, r2, r3
    b2e2:	3801      	subs	r0, #1
    b2e4:	6816      	ldr	r6, [r2, #0]
    b2e6:	6857      	ldr	r7, [r2, #4]
    b2e8:	00c2      	lsls	r2, r0, #3
    b2ea:	189b      	adds	r3, r3, r2
    b2ec:	229a      	movs	r2, #154
    b2ee:	9906      	ldr	r1, [sp, #24]
    b2f0:	0092      	lsls	r2, r2, #2
    b2f2:	446a      	add	r2, sp
    b2f4:	9019      	str	r0, [sp, #100]
    b2f6:	9315      	str	r3, [sp, #84]
    b2f8:	911a      	str	r1, [sp, #104]
    b2fa:	9214      	str	r2, [sp, #80]
    b2fc:	e028      	b.n	b350 <__kernel_rem_pio2+0x158>
    b2fe:	4a92      	ldr	r2, [pc, #584]	(b548 <.text+0xb548>)
    b300:	4b92      	ldr	r3, [pc, #584]	(b54c <.text+0xb54c>)
    b302:	1c30      	adds	r0, r6, #0
    b304:	1c39      	adds	r1, r7, #0
    b306:	f001 febf 	bl	d088 <____muldf3_from_thumb>
    b30a:	f001 fec1 	bl	d090 <____fixdfsi_from_thumb>
    b30e:	f001 feaf 	bl	d070 <____floatsidf_from_thumb>
    b312:	4a8f      	ldr	r2, [pc, #572]	(b550 <.text+0xb550>)
    b314:	4b8f      	ldr	r3, [pc, #572]	(b554 <.text+0xb554>)
    b316:	1c04      	adds	r4, r0, #0
    b318:	1c0d      	adds	r5, r1, #0
    b31a:	f001 feb5 	bl	d088 <____muldf3_from_thumb>
    b31e:	1c02      	adds	r2, r0, #0
    b320:	1c0b      	adds	r3, r1, #0
    b322:	1c30      	adds	r0, r6, #0
    b324:	1c39      	adds	r1, r7, #0
    b326:	f001 fea7 	bl	d078 <____adddf3_from_thumb>
    b32a:	f001 feb1 	bl	d090 <____fixdfsi_from_thumb>
    b32e:	9b14      	ldr	r3, [sp, #80]
    b330:	9f1a      	ldr	r7, [sp, #104]
    b332:	c301      	stmia	r3!, {r0}
    b334:	1c20      	adds	r0, r4, #0
    b336:	9c15      	ldr	r4, [sp, #84]
    b338:	9314      	str	r3, [sp, #80]
    b33a:	3f01      	subs	r7, #1
    b33c:	6822      	ldr	r2, [r4, #0]
    b33e:	6863      	ldr	r3, [r4, #4]
    b340:	1c29      	adds	r1, r5, #0
    b342:	971a      	str	r7, [sp, #104]
    b344:	f001 fe98 	bl	d078 <____adddf3_from_thumb>
    b348:	3c08      	subs	r4, #8
    b34a:	9415      	str	r4, [sp, #84]
    b34c:	1c06      	adds	r6, r0, #0
    b34e:	1c0f      	adds	r7, r1, #0
    b350:	981a      	ldr	r0, [sp, #104]
    b352:	2800      	cmp	r0, #0
    b354:	dcd3      	bgt.n	b2fe <__kernel_rem_pio2+0x106>
    b356:	1c30      	adds	r0, r6, #0
    b358:	9a0b      	ldr	r2, [sp, #44]
    b35a:	1c39      	adds	r1, r7, #0
    b35c:	f000 fc4c 	bl	bbf8 <scalbn>
    b360:	4a7d      	ldr	r2, [pc, #500]	(b558 <.text+0xb558>)
    b362:	4b7e      	ldr	r3, [pc, #504]	(b55c <.text+0xb55c>)
    b364:	1c04      	adds	r4, r0, #0
    b366:	1c0d      	adds	r5, r1, #0
    b368:	f001 fe8e 	bl	d088 <____muldf3_from_thumb>
    b36c:	f000 fbae 	bl	bacc <floor>
    b370:	4a7b      	ldr	r2, [pc, #492]	(b560 <.text+0xb560>)
    b372:	4b7c      	ldr	r3, [pc, #496]	(b564 <.text+0xb564>)
    b374:	f001 fe88 	bl	d088 <____muldf3_from_thumb>
    b378:	1c02      	adds	r2, r0, #0
    b37a:	1c0b      	adds	r3, r1, #0
    b37c:	1c20      	adds	r0, r4, #0
    b37e:	1c29      	adds	r1, r5, #0
    b380:	f001 fe7a 	bl	d078 <____adddf3_from_thumb>
    b384:	1c0d      	adds	r5, r1, #0
    b386:	1c04      	adds	r4, r0, #0
    b388:	f001 fe82 	bl	d090 <____fixdfsi_from_thumb>
    b38c:	9009      	str	r0, [sp, #36]
    b38e:	f001 fe6f 	bl	d070 <____floatsidf_from_thumb>
    b392:	1c02      	adds	r2, r0, #0
    b394:	1c0b      	adds	r3, r1, #0
    b396:	1c20      	adds	r0, r4, #0
    b398:	1c29      	adds	r1, r5, #0
    b39a:	f001 fe71 	bl	d080 <____subdf3_from_thumb>
    b39e:	1c0e      	adds	r6, r1, #0
    b3a0:	990b      	ldr	r1, [sp, #44]
    b3a2:	1c05      	adds	r5, r0, #0
    b3a4:	2900      	cmp	r1, #0
    b3a6:	dd14      	ble.n	b3d2 <__kernel_rem_pio2+0x1da>
    b3a8:	9a19      	ldr	r2, [sp, #100]
    b3aa:	ac9a      	add	r4, sp, #616
    b3ac:	0090      	lsls	r0, r2, #2
    b3ae:	5901      	ldr	r1, [r0, r4]
    b3b0:	9b0b      	ldr	r3, [sp, #44]
    b3b2:	2218      	movs	r2, #24
    b3b4:	1ad2      	subs	r2, r2, r3
    b3b6:	9f09      	ldr	r7, [sp, #36]
    b3b8:	1c0b      	adds	r3, r1, #0
    b3ba:	4113      	asrs	r3, r2
    b3bc:	18ff      	adds	r7, r7, r3
    b3be:	4093      	lsls	r3, r2
    b3c0:	1ac9      	subs	r1, r1, r3
    b3c2:	5101      	str	r1, [r0, r4]
    b3c4:	980b      	ldr	r0, [sp, #44]
    b3c6:	2317      	movs	r3, #23
    b3c8:	1a1b      	subs	r3, r3, r0
    b3ca:	4119      	asrs	r1, r3
    b3cc:	9709      	str	r7, [sp, #36]
    b3ce:	910c      	str	r1, [sp, #48]
    b3d0:	e017      	b.n	b402 <__kernel_rem_pio2+0x20a>
    b3d2:	990b      	ldr	r1, [sp, #44]
    b3d4:	2900      	cmp	r1, #0
    b3d6:	d106      	bne.n	b3e6 <__kernel_rem_pio2+0x1ee>
    b3d8:	9a19      	ldr	r2, [sp, #100]
    b3da:	0093      	lsls	r3, r2, #2
    b3dc:	aa9a      	add	r2, sp, #616
    b3de:	589b      	ldr	r3, [r3, r2]
    b3e0:	15db      	asrs	r3, r3, #23
    b3e2:	930c      	str	r3, [sp, #48]
    b3e4:	e00d      	b.n	b402 <__kernel_rem_pio2+0x20a>
    b3e6:	1c28      	adds	r0, r5, #0
    b3e8:	1c31      	adds	r1, r6, #0
    b3ea:	4a5f      	ldr	r2, [pc, #380]	(b568 <.text+0xb568>)
    b3ec:	4b5f      	ldr	r3, [pc, #380]	(b56c <.text+0xb56c>)
    b3ee:	f001 fe5b 	bl	d0a8 <____gedf2_from_thumb>
    b3f2:	2800      	cmp	r0, #0
    b3f4:	da02      	bge.n	b3fc <__kernel_rem_pio2+0x204>
    b3f6:	2300      	movs	r3, #0
    b3f8:	930c      	str	r3, [sp, #48]
    b3fa:	e04e      	b.n	b49a <__kernel_rem_pio2+0x2a2>
    b3fc:	2402      	movs	r4, #2
    b3fe:	940c      	str	r4, [sp, #48]
    b400:	e002      	b.n	b408 <__kernel_rem_pio2+0x210>
    b402:	9f0c      	ldr	r7, [sp, #48]
    b404:	2f00      	cmp	r7, #0
    b406:	dd48      	ble.n	b49a <__kernel_rem_pio2+0x2a2>
    b408:	9809      	ldr	r0, [sp, #36]
    b40a:	3001      	adds	r0, #1
    b40c:	9009      	str	r0, [sp, #36]
    b40e:	2400      	movs	r4, #0
    b410:	2000      	movs	r0, #0
    b412:	a99a      	add	r1, sp, #616
    b414:	e00f      	b.n	b436 <__kernel_rem_pio2+0x23e>
    b416:	680a      	ldr	r2, [r1, #0]
    b418:	2c00      	cmp	r4, #0
    b41a:	d107      	bne.n	b42c <__kernel_rem_pio2+0x234>
    b41c:	2a00      	cmp	r2, #0
    b41e:	d008      	beq.n	b432 <__kernel_rem_pio2+0x23a>
    b420:	2380      	movs	r3, #128
    b422:	045b      	lsls	r3, r3, #17
    b424:	1a9b      	subs	r3, r3, r2
    b426:	2401      	movs	r4, #1
    b428:	600b      	str	r3, [r1, #0]
    b42a:	e002      	b.n	b432 <__kernel_rem_pio2+0x23a>
    b42c:	4b50      	ldr	r3, [pc, #320]	(b570 <.text+0xb570>)
    b42e:	1a9b      	subs	r3, r3, r2
    b430:	600b      	str	r3, [r1, #0]
    b432:	3001      	adds	r0, #1
    b434:	3104      	adds	r1, #4
    b436:	9a06      	ldr	r2, [sp, #24]
    b438:	4290      	cmp	r0, r2
    b43a:	dbec      	blt.n	b416 <__kernel_rem_pio2+0x21e>
    b43c:	9b0b      	ldr	r3, [sp, #44]
    b43e:	2b00      	cmp	r3, #0
    b440:	dd11      	ble.n	b466 <__kernel_rem_pio2+0x26e>
    b442:	2b01      	cmp	r3, #1
    b444:	d002      	beq.n	b44c <__kernel_rem_pio2+0x254>
    b446:	2b02      	cmp	r3, #2
    b448:	d10d      	bne.n	b466 <__kernel_rem_pio2+0x26e>
    b44a:	e005      	b.n	b458 <__kernel_rem_pio2+0x260>
    b44c:	9f19      	ldr	r7, [sp, #100]
    b44e:	a89a      	add	r0, sp, #616
    b450:	00b9      	lsls	r1, r7, #2
    b452:	580b      	ldr	r3, [r1, r0]
    b454:	4a47      	ldr	r2, [pc, #284]	(b574 <.text+0xb574>)
    b456:	e004      	b.n	b462 <__kernel_rem_pio2+0x26a>
    b458:	9a19      	ldr	r2, [sp, #100]
    b45a:	a89a      	add	r0, sp, #616
    b45c:	0091      	lsls	r1, r2, #2
    b45e:	580b      	ldr	r3, [r1, r0]
    b460:	4a45      	ldr	r2, [pc, #276]	(b578 <.text+0xb578>)
    b462:	4013      	ands	r3, r2
    b464:	500b      	str	r3, [r1, r0]
    b466:	9b0c      	ldr	r3, [sp, #48]
    b468:	2b02      	cmp	r3, #2
    b46a:	d116      	bne.n	b49a <__kernel_rem_pio2+0x2a2>
    b46c:	1c2a      	adds	r2, r5, #0
    b46e:	1c33      	adds	r3, r6, #0
    b470:	4842      	ldr	r0, [pc, #264]	(b57c <.text+0xb57c>)
    b472:	4943      	ldr	r1, [pc, #268]	(b580 <.text+0xb580>)
    b474:	f001 fe04 	bl	d080 <____subdf3_from_thumb>
    b478:	1c05      	adds	r5, r0, #0
    b47a:	1c0e      	adds	r6, r1, #0
    b47c:	2c00      	cmp	r4, #0
    b47e:	d00c      	beq.n	b49a <__kernel_rem_pio2+0x2a2>
    b480:	9a0b      	ldr	r2, [sp, #44]
    b482:	483e      	ldr	r0, [pc, #248]	(b57c <.text+0xb57c>)
    b484:	493e      	ldr	r1, [pc, #248]	(b580 <.text+0xb580>)
    b486:	f000 fbb7 	bl	bbf8 <scalbn>
    b48a:	1c02      	adds	r2, r0, #0
    b48c:	1c0b      	adds	r3, r1, #0
    b48e:	1c28      	adds	r0, r5, #0
    b490:	1c31      	adds	r1, r6, #0
    b492:	f001 fdf5 	bl	d080 <____subdf3_from_thumb>
    b496:	1c05      	adds	r5, r0, #0
    b498:	1c0e      	adds	r6, r1, #0
    b49a:	1c28      	adds	r0, r5, #0
    b49c:	1c31      	adds	r1, r6, #0
    b49e:	4a28      	ldr	r2, [pc, #160]	(b540 <.text+0xb540>)
    b4a0:	4b28      	ldr	r3, [pc, #160]	(b544 <.text+0xb544>)
    b4a2:	f001 fde1 	bl	d068 <____eqdf2_from_thumb>
    b4a6:	2800      	cmp	r0, #0
    b4a8:	d000      	beq.n	b4ac <__kernel_rem_pio2+0x2b4>
    b4aa:	e097      	b.n	b5dc <.text+0xb5dc>
    b4ac:	9c19      	ldr	r4, [sp, #100]
    b4ae:	ab9a      	add	r3, sp, #616
    b4b0:	00a2      	lsls	r2, r4, #2
    b4b2:	189a      	adds	r2, r3, r2
    b4b4:	2100      	movs	r1, #0
    b4b6:	e005      	b.n	b4c4 <__kernel_rem_pio2+0x2cc>
    b4b8:	9f19      	ldr	r7, [sp, #100]
    b4ba:	6813      	ldr	r3, [r2, #0]
    b4bc:	3f01      	subs	r7, #1
    b4be:	9719      	str	r7, [sp, #100]
    b4c0:	4319      	orrs	r1, r3
    b4c2:	3a04      	subs	r2, #4
    b4c4:	9819      	ldr	r0, [sp, #100]
    b4c6:	9b08      	ldr	r3, [sp, #32]
    b4c8:	4298      	cmp	r0, r3
    b4ca:	daf5      	bge.n	b4b8 <__kernel_rem_pio2+0x2c0>
    b4cc:	2900      	cmp	r1, #0
    b4ce:	d000      	beq.n	b4d2 <__kernel_rem_pio2+0x2da>
    b4d0:	e08c      	b.n	b5ec <.text+0xb5ec>
    b4d2:	009b      	lsls	r3, r3, #2
    b4d4:	acae      	add	r4, sp, #696
    b4d6:	191b      	adds	r3, r3, r4
    b4d8:	1c1a      	adds	r2, r3, #0
    b4da:	2701      	movs	r7, #1
    b4dc:	3a54      	subs	r2, #84
    b4de:	970a      	str	r7, [sp, #40]
    b4e0:	e002      	b.n	b4e8 <__kernel_rem_pio2+0x2f0>
    b4e2:	980a      	ldr	r0, [sp, #40]
    b4e4:	3001      	adds	r0, #1
    b4e6:	900a      	str	r0, [sp, #40]
    b4e8:	6813      	ldr	r3, [r2, #0]
    b4ea:	3a04      	subs	r2, #4
    b4ec:	2b00      	cmp	r3, #0
    b4ee:	d0f8      	beq.n	b4e2 <__kernel_rem_pio2+0x2ea>
    b4f0:	9921      	ldr	r1, [sp, #132]
    b4f2:	9a06      	ldr	r2, [sp, #24]
    b4f4:	9cb4      	ldr	r4, [sp, #720]
    b4f6:	188b      	adds	r3, r1, r2
    b4f8:	009b      	lsls	r3, r3, #2
    b4fa:	18e3      	adds	r3, r4, r3
    b4fc:	3304      	adds	r3, #4
    b4fe:	2700      	movs	r7, #0
    b500:	9313      	str	r3, [sp, #76]
    b502:	9712      	str	r7, [sp, #72]
    b504:	e060      	b.n	b5c8 <.text+0xb5c8>
    b506:	9802      	ldr	r0, [sp, #8]
    b508:	9913      	ldr	r1, [sp, #76]
    b50a:	ad22      	add	r5, sp, #136
    b50c:	00e4      	lsls	r4, r4, #3
    b50e:	00c3      	lsls	r3, r0, #3
    b510:	192c      	adds	r4, r5, r4
    b512:	6808      	ldr	r0, [r1, #0]
    b514:	18e4      	adds	r4, r4, r3
    b516:	f001 fdab 	bl	d070 <____floatsidf_from_thumb>
    b51a:	9f06      	ldr	r7, [sp, #24]
    b51c:	6020      	str	r0, [r4, #0]
    b51e:	6061      	str	r1, [r4, #4]
    b520:	9c02      	ldr	r4, [sp, #8]
    b522:	9812      	ldr	r0, [sp, #72]
    b524:	19e3      	adds	r3, r4, r7
    b526:	181b      	adds	r3, r3, r0
    b528:	9a04      	ldr	r2, [sp, #16]
    b52a:	00db      	lsls	r3, r3, #3
    b52c:	4e04      	ldr	r6, [pc, #16]	(b540 <.text+0xb540>)
    b52e:	4f05      	ldr	r7, [pc, #20]	(b544 <.text+0xb544>)
    b530:	18ed      	adds	r5, r5, r3
    b532:	2400      	movs	r4, #0
    b534:	9211      	str	r2, [sp, #68]
    b536:	e036      	b.n	b5a6 <.text+0xb5a6>
    b538:	fd48 ffff 	stc2l	15, cr15, [r8, #-1020]
    b53c:	d6dc      	bvs.n	b4f8 <__kernel_rem_pio2+0x300>
	...
    b54a:	3e70      	subs	r6, #112
    b54c:	0000      	lsls	r0, r0, #0
    b54e:	0000      	lsls	r0, r0, #0
    b550:	0000      	lsls	r0, r0, #0
    b552:	c170      	stmia	r1!, {r4, r5, r6}
    b554:	0000      	lsls	r0, r0, #0
    b556:	0000      	lsls	r0, r0, #0
    b558:	0000      	lsls	r0, r0, #0
    b55a:	3fc0      	subs	r7, #192
    b55c:	0000      	lsls	r0, r0, #0
    b55e:	0000      	lsls	r0, r0, #0
    b560:	0000      	lsls	r0, r0, #0
    b562:	c020      	stmia	r0!, {r5}
    b564:	0000      	lsls	r0, r0, #0
    b566:	0000      	lsls	r0, r0, #0
    b568:	0000      	lsls	r0, r0, #0
    b56a:	3fe0      	subs	r7, #224
    b56c:	0000      	lsls	r0, r0, #0
    b56e:	0000      	lsls	r0, r0, #0
    b570:	ffff 00ff 	vshr.u64	q8, <illegal reg q15.5>, #1
    b574:	ffff 007f 	vshr.u32	q8, <illegal reg q15.5>, #1
    b578:	ffff 003f 	vshr.u32	d16, d31, #1
    b57c:	0000      	lsls	r0, r0, #0
    b57e:	3ff0      	subs	r7, #240
    b580:	0000      	lsls	r0, r0, #0
    b582:	0000      	lsls	r0, r0, #0
    b584:	9a11      	ldr	r2, [sp, #68]
    b586:	ca03      	ldmia	r2!, {r0, r1}
    b588:	9211      	str	r2, [sp, #68]
    b58a:	682a      	ldr	r2, [r5, #0]
    b58c:	686b      	ldr	r3, [r5, #4]
    b58e:	f001 fd7b 	bl	d088 <____muldf3_from_thumb>
    b592:	1c02      	adds	r2, r0, #0
    b594:	1c0b      	adds	r3, r1, #0
    b596:	1c30      	adds	r0, r6, #0
    b598:	1c39      	adds	r1, r7, #0
    b59a:	f001 fd6d 	bl	d078 <____adddf3_from_thumb>
    b59e:	3401      	adds	r4, #1
    b5a0:	1c06      	adds	r6, r0, #0
    b5a2:	1c0f      	adds	r7, r1, #0
    b5a4:	3d08      	subs	r5, #8
    b5a6:	9b07      	ldr	r3, [sp, #28]
    b5a8:	429c      	cmp	r4, r3
    b5aa:	ddeb      	ble.n	b584 <.text+0xb584>
    b5ac:	9c12      	ldr	r4, [sp, #72]
    b5ae:	9806      	ldr	r0, [sp, #24]
    b5b0:	00e3      	lsls	r3, r4, #3
    b5b2:	aa4a      	add	r2, sp, #296
    b5b4:	18d2      	adds	r2, r2, r3
    b5b6:	9913      	ldr	r1, [sp, #76]
    b5b8:	00c3      	lsls	r3, r0, #3
    b5ba:	18d2      	adds	r2, r2, r3
    b5bc:	3401      	adds	r4, #1
    b5be:	3104      	adds	r1, #4
    b5c0:	6096      	str	r6, [r2, #8]
    b5c2:	60d7      	str	r7, [r2, #12]
    b5c4:	9412      	str	r4, [sp, #72]
    b5c6:	9113      	str	r1, [sp, #76]
    b5c8:	9b06      	ldr	r3, [sp, #24]
    b5ca:	9c0a      	ldr	r4, [sp, #40]
    b5cc:	9f12      	ldr	r7, [sp, #72]
    b5ce:	191a      	adds	r2, r3, r4
    b5d0:	19dc      	adds	r4, r3, r7
    b5d2:	1c63      	adds	r3, r4, #1
    b5d4:	4293      	cmp	r3, r2
    b5d6:	dd96      	ble.n	b506 <__kernel_rem_pio2+0x30e>
    b5d8:	9206      	str	r2, [sp, #24]
    b5da:	e67e      	b.n	b2da <__kernel_rem_pio2+0xe2>
    b5dc:	1c28      	adds	r0, r5, #0
    b5de:	1c31      	adds	r1, r6, #0
    b5e0:	4bbf      	ldr	r3, [pc, #764]	(b8e0 <.text+0xb8e0>)
    b5e2:	4abe      	ldr	r2, [pc, #760]	(b8dc <.text+0xb8dc>)
    b5e4:	f001 fd40 	bl	d068 <____eqdf2_from_thumb>
    b5e8:	2800      	cmp	r0, #0
    b5ea:	d116      	bne.n	b61a <.text+0xb61a>
    b5ec:	9806      	ldr	r0, [sp, #24]
    b5ee:	a9ae      	add	r1, sp, #696
    b5f0:	0083      	lsls	r3, r0, #2
    b5f2:	185b      	adds	r3, r3, r1
    b5f4:	1c1a      	adds	r2, r3, #0
    b5f6:	3a54      	subs	r2, #84
    b5f8:	2100      	movs	r1, #0
    b5fa:	6813      	ldr	r3, [r2, #0]
    b5fc:	3101      	adds	r1, #1
    b5fe:	3a04      	subs	r2, #4
    b600:	2b00      	cmp	r3, #0
    b602:	d0fa      	beq.n	b5fa <.text+0xb5fa>
    b604:	004b      	lsls	r3, r1, #1
    b606:	185b      	adds	r3, r3, r1
    b608:	9c05      	ldr	r4, [sp, #20]
    b60a:	9a06      	ldr	r2, [sp, #24]
    b60c:	00db      	lsls	r3, r3, #3
    b60e:	1ae3      	subs	r3, r4, r3
    b610:	1a52      	subs	r2, r2, r1
    b612:	3b18      	subs	r3, #24
    b614:	9206      	str	r2, [sp, #24]
    b616:	930b      	str	r3, [sp, #44]
    b618:	e038      	b.n	b68c <.text+0xb68c>
    b61a:	9f0b      	ldr	r7, [sp, #44]
    b61c:	1c28      	adds	r0, r5, #0
    b61e:	427a      	negs	r2, r7
    b620:	1c31      	adds	r1, r6, #0
    b622:	f000 fae9 	bl	bbf8 <scalbn>
    b626:	4aaf      	ldr	r2, [pc, #700]	(b8e4 <.text+0xb8e4>)
    b628:	4baf      	ldr	r3, [pc, #700]	(b8e8 <.text+0xb8e8>)
    b62a:	901b      	str	r0, [sp, #108]
    b62c:	911c      	str	r1, [sp, #112]
    b62e:	f001 fd3b 	bl	d0a8 <____gedf2_from_thumb>
    b632:	9906      	ldr	r1, [sp, #24]
    b634:	af9a      	add	r7, sp, #616
    b636:	008c      	lsls	r4, r1, #2
    b638:	2800      	cmp	r0, #0
    b63a:	db22      	blt.n	b682 <.text+0xb682>
    b63c:	4aab      	ldr	r2, [pc, #684]	(b8ec <.text+0xb8ec>)
    b63e:	4bac      	ldr	r3, [pc, #688]	(b8f0 <.text+0xb8f0>)
    b640:	981b      	ldr	r0, [sp, #108]
    b642:	991c      	ldr	r1, [sp, #112]
    b644:	f001 fd20 	bl	d088 <____muldf3_from_thumb>
    b648:	f001 fd22 	bl	d090 <____fixdfsi_from_thumb>
    b64c:	f001 fd10 	bl	d070 <____floatsidf_from_thumb>
    b650:	4aa8      	ldr	r2, [pc, #672]	(b8f4 <.text+0xb8f4>)
    b652:	4ba9      	ldr	r3, [pc, #676]	(b8f8 <.text+0xb8f8>)
    b654:	1c05      	adds	r5, r0, #0
    b656:	1c0e      	adds	r6, r1, #0
    b658:	f001 fd16 	bl	d088 <____muldf3_from_thumb>
    b65c:	1c02      	adds	r2, r0, #0
    b65e:	1c0b      	adds	r3, r1, #0
    b660:	981b      	ldr	r0, [sp, #108]
    b662:	991c      	ldr	r1, [sp, #112]
    b664:	f001 fd08 	bl	d078 <____adddf3_from_thumb>
    b668:	f001 fd12 	bl	d090 <____fixdfsi_from_thumb>
    b66c:	9a06      	ldr	r2, [sp, #24]
    b66e:	9b0b      	ldr	r3, [sp, #44]
    b670:	3201      	adds	r2, #1
    b672:	51e0      	str	r0, [r4, r7]
    b674:	3318      	adds	r3, #24
    b676:	0094      	lsls	r4, r2, #2
    b678:	1c28      	adds	r0, r5, #0
    b67a:	1c31      	adds	r1, r6, #0
    b67c:	9206      	str	r2, [sp, #24]
    b67e:	930b      	str	r3, [sp, #44]
    b680:	e001      	b.n	b686 <.text+0xb686>
    b682:	981b      	ldr	r0, [sp, #108]
    b684:	991c      	ldr	r1, [sp, #112]
    b686:	f001 fd03 	bl	d090 <____fixdfsi_from_thumb>
    b68a:	51e0      	str	r0, [r4, r7]
    b68c:	9a0b      	ldr	r2, [sp, #44]
    b68e:	489b      	ldr	r0, [pc, #620]	(b8fc <.text+0xb8fc>)
    b690:	499b      	ldr	r1, [pc, #620]	(b900 <.text+0xb900>)
    b692:	f000 fab1 	bl	bbf8 <scalbn>
    b696:	9f06      	ldr	r7, [sp, #24]
    b698:	ab9a      	add	r3, sp, #616
    b69a:	00ba      	lsls	r2, r7, #2
    b69c:	189b      	adds	r3, r3, r2
    b69e:	9310      	str	r3, [sp, #64]
    b6a0:	00fa      	lsls	r2, r7, #3
    b6a2:	ab4a      	add	r3, sp, #296
    b6a4:	9e06      	ldr	r6, [sp, #24]
    b6a6:	1c04      	adds	r4, r0, #0
    b6a8:	1c0d      	adds	r5, r1, #0
    b6aa:	189f      	adds	r7, r3, r2
    b6ac:	e018      	b.n	b6e0 <.text+0xb6e0>
    b6ae:	9910      	ldr	r1, [sp, #64]
    b6b0:	6808      	ldr	r0, [r1, #0]
    b6b2:	f001 fcdd 	bl	d070 <____floatsidf_from_thumb>
    b6b6:	1c02      	adds	r2, r0, #0
    b6b8:	1c0b      	adds	r3, r1, #0
    b6ba:	1c20      	adds	r0, r4, #0
    b6bc:	1c29      	adds	r1, r5, #0
    b6be:	f001 fce3 	bl	d088 <____muldf3_from_thumb>
    b6c2:	4a8a      	ldr	r2, [pc, #552]	(b8ec <.text+0xb8ec>)
    b6c4:	4b8a      	ldr	r3, [pc, #552]	(b8f0 <.text+0xb8f0>)
    b6c6:	6038      	str	r0, [r7, #0]
    b6c8:	6079      	str	r1, [r7, #4]
    b6ca:	1c20      	adds	r0, r4, #0
    b6cc:	1c29      	adds	r1, r5, #0
    b6ce:	f001 fcdb 	bl	d088 <____muldf3_from_thumb>
    b6d2:	9a10      	ldr	r2, [sp, #64]
    b6d4:	3a04      	subs	r2, #4
    b6d6:	9210      	str	r2, [sp, #64]
    b6d8:	1c04      	adds	r4, r0, #0
    b6da:	1c0d      	adds	r5, r1, #0
    b6dc:	3e01      	subs	r6, #1
    b6de:	3f08      	subs	r7, #8
    b6e0:	2e00      	cmp	r6, #0
    b6e2:	dae4      	bge.n	b6ae <.text+0xb6ae>
    b6e4:	9f06      	ldr	r7, [sp, #24]
    b6e6:	2300      	movs	r3, #0
    b6e8:	930f      	str	r3, [sp, #60]
    b6ea:	e024      	b.n	b736 <.text+0xb736>
    b6ec:	4a85      	ldr	r2, [pc, #532]	(b904 <.text+0xb904>)
    b6ee:	00f3      	lsls	r3, r6, #3
    b6f0:	9c0e      	ldr	r4, [sp, #56]
    b6f2:	189b      	adds	r3, r3, r2
    b6f4:	6818      	ldr	r0, [r3, #0]
    b6f6:	6859      	ldr	r1, [r3, #4]
    b6f8:	cc0c      	ldmia	r4!, {r2, r3}
    b6fa:	940e      	str	r4, [sp, #56]
    b6fc:	f001 fcc4 	bl	d088 <____muldf3_from_thumb>
    b700:	1c02      	adds	r2, r0, #0
    b702:	1c0b      	adds	r3, r1, #0
    b704:	9800      	ldr	r0, [sp, #0]
    b706:	9901      	ldr	r1, [sp, #4]
    b708:	f001 fcb6 	bl	d078 <____adddf3_from_thumb>
    b70c:	9000      	str	r0, [sp, #0]
    b70e:	9101      	str	r1, [sp, #4]
    b710:	3601      	adds	r6, #1
    b712:	9808      	ldr	r0, [sp, #32]
    b714:	4286      	cmp	r6, r0
    b716:	dc02      	bgt.n	b71e <.text+0xb71e>
    b718:	990f      	ldr	r1, [sp, #60]
    b71a:	428e      	cmp	r6, r1
    b71c:	dde6      	ble.n	b6ec <.text+0xb6ec>
    b71e:	9b0f      	ldr	r3, [sp, #60]
    b720:	9800      	ldr	r0, [sp, #0]
    b722:	9901      	ldr	r1, [sp, #4]
    b724:	00da      	lsls	r2, r3, #3
    b726:	ab72      	add	r3, sp, #456
    b728:	189b      	adds	r3, r3, r2
    b72a:	6018      	str	r0, [r3, #0]
    b72c:	6059      	str	r1, [r3, #4]
    b72e:	990f      	ldr	r1, [sp, #60]
    b730:	3101      	adds	r1, #1
    b732:	910f      	str	r1, [sp, #60]
    b734:	3f01      	subs	r7, #1
    b736:	2f00      	cmp	r7, #0
    b738:	db09      	blt.n	b74e <.text+0xb74e>
    b73a:	00fa      	lsls	r2, r7, #3
    b73c:	ab4a      	add	r3, sp, #296
    b73e:	189b      	adds	r3, r3, r2
    b740:	930e      	str	r3, [sp, #56]
    b742:	4b67      	ldr	r3, [pc, #412]	(b8e0 <.text+0xb8e0>)
    b744:	4a65      	ldr	r2, [pc, #404]	(b8dc <.text+0xb8dc>)
    b746:	2600      	movs	r6, #0
    b748:	9200      	str	r2, [sp, #0]
    b74a:	9301      	str	r3, [sp, #4]
    b74c:	e7e1      	b.n	b712 <.text+0xb712>
    b74e:	9bb3      	ldr	r3, [sp, #716]
    b750:	2b02      	cmp	r3, #2
    b752:	dc04      	bgt.n	b75e <.text+0xb75e>
    b754:	2b01      	cmp	r3, #1
    b756:	da0e      	bge.n	b776 <.text+0xb776>
    b758:	2b00      	cmp	r3, #0
    b75a:	d014      	beq.n	b786 <.text+0xb786>
    b75c:	e0e4      	b.n	b928 <.text+0xb928>
    b75e:	9cb3      	ldr	r4, [sp, #716]
    b760:	2c03      	cmp	r4, #3
    b762:	d000      	beq.n	b766 <.text+0xb766>
    b764:	e0e0      	b.n	b928 <.text+0xb928>
    b766:	9f06      	ldr	r7, [sp, #24]
    b768:	3f01      	subs	r7, #1
    b76a:	00fa      	lsls	r2, r7, #3
    b76c:	970d      	str	r7, [sp, #52]
    b76e:	ab72      	add	r3, sp, #456
    b770:	9f06      	ldr	r7, [sp, #24]
    b772:	189e      	adds	r6, r3, r2
    b774:	e06d      	b.n	b852 <.text+0xb852>
    b776:	9806      	ldr	r0, [sp, #24]
    b778:	ab72      	add	r3, sp, #456
    b77a:	00c2      	lsls	r2, r0, #3
    b77c:	1c04      	adds	r4, r0, #0
    b77e:	4958      	ldr	r1, [pc, #352]	(b8e0 <.text+0xb8e0>)
    b780:	4856      	ldr	r0, [pc, #344]	(b8dc <.text+0xb8dc>)
    b782:	189d      	adds	r5, r3, r2
    b784:	e01f      	b.n	b7c6 <.text+0xb7c6>
    b786:	9906      	ldr	r1, [sp, #24]
    b788:	ab72      	add	r3, sp, #456
    b78a:	00ca      	lsls	r2, r1, #3
    b78c:	1c0c      	adds	r4, r1, #0
    b78e:	4954      	ldr	r1, [pc, #336]	(b8e0 <.text+0xb8e0>)
    b790:	4852      	ldr	r0, [pc, #328]	(b8dc <.text+0xb8dc>)
    b792:	189d      	adds	r5, r3, r2
    b794:	e005      	b.n	b7a2 <.text+0xb7a2>
    b796:	682a      	ldr	r2, [r5, #0]
    b798:	686b      	ldr	r3, [r5, #4]
    b79a:	f001 fc6d 	bl	d078 <____adddf3_from_thumb>
    b79e:	3c01      	subs	r4, #1
    b7a0:	3d08      	subs	r5, #8
    b7a2:	2c00      	cmp	r4, #0
    b7a4:	daf7      	bge.n	b796 <.text+0xb796>
    b7a6:	9a0c      	ldr	r2, [sp, #48]
    b7a8:	2a00      	cmp	r2, #0
    b7aa:	d002      	beq.n	b7b2 <.text+0xb7b2>
    b7ac:	2780      	movs	r7, #128
    b7ae:	063f      	lsls	r7, r7, #24
    b7b0:	19c0      	adds	r0, r0, r7
    b7b2:	9a03      	ldr	r2, [sp, #12]
    b7b4:	6010      	str	r0, [r2, #0]
    b7b6:	6051      	str	r1, [r2, #4]
    b7b8:	e0b6      	b.n	b928 <.text+0xb928>
    b7ba:	682a      	ldr	r2, [r5, #0]
    b7bc:	686b      	ldr	r3, [r5, #4]
    b7be:	f001 fc5b 	bl	d078 <____adddf3_from_thumb>
    b7c2:	3c01      	subs	r4, #1
    b7c4:	3d08      	subs	r5, #8
    b7c6:	2c00      	cmp	r4, #0
    b7c8:	daf7      	bge.n	b7ba <.text+0xb7ba>
    b7ca:	9c0c      	ldr	r4, [sp, #48]
    b7cc:	1c02      	adds	r2, r0, #0
    b7ce:	1c0b      	adds	r3, r1, #0
    b7d0:	2c00      	cmp	r4, #0
    b7d2:	d002      	beq.n	b7da <.text+0xb7da>
    b7d4:	2780      	movs	r7, #128
    b7d6:	063f      	lsls	r7, r7, #24
    b7d8:	19c0      	adds	r0, r0, r7
    b7da:	9c03      	ldr	r4, [sp, #12]
    b7dc:	6020      	str	r0, [r4, #0]
    b7de:	6061      	str	r1, [r4, #4]
    b7e0:	9872      	ldr	r0, [sp, #456]
    b7e2:	9973      	ldr	r1, [sp, #460]
    b7e4:	f001 fc4c 	bl	d080 <____subdf3_from_thumb>
    b7e8:	2401      	movs	r4, #1
    b7ea:	e007      	b.n	b7fc <.text+0xb7fc>
    b7ec:	00e2      	lsls	r2, r4, #3
    b7ee:	ab72      	add	r3, sp, #456
    b7f0:	189b      	adds	r3, r3, r2
    b7f2:	681a      	ldr	r2, [r3, #0]
    b7f4:	685b      	ldr	r3, [r3, #4]
    b7f6:	f001 fc3f 	bl	d078 <____adddf3_from_thumb>
    b7fa:	3401      	adds	r4, #1
    b7fc:	9f06      	ldr	r7, [sp, #24]
    b7fe:	42bc      	cmp	r4, r7
    b800:	ddf4      	ble.n	b7ec <.text+0xb7ec>
    b802:	9a0c      	ldr	r2, [sp, #48]
    b804:	2a00      	cmp	r2, #0
    b806:	d002      	beq.n	b80e <.text+0xb80e>
    b808:	2780      	movs	r7, #128
    b80a:	063f      	lsls	r7, r7, #24
    b80c:	19c0      	adds	r0, r0, r7
    b80e:	9a03      	ldr	r2, [sp, #12]
    b810:	6090      	str	r0, [r2, #8]
    b812:	60d1      	str	r1, [r2, #12]
    b814:	e088      	b.n	b928 <.text+0xb928>
    b816:	68b0      	ldr	r0, [r6, #8]
    b818:	68f1      	ldr	r1, [r6, #12]
    b81a:	6834      	ldr	r4, [r6, #0]
    b81c:	6875      	ldr	r5, [r6, #4]
    b81e:	901f      	str	r0, [sp, #124]
    b820:	9120      	str	r1, [sp, #128]
    b822:	9a1f      	ldr	r2, [sp, #124]
    b824:	9b20      	ldr	r3, [sp, #128]
    b826:	1c20      	adds	r0, r4, #0
    b828:	1c29      	adds	r1, r5, #0
    b82a:	f001 fc25 	bl	d078 <____adddf3_from_thumb>
    b82e:	6030      	str	r0, [r6, #0]
    b830:	6071      	str	r1, [r6, #4]
    b832:	1c20      	adds	r0, r4, #0
    b834:	6832      	ldr	r2, [r6, #0]
    b836:	6873      	ldr	r3, [r6, #4]
    b838:	1c29      	adds	r1, r5, #0
    b83a:	f001 fc21 	bl	d080 <____subdf3_from_thumb>
    b83e:	1c02      	adds	r2, r0, #0
    b840:	1c0b      	adds	r3, r1, #0
    b842:	981f      	ldr	r0, [sp, #124]
    b844:	9920      	ldr	r1, [sp, #128]
    b846:	f001 fc17 	bl	d078 <____adddf3_from_thumb>
    b84a:	3f01      	subs	r7, #1
    b84c:	60b0      	str	r0, [r6, #8]
    b84e:	60f1      	str	r1, [r6, #12]
    b850:	3e08      	subs	r6, #8
    b852:	2f00      	cmp	r7, #0
    b854:	dcdf      	bgt.n	b816 <.text+0xb816>
    b856:	990d      	ldr	r1, [sp, #52]
    b858:	ab72      	add	r3, sp, #456
    b85a:	00ca      	lsls	r2, r1, #3
    b85c:	9f06      	ldr	r7, [sp, #24]
    b85e:	189e      	adds	r6, r3, r2
    b860:	e01b      	b.n	b89a <.text+0xb89a>
    b862:	6834      	ldr	r4, [r6, #0]
    b864:	6875      	ldr	r5, [r6, #4]
    b866:	68b2      	ldr	r2, [r6, #8]
    b868:	68f3      	ldr	r3, [r6, #12]
    b86a:	1c20      	adds	r0, r4, #0
    b86c:	1c29      	adds	r1, r5, #0
    b86e:	921d      	str	r2, [sp, #116]
    b870:	931e      	str	r3, [sp, #120]
    b872:	f001 fc01 	bl	d078 <____adddf3_from_thumb>
    b876:	6030      	str	r0, [r6, #0]
    b878:	6071      	str	r1, [r6, #4]
    b87a:	1c20      	adds	r0, r4, #0
    b87c:	6832      	ldr	r2, [r6, #0]
    b87e:	6873      	ldr	r3, [r6, #4]
    b880:	1c29      	adds	r1, r5, #0
    b882:	f001 fbfd 	bl	d080 <____subdf3_from_thumb>
    b886:	1c02      	adds	r2, r0, #0
    b888:	1c0b      	adds	r3, r1, #0
    b88a:	981d      	ldr	r0, [sp, #116]
    b88c:	991e      	ldr	r1, [sp, #120]
    b88e:	f001 fbf3 	bl	d078 <____adddf3_from_thumb>
    b892:	3f01      	subs	r7, #1
    b894:	60b0      	str	r0, [r6, #8]
    b896:	60f1      	str	r1, [r6, #12]
    b898:	3e08      	subs	r6, #8
    b89a:	2f01      	cmp	r7, #1
    b89c:	dce1      	bgt.n	b862 <.text+0xb862>
    b89e:	9b06      	ldr	r3, [sp, #24]
    b8a0:	9c06      	ldr	r4, [sp, #24]
    b8a2:	00da      	lsls	r2, r3, #3
    b8a4:	490e      	ldr	r1, [pc, #56]	(b8e0 <.text+0xb8e0>)
    b8a6:	480d      	ldr	r0, [pc, #52]	(b8dc <.text+0xb8dc>)
    b8a8:	ab72      	add	r3, sp, #456
    b8aa:	189d      	adds	r5, r3, r2
    b8ac:	e005      	b.n	b8ba <.text+0xb8ba>
    b8ae:	682a      	ldr	r2, [r5, #0]
    b8b0:	686b      	ldr	r3, [r5, #4]
    b8b2:	f001 fbe1 	bl	d078 <____adddf3_from_thumb>
    b8b6:	3c01      	subs	r4, #1
    b8b8:	3d08      	subs	r5, #8
    b8ba:	2c01      	cmp	r4, #1
    b8bc:	dcf7      	bgt.n	b8ae <.text+0xb8ae>
    b8be:	9c0c      	ldr	r4, [sp, #48]
    b8c0:	2c00      	cmp	r4, #0
    b8c2:	d121      	bne.n	b908 <.text+0xb908>
    b8c4:	9b72      	ldr	r3, [sp, #456]
    b8c6:	9c73      	ldr	r4, [sp, #460]
    b8c8:	9f03      	ldr	r7, [sp, #12]
    b8ca:	603b      	str	r3, [r7, #0]
    b8cc:	607c      	str	r4, [r7, #4]
    b8ce:	9b74      	ldr	r3, [sp, #464]
    b8d0:	9c75      	ldr	r4, [sp, #468]
    b8d2:	6138      	str	r0, [r7, #16]
    b8d4:	6179      	str	r1, [r7, #20]
    b8d6:	60bb      	str	r3, [r7, #8]
    b8d8:	60fc      	str	r4, [r7, #12]
    b8da:	e025      	b.n	b928 <.text+0xb928>
	...
    b8e4:	0000      	lsls	r0, r0, #0
    b8e6:	4170      	adcs	r0, r6
    b8e8:	0000      	lsls	r0, r0, #0
    b8ea:	0000      	lsls	r0, r0, #0
    b8ec:	0000      	lsls	r0, r0, #0
    b8ee:	3e70      	subs	r6, #112
    b8f0:	0000      	lsls	r0, r0, #0
    b8f2:	0000      	lsls	r0, r0, #0
    b8f4:	0000      	lsls	r0, r0, #0
    b8f6:	c170      	stmia	r1!, {r4, r5, r6}
    b8f8:	0000      	lsls	r0, r0, #0
    b8fa:	0000      	lsls	r0, r0, #0
    b8fc:	0000      	lsls	r0, r0, #0
    b8fe:	3ff0      	subs	r7, #240
    b900:	0000      	lsls	r0, r0, #0
    b902:	0000      	lsls	r0, r0, #0
    b904:	d6ec      	bvs.n	b8e0 <.text+0xb8e0>
    b906:	0000      	lsls	r0, r0, #0
    b908:	9b72      	ldr	r3, [sp, #456]
    b90a:	2480      	movs	r4, #128
    b90c:	9f03      	ldr	r7, [sp, #12]
    b90e:	0624      	lsls	r4, r4, #24
    b910:	191b      	adds	r3, r3, r4
    b912:	603b      	str	r3, [r7, #0]
    b914:	9b73      	ldr	r3, [sp, #460]
    b916:	607b      	str	r3, [r7, #4]
    b918:	9b74      	ldr	r3, [sp, #464]
    b91a:	191b      	adds	r3, r3, r4
    b91c:	60bb      	str	r3, [r7, #8]
    b91e:	9b75      	ldr	r3, [sp, #468]
    b920:	60fb      	str	r3, [r7, #12]
    b922:	1903      	adds	r3, r0, r4
    b924:	613b      	str	r3, [r7, #16]
    b926:	6179      	str	r1, [r7, #20]
    b928:	9809      	ldr	r0, [sp, #36]
    b92a:	2307      	movs	r3, #7
    b92c:	4018      	ands	r0, r3
    b92e:	23ae      	movs	r3, #174
    b930:	009b      	lsls	r3, r3, #2
    b932:	449d      	add	sp, r3
    b934:	bcf0      	pop	{r4, r5, r6, r7}
    b936:	bc02      	pop	{r1}
    b938:	4708      	bx	r1
    b93a:	46c0      	nop			(mov r8, r8)

0000b93c <__kernel_sin>:
    b93c:	b5f0      	push	{r4, r5, r6, r7, lr}
    b93e:	b088      	sub	sp, #32
    b940:	9200      	str	r2, [sp, #0]
    b942:	9301      	str	r3, [sp, #4]
    b944:	4a4b      	ldr	r2, [pc, #300]	(ba74 <.text+0xba74>)
    b946:	4b4c      	ldr	r3, [pc, #304]	(ba78 <.text+0xba78>)
    b948:	4002      	ands	r2, r0
    b94a:	9002      	str	r0, [sp, #8]
    b94c:	9103      	str	r1, [sp, #12]
    b94e:	429a      	cmp	r2, r3
    b950:	dc04      	bgt.n	b95c <__kernel_sin+0x20>
    b952:	f001 fb9d 	bl	d090 <____fixdfsi_from_thumb>
    b956:	2800      	cmp	r0, #0
    b958:	d100      	bne.n	b95c <__kernel_sin+0x20>
    b95a:	e085      	b.n	ba68 <__kernel_sin+0x12c>
    b95c:	9802      	ldr	r0, [sp, #8]
    b95e:	9903      	ldr	r1, [sp, #12]
    b960:	1c02      	adds	r2, r0, #0
    b962:	1c0b      	adds	r3, r1, #0
    b964:	f001 fb90 	bl	d088 <____muldf3_from_thumb>
    b968:	9a02      	ldr	r2, [sp, #8]
    b96a:	9b03      	ldr	r3, [sp, #12]
    b96c:	1c06      	adds	r6, r0, #0
    b96e:	1c0f      	adds	r7, r1, #0
    b970:	f001 fb8a 	bl	d088 <____muldf3_from_thumb>
    b974:	4a41      	ldr	r2, [pc, #260]	(ba7c <.text+0xba7c>)
    b976:	4b42      	ldr	r3, [pc, #264]	(ba80 <.text+0xba80>)
    b978:	9006      	str	r0, [sp, #24]
    b97a:	9107      	str	r1, [sp, #28]
    b97c:	1c30      	adds	r0, r6, #0
    b97e:	1c39      	adds	r1, r7, #0
    b980:	f001 fb82 	bl	d088 <____muldf3_from_thumb>
    b984:	4a3f      	ldr	r2, [pc, #252]	(ba84 <.text+0xba84>)
    b986:	4b40      	ldr	r3, [pc, #256]	(ba88 <.text+0xba88>)
    b988:	f001 fb7a 	bl	d080 <____subdf3_from_thumb>
    b98c:	1c02      	adds	r2, r0, #0
    b98e:	1c0b      	adds	r3, r1, #0
    b990:	1c30      	adds	r0, r6, #0
    b992:	1c39      	adds	r1, r7, #0
    b994:	f001 fb78 	bl	d088 <____muldf3_from_thumb>
    b998:	4a3c      	ldr	r2, [pc, #240]	(ba8c <.text+0xba8c>)
    b99a:	4b3d      	ldr	r3, [pc, #244]	(ba90 <.text+0xba90>)
    b99c:	f001 fb6c 	bl	d078 <____adddf3_from_thumb>
    b9a0:	1c02      	adds	r2, r0, #0
    b9a2:	1c0b      	adds	r3, r1, #0
    b9a4:	1c30      	adds	r0, r6, #0
    b9a6:	1c39      	adds	r1, r7, #0
    b9a8:	f001 fb6e 	bl	d088 <____muldf3_from_thumb>
    b9ac:	4a39      	ldr	r2, [pc, #228]	(ba94 <.text+0xba94>)
    b9ae:	4b3a      	ldr	r3, [pc, #232]	(ba98 <.text+0xba98>)
    b9b0:	f001 fb66 	bl	d080 <____subdf3_from_thumb>
    b9b4:	1c02      	adds	r2, r0, #0
    b9b6:	1c0b      	adds	r3, r1, #0
    b9b8:	1c30      	adds	r0, r6, #0
    b9ba:	1c39      	adds	r1, r7, #0
    b9bc:	f001 fb64 	bl	d088 <____muldf3_from_thumb>
    b9c0:	4a36      	ldr	r2, [pc, #216]	(ba9c <.text+0xba9c>)
    b9c2:	4b37      	ldr	r3, [pc, #220]	(baa0 <.text+0xbaa0>)
    b9c4:	f001 fb58 	bl	d078 <____adddf3_from_thumb>
    b9c8:	9b0d      	ldr	r3, [sp, #52]
    b9ca:	9004      	str	r0, [sp, #16]
    b9cc:	9105      	str	r1, [sp, #20]
    b9ce:	2b00      	cmp	r3, #0
    b9d0:	d116      	bne.n	ba00 <__kernel_sin+0xc4>
    b9d2:	9a04      	ldr	r2, [sp, #16]
    b9d4:	9b05      	ldr	r3, [sp, #20]
    b9d6:	1c30      	adds	r0, r6, #0
    b9d8:	1c39      	adds	r1, r7, #0
    b9da:	f001 fb55 	bl	d088 <____muldf3_from_thumb>
    b9de:	4a31      	ldr	r2, [pc, #196]	(baa4 <.text+0xbaa4>)
    b9e0:	4b31      	ldr	r3, [pc, #196]	(baa8 <.text+0xbaa8>)
    b9e2:	f001 fb4d 	bl	d080 <____subdf3_from_thumb>
    b9e6:	1c02      	adds	r2, r0, #0
    b9e8:	1c0b      	adds	r3, r1, #0
    b9ea:	9806      	ldr	r0, [sp, #24]
    b9ec:	9907      	ldr	r1, [sp, #28]
    b9ee:	f001 fb4b 	bl	d088 <____muldf3_from_thumb>
    b9f2:	1c02      	adds	r2, r0, #0
    b9f4:	1c0b      	adds	r3, r1, #0
    b9f6:	9802      	ldr	r0, [sp, #8]
    b9f8:	9903      	ldr	r1, [sp, #12]
    b9fa:	f001 fb3d 	bl	d078 <____adddf3_from_thumb>
    b9fe:	e031      	b.n	ba64 <__kernel_sin+0x128>
    ba00:	4a2a      	ldr	r2, [pc, #168]	(baac <.text+0xbaac>)
    ba02:	4b2b      	ldr	r3, [pc, #172]	(bab0 <.text+0xbab0>)
    ba04:	9800      	ldr	r0, [sp, #0]
    ba06:	9901      	ldr	r1, [sp, #4]
    ba08:	f001 fb3e 	bl	d088 <____muldf3_from_thumb>
    ba0c:	9a04      	ldr	r2, [sp, #16]
    ba0e:	9b05      	ldr	r3, [sp, #20]
    ba10:	1c04      	adds	r4, r0, #0
    ba12:	1c0d      	adds	r5, r1, #0
    ba14:	9806      	ldr	r0, [sp, #24]
    ba16:	9907      	ldr	r1, [sp, #28]
    ba18:	f001 fb36 	bl	d088 <____muldf3_from_thumb>
    ba1c:	1c02      	adds	r2, r0, #0
    ba1e:	1c0b      	adds	r3, r1, #0
    ba20:	1c20      	adds	r0, r4, #0
    ba22:	1c29      	adds	r1, r5, #0
    ba24:	f001 fb2c 	bl	d080 <____subdf3_from_thumb>
    ba28:	1c02      	adds	r2, r0, #0
    ba2a:	1c0b      	adds	r3, r1, #0
    ba2c:	1c30      	adds	r0, r6, #0
    ba2e:	1c39      	adds	r1, r7, #0
    ba30:	f001 fb2a 	bl	d088 <____muldf3_from_thumb>
    ba34:	9a00      	ldr	r2, [sp, #0]
    ba36:	9b01      	ldr	r3, [sp, #4]
    ba38:	f001 fb22 	bl	d080 <____subdf3_from_thumb>
    ba3c:	4a19      	ldr	r2, [pc, #100]	(baa4 <.text+0xbaa4>)
    ba3e:	4b1a      	ldr	r3, [pc, #104]	(baa8 <.text+0xbaa8>)
    ba40:	1c04      	adds	r4, r0, #0
    ba42:	1c0d      	adds	r5, r1, #0
    ba44:	9806      	ldr	r0, [sp, #24]
    ba46:	9907      	ldr	r1, [sp, #28]
    ba48:	f001 fb1e 	bl	d088 <____muldf3_from_thumb>
    ba4c:	1c02      	adds	r2, r0, #0
    ba4e:	1c0b      	adds	r3, r1, #0
    ba50:	1c20      	adds	r0, r4, #0
    ba52:	1c29      	adds	r1, r5, #0
    ba54:	f001 fb10 	bl	d078 <____adddf3_from_thumb>
    ba58:	1c02      	adds	r2, r0, #0
    ba5a:	1c0b      	adds	r3, r1, #0
    ba5c:	9802      	ldr	r0, [sp, #8]
    ba5e:	9903      	ldr	r1, [sp, #12]
    ba60:	f001 fb0e 	bl	d080 <____subdf3_from_thumb>
    ba64:	9002      	str	r0, [sp, #8]
    ba66:	9103      	str	r1, [sp, #12]
    ba68:	9802      	ldr	r0, [sp, #8]
    ba6a:	9903      	ldr	r1, [sp, #12]
    ba6c:	b008      	add	sp, #32
    ba6e:	bcf0      	pop	{r4, r5, r6, r7}
    ba70:	bc04      	pop	{r2}
    ba72:	4710      	bx	r2
    ba74:	ffff 7fff 	undefined
    ba78:	ffff 3e3f 	vcvt.f32.u32	d19, d31, #1
    ba7c:	d93a      	bls.n	baf4 <floor+0x28>
    ba7e:	3de5      	subs	r5, #229
    ba80:	d57c      	bpl.n	bb7c <floor+0xb0>
    ba82:	5acf      	ldrh	r7, [r1, r3]
    ba84:	e5e6      	b.n	b654 <.text+0xb654>
    ba86:	3e5a      	subs	r6, #90
    ba88:	9ceb      	ldr	r4, [sp, #940]
    ba8a:	8a2b      	ldrh	r3, [r5, #16]
    ba8c:	1de3      	adds	r3, r4, #7
    ba8e:	3ec7      	subs	r6, #199
    ba90:	fe7d 57b1 	mrc2	7, 3, r5, cr13, cr1, {5}
    ba94:	01a0      	lsls	r0, r4, #6
    ba96:	3f2a      	subs	r7, #42
    ba98:	61d5      	str	r5, [r2, #28]
    ba9a:	19c1      	adds	r1, r0, r7
    ba9c:	1111      	asrs	r1, r2, #4
    ba9e:	3f81      	subs	r7, #129
    baa0:	f8a6 1110 	strh.w	r1, [r6, #272]
    baa4:	5555      	strb	r5, [r2, r5]
    baa6:	3fc5      	subs	r7, #197
    baa8:	5549      	strb	r1, [r1, r5]
    baaa:	5555      	strb	r5, [r2, r5]
    baac:	0000      	lsls	r0, r0, #0
    baae:	3fe0      	subs	r7, #224
    bab0:	0000      	lsls	r0, r0, #0
	...

0000bab4 <fabs>:
    bab4:	b510      	push	{r4, lr}
    bab6:	1c03      	adds	r3, r0, #0
    bab8:	4803      	ldr	r0, [pc, #12]	(bac8 <.text+0xbac8>)
    baba:	1c0a      	adds	r2, r1, #0
    babc:	4003      	ands	r3, r0
    babe:	1c18      	adds	r0, r3, #0
    bac0:	1c11      	adds	r1, r2, #0
    bac2:	bc10      	pop	{r4}
    bac4:	bc04      	pop	{r2}
    bac6:	4710      	bx	r2
    bac8:	ffff 7fff 	undefined

0000bacc <floor>:
    bacc:	b5f0      	push	{r4, r5, r6, r7, lr}
    bace:	2200      	movs	r2, #0
    bad0:	2300      	movs	r3, #0
    bad2:	b085      	sub	sp, #20
    bad4:	9200      	str	r2, [sp, #0]
    bad6:	9301      	str	r3, [sp, #4]
    bad8:	0043      	lsls	r3, r0, #1
    bada:	0d5a      	lsrs	r2, r3, #21
    badc:	4b3d      	ldr	r3, [pc, #244]	(bbd4 <.text+0xbbd4>)
    bade:	18d4      	adds	r4, r2, r3
    bae0:	1c05      	adds	r5, r0, #0
    bae2:	1c0e      	adds	r6, r1, #0
    bae4:	1c07      	adds	r7, r0, #0
    bae6:	9102      	str	r1, [sp, #8]
    bae8:	2c13      	cmp	r4, #19
    baea:	dc34      	bgt.n	bb56 <floor+0x8a>
    baec:	2c00      	cmp	r4, #0
    baee:	da16      	bge.n	bb1e <floor+0x52>
    baf0:	4a39      	ldr	r2, [pc, #228]	(bbd8 <.text+0xbbd8>)
    baf2:	4b3a      	ldr	r3, [pc, #232]	(bbdc <.text+0xbbdc>)
    baf4:	f001 fac0 	bl	d078 <____adddf3_from_thumb>
    baf8:	4a39      	ldr	r2, [pc, #228]	(bbe0 <.text+0xbbe0>)
    bafa:	4b3a      	ldr	r3, [pc, #232]	(bbe4 <.text+0xbbe4>)
    bafc:	f001 fad0 	bl	d0a0 <____gtdf2_from_thumb>
    bb00:	2800      	cmp	r0, #0
    bb02:	dd5c      	ble.n	bbbe <floor+0xf2>
    bb04:	2d00      	cmp	r5, #0
    bb06:	db02      	blt.n	bb0e <floor+0x42>
    bb08:	2700      	movs	r7, #0
    bb0a:	9702      	str	r7, [sp, #8]
    bb0c:	e057      	b.n	bbbe <floor+0xf2>
    bb0e:	4b36      	ldr	r3, [pc, #216]	(bbe8 <.text+0xbbe8>)
    bb10:	9c02      	ldr	r4, [sp, #8]
    bb12:	402b      	ands	r3, r5
    bb14:	431c      	orrs	r4, r3
    bb16:	d052      	beq.n	bbbe <floor+0xf2>
    bb18:	4f34      	ldr	r7, [pc, #208]	(bbec <.text+0xbbec>)
    bb1a:	2200      	movs	r2, #0
    bb1c:	e04e      	b.n	bbbc <floor+0xf0>
    bb1e:	4b34      	ldr	r3, [pc, #208]	(bbf0 <.text+0xbbf0>)
    bb20:	9a02      	ldr	r2, [sp, #8]
    bb22:	4123      	asrs	r3, r4
    bb24:	9304      	str	r3, [sp, #16]
    bb26:	4003      	ands	r3, r0
    bb28:	431a      	orrs	r2, r3
    bb2a:	d04d      	beq.n	bbc8 <floor+0xfc>
    bb2c:	4a2a      	ldr	r2, [pc, #168]	(bbd8 <.text+0xbbd8>)
    bb2e:	4b2b      	ldr	r3, [pc, #172]	(bbdc <.text+0xbbdc>)
    bb30:	f001 faa2 	bl	d078 <____adddf3_from_thumb>
    bb34:	4a2a      	ldr	r2, [pc, #168]	(bbe0 <.text+0xbbe0>)
    bb36:	4b2b      	ldr	r3, [pc, #172]	(bbe4 <.text+0xbbe4>)
    bb38:	f001 fab2 	bl	d0a0 <____gtdf2_from_thumb>
    bb3c:	2800      	cmp	r0, #0
    bb3e:	dd3e      	ble.n	bbbe <floor+0xf2>
    bb40:	2d00      	cmp	r5, #0
    bb42:	da03      	bge.n	bb4c <floor+0x80>
    bb44:	2380      	movs	r3, #128
    bb46:	035b      	lsls	r3, r3, #13
    bb48:	4123      	asrs	r3, r4
    bb4a:	18ef      	adds	r7, r5, r3
    bb4c:	9b04      	ldr	r3, [sp, #16]
    bb4e:	2400      	movs	r4, #0
    bb50:	439f      	bics	r7, r3
    bb52:	9402      	str	r4, [sp, #8]
    bb54:	e033      	b.n	bbbe <floor+0xf2>
    bb56:	2c33      	cmp	r4, #51
    bb58:	dd0a      	ble.n	bb70 <floor+0xa4>
    bb5a:	2380      	movs	r3, #128
    bb5c:	00db      	lsls	r3, r3, #3
    bb5e:	429c      	cmp	r4, r3
    bb60:	d132      	bne.n	bbc8 <floor+0xfc>
    bb62:	1c2a      	adds	r2, r5, #0
    bb64:	1c33      	adds	r3, r6, #0
    bb66:	f001 fa87 	bl	d078 <____adddf3_from_thumb>
    bb6a:	1c05      	adds	r5, r0, #0
    bb6c:	1c0e      	adds	r6, r1, #0
    bb6e:	e02b      	b.n	bbc8 <floor+0xfc>
    bb70:	4b20      	ldr	r3, [pc, #128]	(bbf4 <.text+0xbbf4>)
    bb72:	18d2      	adds	r2, r2, r3
    bb74:	2301      	movs	r3, #1
    bb76:	425b      	negs	r3, r3
    bb78:	40d3      	lsrs	r3, r2
    bb7a:	9a02      	ldr	r2, [sp, #8]
    bb7c:	9303      	str	r3, [sp, #12]
    bb7e:	421a      	tst	r2, r3
    bb80:	d022      	beq.n	bbc8 <floor+0xfc>
    bb82:	4a15      	ldr	r2, [pc, #84]	(bbd8 <.text+0xbbd8>)
    bb84:	4b15      	ldr	r3, [pc, #84]	(bbdc <.text+0xbbdc>)
    bb86:	f001 fa77 	bl	d078 <____adddf3_from_thumb>
    bb8a:	4a15      	ldr	r2, [pc, #84]	(bbe0 <.text+0xbbe0>)
    bb8c:	4b15      	ldr	r3, [pc, #84]	(bbe4 <.text+0xbbe4>)
    bb8e:	f001 fa87 	bl	d0a0 <____gtdf2_from_thumb>
    bb92:	2800      	cmp	r0, #0
    bb94:	dd13      	ble.n	bbbe <floor+0xf2>
    bb96:	2d00      	cmp	r5, #0
    bb98:	da0d      	bge.n	bbb6 <floor+0xea>
    bb9a:	2c14      	cmp	r4, #20
    bb9c:	d101      	bne.n	bba2 <floor+0xd6>
    bb9e:	3701      	adds	r7, #1
    bba0:	e009      	b.n	bbb6 <floor+0xea>
    bba2:	2234      	movs	r2, #52
    bba4:	1b12      	subs	r2, r2, r4
    bba6:	2301      	movs	r3, #1
    bba8:	9c02      	ldr	r4, [sp, #8]
    bbaa:	4093      	lsls	r3, r2
    bbac:	18e3      	adds	r3, r4, r3
    bbae:	42a3      	cmp	r3, r4
    bbb0:	d200      	bcs.n	bbb4 <floor+0xe8>
    bbb2:	3701      	adds	r7, #1
    bbb4:	9302      	str	r3, [sp, #8]
    bbb6:	9a02      	ldr	r2, [sp, #8]
    bbb8:	9b03      	ldr	r3, [sp, #12]
    bbba:	439a      	bics	r2, r3
    bbbc:	9202      	str	r2, [sp, #8]
    bbbe:	9c02      	ldr	r4, [sp, #8]
    bbc0:	9700      	str	r7, [sp, #0]
    bbc2:	9401      	str	r4, [sp, #4]
    bbc4:	9d00      	ldr	r5, [sp, #0]
    bbc6:	9e01      	ldr	r6, [sp, #4]
    bbc8:	1c28      	adds	r0, r5, #0
    bbca:	1c31      	adds	r1, r6, #0
    bbcc:	b005      	add	sp, #20
    bbce:	bcf0      	pop	{r4, r5, r6, r7}
    bbd0:	bc04      	pop	{r2}
    bbd2:	4710      	bx	r2
    bbd4:	fc01 ffff 	stc2	15, cr15, [r1], {255}
    bbd8:	e43c      	b.n	b454 <__kernel_rem_pio2+0x25c>
    bbda:	7e37      	ldrb	r7, [r6, #24]
    bbdc:	759c      	strb	r4, [r3, #22]
    bbde:	8800      	ldrh	r0, [r0, #0]
	...
    bbe8:	ffff 7fff 	undefined
    bbec:	0000      	lsls	r0, r0, #0
    bbee:	bff0      	nop	{15}
    bbf0:	ffff 000f 	vaddl.u<illegal width 64>	q8, d15, d15
    bbf4:	fbed ffff 	undefined

0000bbf8 <scalbn>:
    bbf8:	b5f0      	push	{r4, r5, r6, r7, lr}
    bbfa:	4f34      	ldr	r7, [pc, #208]	(bccc <.text+0xbccc>)
    bbfc:	1c03      	adds	r3, r0, #0
    bbfe:	b081      	sub	sp, #4
    bc00:	403b      	ands	r3, r7
    bc02:	9200      	str	r2, [sp, #0]
    bc04:	151a      	asrs	r2, r3, #20
    bc06:	1c05      	adds	r5, r0, #0
    bc08:	1c0e      	adds	r6, r1, #0
    bc0a:	2a00      	cmp	r2, #0
    bc0c:	d117      	bne.n	bc3e <scalbn+0x46>
    bc0e:	4b30      	ldr	r3, [pc, #192]	(bcd0 <.text+0xbcd0>)
    bc10:	4003      	ands	r3, r0
    bc12:	4319      	orrs	r1, r3
    bc14:	d054      	beq.n	bcc0 <scalbn+0xc8>
    bc16:	4a2f      	ldr	r2, [pc, #188]	(bcd4 <.text+0xbcd4>)
    bc18:	4b2f      	ldr	r3, [pc, #188]	(bcd8 <.text+0xbcd8>)
    bc1a:	1c28      	adds	r0, r5, #0
    bc1c:	1c31      	adds	r1, r6, #0
    bc1e:	f001 fa33 	bl	d088 <____muldf3_from_thumb>
    bc22:	4b2e      	ldr	r3, [pc, #184]	(bcdc <.text+0xbcdc>)
    bc24:	9a00      	ldr	r2, [sp, #0]
    bc26:	1c05      	adds	r5, r0, #0
    bc28:	1c0e      	adds	r6, r1, #0
    bc2a:	429a      	cmp	r2, r3
    bc2c:	db05      	blt.n	bc3a <scalbn+0x42>
    bc2e:	1c03      	adds	r3, r0, #0
    bc30:	403b      	ands	r3, r7
    bc32:	151b      	asrs	r3, r3, #20
    bc34:	1c1a      	adds	r2, r3, #0
    bc36:	3a36      	subs	r2, #54
    bc38:	e001      	b.n	bc3e <scalbn+0x46>
    bc3a:	1c28      	adds	r0, r5, #0
    bc3c:	e02e      	b.n	bc9c <scalbn+0xa4>
    bc3e:	4b28      	ldr	r3, [pc, #160]	(bce0 <.text+0xbce0>)
    bc40:	429a      	cmp	r2, r3
    bc42:	d106      	bne.n	bc52 <scalbn+0x5a>
    bc44:	1c28      	adds	r0, r5, #0
    bc46:	1c31      	adds	r1, r6, #0
    bc48:	1c2a      	adds	r2, r5, #0
    bc4a:	1c33      	adds	r3, r6, #0
    bc4c:	f001 fa14 	bl	d078 <____adddf3_from_thumb>
    bc50:	e034      	b.n	bcbc <scalbn+0xc4>
    bc52:	9b00      	ldr	r3, [sp, #0]
    bc54:	18d7      	adds	r7, r2, r3
    bc56:	4b23      	ldr	r3, [pc, #140]	(bce4 <.text+0xbce4>)
    bc58:	429f      	cmp	r7, r3
    bc5a:	dc10      	bgt.n	bc7e <scalbn+0x86>
    bc5c:	2f00      	cmp	r7, #0
    bc5e:	dd07      	ble.n	bc70 <scalbn+0x78>
    bc60:	4a21      	ldr	r2, [pc, #132]	(bce8 <.text+0xbce8>)
    bc62:	1c01      	adds	r1, r0, #0
    bc64:	4011      	ands	r1, r2
    bc66:	1c0b      	adds	r3, r1, #0
    bc68:	053a      	lsls	r2, r7, #20
    bc6a:	4313      	orrs	r3, r2
    bc6c:	1c1d      	adds	r5, r3, #0
    bc6e:	e027      	b.n	bcc0 <scalbn+0xc8>
    bc70:	1c3a      	adds	r2, r7, #0
    bc72:	3236      	adds	r2, #54
    bc74:	dc15      	bgt.n	bca2 <scalbn+0xaa>
    bc76:	4b1d      	ldr	r3, [pc, #116]	(bcec <.text+0xbcec>)
    bc78:	9a00      	ldr	r2, [sp, #0]
    bc7a:	429a      	cmp	r2, r3
    bc7c:	dd08      	ble.n	bc90 <scalbn+0x98>
    bc7e:	1c2a      	adds	r2, r5, #0
    bc80:	1c33      	adds	r3, r6, #0
    bc82:	481b      	ldr	r0, [pc, #108]	(bcf0 <.text+0xbcf0>)
    bc84:	491b      	ldr	r1, [pc, #108]	(bcf4 <.text+0xbcf4>)
    bc86:	f000 f83f 	bl	bd08 <copysign>
    bc8a:	4a19      	ldr	r2, [pc, #100]	(bcf0 <.text+0xbcf0>)
    bc8c:	4b19      	ldr	r3, [pc, #100]	(bcf4 <.text+0xbcf4>)
    bc8e:	e013      	b.n	bcb8 <scalbn+0xc0>
    bc90:	4819      	ldr	r0, [pc, #100]	(bcf8 <.text+0xbcf8>)
    bc92:	491a      	ldr	r1, [pc, #104]	(bcfc <.text+0xbcfc>)
    bc94:	1c2a      	adds	r2, r5, #0
    bc96:	1c33      	adds	r3, r6, #0
    bc98:	f000 f836 	bl	bd08 <copysign>
    bc9c:	4a16      	ldr	r2, [pc, #88]	(bcf8 <.text+0xbcf8>)
    bc9e:	4b17      	ldr	r3, [pc, #92]	(bcfc <.text+0xbcfc>)
    bca0:	e00a      	b.n	bcb8 <scalbn+0xc0>
    bca2:	4b11      	ldr	r3, [pc, #68]	(bce8 <.text+0xbce8>)
    bca4:	4018      	ands	r0, r3
    bca6:	1c3b      	adds	r3, r7, #0
    bca8:	3336      	adds	r3, #54
    bcaa:	051b      	lsls	r3, r3, #20
    bcac:	1c01      	adds	r1, r0, #0
    bcae:	4319      	orrs	r1, r3
    bcb0:	4a13      	ldr	r2, [pc, #76]	(bd00 <.text+0xbd00>)
    bcb2:	4b14      	ldr	r3, [pc, #80]	(bd04 <.text+0xbd04>)
    bcb4:	1c08      	adds	r0, r1, #0
    bcb6:	1c31      	adds	r1, r6, #0
    bcb8:	f001 f9e6 	bl	d088 <____muldf3_from_thumb>
    bcbc:	1c05      	adds	r5, r0, #0
    bcbe:	1c0e      	adds	r6, r1, #0
    bcc0:	1c28      	adds	r0, r5, #0
    bcc2:	1c31      	adds	r1, r6, #0
    bcc4:	b001      	add	sp, #4
    bcc6:	bcf0      	pop	{r4, r5, r6, r7}
    bcc8:	bc04      	pop	{r2}
    bcca:	4710      	bx	r2
    bccc:	0000      	lsls	r0, r0, #0
    bcce:	7ff0      	ldrb	r0, [r6, #31]
    bcd0:	ffff 7fff 	undefined
    bcd4:	0000      	lsls	r0, r0, #0
    bcd6:	4350      	muls	r0, r2
    bcd8:	0000      	lsls	r0, r0, #0
    bcda:	0000      	lsls	r0, r0, #0
    bcdc:	3cb0      	subs	r4, #176
    bcde:	ffff 07ff 	vqshl.u64	q8, <illegal reg q15.5>, #63
    bce2:	0000      	lsls	r0, r0, #0
    bce4:	07fe      	lsls	r6, r7, #31
    bce6:	0000      	lsls	r0, r0, #0
    bce8:	ffff 800f 	vaddl.u<illegal width 64>	q12, d15, d15
    bcec:	c350      	stmia	r3!, {r4, r6}
    bcee:	0000      	lsls	r0, r0, #0
    bcf0:	e43c      	b.n	b56c <.text+0xb56c>
    bcf2:	7e37      	ldrb	r7, [r6, #24]
    bcf4:	759c      	strb	r4, [r3, #22]
    bcf6:	8800      	ldrh	r0, [r0, #0]
    bcf8:	6e1f      	ldr	r7, [r3, #96]
    bcfa:	01a5      	lsls	r5, r4, #6
    bcfc:	f359 c2f8 	blx	f652f0 <__ctors_end__+0xf57974>
    bd00:	0000      	lsls	r0, r0, #0
    bd02:	3c90      	subs	r4, #144
    bd04:	0000      	lsls	r0, r0, #0
	...

0000bd08 <copysign>:
    bd08:	b530      	push	{r4, r5, lr}
    bd0a:	4b07      	ldr	r3, [pc, #28]	(bd28 <.text+0xbd28>)
    bd0c:	1c04      	adds	r4, r0, #0
    bd0e:	401c      	ands	r4, r3
    bd10:	2380      	movs	r3, #128
    bd12:	1c15      	adds	r5, r2, #0
    bd14:	061b      	lsls	r3, r3, #24
    bd16:	402b      	ands	r3, r5
    bd18:	1c0a      	adds	r2, r1, #0
    bd1a:	431c      	orrs	r4, r3
    bd1c:	1c20      	adds	r0, r4, #0
    bd1e:	1c11      	adds	r1, r2, #0
    bd20:	bc30      	pop	{r4, r5}
    bd22:	bc04      	pop	{r2}
    bd24:	4710      	bx	r2
    bd26:	0000      	lsls	r0, r0, #0
    bd28:	ffff 7fff 	undefined

0000bd2c <__aeabi_uidiv>:
    bd2c:	2900      	cmp	r1, #0
    bd2e:	d034      	beq.n	bd9a <__aeabi_uidiv+0x6e>
    bd30:	2301      	movs	r3, #1
    bd32:	2200      	movs	r2, #0
    bd34:	b410      	push	{r4}
    bd36:	4288      	cmp	r0, r1
    bd38:	d32c      	bcc.n	bd94 <__aeabi_uidiv+0x68>
    bd3a:	2401      	movs	r4, #1
    bd3c:	0724      	lsls	r4, r4, #28
    bd3e:	42a1      	cmp	r1, r4
    bd40:	d204      	bcs.n	bd4c <__aeabi_uidiv+0x20>
    bd42:	4281      	cmp	r1, r0
    bd44:	d202      	bcs.n	bd4c <__aeabi_uidiv+0x20>
    bd46:	0109      	lsls	r1, r1, #4
    bd48:	011b      	lsls	r3, r3, #4
    bd4a:	e7f8      	b.n	bd3e <__aeabi_uidiv+0x12>
    bd4c:	00e4      	lsls	r4, r4, #3
    bd4e:	42a1      	cmp	r1, r4
    bd50:	d204      	bcs.n	bd5c <__aeabi_uidiv+0x30>
    bd52:	4281      	cmp	r1, r0
    bd54:	d202      	bcs.n	bd5c <__aeabi_uidiv+0x30>
    bd56:	0049      	lsls	r1, r1, #1
    bd58:	005b      	lsls	r3, r3, #1
    bd5a:	e7f8      	b.n	bd4e <__aeabi_uidiv+0x22>
    bd5c:	4288      	cmp	r0, r1
    bd5e:	d301      	bcc.n	bd64 <__aeabi_uidiv+0x38>
    bd60:	1a40      	subs	r0, r0, r1
    bd62:	431a      	orrs	r2, r3
    bd64:	084c      	lsrs	r4, r1, #1
    bd66:	42a0      	cmp	r0, r4
    bd68:	d302      	bcc.n	bd70 <__aeabi_uidiv+0x44>
    bd6a:	1b00      	subs	r0, r0, r4
    bd6c:	085c      	lsrs	r4, r3, #1
    bd6e:	4322      	orrs	r2, r4
    bd70:	088c      	lsrs	r4, r1, #2
    bd72:	42a0      	cmp	r0, r4
    bd74:	d302      	bcc.n	bd7c <__aeabi_uidiv+0x50>
    bd76:	1b00      	subs	r0, r0, r4
    bd78:	089c      	lsrs	r4, r3, #2
    bd7a:	4322      	orrs	r2, r4
    bd7c:	08cc      	lsrs	r4, r1, #3
    bd7e:	42a0      	cmp	r0, r4
    bd80:	d302      	bcc.n	bd88 <__aeabi_uidiv+0x5c>
    bd82:	1b00      	subs	r0, r0, r4
    bd84:	08dc      	lsrs	r4, r3, #3
    bd86:	4322      	orrs	r2, r4
    bd88:	2800      	cmp	r0, #0
    bd8a:	d003      	beq.n	bd94 <__aeabi_uidiv+0x68>
    bd8c:	091b      	lsrs	r3, r3, #4
    bd8e:	d001      	beq.n	bd94 <__aeabi_uidiv+0x68>
    bd90:	0909      	lsrs	r1, r1, #4
    bd92:	e7e3      	b.n	bd5c <__aeabi_uidiv+0x30>
    bd94:	1c10      	adds	r0, r2, #0
    bd96:	bc10      	pop	{r4}
    bd98:	4770      	bx	lr
    bd9a:	b502      	push	{r1, lr}
    bd9c:	f000 f92e 	bl	bffc <__aeabi_idiv0>
    bda0:	2000      	movs	r0, #0
    bda2:	bc06      	pop	{r1, r2}
    bda4:	4710      	bx	r2
	...

0000bda8 <__aeabi_uidivmod>:
    bda8:	b503      	push	{r0, r1, lr}
    bdaa:	f7ff ffbf 	bl	bd2c <__aeabi_uidiv>
    bdae:	bc0e      	pop	{r1, r2, r3}
    bdb0:	4342      	muls	r2, r0
    bdb2:	1a89      	subs	r1, r1, r2
    bdb4:	4718      	bx	r3
    bdb6:	46c0      	nop			(mov r8, r8)

0000bdb8 <__aeabi_idiv>:
    bdb8:	2900      	cmp	r1, #0
    bdba:	d041      	beq.n	be40 <__aeabi_idiv+0x88>
    bdbc:	b410      	push	{r4}
    bdbe:	1c04      	adds	r4, r0, #0
    bdc0:	404c      	eors	r4, r1
    bdc2:	46a4      	mov	ip, r4
    bdc4:	2301      	movs	r3, #1
    bdc6:	2200      	movs	r2, #0
    bdc8:	2900      	cmp	r1, #0
    bdca:	d500      	bpl.n	bdce <__aeabi_idiv+0x16>
    bdcc:	4249      	negs	r1, r1
    bdce:	2800      	cmp	r0, #0
    bdd0:	d500      	bpl.n	bdd4 <__aeabi_idiv+0x1c>
    bdd2:	4240      	negs	r0, r0
    bdd4:	4288      	cmp	r0, r1
    bdd6:	d32c      	bcc.n	be32 <__aeabi_idiv+0x7a>
    bdd8:	2401      	movs	r4, #1
    bdda:	0724      	lsls	r4, r4, #28
    bddc:	42a1      	cmp	r1, r4
    bdde:	d204      	bcs.n	bdea <__aeabi_idiv+0x32>
    bde0:	4281      	cmp	r1, r0
    bde2:	d202      	bcs.n	bdea <__aeabi_idiv+0x32>
    bde4:	0109      	lsls	r1, r1, #4
    bde6:	011b      	lsls	r3, r3, #4
    bde8:	e7f8      	b.n	bddc <__aeabi_idiv+0x24>
    bdea:	00e4      	lsls	r4, r4, #3
    bdec:	42a1      	cmp	r1, r4
    bdee:	d204      	bcs.n	bdfa <__aeabi_idiv+0x42>
    bdf0:	4281      	cmp	r1, r0
    bdf2:	d202      	bcs.n	bdfa <__aeabi_idiv+0x42>
    bdf4:	0049      	lsls	r1, r1, #1
    bdf6:	005b      	lsls	r3, r3, #1
    bdf8:	e7f8      	b.n	bdec <__aeabi_idiv+0x34>
    bdfa:	4288      	cmp	r0, r1
    bdfc:	d301      	bcc.n	be02 <__aeabi_idiv+0x4a>
    bdfe:	1a40      	subs	r0, r0, r1
    be00:	431a      	orrs	r2, r3
    be02:	084c      	lsrs	r4, r1, #1
    be04:	42a0      	cmp	r0, r4
    be06:	d302      	bcc.n	be0e <__aeabi_idiv+0x56>
    be08:	1b00      	subs	r0, r0, r4
    be0a:	085c      	lsrs	r4, r3, #1
    be0c:	4322      	orrs	r2, r4
    be0e:	088c      	lsrs	r4, r1, #2
    be10:	42a0      	cmp	r0, r4
    be12:	d302      	bcc.n	be1a <__aeabi_idiv+0x62>
    be14:	1b00      	subs	r0, r0, r4
    be16:	089c      	lsrs	r4, r3, #2
    be18:	4322      	orrs	r2, r4
    be1a:	08cc      	lsrs	r4, r1, #3
    be1c:	42a0      	cmp	r0, r4
    be1e:	d302      	bcc.n	be26 <__aeabi_idiv+0x6e>
    be20:	1b00      	subs	r0, r0, r4
    be22:	08dc      	lsrs	r4, r3, #3
    be24:	4322      	orrs	r2, r4
    be26:	2800      	cmp	r0, #0
    be28:	d003      	beq.n	be32 <__aeabi_idiv+0x7a>
    be2a:	091b      	lsrs	r3, r3, #4
    be2c:	d001      	beq.n	be32 <__aeabi_idiv+0x7a>
    be2e:	0909      	lsrs	r1, r1, #4
    be30:	e7e3      	b.n	bdfa <__aeabi_idiv+0x42>
    be32:	1c10      	adds	r0, r2, #0
    be34:	4664      	mov	r4, ip
    be36:	2c00      	cmp	r4, #0
    be38:	d500      	bpl.n	be3c <__aeabi_idiv+0x84>
    be3a:	4240      	negs	r0, r0
    be3c:	bc10      	pop	{r4}
    be3e:	4770      	bx	lr
    be40:	b502      	push	{r1, lr}
    be42:	f000 f8db 	bl	bffc <__aeabi_idiv0>
    be46:	2000      	movs	r0, #0
    be48:	bc06      	pop	{r1, r2}
    be4a:	4710      	bx	r2

0000be4c <__aeabi_idivmod>:
    be4c:	b503      	push	{r0, r1, lr}
    be4e:	f7ff ffb3 	bl	bdb8 <__aeabi_idiv>
    be52:	bc0e      	pop	{r1, r2, r3}
    be54:	4342      	muls	r2, r0
    be56:	1a89      	subs	r1, r1, r2
    be58:	4718      	bx	r3
    be5a:	46c0      	nop			(mov r8, r8)

0000be5c <__umodsi3>:
    be5c:	2900      	cmp	r1, #0
    be5e:	d05a      	beq.n	bf16 <__umodsi3+0xba>
    be60:	2301      	movs	r3, #1
    be62:	4288      	cmp	r0, r1
    be64:	d200      	bcs.n	be68 <__umodsi3+0xc>
    be66:	4770      	bx	lr
    be68:	b410      	push	{r4}
    be6a:	2401      	movs	r4, #1
    be6c:	0724      	lsls	r4, r4, #28
    be6e:	42a1      	cmp	r1, r4
    be70:	d204      	bcs.n	be7c <__umodsi3+0x20>
    be72:	4281      	cmp	r1, r0
    be74:	d202      	bcs.n	be7c <__umodsi3+0x20>
    be76:	0109      	lsls	r1, r1, #4
    be78:	011b      	lsls	r3, r3, #4
    be7a:	e7f8      	b.n	be6e <__umodsi3+0x12>
    be7c:	00e4      	lsls	r4, r4, #3
    be7e:	42a1      	cmp	r1, r4
    be80:	d204      	bcs.n	be8c <__umodsi3+0x30>
    be82:	4281      	cmp	r1, r0
    be84:	d202      	bcs.n	be8c <__umodsi3+0x30>
    be86:	0049      	lsls	r1, r1, #1
    be88:	005b      	lsls	r3, r3, #1
    be8a:	e7f8      	b.n	be7e <__umodsi3+0x22>
    be8c:	2200      	movs	r2, #0
    be8e:	4288      	cmp	r0, r1
    be90:	d300      	bcc.n	be94 <__umodsi3+0x38>
    be92:	1a40      	subs	r0, r0, r1
    be94:	084c      	lsrs	r4, r1, #1
    be96:	42a0      	cmp	r0, r4
    be98:	d305      	bcc.n	bea6 <__umodsi3+0x4a>
    be9a:	1b00      	subs	r0, r0, r4
    be9c:	469c      	mov	ip, r3
    be9e:	2401      	movs	r4, #1
    bea0:	41e3      	rors	r3, r4
    bea2:	431a      	orrs	r2, r3
    bea4:	4663      	mov	r3, ip
    bea6:	088c      	lsrs	r4, r1, #2
    bea8:	42a0      	cmp	r0, r4
    beaa:	d305      	bcc.n	beb8 <__umodsi3+0x5c>
    beac:	1b00      	subs	r0, r0, r4
    beae:	469c      	mov	ip, r3
    beb0:	2402      	movs	r4, #2
    beb2:	41e3      	rors	r3, r4
    beb4:	431a      	orrs	r2, r3
    beb6:	4663      	mov	r3, ip
    beb8:	08cc      	lsrs	r4, r1, #3
    beba:	42a0      	cmp	r0, r4
    bebc:	d305      	bcc.n	beca <__umodsi3+0x6e>
    bebe:	1b00      	subs	r0, r0, r4
    bec0:	469c      	mov	ip, r3
    bec2:	2403      	movs	r4, #3
    bec4:	41e3      	rors	r3, r4
    bec6:	431a      	orrs	r2, r3
    bec8:	4663      	mov	r3, ip
    beca:	469c      	mov	ip, r3
    becc:	2800      	cmp	r0, #0
    bece:	d003      	beq.n	bed8 <__umodsi3+0x7c>
    bed0:	091b      	lsrs	r3, r3, #4
    bed2:	d001      	beq.n	bed8 <__umodsi3+0x7c>
    bed4:	0909      	lsrs	r1, r1, #4
    bed6:	e7d9      	b.n	be8c <__umodsi3+0x30>
    bed8:	240e      	movs	r4, #14
    beda:	0724      	lsls	r4, r4, #28
    bedc:	4022      	ands	r2, r4
    bede:	d018      	beq.n	bf12 <__umodsi3+0xb6>
    bee0:	4663      	mov	r3, ip
    bee2:	2407      	movs	r4, #7
    bee4:	4223      	tst	r3, r4
    bee6:	d014      	beq.n	bf12 <__umodsi3+0xb6>
    bee8:	4663      	mov	r3, ip
    beea:	2403      	movs	r4, #3
    beec:	41e3      	rors	r3, r4
    beee:	421a      	tst	r2, r3
    bef0:	d001      	beq.n	bef6 <__umodsi3+0x9a>
    bef2:	08cc      	lsrs	r4, r1, #3
    bef4:	1900      	adds	r0, r0, r4
    bef6:	4663      	mov	r3, ip
    bef8:	2402      	movs	r4, #2
    befa:	41e3      	rors	r3, r4
    befc:	421a      	tst	r2, r3
    befe:	d001      	beq.n	bf04 <__umodsi3+0xa8>
    bf00:	088c      	lsrs	r4, r1, #2
    bf02:	1900      	adds	r0, r0, r4
    bf04:	4663      	mov	r3, ip
    bf06:	2401      	movs	r4, #1
    bf08:	41e3      	rors	r3, r4
    bf0a:	421a      	tst	r2, r3
    bf0c:	d001      	beq.n	bf12 <__umodsi3+0xb6>
    bf0e:	084c      	lsrs	r4, r1, #1
    bf10:	1900      	adds	r0, r0, r4
    bf12:	bc10      	pop	{r4}
    bf14:	4770      	bx	lr
    bf16:	b502      	push	{r1, lr}
    bf18:	f000 f870 	bl	bffc <__aeabi_idiv0>
    bf1c:	2000      	movs	r0, #0
    bf1e:	bc06      	pop	{r1, r2}
    bf20:	4710      	bx	r2
    bf22:	46c0      	nop			(mov r8, r8)

0000bf24 <__modsi3>:
    bf24:	2301      	movs	r3, #1
    bf26:	2900      	cmp	r1, #0
    bf28:	d062      	beq.n	bff0 <__modsi3+0xcc>
    bf2a:	d500      	bpl.n	bf2e <__modsi3+0xa>
    bf2c:	4249      	negs	r1, r1
    bf2e:	b410      	push	{r4}
    bf30:	b401      	push	{r0}
    bf32:	2800      	cmp	r0, #0
    bf34:	d500      	bpl.n	bf38 <__modsi3+0x14>
    bf36:	4240      	negs	r0, r0
    bf38:	4288      	cmp	r0, r1
    bf3a:	d353      	bcc.n	bfe4 <__modsi3+0xc0>
    bf3c:	2401      	movs	r4, #1
    bf3e:	0724      	lsls	r4, r4, #28
    bf40:	42a1      	cmp	r1, r4
    bf42:	d204      	bcs.n	bf4e <__modsi3+0x2a>
    bf44:	4281      	cmp	r1, r0
    bf46:	d202      	bcs.n	bf4e <__modsi3+0x2a>
    bf48:	0109      	lsls	r1, r1, #4
    bf4a:	011b      	lsls	r3, r3, #4
    bf4c:	e7f8      	b.n	bf40 <__modsi3+0x1c>
    bf4e:	00e4      	lsls	r4, r4, #3
    bf50:	42a1      	cmp	r1, r4
    bf52:	d204      	bcs.n	bf5e <__modsi3+0x3a>
    bf54:	4281      	cmp	r1, r0
    bf56:	d202      	bcs.n	bf5e <__modsi3+0x3a>
    bf58:	0049      	lsls	r1, r1, #1
    bf5a:	005b      	lsls	r3, r3, #1
    bf5c:	e7f8      	b.n	bf50 <__modsi3+0x2c>
    bf5e:	2200      	movs	r2, #0
    bf60:	4288      	cmp	r0, r1
    bf62:	d300      	bcc.n	bf66 <__modsi3+0x42>
    bf64:	1a40      	subs	r0, r0, r1
    bf66:	084c      	lsrs	r4, r1, #1
    bf68:	42a0      	cmp	r0, r4
    bf6a:	d305      	bcc.n	bf78 <__modsi3+0x54>
    bf6c:	1b00      	subs	r0, r0, r4
    bf6e:	469c      	mov	ip, r3
    bf70:	2401      	movs	r4, #1
    bf72:	41e3      	rors	r3, r4
    bf74:	431a      	orrs	r2, r3
    bf76:	4663      	mov	r3, ip
    bf78:	088c      	lsrs	r4, r1, #2
    bf7a:	42a0      	cmp	r0, r4
    bf7c:	d305      	bcc.n	bf8a <__modsi3+0x66>
    bf7e:	1b00      	subs	r0, r0, r4
    bf80:	469c      	mov	ip, r3
    bf82:	2402      	movs	r4, #2
    bf84:	41e3      	rors	r3, r4
    bf86:	431a      	orrs	r2, r3
    bf88:	4663      	mov	r3, ip
    bf8a:	08cc      	lsrs	r4, r1, #3
    bf8c:	42a0      	cmp	r0, r4
    bf8e:	d305      	bcc.n	bf9c <__modsi3+0x78>
    bf90:	1b00      	subs	r0, r0, r4
    bf92:	469c      	mov	ip, r3
    bf94:	2403      	movs	r4, #3
    bf96:	41e3      	rors	r3, r4
    bf98:	431a      	orrs	r2, r3
    bf9a:	4663      	mov	r3, ip
    bf9c:	469c      	mov	ip, r3
    bf9e:	2800      	cmp	r0, #0
    bfa0:	d003      	beq.n	bfaa <__modsi3+0x86>
    bfa2:	091b      	lsrs	r3, r3, #4
    bfa4:	d001      	beq.n	bfaa <__modsi3+0x86>
    bfa6:	0909      	lsrs	r1, r1, #4
    bfa8:	e7d9      	b.n	bf5e <__modsi3+0x3a>
    bfaa:	240e      	movs	r4, #14
    bfac:	0724      	lsls	r4, r4, #28
    bfae:	4022      	ands	r2, r4
    bfb0:	d018      	beq.n	bfe4 <__modsi3+0xc0>
    bfb2:	4663      	mov	r3, ip
    bfb4:	2407      	movs	r4, #7
    bfb6:	4223      	tst	r3, r4
    bfb8:	d014      	beq.n	bfe4 <__modsi3+0xc0>
    bfba:	4663      	mov	r3, ip
    bfbc:	2403      	movs	r4, #3
    bfbe:	41e3      	rors	r3, r4
    bfc0:	421a      	tst	r2, r3
    bfc2:	d001      	beq.n	bfc8 <__modsi3+0xa4>
    bfc4:	08cc      	lsrs	r4, r1, #3
    bfc6:	1900      	adds	r0, r0, r4
    bfc8:	4663      	mov	r3, ip
    bfca:	2402      	movs	r4, #2
    bfcc:	41e3      	rors	r3, r4
    bfce:	421a      	tst	r2, r3
    bfd0:	d001      	beq.n	bfd6 <__modsi3+0xb2>
    bfd2:	088c      	lsrs	r4, r1, #2
    bfd4:	1900      	adds	r0, r0, r4
    bfd6:	4663      	mov	r3, ip
    bfd8:	2401      	movs	r4, #1
    bfda:	41e3      	rors	r3, r4
    bfdc:	421a      	tst	r2, r3
    bfde:	d001      	beq.n	bfe4 <__modsi3+0xc0>
    bfe0:	084c      	lsrs	r4, r1, #1
    bfe2:	1900      	adds	r0, r0, r4
    bfe4:	bc10      	pop	{r4}
    bfe6:	2c00      	cmp	r4, #0
    bfe8:	d500      	bpl.n	bfec <__modsi3+0xc8>
    bfea:	4240      	negs	r0, r0
    bfec:	bc10      	pop	{r4}
    bfee:	4770      	bx	lr
    bff0:	b502      	push	{r1, lr}
    bff2:	f000 f803 	bl	bffc <__aeabi_idiv0>
    bff6:	2000      	movs	r0, #0
    bff8:	bc06      	pop	{r1, r2}
    bffa:	4710      	bx	r2

0000bffc <__aeabi_idiv0>:
    bffc:	4770      	bx	lr
    bffe:	46c0      	nop			(mov r8, r8)

0000c000 <__aeabi_drsub>:
    c000:	e2200102 	eor	r0, r0, #-2147483648	; 0x80000000
    c004:	ea000000 	b	c00c <__adddf3>

0000c008 <__aeabi_dsub>:
    c008:	e2222102 	eor	r2, r2, #-2147483648	; 0x80000000

0000c00c <__adddf3>:
    c00c:	e92d4030 	stmdb	sp!, {r4, r5, lr}
    c010:	e1a04080 	mov	r4, r0, lsl #1
    c014:	e1a05082 	mov	r5, r2, lsl #1
    c018:	e1340005 	teq	r4, r5
    c01c:	01310003 	teqeq	r1, r3
    c020:	1194c001 	orrnes	ip, r4, r1
    c024:	1195c003 	orrnes	ip, r5, r3
    c028:	11f0cac4 	mvnnes	ip, r4, asr #21
    c02c:	11f0cac5 	mvnnes	ip, r5, asr #21
    c030:	0a00008c 	beq	c268 <__adddf3+0x25c>
    c034:	e1a04aa4 	mov	r4, r4, lsr #21
    c038:	e0745aa5 	rsbs	r5, r4, r5, lsr #21
    c03c:	b2655000 	rsblt	r5, r5, #0	; 0x0
    c040:	da000006 	ble	c060 <__adddf3+0x54>
    c044:	e0844005 	add	r4, r4, r5
    c048:	e0213003 	eor	r3, r1, r3
    c04c:	e0202002 	eor	r2, r0, r2
    c050:	e0231001 	eor	r1, r3, r1
    c054:	e0220000 	eor	r0, r2, r0
    c058:	e0213003 	eor	r3, r1, r3
    c05c:	e0202002 	eor	r2, r0, r2
    c060:	e3550036 	cmp	r5, #54	; 0x36
    c064:	88bd4030 	ldmhiia	sp!, {r4, r5, lr}
    c068:	812fff1e 	bxhi	lr
    c06c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    c070:	e1a00600 	mov	r0, r0, lsl #12
    c074:	e3a0c601 	mov	ip, #1048576	; 0x100000
    c078:	e18c0620 	orr	r0, ip, r0, lsr #12
    c07c:	0a000001 	beq	c088 <__adddf3+0x7c>
    c080:	e2711000 	rsbs	r1, r1, #0	; 0x0
    c084:	e2e00000 	rsc	r0, r0, #0	; 0x0
    c088:	e3120102 	tst	r2, #-2147483648	; 0x80000000
    c08c:	e1a02602 	mov	r2, r2, lsl #12
    c090:	e18c2622 	orr	r2, ip, r2, lsr #12
    c094:	0a000001 	beq	c0a0 <__adddf3+0x94>
    c098:	e2733000 	rsbs	r3, r3, #0	; 0x0
    c09c:	e2e22000 	rsc	r2, r2, #0	; 0x0
    c0a0:	e1340005 	teq	r4, r5
    c0a4:	0a000069 	beq	c250 <__adddf3+0x244>
    c0a8:	e2444001 	sub	r4, r4, #1	; 0x1
    c0ac:	e275e020 	rsbs	lr, r5, #32	; 0x20
    c0b0:	ba000005 	blt	c0cc <__adddf3+0xc0>
    c0b4:	e1a0ce13 	mov	ip, r3, lsl lr
    c0b8:	e0911533 	adds	r1, r1, r3, lsr r5
    c0bc:	e2a00000 	adc	r0, r0, #0	; 0x0
    c0c0:	e0911e12 	adds	r1, r1, r2, lsl lr
    c0c4:	e0b00552 	adcs	r0, r0, r2, asr r5
    c0c8:	ea000006 	b	c0e8 <__adddf3+0xdc>
    c0cc:	e2455020 	sub	r5, r5, #32	; 0x20
    c0d0:	e28ee020 	add	lr, lr, #32	; 0x20
    c0d4:	e3530001 	cmp	r3, #1	; 0x1
    c0d8:	e1a0ce12 	mov	ip, r2, lsl lr
    c0dc:	238cc002 	orrcs	ip, ip, #2	; 0x2
    c0e0:	e0911552 	adds	r1, r1, r2, asr r5
    c0e4:	e0b00fc2 	adcs	r0, r0, r2, asr #31
    c0e8:	e2005102 	and	r5, r0, #-2147483648	; 0x80000000
    c0ec:	5a000002 	bpl	c0fc <__adddf3+0xf0>
    c0f0:	e27cc000 	rsbs	ip, ip, #0	; 0x0
    c0f4:	e2f11000 	rscs	r1, r1, #0	; 0x0
    c0f8:	e2e00000 	rsc	r0, r0, #0	; 0x0
    c0fc:	e3500601 	cmp	r0, #1048576	; 0x100000
    c100:	3a00000f 	bcc	c144 <__adddf3+0x138>
    c104:	e3500602 	cmp	r0, #2097152	; 0x200000
    c108:	3a000006 	bcc	c128 <__adddf3+0x11c>
    c10c:	e1b000a0 	movs	r0, r0, lsr #1
    c110:	e1b01061 	movs	r1, r1, rrx
    c114:	e1a0c06c 	mov	ip, ip, rrx
    c118:	e2844001 	add	r4, r4, #1	; 0x1
    c11c:	e1a02a84 	mov	r2, r4, lsl #21
    c120:	e3720501 	cmn	r2, #4194304	; 0x400000
    c124:	2a00006b 	bcs	c2d8 <__adddf3+0x2cc>
    c128:	e35c0102 	cmp	ip, #-2147483648	; 0x80000000
    c12c:	01b0c0a1 	moveqs	ip, r1, lsr #1
    c130:	e2b11000 	adcs	r1, r1, #0	; 0x0
    c134:	e0a00a04 	adc	r0, r0, r4, lsl #20
    c138:	e1800005 	orr	r0, r0, r5
    c13c:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
    c140:	e12fff1e 	bx	lr
    c144:	e1b0c08c 	movs	ip, ip, lsl #1
    c148:	e0b11001 	adcs	r1, r1, r1
    c14c:	e0a00000 	adc	r0, r0, r0
    c150:	e3100601 	tst	r0, #1048576	; 0x100000
    c154:	e2444001 	sub	r4, r4, #1	; 0x1
    c158:	1afffff2 	bne	c128 <__adddf3+0x11c>
    c15c:	e3300000 	teq	r0, #0	; 0x0
    c160:	13a03014 	movne	r3, #20	; 0x14
    c164:	03a03034 	moveq	r3, #52	; 0x34
    c168:	01a00001 	moveq	r0, r1
    c16c:	03a01000 	moveq	r1, #0	; 0x0
    c170:	e1a02000 	mov	r2, r0
    c174:	e3520801 	cmp	r2, #65536	; 0x10000
    c178:	21a02822 	movcs	r2, r2, lsr #16
    c17c:	22433010 	subcs	r3, r3, #16	; 0x10
    c180:	e3520c01 	cmp	r2, #256	; 0x100
    c184:	21a02422 	movcs	r2, r2, lsr #8
    c188:	22433008 	subcs	r3, r3, #8	; 0x8
    c18c:	e3520010 	cmp	r2, #16	; 0x10
    c190:	21a02222 	movcs	r2, r2, lsr #4
    c194:	22433004 	subcs	r3, r3, #4	; 0x4
    c198:	e3520004 	cmp	r2, #4	; 0x4
    c19c:	22433002 	subcs	r3, r3, #2	; 0x2
    c1a0:	304330a2 	subcc	r3, r3, r2, lsr #1
    c1a4:	e04331a2 	sub	r3, r3, r2, lsr #3
    c1a8:	e2532020 	subs	r2, r3, #32	; 0x20
    c1ac:	aa000007 	bge	c1d0 <__adddf3+0x1c4>
    c1b0:	e292200c 	adds	r2, r2, #12	; 0xc
    c1b4:	da000004 	ble	c1cc <__adddf3+0x1c0>
    c1b8:	e282c014 	add	ip, r2, #20	; 0x14
    c1bc:	e262200c 	rsb	r2, r2, #12	; 0xc
    c1c0:	e1a01c10 	mov	r1, r0, lsl ip
    c1c4:	e1a00230 	mov	r0, r0, lsr r2
    c1c8:	ea000004 	b	c1e0 <__adddf3+0x1d4>
    c1cc:	e2822014 	add	r2, r2, #20	; 0x14
    c1d0:	d262c020 	rsble	ip, r2, #32	; 0x20
    c1d4:	e1a00210 	mov	r0, r0, lsl r2
    c1d8:	d1800c31 	orrle	r0, r0, r1, lsr ip
    c1dc:	d1a01211 	movle	r1, r1, lsl r2
    c1e0:	e0544003 	subs	r4, r4, r3
    c1e4:	a0800a04 	addge	r0, r0, r4, lsl #20
    c1e8:	a1800005 	orrge	r0, r0, r5
    c1ec:	a8bd4030 	ldmgeia	sp!, {r4, r5, lr}
    c1f0:	a12fff1e 	bxge	lr
    c1f4:	e1e04004 	mvn	r4, r4
    c1f8:	e254401f 	subs	r4, r4, #31	; 0x1f
    c1fc:	aa00000f 	bge	c240 <__adddf3+0x234>
    c200:	e294400c 	adds	r4, r4, #12	; 0xc
    c204:	ca000006 	bgt	c224 <__adddf3+0x218>
    c208:	e2844014 	add	r4, r4, #20	; 0x14
    c20c:	e2642020 	rsb	r2, r4, #32	; 0x20
    c210:	e1a01431 	mov	r1, r1, lsr r4
    c214:	e1811210 	orr	r1, r1, r0, lsl r2
    c218:	e1850430 	orr	r0, r5, r0, lsr r4
    c21c:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
    c220:	e12fff1e 	bx	lr
    c224:	e264400c 	rsb	r4, r4, #12	; 0xc
    c228:	e2642020 	rsb	r2, r4, #32	; 0x20
    c22c:	e1a01231 	mov	r1, r1, lsr r2
    c230:	e1811410 	orr	r1, r1, r0, lsl r4
    c234:	e1a00005 	mov	r0, r5
    c238:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
    c23c:	e12fff1e 	bx	lr
    c240:	e1a01430 	mov	r1, r0, lsr r4
    c244:	e1a00005 	mov	r0, r5
    c248:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
    c24c:	e12fff1e 	bx	lr
    c250:	e3340000 	teq	r4, #0	; 0x0
    c254:	e2222601 	eor	r2, r2, #1048576	; 0x100000
    c258:	02200601 	eoreq	r0, r0, #1048576	; 0x100000
    c25c:	02844001 	addeq	r4, r4, #1	; 0x1
    c260:	12455001 	subne	r5, r5, #1	; 0x1
    c264:	eaffff8f 	b	c0a8 <__adddf3+0x9c>
    c268:	e1f0cac4 	mvns	ip, r4, asr #21
    c26c:	11f0cac5 	mvnnes	ip, r5, asr #21
    c270:	0a00001d 	beq	c2ec <__adddf3+0x2e0>
    c274:	e1340005 	teq	r4, r5
    c278:	01310003 	teqeq	r1, r3
    c27c:	0a000004 	beq	c294 <__adddf3+0x288>
    c280:	e3340000 	teq	r4, #0	; 0x0
    c284:	01a00002 	moveq	r0, r2
    c288:	01a01003 	moveq	r1, r3
    c28c:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
    c290:	e12fff1e 	bx	lr
    c294:	e1300002 	teq	r0, r2
    c298:	13a00000 	movne	r0, #0	; 0x0
    c29c:	13a01000 	movne	r1, #0	; 0x0
    c2a0:	18bd4030 	ldmneia	sp!, {r4, r5, lr}
    c2a4:	112fff1e 	bxne	lr
    c2a8:	e1b0caa4 	movs	ip, r4, lsr #21
    c2ac:	1a000004 	bne	c2c4 <__adddf3+0x2b8>
    c2b0:	e1b01081 	movs	r1, r1, lsl #1
    c2b4:	e0b00000 	adcs	r0, r0, r0
    c2b8:	23800102 	orrcs	r0, r0, #-2147483648	; 0x80000000
    c2bc:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
    c2c0:	e12fff1e 	bx	lr
    c2c4:	e2944501 	adds	r4, r4, #4194304	; 0x400000
    c2c8:	32800601 	addcc	r0, r0, #1048576	; 0x100000
    c2cc:	38bd4030 	ldmccia	sp!, {r4, r5, lr}
    c2d0:	312fff1e 	bxcc	lr
    c2d4:	e2005102 	and	r5, r0, #-2147483648	; 0x80000000
    c2d8:	e385047f 	orr	r0, r5, #2130706432	; 0x7f000000
    c2dc:	e380060f 	orr	r0, r0, #15728640	; 0xf00000
    c2e0:	e3a01000 	mov	r1, #0	; 0x0
    c2e4:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
    c2e8:	e12fff1e 	bx	lr
    c2ec:	e1f0cac4 	mvns	ip, r4, asr #21
    c2f0:	11a00002 	movne	r0, r2
    c2f4:	11a01003 	movne	r1, r3
    c2f8:	01f0cac5 	mvneqs	ip, r5, asr #21
    c2fc:	11a02000 	movne	r2, r0
    c300:	11a03001 	movne	r3, r1
    c304:	e1914600 	orrs	r4, r1, r0, lsl #12
    c308:	01935602 	orreqs	r5, r3, r2, lsl #12
    c30c:	01300002 	teqeq	r0, r2
    c310:	13800702 	orrne	r0, r0, #524288	; 0x80000
    c314:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
    c318:	e12fff1e 	bx	lr

0000c31c <__aeabi_ui2d>:
    c31c:	e3300000 	teq	r0, #0	; 0x0
    c320:	03a01000 	moveq	r1, #0	; 0x0
    c324:	012fff1e 	bxeq	lr
    c328:	e92d4030 	stmdb	sp!, {r4, r5, lr}
    c32c:	e3a04b01 	mov	r4, #1024	; 0x400
    c330:	e2844032 	add	r4, r4, #50	; 0x32
    c334:	e3a05000 	mov	r5, #0	; 0x0
    c338:	e1a01000 	mov	r1, r0
    c33c:	e3a00000 	mov	r0, #0	; 0x0
    c340:	eaffff85 	b	c15c <__adddf3+0x150>

0000c344 <__aeabi_i2d>:
    c344:	e3300000 	teq	r0, #0	; 0x0
    c348:	03a01000 	moveq	r1, #0	; 0x0
    c34c:	012fff1e 	bxeq	lr
    c350:	e92d4030 	stmdb	sp!, {r4, r5, lr}
    c354:	e3a04b01 	mov	r4, #1024	; 0x400
    c358:	e2844032 	add	r4, r4, #50	; 0x32
    c35c:	e2105102 	ands	r5, r0, #-2147483648	; 0x80000000
    c360:	42600000 	rsbmi	r0, r0, #0	; 0x0
    c364:	e1a01000 	mov	r1, r0
    c368:	e3a00000 	mov	r0, #0	; 0x0
    c36c:	eaffff7a 	b	c15c <__adddf3+0x150>

0000c370 <__aeabi_f2d>:
    c370:	e1b02080 	movs	r2, r0, lsl #1
    c374:	e1a001c2 	mov	r0, r2, asr #3
    c378:	e1a00060 	mov	r0, r0, rrx
    c37c:	e1a01e02 	mov	r1, r2, lsl #28
    c380:	121234ff 	andnes	r3, r2, #-16777216	; 0xff000000
    c384:	133304ff 	teqne	r3, #-16777216	; 0xff000000
    c388:	1220030e 	eorne	r0, r0, #939524096	; 0x38000000
    c38c:	112fff1e 	bxne	lr
    c390:	e3320000 	teq	r2, #0	; 0x0
    c394:	133304ff 	teqne	r3, #-16777216	; 0xff000000
    c398:	012fff1e 	bxeq	lr
    c39c:	e92d4030 	stmdb	sp!, {r4, r5, lr}
    c3a0:	e3a04d0e 	mov	r4, #896	; 0x380
    c3a4:	e2005102 	and	r5, r0, #-2147483648	; 0x80000000
    c3a8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
    c3ac:	eaffff6a 	b	c15c <__adddf3+0x150>

0000c3b0 <__aeabi_ul2d>:
    c3b0:	e1902001 	orrs	r2, r0, r1
    c3b4:	012fff1e 	bxeq	lr
    c3b8:	e92d4030 	stmdb	sp!, {r4, r5, lr}
    c3bc:	e3a05000 	mov	r5, #0	; 0x0
    c3c0:	ea000006 	b	c3e0 <__aeabi_l2d+0x1c>

0000c3c4 <__aeabi_l2d>:
    c3c4:	e1902001 	orrs	r2, r0, r1
    c3c8:	012fff1e 	bxeq	lr
    c3cc:	e92d4030 	stmdb	sp!, {r4, r5, lr}
    c3d0:	e2115102 	ands	r5, r1, #-2147483648	; 0x80000000
    c3d4:	5a000001 	bpl	c3e0 <__aeabi_l2d+0x1c>
    c3d8:	e2700000 	rsbs	r0, r0, #0	; 0x0
    c3dc:	e2e11000 	rsc	r1, r1, #0	; 0x0
    c3e0:	e3a04b01 	mov	r4, #1024	; 0x400
    c3e4:	e2844032 	add	r4, r4, #50	; 0x32
    c3e8:	e1a0c000 	mov	ip, r0
    c3ec:	e1a00001 	mov	r0, r1
    c3f0:	e1a0100c 	mov	r1, ip
    c3f4:	e1b0cb20 	movs	ip, r0, lsr #22
    c3f8:	0affff3f 	beq	c0fc <__adddf3+0xf0>
    c3fc:	e3a02003 	mov	r2, #3	; 0x3
    c400:	e1b0c1ac 	movs	ip, ip, lsr #3
    c404:	12822003 	addne	r2, r2, #3	; 0x3
    c408:	e1b0c1ac 	movs	ip, ip, lsr #3
    c40c:	12822003 	addne	r2, r2, #3	; 0x3
    c410:	e08221ac 	add	r2, r2, ip, lsr #3
    c414:	e2623020 	rsb	r3, r2, #32	; 0x20
    c418:	e1a0c311 	mov	ip, r1, lsl r3
    c41c:	e1a01231 	mov	r1, r1, lsr r2
    c420:	e1811310 	orr	r1, r1, r0, lsl r3
    c424:	e1a00230 	mov	r0, r0, lsr r2
    c428:	e0844002 	add	r4, r4, r2
    c42c:	eaffff32 	b	c0fc <__adddf3+0xf0>

0000c430 <__aeabi_dmul>:
    c430:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
    c434:	e3a0c0ff 	mov	ip, #255	; 0xff
    c438:	e38ccc07 	orr	ip, ip, #1792	; 0x700
    c43c:	e01c4a20 	ands	r4, ip, r0, lsr #20
    c440:	101c5a22 	andnes	r5, ip, r2, lsr #20
    c444:	1134000c 	teqne	r4, ip
    c448:	1135000c 	teqne	r5, ip
    c44c:	0b000075 	bleq	c628 <__aeabi_dmul+0x1f8>
    c450:	e0844005 	add	r4, r4, r5
    c454:	e0206002 	eor	r6, r0, r2
    c458:	e1c00a8c 	bic	r0, r0, ip, lsl #21
    c45c:	e1c22a8c 	bic	r2, r2, ip, lsl #21
    c460:	e1915600 	orrs	r5, r1, r0, lsl #12
    c464:	11935602 	orrnes	r5, r3, r2, lsl #12
    c468:	e3800601 	orr	r0, r0, #1048576	; 0x100000
    c46c:	e3822601 	orr	r2, r2, #1048576	; 0x100000
    c470:	0a00001d 	beq	c4ec <__aeabi_dmul+0xbc>
    c474:	e08ec391 	umull	ip, lr, r1, r3
    c478:	e3a05000 	mov	r5, #0	; 0x0
    c47c:	e0a5e390 	umlal	lr, r5, r0, r3
    c480:	e2063102 	and	r3, r6, #-2147483648	; 0x80000000
    c484:	e0a5e291 	umlal	lr, r5, r1, r2
    c488:	e3a06000 	mov	r6, #0	; 0x0
    c48c:	e0a65290 	umlal	r5, r6, r0, r2
    c490:	e33c0000 	teq	ip, #0	; 0x0
    c494:	138ee001 	orrne	lr, lr, #1	; 0x1
    c498:	e24440ff 	sub	r4, r4, #255	; 0xff
    c49c:	e3560c02 	cmp	r6, #512	; 0x200
    c4a0:	e2c44c03 	sbc	r4, r4, #768	; 0x300
    c4a4:	2a000002 	bcs	c4b4 <__aeabi_dmul+0x84>
    c4a8:	e1b0e08e 	movs	lr, lr, lsl #1
    c4ac:	e0b55005 	adcs	r5, r5, r5
    c4b0:	e0a66006 	adc	r6, r6, r6
    c4b4:	e1830586 	orr	r0, r3, r6, lsl #11
    c4b8:	e1800aa5 	orr	r0, r0, r5, lsr #21
    c4bc:	e1a01585 	mov	r1, r5, lsl #11
    c4c0:	e1811aae 	orr	r1, r1, lr, lsr #21
    c4c4:	e1a0e58e 	mov	lr, lr, lsl #11
    c4c8:	e254c0fd 	subs	ip, r4, #253	; 0xfd
    c4cc:	835c0c07 	cmphi	ip, #1792	; 0x700
    c4d0:	8a000011 	bhi	c51c <__aeabi_dmul+0xec>
    c4d4:	e35e0102 	cmp	lr, #-2147483648	; 0x80000000
    c4d8:	01b0e0a1 	moveqs	lr, r1, lsr #1
    c4dc:	e2b11000 	adcs	r1, r1, #0	; 0x0
    c4e0:	e0a00a04 	adc	r0, r0, r4, lsl #20
    c4e4:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
    c4e8:	e12fff1e 	bx	lr
    c4ec:	e2066102 	and	r6, r6, #-2147483648	; 0x80000000
    c4f0:	e1860000 	orr	r0, r6, r0
    c4f4:	e1811003 	orr	r1, r1, r3
    c4f8:	e0200002 	eor	r0, r0, r2
    c4fc:	e05440ac 	subs	r4, r4, ip, lsr #1
    c500:	c074500c 	rsbgts	r5, r4, ip
    c504:	c1800a04 	orrgt	r0, r0, r4, lsl #20
    c508:	c8bd4070 	ldmgtia	sp!, {r4, r5, r6, lr}
    c50c:	c12fff1e 	bxgt	lr
    c510:	e3800601 	orr	r0, r0, #1048576	; 0x100000
    c514:	e3a0e000 	mov	lr, #0	; 0x0
    c518:	e2544001 	subs	r4, r4, #1	; 0x1
    c51c:	ca00005d 	bgt	c698 <__aeabi_dmul+0x268>
    c520:	e3740036 	cmn	r4, #54	; 0x36
    c524:	d3a01000 	movle	r1, #0	; 0x0
    c528:	d2000102 	andle	r0, r0, #-2147483648	; 0x80000000
    c52c:	d8bd4070 	ldmleia	sp!, {r4, r5, r6, lr}
    c530:	d12fff1e 	bxle	lr
    c534:	e2644000 	rsb	r4, r4, #0	; 0x0
    c538:	e2544020 	subs	r4, r4, #32	; 0x20
    c53c:	aa00001a 	bge	c5ac <__aeabi_dmul+0x17c>
    c540:	e294400c 	adds	r4, r4, #12	; 0xc
    c544:	ca00000c 	bgt	c57c <__aeabi_dmul+0x14c>
    c548:	e2844014 	add	r4, r4, #20	; 0x14
    c54c:	e2645020 	rsb	r5, r4, #32	; 0x20
    c550:	e1a03511 	mov	r3, r1, lsl r5
    c554:	e1a01431 	mov	r1, r1, lsr r4
    c558:	e1811510 	orr	r1, r1, r0, lsl r5
    c55c:	e2002102 	and	r2, r0, #-2147483648	; 0x80000000
    c560:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
    c564:	e0911fa3 	adds	r1, r1, r3, lsr #31
    c568:	e0a20430 	adc	r0, r2, r0, lsr r4
    c56c:	e19ee083 	orrs	lr, lr, r3, lsl #1
    c570:	01c11fa3 	biceq	r1, r1, r3, lsr #31
    c574:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
    c578:	e12fff1e 	bx	lr
    c57c:	e264400c 	rsb	r4, r4, #12	; 0xc
    c580:	e2645020 	rsb	r5, r4, #32	; 0x20
    c584:	e1a03411 	mov	r3, r1, lsl r4
    c588:	e1a01531 	mov	r1, r1, lsr r5
    c58c:	e1811410 	orr	r1, r1, r0, lsl r4
    c590:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
    c594:	e0911fa3 	adds	r1, r1, r3, lsr #31
    c598:	e2a00000 	adc	r0, r0, #0	; 0x0
    c59c:	e19ee083 	orrs	lr, lr, r3, lsl #1
    c5a0:	01c11fa3 	biceq	r1, r1, r3, lsr #31
    c5a4:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
    c5a8:	e12fff1e 	bx	lr
    c5ac:	e2645020 	rsb	r5, r4, #32	; 0x20
    c5b0:	e18ee511 	orr	lr, lr, r1, lsl r5
    c5b4:	e1a03431 	mov	r3, r1, lsr r4
    c5b8:	e1833510 	orr	r3, r3, r0, lsl r5
    c5bc:	e1a01430 	mov	r1, r0, lsr r4
    c5c0:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
    c5c4:	e1c11430 	bic	r1, r1, r0, lsr r4
    c5c8:	e0811fa3 	add	r1, r1, r3, lsr #31
    c5cc:	e19ee083 	orrs	lr, lr, r3, lsl #1
    c5d0:	01c11fa3 	biceq	r1, r1, r3, lsr #31
    c5d4:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
    c5d8:	e12fff1e 	bx	lr
    c5dc:	e3340000 	teq	r4, #0	; 0x0
    c5e0:	1a000008 	bne	c608 <__aeabi_dmul+0x1d8>
    c5e4:	e2006102 	and	r6, r0, #-2147483648	; 0x80000000
    c5e8:	e1b01081 	movs	r1, r1, lsl #1
    c5ec:	e0a00000 	adc	r0, r0, r0
    c5f0:	e3100601 	tst	r0, #1048576	; 0x100000
    c5f4:	02444001 	subeq	r4, r4, #1	; 0x1
    c5f8:	0afffffa 	beq	c5e8 <__aeabi_dmul+0x1b8>
    c5fc:	e1800006 	orr	r0, r0, r6
    c600:	e3350000 	teq	r5, #0	; 0x0
    c604:	11a0f00e 	movne	pc, lr
    c608:	e2026102 	and	r6, r2, #-2147483648	; 0x80000000
    c60c:	e1b03083 	movs	r3, r3, lsl #1
    c610:	e0a22002 	adc	r2, r2, r2
    c614:	e3120601 	tst	r2, #1048576	; 0x100000
    c618:	02455001 	subeq	r5, r5, #1	; 0x1
    c61c:	0afffffa 	beq	c60c <__aeabi_dmul+0x1dc>
    c620:	e1822006 	orr	r2, r2, r6
    c624:	e1a0f00e 	mov	pc, lr
    c628:	e134000c 	teq	r4, ip
    c62c:	e00c5a22 	and	r5, ip, r2, lsr #20
    c630:	1135000c 	teqne	r5, ip
    c634:	0a000007 	beq	c658 <__aeabi_dmul+0x228>
    c638:	e1916080 	orrs	r6, r1, r0, lsl #1
    c63c:	11936082 	orrnes	r6, r3, r2, lsl #1
    c640:	1affffe5 	bne	c5dc <__aeabi_dmul+0x1ac>
    c644:	e0200002 	eor	r0, r0, r2
    c648:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
    c64c:	e3a01000 	mov	r1, #0	; 0x0
    c650:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
    c654:	e12fff1e 	bx	lr
    c658:	e1916080 	orrs	r6, r1, r0, lsl #1
    c65c:	01a01003 	moveq	r1, r3
    c660:	01a00002 	moveq	r0, r2
    c664:	11936082 	orrnes	r6, r3, r2, lsl #1
    c668:	0a000010 	beq	c6b0 <__aeabi_dmul+0x280>
    c66c:	e134000c 	teq	r4, ip
    c670:	1a000001 	bne	c67c <__aeabi_dmul+0x24c>
    c674:	e1916600 	orrs	r6, r1, r0, lsl #12
    c678:	1a00000c 	bne	c6b0 <__aeabi_dmul+0x280>
    c67c:	e135000c 	teq	r5, ip
    c680:	1a000003 	bne	c694 <__aeabi_dmul+0x264>
    c684:	e1936602 	orrs	r6, r3, r2, lsl #12
    c688:	11a01003 	movne	r1, r3
    c68c:	11a00002 	movne	r0, r2
    c690:	1a000006 	bne	c6b0 <__aeabi_dmul+0x280>
    c694:	e0200002 	eor	r0, r0, r2
    c698:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
    c69c:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
    c6a0:	e380060f 	orr	r0, r0, #15728640	; 0xf00000
    c6a4:	e3a01000 	mov	r1, #0	; 0x0
    c6a8:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
    c6ac:	e12fff1e 	bx	lr
    c6b0:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
    c6b4:	e380073e 	orr	r0, r0, #16252928	; 0xf80000
    c6b8:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
    c6bc:	e12fff1e 	bx	lr

0000c6c0 <__aeabi_ddiv>:
    c6c0:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
    c6c4:	e3a0c0ff 	mov	ip, #255	; 0xff
    c6c8:	e38ccc07 	orr	ip, ip, #1792	; 0x700
    c6cc:	e01c4a20 	ands	r4, ip, r0, lsr #20
    c6d0:	101c5a22 	andnes	r5, ip, r2, lsr #20
    c6d4:	1134000c 	teqne	r4, ip
    c6d8:	1135000c 	teqne	r5, ip
    c6dc:	0b00005e 	bleq	c85c <__aeabi_ddiv+0x19c>
    c6e0:	e0444005 	sub	r4, r4, r5
    c6e4:	e020e002 	eor	lr, r0, r2
    c6e8:	e1935602 	orrs	r5, r3, r2, lsl #12
    c6ec:	e1a00600 	mov	r0, r0, lsl #12
    c6f0:	0a00004c 	beq	c828 <__aeabi_ddiv+0x168>
    c6f4:	e1a02602 	mov	r2, r2, lsl #12
    c6f8:	e3a05201 	mov	r5, #268435456	; 0x10000000
    c6fc:	e1852222 	orr	r2, r5, r2, lsr #4
    c700:	e1822c23 	orr	r2, r2, r3, lsr #24
    c704:	e1a03403 	mov	r3, r3, lsl #8
    c708:	e1855220 	orr	r5, r5, r0, lsr #4
    c70c:	e1855c21 	orr	r5, r5, r1, lsr #24
    c710:	e1a06401 	mov	r6, r1, lsl #8
    c714:	e20e0102 	and	r0, lr, #-2147483648	; 0x80000000
    c718:	e1550002 	cmp	r5, r2
    c71c:	01560003 	cmpeq	r6, r3
    c720:	e2a440fd 	adc	r4, r4, #253	; 0xfd
    c724:	e2844c03 	add	r4, r4, #768	; 0x300
    c728:	2a000001 	bcs	c734 <__aeabi_ddiv+0x74>
    c72c:	e1b020a2 	movs	r2, r2, lsr #1
    c730:	e1a03063 	mov	r3, r3, rrx
    c734:	e0566003 	subs	r6, r6, r3
    c738:	e0c55002 	sbc	r5, r5, r2
    c73c:	e1b020a2 	movs	r2, r2, lsr #1
    c740:	e1a03063 	mov	r3, r3, rrx
    c744:	e3a01601 	mov	r1, #1048576	; 0x100000
    c748:	e3a0c702 	mov	ip, #524288	; 0x80000
    c74c:	e056e003 	subs	lr, r6, r3
    c750:	e0d5e002 	sbcs	lr, r5, r2
    c754:	20466003 	subcs	r6, r6, r3
    c758:	21a0500e 	movcs	r5, lr
    c75c:	2181100c 	orrcs	r1, r1, ip
    c760:	e1b020a2 	movs	r2, r2, lsr #1
    c764:	e1a03063 	mov	r3, r3, rrx
    c768:	e056e003 	subs	lr, r6, r3
    c76c:	e0d5e002 	sbcs	lr, r5, r2
    c770:	20466003 	subcs	r6, r6, r3
    c774:	21a0500e 	movcs	r5, lr
    c778:	218110ac 	orrcs	r1, r1, ip, lsr #1
    c77c:	e1b020a2 	movs	r2, r2, lsr #1
    c780:	e1a03063 	mov	r3, r3, rrx
    c784:	e056e003 	subs	lr, r6, r3
    c788:	e0d5e002 	sbcs	lr, r5, r2
    c78c:	20466003 	subcs	r6, r6, r3
    c790:	21a0500e 	movcs	r5, lr
    c794:	2181112c 	orrcs	r1, r1, ip, lsr #2
    c798:	e1b020a2 	movs	r2, r2, lsr #1
    c79c:	e1a03063 	mov	r3, r3, rrx
    c7a0:	e056e003 	subs	lr, r6, r3
    c7a4:	e0d5e002 	sbcs	lr, r5, r2
    c7a8:	20466003 	subcs	r6, r6, r3
    c7ac:	21a0500e 	movcs	r5, lr
    c7b0:	218111ac 	orrcs	r1, r1, ip, lsr #3
    c7b4:	e195e006 	orrs	lr, r5, r6
    c7b8:	0a00000d 	beq	c7f4 <__aeabi_ddiv+0x134>
    c7bc:	e1a05205 	mov	r5, r5, lsl #4
    c7c0:	e1855e26 	orr	r5, r5, r6, lsr #28
    c7c4:	e1a06206 	mov	r6, r6, lsl #4
    c7c8:	e1a02182 	mov	r2, r2, lsl #3
    c7cc:	e1822ea3 	orr	r2, r2, r3, lsr #29
    c7d0:	e1a03183 	mov	r3, r3, lsl #3
    c7d4:	e1b0c22c 	movs	ip, ip, lsr #4
    c7d8:	1affffdb 	bne	c74c <__aeabi_ddiv+0x8c>
    c7dc:	e3100601 	tst	r0, #1048576	; 0x100000
    c7e0:	1a000006 	bne	c800 <__aeabi_ddiv+0x140>
    c7e4:	e1800001 	orr	r0, r0, r1
    c7e8:	e3a01000 	mov	r1, #0	; 0x0
    c7ec:	e3a0c102 	mov	ip, #-2147483648	; 0x80000000
    c7f0:	eaffffd5 	b	c74c <__aeabi_ddiv+0x8c>
    c7f4:	e3100601 	tst	r0, #1048576	; 0x100000
    c7f8:	01800001 	orreq	r0, r0, r1
    c7fc:	03a01000 	moveq	r1, #0	; 0x0
    c800:	e254c0fd 	subs	ip, r4, #253	; 0xfd
    c804:	835c0c07 	cmphi	ip, #1792	; 0x700
    c808:	8affff43 	bhi	c51c <__aeabi_dmul+0xec>
    c80c:	e055c002 	subs	ip, r5, r2
    c810:	0056c003 	subeqs	ip, r6, r3
    c814:	01b0c0a1 	moveqs	ip, r1, lsr #1
    c818:	e2b11000 	adcs	r1, r1, #0	; 0x0
    c81c:	e0a00a04 	adc	r0, r0, r4, lsl #20
    c820:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
    c824:	e12fff1e 	bx	lr
    c828:	e20ee102 	and	lr, lr, #-2147483648	; 0x80000000
    c82c:	e18e0620 	orr	r0, lr, r0, lsr #12
    c830:	e09440ac 	adds	r4, r4, ip, lsr #1
    c834:	c074500c 	rsbgts	r5, r4, ip
    c838:	c1800a04 	orrgt	r0, r0, r4, lsl #20
    c83c:	c8bd4070 	ldmgtia	sp!, {r4, r5, r6, lr}
    c840:	c12fff1e 	bxgt	lr
    c844:	e3800601 	orr	r0, r0, #1048576	; 0x100000
    c848:	e3a0e000 	mov	lr, #0	; 0x0
    c84c:	e2544001 	subs	r4, r4, #1	; 0x1
    c850:	eaffff31 	b	c51c <__aeabi_dmul+0xec>
    c854:	e185e006 	orr	lr, r5, r6
    c858:	eaffff2f 	b	c51c <__aeabi_dmul+0xec>
    c85c:	e00c5a22 	and	r5, ip, r2, lsr #20
    c860:	e134000c 	teq	r4, ip
    c864:	0135000c 	teqeq	r5, ip
    c868:	0affff90 	beq	c6b0 <__aeabi_dmul+0x280>
    c86c:	e134000c 	teq	r4, ip
    c870:	1a000006 	bne	c890 <__aeabi_ddiv+0x1d0>
    c874:	e1914600 	orrs	r4, r1, r0, lsl #12
    c878:	1affff8c 	bne	c6b0 <__aeabi_dmul+0x280>
    c87c:	e135000c 	teq	r5, ip
    c880:	1affff83 	bne	c694 <__aeabi_dmul+0x264>
    c884:	e1a01003 	mov	r1, r3
    c888:	e1a00002 	mov	r0, r2
    c88c:	eaffff87 	b	c6b0 <__aeabi_dmul+0x280>
    c890:	e135000c 	teq	r5, ip
    c894:	1a000004 	bne	c8ac <__aeabi_ddiv+0x1ec>
    c898:	e1935602 	orrs	r5, r3, r2, lsl #12
    c89c:	0affff68 	beq	c644 <__aeabi_dmul+0x214>
    c8a0:	e1a01003 	mov	r1, r3
    c8a4:	e1a00002 	mov	r0, r2
    c8a8:	eaffff80 	b	c6b0 <__aeabi_dmul+0x280>
    c8ac:	e1916080 	orrs	r6, r1, r0, lsl #1
    c8b0:	11936082 	orrnes	r6, r3, r2, lsl #1
    c8b4:	1affff48 	bne	c5dc <__aeabi_dmul+0x1ac>
    c8b8:	e1914080 	orrs	r4, r1, r0, lsl #1
    c8bc:	1affff74 	bne	c694 <__aeabi_dmul+0x264>
    c8c0:	e1935082 	orrs	r5, r3, r2, lsl #1
    c8c4:	1affff5e 	bne	c644 <__aeabi_dmul+0x214>
    c8c8:	eaffff78 	b	c6b0 <__aeabi_dmul+0x280>

0000c8cc <__gedf2>:
    c8cc:	e3e0c000 	mvn	ip, #0	; 0x0
    c8d0:	ea000002 	b	c8e0 <__cmpdf2+0x4>

0000c8d4 <__ledf2>:
    c8d4:	e3a0c001 	mov	ip, #1	; 0x1
    c8d8:	ea000000 	b	c8e0 <__cmpdf2+0x4>

0000c8dc <__cmpdf2>:
    c8dc:	e3a0c001 	mov	ip, #1	; 0x1
    c8e0:	e50dc004 	str	ip, [sp, #-4]
    c8e4:	e1a0c080 	mov	ip, r0, lsl #1
    c8e8:	e1f0cacc 	mvns	ip, ip, asr #21
    c8ec:	e1a0c082 	mov	ip, r2, lsl #1
    c8f0:	11f0cacc 	mvnnes	ip, ip, asr #21
    c8f4:	0a00000d 	beq	c930 <__cmpdf2+0x54>
    c8f8:	e191c080 	orrs	ip, r1, r0, lsl #1
    c8fc:	0193c082 	orreqs	ip, r3, r2, lsl #1
    c900:	11300002 	teqne	r0, r2
    c904:	01310003 	teqeq	r1, r3
    c908:	03a00000 	moveq	r0, #0	; 0x0
    c90c:	012fff1e 	bxeq	lr
    c910:	e3700000 	cmn	r0, #0	; 0x0
    c914:	e1300002 	teq	r0, r2
    c918:	51500002 	cmppl	r0, r2
    c91c:	01510003 	cmpeq	r1, r3
    c920:	21a00fc2 	movcs	r0, r2, asr #31
    c924:	31e00fc2 	mvncc	r0, r2, asr #31
    c928:	e3800001 	orr	r0, r0, #1	; 0x1
    c92c:	e12fff1e 	bx	lr
    c930:	e1a0c080 	mov	ip, r0, lsl #1
    c934:	e1f0cacc 	mvns	ip, ip, asr #21
    c938:	1a000001 	bne	c944 <__cmpdf2+0x68>
    c93c:	e191c600 	orrs	ip, r1, r0, lsl #12
    c940:	1a000004 	bne	c958 <__cmpdf2+0x7c>
    c944:	e1a0c082 	mov	ip, r2, lsl #1
    c948:	e1f0cacc 	mvns	ip, ip, asr #21
    c94c:	1affffe9 	bne	c8f8 <__cmpdf2+0x1c>
    c950:	e193c602 	orrs	ip, r3, r2, lsl #12
    c954:	0affffe7 	beq	c8f8 <__cmpdf2+0x1c>
    c958:	e51d0004 	ldr	r0, [sp, #-4]
    c95c:	e12fff1e 	bx	lr

0000c960 <__aeabi_cdrcmple>:
    c960:	e1a0c000 	mov	ip, r0
    c964:	e1a00002 	mov	r0, r2
    c968:	e1a0200c 	mov	r2, ip
    c96c:	e1a0c001 	mov	ip, r1
    c970:	e1a01003 	mov	r1, r3
    c974:	e1a0300c 	mov	r3, ip
    c978:	eaffffff 	b	c97c <__aeabi_cdcmpeq>

0000c97c <__aeabi_cdcmpeq>:
    c97c:	e92d4001 	stmdb	sp!, {r0, lr}
    c980:	ebffffd5 	bl	c8dc <__cmpdf2>
    c984:	e3500000 	cmp	r0, #0	; 0x0
    c988:	43700000 	cmnmi	r0, #0	; 0x0
    c98c:	e8bd4001 	ldmia	sp!, {r0, lr}
    c990:	e12fff1e 	bx	lr

0000c994 <__aeabi_dcmpeq>:
    c994:	e52de008 	str	lr, [sp, #-8]!
    c998:	ebfffff7 	bl	c97c <__aeabi_cdcmpeq>
    c99c:	03a00001 	moveq	r0, #1	; 0x1
    c9a0:	13a00000 	movne	r0, #0	; 0x0
    c9a4:	e49de008 	ldr	lr, [sp], #8
    c9a8:	e12fff1e 	bx	lr

0000c9ac <__aeabi_dcmplt>:
    c9ac:	e52de008 	str	lr, [sp, #-8]!
    c9b0:	ebfffff1 	bl	c97c <__aeabi_cdcmpeq>
    c9b4:	33a00001 	movcc	r0, #1	; 0x1
    c9b8:	23a00000 	movcs	r0, #0	; 0x0
    c9bc:	e49de008 	ldr	lr, [sp], #8
    c9c0:	e12fff1e 	bx	lr

0000c9c4 <__aeabi_dcmple>:
    c9c4:	e52de008 	str	lr, [sp, #-8]!
    c9c8:	ebffffeb 	bl	c97c <__aeabi_cdcmpeq>
    c9cc:	93a00001 	movls	r0, #1	; 0x1
    c9d0:	83a00000 	movhi	r0, #0	; 0x0
    c9d4:	e49de008 	ldr	lr, [sp], #8
    c9d8:	e12fff1e 	bx	lr

0000c9dc <__aeabi_dcmpge>:
    c9dc:	e52de008 	str	lr, [sp, #-8]!
    c9e0:	ebffffde 	bl	c960 <__aeabi_cdrcmple>
    c9e4:	93a00001 	movls	r0, #1	; 0x1
    c9e8:	83a00000 	movhi	r0, #0	; 0x0
    c9ec:	e49de008 	ldr	lr, [sp], #8
    c9f0:	e12fff1e 	bx	lr

0000c9f4 <__aeabi_dcmpgt>:
    c9f4:	e52de008 	str	lr, [sp, #-8]!
    c9f8:	ebffffd8 	bl	c960 <__aeabi_cdrcmple>
    c9fc:	33a00001 	movcc	r0, #1	; 0x1
    ca00:	23a00000 	movcs	r0, #0	; 0x0
    ca04:	e49de008 	ldr	lr, [sp], #8
    ca08:	e12fff1e 	bx	lr

0000ca0c <__aeabi_d2iz>:
    ca0c:	e1a02080 	mov	r2, r0, lsl #1
    ca10:	e2922602 	adds	r2, r2, #2097152	; 0x200000
    ca14:	2a00000c 	bcs	ca4c <__aeabi_d2iz+0x40>
    ca18:	5a000009 	bpl	ca44 <__aeabi_d2iz+0x38>
    ca1c:	e3e03e3e 	mvn	r3, #992	; 0x3e0
    ca20:	e0532ac2 	subs	r2, r3, r2, asr #21
    ca24:	9a00000a 	bls	ca54 <__aeabi_d2iz+0x48>
    ca28:	e1a03580 	mov	r3, r0, lsl #11
    ca2c:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
    ca30:	e1833aa1 	orr	r3, r3, r1, lsr #21
    ca34:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    ca38:	e1a00233 	mov	r0, r3, lsr r2
    ca3c:	12600000 	rsbne	r0, r0, #0	; 0x0
    ca40:	e12fff1e 	bx	lr
    ca44:	e3a00000 	mov	r0, #0	; 0x0
    ca48:	e12fff1e 	bx	lr
    ca4c:	e1911600 	orrs	r1, r1, r0, lsl #12
    ca50:	1a000002 	bne	ca60 <__aeabi_d2iz+0x54>
    ca54:	e2100102 	ands	r0, r0, #-2147483648	; 0x80000000
    ca58:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
    ca5c:	e12fff1e 	bx	lr
    ca60:	e3a00000 	mov	r0, #0	; 0x0
    ca64:	e12fff1e 	bx	lr

0000ca68 <__cmpdi2>:
    ca68:	b530      	push	{r4, r5, lr}
    ca6a:	1c14      	adds	r4, r2, #0
    ca6c:	4299      	cmp	r1, r3
    ca6e:	db0a      	blt.n	ca86 <__cmpdi2+0x1e>
    ca70:	4299      	cmp	r1, r3
    ca72:	dc04      	bgt.n	ca7e <__cmpdi2+0x16>
    ca74:	1c22      	adds	r2, r4, #0
    ca76:	4290      	cmp	r0, r2
    ca78:	d305      	bcc.n	ca86 <__cmpdi2+0x1e>
    ca7a:	4290      	cmp	r0, r2
    ca7c:	d905      	bls.n	ca8a <__cmpdi2+0x22>
    ca7e:	2002      	movs	r0, #2
    ca80:	bc30      	pop	{r4, r5}
    ca82:	bc02      	pop	{r1}
    ca84:	4708      	bx	r1
    ca86:	2000      	movs	r0, #0
    ca88:	e7fa      	b.n	ca80 <__cmpdi2+0x18>
    ca8a:	2001      	movs	r0, #1
    ca8c:	e7f8      	b.n	ca80 <__cmpdi2+0x18>
    ca8e:	46c0      	nop			(mov r8, r8)

0000ca90 <__fixdfdi>:
    ca90:	b530      	push	{r4, r5, lr}
    ca92:	4b0e      	ldr	r3, [pc, #56]	(cacc <.text+0xcacc>)
    ca94:	4a0c      	ldr	r2, [pc, #48]	(cac8 <.text+0xcac8>)
    ca96:	1c04      	adds	r4, r0, #0
    ca98:	1c0d      	adds	r5, r1, #0
    ca9a:	f000 fadd 	bl	d058 <____ltdf2_from_thumb>
    ca9e:	2800      	cmp	r0, #0
    caa0:	db06      	blt.n	cab0 <__fixdfdi+0x20>
    caa2:	1c20      	adds	r0, r4, #0
    caa4:	1c29      	adds	r1, r5, #0
    caa6:	f000 fa45 	bl	cf34 <__fixunsdfdi>
    caaa:	bc30      	pop	{r4, r5}
    caac:	bc04      	pop	{r2}
    caae:	4710      	bx	r2
    cab0:	2380      	movs	r3, #128
    cab2:	061b      	lsls	r3, r3, #24
    cab4:	18e0      	adds	r0, r4, r3
    cab6:	1c29      	adds	r1, r5, #0
    cab8:	f000 fa3c 	bl	cf34 <__fixunsdfdi>
    cabc:	1c03      	adds	r3, r0, #0
    cabe:	1c0c      	adds	r4, r1, #0
    cac0:	2100      	movs	r1, #0
    cac2:	4258      	negs	r0, r3
    cac4:	41a1      	sbcs	r1, r4
    cac6:	e7f0      	b.n	caaa <__fixdfdi+0x1a>
	...

0000cad0 <__divdi3>:
    cad0:	b5f0      	push	{r4, r5, r6, r7, lr}
    cad2:	465f      	mov	r7, fp
    cad4:	4656      	mov	r6, sl
    cad6:	464d      	mov	r5, r9
    cad8:	4644      	mov	r4, r8
    cada:	b4f0      	push	{r4, r5, r6, r7}
    cadc:	2400      	movs	r4, #0
    cade:	2500      	movs	r5, #0
    cae0:	b088      	sub	sp, #32
    cae2:	9400      	str	r4, [sp, #0]
    cae4:	9501      	str	r5, [sp, #4]
    cae6:	1c14      	adds	r4, r2, #0
    cae8:	1c1d      	adds	r5, r3, #0
    caea:	2900      	cmp	r1, #0
    caec:	da00      	bge.n	caf0 <__divdi3+0x20>
    caee:	e0ff      	b.n	ccf0 <__divdi3+0x220>
    caf0:	2600      	movs	r6, #0
    caf2:	9602      	str	r6, [sp, #8]
    caf4:	2b00      	cmp	r3, #0
    caf6:	da00      	bge.n	cafa <__divdi3+0x2a>
    caf8:	e0f3      	b.n	cce2 <__divdi3+0x212>
    cafa:	1c26      	adds	r6, r4, #0
    cafc:	4681      	mov	r9, r0
    cafe:	1c0f      	adds	r7, r1, #0
    cb00:	2d00      	cmp	r5, #0
    cb02:	d15c      	bne.n	cbbe <__divdi3+0xee>
    cb04:	42bc      	cmp	r4, r7
    cb06:	d900      	bls.n	cb0a <__divdi3+0x3a>
    cb08:	e074      	b.n	cbf4 <__divdi3+0x124>
    cb0a:	2c00      	cmp	r4, #0
    cb0c:	d100      	bne.n	cb10 <__divdi3+0x40>
    cb0e:	e10d      	b.n	cd2c <__divdi3+0x25c>
    cb10:	4bbf      	ldr	r3, [pc, #764]	(ce10 <.text+0xce10>)
    cb12:	429e      	cmp	r6, r3
    cb14:	d900      	bls.n	cb18 <__divdi3+0x48>
    cb16:	e0f4      	b.n	cd02 <__divdi3+0x232>
    cb18:	2eff      	cmp	r6, #255
    cb1a:	d900      	bls.n	cb1e <__divdi3+0x4e>
    cb1c:	e1df      	b.n	cede <.text+0xcede>
    cb1e:	2100      	movs	r1, #0
    cb20:	2300      	movs	r3, #0
    cb22:	4abc      	ldr	r2, [pc, #752]	(ce14 <.text+0xce14>)
    cb24:	1c34      	adds	r4, r6, #0
    cb26:	40dc      	lsrs	r4, r3
    cb28:	5d13      	ldrb	r3, [r2, r4]
    cb2a:	2220      	movs	r2, #32
    cb2c:	18cb      	adds	r3, r1, r3
    cb2e:	1ad3      	subs	r3, r2, r3
    cb30:	469a      	mov	sl, r3
    cb32:	2b00      	cmp	r3, #0
    cb34:	d000      	beq.n	cb38 <__divdi3+0x68>
    cb36:	e171      	b.n	ce1c <.text+0xce1c>
    cb38:	4bb5      	ldr	r3, [pc, #724]	(ce10 <.text+0xce10>)
    cb3a:	2001      	movs	r0, #1
    cb3c:	4033      	ands	r3, r6
    cb3e:	9004      	str	r0, [sp, #16]
    cb40:	1bbd      	subs	r5, r7, r6
    cb42:	469b      	mov	fp, r3
    cb44:	0c37      	lsrs	r7, r6, #16
    cb46:	1c39      	adds	r1, r7, #0
    cb48:	1c28      	adds	r0, r5, #0
    cb4a:	f7ff f8ef 	bl	bd2c <__aeabi_uidiv>
    cb4e:	4659      	mov	r1, fp
    cb50:	4680      	mov	r8, r0
    cb52:	4644      	mov	r4, r8
    cb54:	434c      	muls	r4, r1
    cb56:	1c28      	adds	r0, r5, #0
    cb58:	1c39      	adds	r1, r7, #0
    cb5a:	f7ff f97f 	bl	be5c <__umodsi3>
    cb5e:	464a      	mov	r2, r9
    cb60:	0400      	lsls	r0, r0, #16
    cb62:	0c13      	lsrs	r3, r2, #16
    cb64:	4318      	orrs	r0, r3
    cb66:	4284      	cmp	r4, r0
    cb68:	d908      	bls.n	cb7c <__divdi3+0xac>
    cb6a:	2301      	movs	r3, #1
    cb6c:	425b      	negs	r3, r3
    cb6e:	1980      	adds	r0, r0, r6
    cb70:	4498      	add	r8, r3
    cb72:	4286      	cmp	r6, r0
    cb74:	d802      	bhi.n	cb7c <__divdi3+0xac>
    cb76:	4284      	cmp	r4, r0
    cb78:	d900      	bls.n	cb7c <__divdi3+0xac>
    cb7a:	e1d5      	b.n	cf28 <.text+0xcf28>
    cb7c:	1b04      	subs	r4, r0, r4
    cb7e:	1c39      	adds	r1, r7, #0
    cb80:	1c20      	adds	r0, r4, #0
    cb82:	f7ff f8d3 	bl	bd2c <__aeabi_uidiv>
    cb86:	1c05      	adds	r5, r0, #0
    cb88:	4658      	mov	r0, fp
    cb8a:	4368      	muls	r0, r5
    cb8c:	1c39      	adds	r1, r7, #0
    cb8e:	4682      	mov	sl, r0
    cb90:	1c20      	adds	r0, r4, #0
    cb92:	f7ff f963 	bl	be5c <__umodsi3>
    cb96:	4b9e      	ldr	r3, [pc, #632]	(ce10 <.text+0xce10>)
    cb98:	4649      	mov	r1, r9
    cb9a:	0400      	lsls	r0, r0, #16
    cb9c:	400b      	ands	r3, r1
    cb9e:	4318      	orrs	r0, r3
    cba0:	4582      	cmp	sl, r0
    cba2:	d906      	bls.n	cbb2 <__divdi3+0xe2>
    cba4:	1830      	adds	r0, r6, r0
    cba6:	3d01      	subs	r5, #1
    cba8:	4286      	cmp	r6, r0
    cbaa:	d802      	bhi.n	cbb2 <__divdi3+0xe2>
    cbac:	4582      	cmp	sl, r0
    cbae:	d900      	bls.n	cbb2 <__divdi3+0xe2>
    cbb0:	e1b3      	b.n	cf1a <.text+0xcf1a>
    cbb2:	4642      	mov	r2, r8
    cbb4:	0413      	lsls	r3, r2, #16
    cbb6:	1c28      	adds	r0, r5, #0
    cbb8:	4318      	orrs	r0, r3
    cbba:	9b04      	ldr	r3, [sp, #16]
    cbbc:	e005      	b.n	cbca <__divdi3+0xfa>
    cbbe:	1c29      	adds	r1, r5, #0
    cbc0:	42bd      	cmp	r5, r7
    cbc2:	d800      	bhi.n	cbc6 <__divdi3+0xf6>
    cbc4:	e073      	b.n	ccae <__divdi3+0x1de>
    cbc6:	2000      	movs	r0, #0
    cbc8:	2300      	movs	r3, #0
    cbca:	9a02      	ldr	r2, [sp, #8]
    cbcc:	9000      	str	r0, [sp, #0]
    cbce:	9301      	str	r3, [sp, #4]
    cbd0:	9800      	ldr	r0, [sp, #0]
    cbd2:	9901      	ldr	r1, [sp, #4]
    cbd4:	2a00      	cmp	r2, #0
    cbd6:	d004      	beq.n	cbe2 <__divdi3+0x112>
    cbd8:	1c03      	adds	r3, r0, #0
    cbda:	1c0c      	adds	r4, r1, #0
    cbdc:	2100      	movs	r1, #0
    cbde:	4258      	negs	r0, r3
    cbe0:	41a1      	sbcs	r1, r4
    cbe2:	b008      	add	sp, #32
    cbe4:	bc3c      	pop	{r2, r3, r4, r5}
    cbe6:	4690      	mov	r8, r2
    cbe8:	4699      	mov	r9, r3
    cbea:	46a2      	mov	sl, r4
    cbec:	46ab      	mov	fp, r5
    cbee:	bcf0      	pop	{r4, r5, r6, r7}
    cbf0:	bc04      	pop	{r2}
    cbf2:	4710      	bx	r2
    cbf4:	4b86      	ldr	r3, [pc, #536]	(ce10 <.text+0xce10>)
    cbf6:	429c      	cmp	r4, r3
    cbf8:	d900      	bls.n	cbfc <__divdi3+0x12c>
    cbfa:	e090      	b.n	cd1e <__divdi3+0x24e>
    cbfc:	2cff      	cmp	r4, #255
    cbfe:	d900      	bls.n	cc02 <__divdi3+0x132>
    cc00:	e167      	b.n	ced2 <.text+0xced2>
    cc02:	2100      	movs	r1, #0
    cc04:	2300      	movs	r3, #0
    cc06:	4a83      	ldr	r2, [pc, #524]	(ce14 <.text+0xce14>)
    cc08:	1c35      	adds	r5, r6, #0
    cc0a:	40dd      	lsrs	r5, r3
    cc0c:	5d53      	ldrb	r3, [r2, r5]
    cc0e:	18cb      	adds	r3, r1, r3
    cc10:	2120      	movs	r1, #32
    cc12:	1acd      	subs	r5, r1, r3
    cc14:	2d00      	cmp	r5, #0
    cc16:	d00b      	beq.n	cc30 <__divdi3+0x160>
    cc18:	1c3a      	adds	r2, r7, #0
    cc1a:	1b4b      	subs	r3, r1, r5
    cc1c:	464f      	mov	r7, r9
    cc1e:	40df      	lsrs	r7, r3
    cc20:	4648      	mov	r0, r9
    cc22:	40aa      	lsls	r2, r5
    cc24:	1c3b      	adds	r3, r7, #0
    cc26:	40a8      	lsls	r0, r5
    cc28:	1c17      	adds	r7, r2, #0
    cc2a:	40ae      	lsls	r6, r5
    cc2c:	431f      	orrs	r7, r3
    cc2e:	4681      	mov	r9, r0
    cc30:	4b77      	ldr	r3, [pc, #476]	(ce10 <.text+0xce10>)
    cc32:	0c31      	lsrs	r1, r6, #16
    cc34:	4033      	ands	r3, r6
    cc36:	1c38      	adds	r0, r7, #0
    cc38:	469b      	mov	fp, r3
    cc3a:	4688      	mov	r8, r1
    cc3c:	f7ff f876 	bl	bd2c <__aeabi_uidiv>
    cc40:	465a      	mov	r2, fp
    cc42:	4682      	mov	sl, r0
    cc44:	4641      	mov	r1, r8
    cc46:	1c38      	adds	r0, r7, #0
    cc48:	4654      	mov	r4, sl
    cc4a:	4354      	muls	r4, r2
    cc4c:	f7ff f906 	bl	be5c <__umodsi3>
    cc50:	464d      	mov	r5, r9
    cc52:	0400      	lsls	r0, r0, #16
    cc54:	0c2b      	lsrs	r3, r5, #16
    cc56:	4318      	orrs	r0, r3
    cc58:	4284      	cmp	r4, r0
    cc5a:	d908      	bls.n	cc6e <__divdi3+0x19e>
    cc5c:	2701      	movs	r7, #1
    cc5e:	427f      	negs	r7, r7
    cc60:	1980      	adds	r0, r0, r6
    cc62:	44ba      	add	sl, r7
    cc64:	4286      	cmp	r6, r0
    cc66:	d802      	bhi.n	cc6e <__divdi3+0x19e>
    cc68:	4284      	cmp	r4, r0
    cc6a:	d900      	bls.n	cc6e <__divdi3+0x19e>
    cc6c:	e159      	b.n	cf22 <.text+0xcf22>
    cc6e:	1b04      	subs	r4, r0, r4
    cc70:	4641      	mov	r1, r8
    cc72:	1c20      	adds	r0, r4, #0
    cc74:	f7ff f85a 	bl	bd2c <__aeabi_uidiv>
    cc78:	4641      	mov	r1, r8
    cc7a:	1c05      	adds	r5, r0, #0
    cc7c:	465f      	mov	r7, fp
    cc7e:	4347      	muls	r7, r0
    cc80:	1c20      	adds	r0, r4, #0
    cc82:	f7ff f8eb 	bl	be5c <__umodsi3>
    cc86:	4b62      	ldr	r3, [pc, #392]	(ce10 <.text+0xce10>)
    cc88:	4649      	mov	r1, r9
    cc8a:	0400      	lsls	r0, r0, #16
    cc8c:	400b      	ands	r3, r1
    cc8e:	4318      	orrs	r0, r3
    cc90:	4287      	cmp	r7, r0
    cc92:	d906      	bls.n	cca2 <__divdi3+0x1d2>
    cc94:	1830      	adds	r0, r6, r0
    cc96:	3d01      	subs	r5, #1
    cc98:	4286      	cmp	r6, r0
    cc9a:	d802      	bhi.n	cca2 <__divdi3+0x1d2>
    cc9c:	4287      	cmp	r7, r0
    cc9e:	d900      	bls.n	cca2 <__divdi3+0x1d2>
    cca0:	e13d      	b.n	cf1e <.text+0xcf1e>
    cca2:	4652      	mov	r2, sl
    cca4:	0413      	lsls	r3, r2, #16
    cca6:	1c28      	adds	r0, r5, #0
    cca8:	4318      	orrs	r0, r3
    ccaa:	2300      	movs	r3, #0
    ccac:	e78d      	b.n	cbca <__divdi3+0xfa>
    ccae:	4b58      	ldr	r3, [pc, #352]	(ce10 <.text+0xce10>)
    ccb0:	429d      	cmp	r5, r3
    ccb2:	d82d      	bhi.n	cd10 <__divdi3+0x240>
    ccb4:	2dff      	cmp	r5, #255
    ccb6:	d900      	bls.n	ccba <__divdi3+0x1ea>
    ccb8:	e114      	b.n	cee4 <.text+0xcee4>
    ccba:	2000      	movs	r0, #0
    ccbc:	2300      	movs	r3, #0
    ccbe:	4a55      	ldr	r2, [pc, #340]	(ce14 <.text+0xce14>)
    ccc0:	1c0c      	adds	r4, r1, #0
    ccc2:	40dc      	lsrs	r4, r3
    ccc4:	5d13      	ldrb	r3, [r2, r4]
    ccc6:	2220      	movs	r2, #32
    ccc8:	18c3      	adds	r3, r0, r3
    ccca:	1ad3      	subs	r3, r2, r3
    cccc:	469a      	mov	sl, r3
    ccce:	2b00      	cmp	r3, #0
    ccd0:	d135      	bne.n	cd3e <__divdi3+0x26e>
    ccd2:	42b9      	cmp	r1, r7
    ccd4:	d302      	bcc.n	ccdc <__divdi3+0x20c>
    ccd6:	454e      	cmp	r6, r9
    ccd8:	d900      	bls.n	ccdc <__divdi3+0x20c>
    ccda:	e774      	b.n	cbc6 <__divdi3+0xf6>
    ccdc:	2001      	movs	r0, #1
    ccde:	2300      	movs	r3, #0
    cce0:	e773      	b.n	cbca <__divdi3+0xfa>
    cce2:	9c02      	ldr	r4, [sp, #8]
    cce4:	43e4      	mvns	r4, r4
    cce6:	9402      	str	r4, [sp, #8]
    cce8:	2500      	movs	r5, #0
    ccea:	4254      	negs	r4, r2
    ccec:	419d      	sbcs	r5, r3
    ccee:	e704      	b.n	cafa <__divdi3+0x2a>
    ccf0:	1c0f      	adds	r7, r1, #0
    ccf2:	1c06      	adds	r6, r0, #0
    ccf4:	2100      	movs	r1, #0
    ccf6:	4270      	negs	r0, r6
    ccf8:	41b9      	sbcs	r1, r7
    ccfa:	2701      	movs	r7, #1
    ccfc:	427f      	negs	r7, r7
    ccfe:	9702      	str	r7, [sp, #8]
    cd00:	e6f8      	b.n	caf4 <__divdi3+0x24>
    cd02:	4b45      	ldr	r3, [pc, #276]	(ce18 <.text+0xce18>)
    cd04:	429e      	cmp	r6, r3
    cd06:	d900      	bls.n	cd0a <__divdi3+0x23a>
    cd08:	e0ef      	b.n	ceea <.text+0xceea>
    cd0a:	2110      	movs	r1, #16
    cd0c:	2310      	movs	r3, #16
    cd0e:	e708      	b.n	cb22 <__divdi3+0x52>
    cd10:	4b41      	ldr	r3, [pc, #260]	(ce18 <.text+0xce18>)
    cd12:	429d      	cmp	r5, r3
    cd14:	d900      	bls.n	cd18 <__divdi3+0x248>
    cd16:	e0df      	b.n	ced8 <.text+0xced8>
    cd18:	2010      	movs	r0, #16
    cd1a:	2310      	movs	r3, #16
    cd1c:	e7cf      	b.n	ccbe <__divdi3+0x1ee>
    cd1e:	4b3e      	ldr	r3, [pc, #248]	(ce18 <.text+0xce18>)
    cd20:	429c      	cmp	r4, r3
    cd22:	d900      	bls.n	cd26 <__divdi3+0x256>
    cd24:	e0e4      	b.n	cef0 <.text+0xcef0>
    cd26:	2110      	movs	r1, #16
    cd28:	2310      	movs	r3, #16
    cd2a:	e76c      	b.n	cc06 <__divdi3+0x136>
    cd2c:	2001      	movs	r0, #1
    cd2e:	2100      	movs	r1, #0
    cd30:	f7fe fffc 	bl	bd2c <__aeabi_uidiv>
    cd34:	4b36      	ldr	r3, [pc, #216]	(ce10 <.text+0xce10>)
    cd36:	1c06      	adds	r6, r0, #0
    cd38:	429e      	cmp	r6, r3
    cd3a:	d8e2      	bhi.n	cd02 <__divdi3+0x232>
    cd3c:	e6ec      	b.n	cb18 <__divdi3+0x48>
    cd3e:	1ad2      	subs	r2, r2, r3
    cd40:	1c1d      	adds	r5, r3, #0
    cd42:	4099      	lsls	r1, r3
    cd44:	1c33      	adds	r3, r6, #0
    cd46:	40d3      	lsrs	r3, r2
    cd48:	40ae      	lsls	r6, r5
    cd4a:	4319      	orrs	r1, r3
    cd4c:	9607      	str	r6, [sp, #28]
    cd4e:	1c3b      	adds	r3, r7, #0
    cd50:	464e      	mov	r6, r9
    cd52:	40d6      	lsrs	r6, r2
    cd54:	40ab      	lsls	r3, r5
    cd56:	4333      	orrs	r3, r6
    cd58:	1c3c      	adds	r4, r7, #0
    cd5a:	40d4      	lsrs	r4, r2
    cd5c:	9305      	str	r3, [sp, #20]
    cd5e:	0c0f      	lsrs	r7, r1, #16
    cd60:	4b2b      	ldr	r3, [pc, #172]	(ce10 <.text+0xce10>)
    cd62:	1c0e      	adds	r6, r1, #0
    cd64:	4688      	mov	r8, r1
    cd66:	1c20      	adds	r0, r4, #0
    cd68:	1c39      	adds	r1, r7, #0
    cd6a:	401e      	ands	r6, r3
    cd6c:	f7fe ffde 	bl	bd2c <__aeabi_uidiv>
    cd70:	1c39      	adds	r1, r7, #0
    cd72:	4683      	mov	fp, r0
    cd74:	1c20      	adds	r0, r4, #0
    cd76:	f7ff f871 	bl	be5c <__umodsi3>
    cd7a:	465d      	mov	r5, fp
    cd7c:	4375      	muls	r5, r6
    cd7e:	9905      	ldr	r1, [sp, #20]
    cd80:	0400      	lsls	r0, r0, #16
    cd82:	0c0b      	lsrs	r3, r1, #16
    cd84:	4318      	orrs	r0, r3
    cd86:	4285      	cmp	r5, r0
    cd88:	d906      	bls.n	cd98 <__divdi3+0x2c8>
    cd8a:	2201      	movs	r2, #1
    cd8c:	4252      	negs	r2, r2
    cd8e:	4440      	add	r0, r8
    cd90:	4493      	add	fp, r2
    cd92:	4580      	cmp	r8, r0
    cd94:	d800      	bhi.n	cd98 <__divdi3+0x2c8>
    cd96:	e0ba      	b.n	cf0e <.text+0xcf0e>
    cd98:	1b44      	subs	r4, r0, r5
    cd9a:	1c20      	adds	r0, r4, #0
    cd9c:	1c39      	adds	r1, r7, #0
    cd9e:	f7fe ffc5 	bl	bd2c <__aeabi_uidiv>
    cda2:	1c39      	adds	r1, r7, #0
    cda4:	1c05      	adds	r5, r0, #0
    cda6:	4346      	muls	r6, r0
    cda8:	1c20      	adds	r0, r4, #0
    cdaa:	f7ff f857 	bl	be5c <__umodsi3>
    cdae:	4b18      	ldr	r3, [pc, #96]	(ce10 <.text+0xce10>)
    cdb0:	9c05      	ldr	r4, [sp, #20]
    cdb2:	0400      	lsls	r0, r0, #16
    cdb4:	4023      	ands	r3, r4
    cdb6:	4318      	orrs	r0, r3
    cdb8:	4286      	cmp	r6, r0
    cdba:	d904      	bls.n	cdc6 <__divdi3+0x2f6>
    cdbc:	4440      	add	r0, r8
    cdbe:	3d01      	subs	r5, #1
    cdc0:	4580      	cmp	r8, r0
    cdc2:	d800      	bhi.n	cdc6 <__divdi3+0x2f6>
    cdc4:	e09d      	b.n	cf02 <.text+0xcf02>
    cdc6:	1b80      	subs	r0, r0, r6
    cdc8:	465e      	mov	r6, fp
    cdca:	0433      	lsls	r3, r6, #16
    cdcc:	431d      	orrs	r5, r3
    cdce:	4e10      	ldr	r6, [pc, #64]	(ce10 <.text+0xce10>)
    cdd0:	9f07      	ldr	r7, [sp, #28]
    cdd2:	9b07      	ldr	r3, [sp, #28]
    cdd4:	1c2a      	adds	r2, r5, #0
    cdd6:	4033      	ands	r3, r6
    cdd8:	0c39      	lsrs	r1, r7, #16
    cdda:	4032      	ands	r2, r6
    cddc:	0c2c      	lsrs	r4, r5, #16
    cdde:	1c1f      	adds	r7, r3, #0
    cde0:	4357      	muls	r7, r2
    cde2:	4684      	mov	ip, r0
    cde4:	434a      	muls	r2, r1
    cde6:	1c18      	adds	r0, r3, #0
    cde8:	4360      	muls	r0, r4
    cdea:	0c3b      	lsrs	r3, r7, #16
    cdec:	1812      	adds	r2, r2, r0
    cdee:	189a      	adds	r2, r3, r2
    cdf0:	4361      	muls	r1, r4
    cdf2:	4290      	cmp	r0, r2
    cdf4:	d902      	bls.n	cdfc <__divdi3+0x32c>
    cdf6:	2080      	movs	r0, #128
    cdf8:	0240      	lsls	r0, r0, #9
    cdfa:	1809      	adds	r1, r1, r0
    cdfc:	0c13      	lsrs	r3, r2, #16
    cdfe:	18c8      	adds	r0, r1, r3
    ce00:	4584      	cmp	ip, r0
    ce02:	d363      	bcc.n	cecc <.text+0xcecc>
    ce04:	4584      	cmp	ip, r0
    ce06:	d058      	beq.n	ceba <.text+0xceba>
    ce08:	1c28      	adds	r0, r5, #0
    ce0a:	2300      	movs	r3, #0
    ce0c:	e6dd      	b.n	cbca <__divdi3+0xfa>
    ce0e:	0000      	lsls	r0, r0, #0
    ce10:	ffff 0000 	vaddl.u<illegal width 64>	q8, d15, d0
    ce14:	d72c      	bvc.n	ce70 <.text+0xce70>
    ce16:	0000      	lsls	r0, r0, #0
    ce18:	ffff 00ff 	vshr.u64	q8, <illegal reg q15.5>, #1
    ce1c:	1c19      	adds	r1, r3, #0
    ce1e:	409e      	lsls	r6, r3
    ce20:	1c3c      	adds	r4, r7, #0
    ce22:	1ad3      	subs	r3, r2, r3
    ce24:	464d      	mov	r5, r9
    ce26:	40dc      	lsrs	r4, r3
    ce28:	40dd      	lsrs	r5, r3
    ce2a:	1c3a      	adds	r2, r7, #0
    ce2c:	4b40      	ldr	r3, [pc, #256]	(cf30 <.text+0xcf30>)
    ce2e:	408a      	lsls	r2, r1
    ce30:	0c37      	lsrs	r7, r6, #16
    ce32:	432a      	orrs	r2, r5
    ce34:	4033      	ands	r3, r6
    ce36:	1c39      	adds	r1, r7, #0
    ce38:	1c20      	adds	r0, r4, #0
    ce3a:	469b      	mov	fp, r3
    ce3c:	9206      	str	r2, [sp, #24]
    ce3e:	f7fe ff75 	bl	bd2c <__aeabi_uidiv>
    ce42:	1c39      	adds	r1, r7, #0
    ce44:	9003      	str	r0, [sp, #12]
    ce46:	465d      	mov	r5, fp
    ce48:	4345      	muls	r5, r0
    ce4a:	1c20      	adds	r0, r4, #0
    ce4c:	f7ff f806 	bl	be5c <__umodsi3>
    ce50:	9906      	ldr	r1, [sp, #24]
    ce52:	0400      	lsls	r0, r0, #16
    ce54:	0c0b      	lsrs	r3, r1, #16
    ce56:	4318      	orrs	r0, r3
    ce58:	4285      	cmp	r5, r0
    ce5a:	d905      	bls.n	ce68 <.text+0xce68>
    ce5c:	9a03      	ldr	r2, [sp, #12]
    ce5e:	1980      	adds	r0, r0, r6
    ce60:	3a01      	subs	r2, #1
    ce62:	9203      	str	r2, [sp, #12]
    ce64:	4286      	cmp	r6, r0
    ce66:	d946      	bls.n	cef6 <.text+0xcef6>
    ce68:	1b44      	subs	r4, r0, r5
    ce6a:	1c20      	adds	r0, r4, #0
    ce6c:	1c39      	adds	r1, r7, #0
    ce6e:	f7fe ff5d 	bl	bd2c <__aeabi_uidiv>
    ce72:	465b      	mov	r3, fp
    ce74:	4680      	mov	r8, r0
    ce76:	1c39      	adds	r1, r7, #0
    ce78:	1c20      	adds	r0, r4, #0
    ce7a:	4645      	mov	r5, r8
    ce7c:	435d      	muls	r5, r3
    ce7e:	f7fe ffed 	bl	be5c <__umodsi3>
    ce82:	4b2b      	ldr	r3, [pc, #172]	(cf30 <.text+0xcf30>)
    ce84:	9c06      	ldr	r4, [sp, #24]
    ce86:	0400      	lsls	r0, r0, #16
    ce88:	4023      	ands	r3, r4
    ce8a:	4318      	orrs	r0, r3
    ce8c:	4285      	cmp	r5, r0
    ce8e:	d909      	bls.n	cea4 <.text+0xcea4>
    ce90:	2101      	movs	r1, #1
    ce92:	4249      	negs	r1, r1
    ce94:	1980      	adds	r0, r0, r6
    ce96:	4488      	add	r8, r1
    ce98:	4286      	cmp	r6, r0
    ce9a:	d803      	bhi.n	cea4 <.text+0xcea4>
    ce9c:	4285      	cmp	r5, r0
    ce9e:	d901      	bls.n	cea4 <.text+0xcea4>
    cea0:	4488      	add	r8, r1
    cea2:	1980      	adds	r0, r0, r6
    cea4:	9c03      	ldr	r4, [sp, #12]
    cea6:	464a      	mov	r2, r9
    cea8:	4653      	mov	r3, sl
    ceaa:	409a      	lsls	r2, r3
    ceac:	1b45      	subs	r5, r0, r5
    ceae:	0423      	lsls	r3, r4, #16
    ceb0:	4640      	mov	r0, r8
    ceb2:	4318      	orrs	r0, r3
    ceb4:	4691      	mov	r9, r2
    ceb6:	9004      	str	r0, [sp, #16]
    ceb8:	e645      	b.n	cb46 <__divdi3+0x76>
    ceba:	4651      	mov	r1, sl
    cebc:	464b      	mov	r3, r9
    cebe:	408b      	lsls	r3, r1
    cec0:	1c39      	adds	r1, r7, #0
    cec2:	0412      	lsls	r2, r2, #16
    cec4:	4031      	ands	r1, r6
    cec6:	1852      	adds	r2, r2, r1
    cec8:	4293      	cmp	r3, r2
    ceca:	d29d      	bcs.n	ce08 <__divdi3+0x338>
    cecc:	1e68      	subs	r0, r5, #1
    cece:	2300      	movs	r3, #0
    ced0:	e67b      	b.n	cbca <__divdi3+0xfa>
    ced2:	2108      	movs	r1, #8
    ced4:	2308      	movs	r3, #8
    ced6:	e696      	b.n	cc06 <__divdi3+0x136>
    ced8:	2018      	movs	r0, #24
    ceda:	2318      	movs	r3, #24
    cedc:	e6ef      	b.n	ccbe <__divdi3+0x1ee>
    cede:	2108      	movs	r1, #8
    cee0:	2308      	movs	r3, #8
    cee2:	e61e      	b.n	cb22 <__divdi3+0x52>
    cee4:	2008      	movs	r0, #8
    cee6:	2308      	movs	r3, #8
    cee8:	e6e9      	b.n	ccbe <__divdi3+0x1ee>
    ceea:	2118      	movs	r1, #24
    ceec:	2318      	movs	r3, #24
    ceee:	e618      	b.n	cb22 <__divdi3+0x52>
    cef0:	2118      	movs	r1, #24
    cef2:	2318      	movs	r3, #24
    cef4:	e687      	b.n	cc06 <__divdi3+0x136>
    cef6:	4285      	cmp	r5, r0
    cef8:	d9b6      	bls.n	ce68 <.text+0xce68>
    cefa:	3a01      	subs	r2, #1
    cefc:	1980      	adds	r0, r0, r6
    cefe:	9203      	str	r2, [sp, #12]
    cf00:	e7b2      	b.n	ce68 <.text+0xce68>
    cf02:	4286      	cmp	r6, r0
    cf04:	d800      	bhi.n	cf08 <.text+0xcf08>
    cf06:	e75e      	b.n	cdc6 <__divdi3+0x2f6>
    cf08:	3d01      	subs	r5, #1
    cf0a:	4440      	add	r0, r8
    cf0c:	e75b      	b.n	cdc6 <__divdi3+0x2f6>
    cf0e:	4285      	cmp	r5, r0
    cf10:	d800      	bhi.n	cf14 <.text+0xcf14>
    cf12:	e741      	b.n	cd98 <__divdi3+0x2c8>
    cf14:	4493      	add	fp, r2
    cf16:	4440      	add	r0, r8
    cf18:	e73e      	b.n	cd98 <__divdi3+0x2c8>
    cf1a:	3d01      	subs	r5, #1
    cf1c:	e649      	b.n	cbb2 <__divdi3+0xe2>
    cf1e:	3d01      	subs	r5, #1
    cf20:	e6bf      	b.n	cca2 <__divdi3+0x1d2>
    cf22:	44ba      	add	sl, r7
    cf24:	1980      	adds	r0, r0, r6
    cf26:	e6a2      	b.n	cc6e <__divdi3+0x19e>
    cf28:	4498      	add	r8, r3
    cf2a:	1980      	adds	r0, r0, r6
    cf2c:	e626      	b.n	cb7c <__divdi3+0xac>
    cf2e:	0000      	lsls	r0, r0, #0
    cf30:	ffff 0000 	vaddl.u<illegal width 64>	q8, d15, d0

0000cf34 <__fixunsdfdi>:
    cf34:	b5f0      	push	{r4, r5, r6, r7, lr}
    cf36:	b082      	sub	sp, #8
    cf38:	4b15      	ldr	r3, [pc, #84]	(cf90 <.text+0xcf90>)
    cf3a:	4a14      	ldr	r2, [pc, #80]	(cf8c <.text+0xcf8c>)
    cf3c:	9000      	str	r0, [sp, #0]
    cf3e:	9101      	str	r1, [sp, #4]
    cf40:	f000 f8a2 	bl	d088 <____muldf3_from_thumb>
    cf44:	f000 f8d0 	bl	d0e8 <____fixunsdfsi_from_thumb>
    cf48:	1c05      	adds	r5, r0, #0
    cf4a:	1c07      	adds	r7, r0, #0
    cf4c:	2600      	movs	r6, #0
    cf4e:	f000 f88f 	bl	d070 <____floatsidf_from_thumb>
    cf52:	2d00      	cmp	r5, #0
    cf54:	db15      	blt.n	cf82 <__fixunsdfdi+0x4e>
    cf56:	4a0f      	ldr	r2, [pc, #60]	(cf94 <.text+0xcf94>)
    cf58:	4b0f      	ldr	r3, [pc, #60]	(cf98 <.text+0xcf98>)
    cf5a:	f000 f895 	bl	d088 <____muldf3_from_thumb>
    cf5e:	1c02      	adds	r2, r0, #0
    cf60:	1c0b      	adds	r3, r1, #0
    cf62:	9800      	ldr	r0, [sp, #0]
    cf64:	9901      	ldr	r1, [sp, #4]
    cf66:	f000 f887 	bl	d078 <____adddf3_from_thumb>
    cf6a:	f000 f8bd 	bl	d0e8 <____fixunsdfsi_from_thumb>
    cf6e:	2400      	movs	r4, #0
    cf70:	1c03      	adds	r3, r0, #0
    cf72:	1c39      	adds	r1, r7, #0
    cf74:	1c30      	adds	r0, r6, #0
    cf76:	4318      	orrs	r0, r3
    cf78:	4321      	orrs	r1, r4
    cf7a:	b002      	add	sp, #8
    cf7c:	bcf0      	pop	{r4, r5, r6, r7}
    cf7e:	bc04      	pop	{r2}
    cf80:	4710      	bx	r2
    cf82:	4a06      	ldr	r2, [pc, #24]	(cf9c <.text+0xcf9c>)
    cf84:	4b06      	ldr	r3, [pc, #24]	(cfa0 <.text+0xcfa0>)
    cf86:	f000 f877 	bl	d078 <____adddf3_from_thumb>
    cf8a:	e7e4      	b.n	cf56 <__fixunsdfdi+0x22>
    cf8c:	0000      	lsls	r0, r0, #0
    cf8e:	3df0      	subs	r5, #240
    cf90:	0000      	lsls	r0, r0, #0
    cf92:	0000      	lsls	r0, r0, #0
    cf94:	0000      	lsls	r0, r0, #0
    cf96:	c1f0      	stmia	r1!, {r4, r5, r6, r7}
    cf98:	0000      	lsls	r0, r0, #0
    cf9a:	0000      	lsls	r0, r0, #0
    cf9c:	0000      	lsls	r0, r0, #0
    cf9e:	41f0      	rors	r0, r6
    cfa0:	0000      	lsls	r0, r0, #0
	...

0000cfa4 <__aeabi_d2uiz>:
    cfa4:	e1b02080 	movs	r2, r0, lsl #1
    cfa8:	2a00000a 	bcs	cfd8 <__aeabi_d2uiz+0x34>
    cfac:	e2922602 	adds	r2, r2, #2097152	; 0x200000
    cfb0:	2a00000a 	bcs	cfe0 <__aeabi_d2uiz+0x3c>
    cfb4:	5a000007 	bpl	cfd8 <__aeabi_d2uiz+0x34>
    cfb8:	e3e03e3e 	mvn	r3, #992	; 0x3e0
    cfbc:	e0532ac2 	subs	r2, r3, r2, asr #21
    cfc0:	4a000008 	bmi	cfe8 <__aeabi_d2uiz+0x44>
    cfc4:	e1a03580 	mov	r3, r0, lsl #11
    cfc8:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
    cfcc:	e1833aa1 	orr	r3, r3, r1, lsr #21
    cfd0:	e1a00233 	mov	r0, r3, lsr r2
    cfd4:	e12fff1e 	bx	lr
    cfd8:	e3a00000 	mov	r0, #0	; 0x0
    cfdc:	e12fff1e 	bx	lr
    cfe0:	e1911600 	orrs	r1, r1, r0, lsl #12
    cfe4:	1a000001 	bne	cff0 <__aeabi_d2uiz+0x4c>
    cfe8:	e3e00000 	mvn	r0, #0	; 0x0
    cfec:	e12fff1e 	bx	lr
    cff0:	e3a00000 	mov	r0, #0	; 0x0
    cff4:	e12fff1e 	bx	lr

0000cff8 <__printf_from_arm>:
    cff8:	e59fc000 	ldr	ip, [pc, #0]	; d000 <__printf_from_arm+0x8>
    cffc:	e12fff1c 	bx	ip
    d000:	000067dd 	ldreqd	r6, [r0], -sp

0000d004 <____divdi3_from_arm>:
    d004:	e59fc000 	ldr	ip, [pc, #0]	; d00c <____divdi3_from_arm+0x8>
    d008:	e12fff1c 	bx	ip
    d00c:	0000cad1 	ldreqd	ip, [r0], -r1

0000d010 <__cos_from_arm>:
    d010:	e59fc000 	ldr	ip, [pc, #0]	; d018 <__cos_from_arm+0x8>
    d014:	e12fff1c 	bx	ip
    d018:	0000aa21 	andeq	sl, r0, r1, lsr #20

0000d01c <__sin_from_arm>:
    d01c:	e59fc000 	ldr	ip, [pc, #0]	; d024 <__sin_from_arm+0x8>
    d020:	e12fff1c 	bx	ip
    d024:	0000aac9 	andeq	sl, r0, r9, asr #21

0000d028 <____cmpdi2_from_arm>:
    d028:	e59fc000 	ldr	ip, [pc, #0]	; d030 <____cmpdi2_from_arm+0x8>
    d02c:	e12fff1c 	bx	ip
    d030:	0000ca69 	andeq	ip, r0, r9, ror #20

0000d034 <____fixdfdi_from_arm>:
    d034:	e59fc000 	ldr	ip, [pc, #0]	; d03c <____fixdfdi_from_arm+0x8>
    d038:	e12fff1c 	bx	ip
    d03c:	0000ca91 	muleq	r0, r1, sl

0000d040 <__puts_from_arm>:
    d040:	e59fc000 	ldr	ip, [pc, #0]	; d048 <__puts_from_arm+0x8>
    d044:	e12fff1c 	bx	ip
    d048:	00006865 	andeq	r6, r0, r5, ror #16

0000d04c <____udivsi3_from_arm>:
    d04c:	e59fc000 	ldr	ip, [pc, #0]	; d054 <____udivsi3_from_arm+0x8>
    d050:	e12fff1c 	bx	ip
    d054:	0000bd2d 	andeq	fp, r0, sp, lsr #26

0000d058 <____ltdf2_from_thumb>:
    d058:	4778      	bx	pc
    d05a:	46c0      	nop			(mov r8, r8)

0000d05c <____ltdf2_change_to_arm>:
    d05c:	eafffe1c 	b	c8d4 <__ledf2>

0000d060 <____nedf2_from_thumb>:
    d060:	4778      	bx	pc
    d062:	46c0      	nop			(mov r8, r8)

0000d064 <____nedf2_change_to_arm>:
    d064:	eafffe1c 	b	c8dc <__cmpdf2>

0000d068 <____eqdf2_from_thumb>:
    d068:	4778      	bx	pc
    d06a:	46c0      	nop			(mov r8, r8)

0000d06c <____eqdf2_change_to_arm>:
    d06c:	eafffe1a 	b	c8dc <__cmpdf2>

0000d070 <____floatsidf_from_thumb>:
    d070:	4778      	bx	pc
    d072:	46c0      	nop			(mov r8, r8)

0000d074 <____floatsidf_change_to_arm>:
    d074:	eafffcb2 	b	c344 <__aeabi_i2d>

0000d078 <____adddf3_from_thumb>:
    d078:	4778      	bx	pc
    d07a:	46c0      	nop			(mov r8, r8)

0000d07c <____adddf3_change_to_arm>:
    d07c:	eafffbe2 	b	c00c <__adddf3>

0000d080 <____subdf3_from_thumb>:
    d080:	4778      	bx	pc
    d082:	46c0      	nop			(mov r8, r8)

0000d084 <____subdf3_change_to_arm>:
    d084:	eafffbdf 	b	c008 <__aeabi_dsub>

0000d088 <____muldf3_from_thumb>:
    d088:	4778      	bx	pc
    d08a:	46c0      	nop			(mov r8, r8)

0000d08c <____muldf3_change_to_arm>:
    d08c:	eafffce7 	b	c430 <__aeabi_dmul>

0000d090 <____fixdfsi_from_thumb>:
    d090:	4778      	bx	pc
    d092:	46c0      	nop			(mov r8, r8)

0000d094 <____fixdfsi_change_to_arm>:
    d094:	eafffe5c 	b	ca0c <__aeabi_d2iz>

0000d098 <____divdf3_from_thumb>:
    d098:	4778      	bx	pc
    d09a:	46c0      	nop			(mov r8, r8)

0000d09c <____divdf3_change_to_arm>:
    d09c:	eafffd87 	b	c6c0 <__aeabi_ddiv>

0000d0a0 <____gtdf2_from_thumb>:
    d0a0:	4778      	bx	pc
    d0a2:	46c0      	nop			(mov r8, r8)

0000d0a4 <____gtdf2_change_to_arm>:
    d0a4:	eafffe08 	b	c8cc <__gedf2>

0000d0a8 <____gedf2_from_thumb>:
    d0a8:	4778      	bx	pc
    d0aa:	46c0      	nop			(mov r8, r8)

0000d0ac <____gedf2_change_to_arm>:
    d0ac:	eafffe06 	b	c8cc <__gedf2>

0000d0b0 <___sbrk_r_from_thumb>:
    d0b0:	4778      	bx	pc
    d0b2:	46c0      	nop			(mov r8, r8)

0000d0b4 <___sbrk_r_change_to_arm>:
    d0b4:	eaffe0b6 	b	5394 <_sbrk_r>

0000d0b8 <___fstat_r_from_thumb>:
    d0b8:	4778      	bx	pc
    d0ba:	46c0      	nop			(mov r8, r8)

0000d0bc <___fstat_r_change_to_arm>:
    d0bc:	eaffe09b 	b	5330 <_fstat_r>

0000d0c0 <__isatty_from_thumb>:
    d0c0:	4778      	bx	pc
    d0c2:	46c0      	nop			(mov r8, r8)

0000d0c4 <__isatty_change_to_arm>:
    d0c4:	eaffe0a8 	b	536c <isatty>

0000d0c8 <___close_r_from_thumb>:
    d0c8:	4778      	bx	pc
    d0ca:	46c0      	nop			(mov r8, r8)

0000d0cc <___close_r_change_to_arm>:
    d0cc:	eaffe07f 	b	52d0 <_close_r>

0000d0d0 <___lseek_r_from_thumb>:
    d0d0:	4778      	bx	pc
    d0d2:	46c0      	nop			(mov r8, r8)

0000d0d4 <___lseek_r_change_to_arm>:
    d0d4:	eaffe088 	b	52fc <_lseek_r>

0000d0d8 <___write_r_from_thumb>:
    d0d8:	4778      	bx	pc
    d0da:	46c0      	nop			(mov r8, r8)

0000d0dc <___write_r_change_to_arm>:
    d0dc:	eaffe054 	b	5234 <_write_r>

0000d0e0 <___read_r_from_thumb>:
    d0e0:	4778      	bx	pc
    d0e2:	46c0      	nop			(mov r8, r8)

0000d0e4 <___read_r_change_to_arm>:
    d0e4:	eaffe01a 	b	5154 <_read_r>

0000d0e8 <____fixunsdfsi_from_thumb>:
    d0e8:	4778      	bx	pc
    d0ea:	46c0      	nop			(mov r8, r8)

0000d0ec <____fixunsdfsi_change_to_arm>:
    d0ec:	eaffffac 	b	cfa4 <__aeabi_d2uiz>
    d0f0:	72500a0a 	subvcs	r0, r0, #40960	; 0xa000
    d0f4:	6172676f 	cmnvs	r2, pc, ror #14
    d0f8:	69206d6d 	stmvsdb	r0!, {r0, r2, r3, r5, r6, r8, sl, fp, sp, lr}
    d0fc:	75722073 	ldrvcb	r2, [r2, #-115]!
    d100:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
    d104:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
    d108:	0000202e 	andeq	r2, r0, lr, lsr #32
    d10c:	636f7250 	cmnvs	pc, #5	; 0x5
    d110:	6f737365 	svcvs	0x00737365
    d114:	6c432072 	mcrrvs	0, 7, r2, r3, cr2
    d118:	206b636f 	rsbcs	r6, fp, pc, ror #6
    d11c:	71657246 	cmnvc	r5, r6, asr #4
    d120:	636e6575 	cmnvs	lr, #490733568	; 0x1d400000
    d124:	25203a79 	strcs	r3, [r0, #-2681]!
    d128:	7a482064 	bvc	12152c0 <__ctors_end__+0x1207944>
    d12c:	0000000a 	andeq	r0, r0, sl
    d130:	69726550 	ldmvsdb	r2!, {r4, r6, r8, sl, sp, lr}^
    d134:	72656870 	rsbvc	r6, r5, #7340032	; 0x700000
    d138:	43206c61 	teqmi	r0, #24832	; 0x6100
    d13c:	6b636f6c 	blvs	18e8ef4 <__ctors_end__+0x18db578>
    d140:	65724620 	ldrvsb	r4, [r2, #-1568]!
    d144:	6e657571 	mcrvs	5, 3, r7, cr5, cr1, {3}
    d148:	203a7963 	eorcss	r7, sl, r3, ror #18
    d14c:	48206425 	stmmida	r0!, {r0, r2, r5, sl, sp, lr}
    d150:	00000a7a 	andeq	r0, r0, sl, ror sl

0000d154 <GPS_CFG_PRT>:
    d154:	00140006 00000001 000808d0 0000e100     ................
    d164:	00010007 00000000 13062de4                       .........-

0000d16e <GPS_CFG_ANT>:
    d16e:	00041306 380f000b 01064f6f                       .......8oO

0000d178 <GPS_CFG_MSG>:
    d178:	00060106 00000101 800f0000 00060106     ................
    d188:	01000201 88110000 00060106 01000301     ................
    d198:	8d120000 00060106 00000401 8f120000     ................
    d1a8:	00060106 01000601 9c150000 00060106     ................
    d1b8:	00001101 d01f0000 00060106 01001201     ................
    d1c8:	d8210000 00060106 00002001 1b2e0000     ..!...... ......
    d1d8:	00060106 00002101 202f0000 00060106     .....!..../ ....
    d1e8:	00002201 25300000 00060106 00003001     ."....0%.....0..
    d1f8:	6b3e0000                                ..>k

0000d1fc <GPS_CFG_NAV2>:
    d1fc:	00281a06 00000005 02100304 0000c350     ..(.........P...
    d20c:	3c0a0a0f 00000100 00fa00fa 012c0064     ...<........d.,.
	...
    d228:	0806305e                                         ^0

0000d22a <GPS_CFG_RATE>:
    d22a:	00060806 000100c8 68dd0000              ...........h

0000d236 <GPS_CFG_SBAS>:
    d236:	00081606 00010703 00000000 0906d92f              ............/.

0000d244 <GPS_CFG_CFG>:
    d244:	000d0906 00000000 0000ffff 00000000     ................
    d254:	b5af2107                                         .!.

0000d257 <gps_startstring.2566>:
    d257:	000062b5 006a7000 00723600 00723600     .b...pj..6r..6r.
    d267:	006a8000 00723600 00723600 00723600     ..j..6r..6r..6r.
    d277:	00723600 00723600 00723600 006a8400     .6r..6r..6r...j.
    d287:	006a9e00 00723600 006a9400 006aa800     ..j..6r...j...j.
    d297:	00723600 006af800 006b0200 006b0200     .6r...j...k...k.
    d2a7:	006b0200 006b0200 006b0200 006b0200     ..k...k...k...k.
    d2b7:	006b0200 006b0200 006b0200 00723600     ..k...k...k..6r.
    d2c7:	00723600 00723600 00723600 00723600     .6r..6r..6r..6r.
    d2d7:	00723600 00723600 00723600 00723600     .6r..6r..6r..6r.
    d2e7:	006b5400 006ba400 006be200 006be200     .Tk...k...k...k.
    d2f7:	006be200 00723600 00723600 00723600     ..k..6r..6r..6r.
    d307:	00723600 006b2800 00723600 00723600     .6r..(k..6r..6r.
    d317:	006f4200 00723600 00723600 00723600     .Bo..6r..6r..6r.
    d327:	006fbc00 00723600 0070f000 00723600     ..o..6r...p..6r.
    d337:	00723600 00712000 00723600 00723600     .6r.. q..6r..6r.
    d347:	00723600 00723600 00723600 00723600     .6r..6r..6r..6r.
    d357:	00723600 00723600 00723600 00723600     .6r..6r..6r..6r.
    d367:	006b5400 006bac00 006be200 006be200     .Tk...k...k...k.
    d377:	006be200 006b2c00 006bac00 00723600     ..k..,k...k..6r.
    d387:	00723600 006b3000 00723600 006f1200     .6r..0k..6r...o.
    d397:	006f4a00 006fa400 006b4a00 00723600     .Jo...o..Jk..6r.
    d3a7:	006fbc00 00723600 0070f800 00723600     ..o..6r...p..6r.
    d3b7:	00723600 006a6a00 30303000                       .6r..jj..

0000d3c0 <zeroes.3063>:
    d3c0:	30303030 30303030 30303030 30303030     0000000000000000

0000d3d0 <blanks.3062>:
    d3d0:	20202020 20202020 20202020 20202020                     
    d3e0:	000084d2 000084d2 000084e6 00008504     ................
    d3f0:	000084c6 000084c0                       ........

0000d3f8 <_global_impure_ptr>:
    d3f8:	40000020                                 ..@

0000d3fc <lconv>:
    d3fc:	0000d930 0000d850 0000d850 0000d850     0...P...P...P...
    d40c:	0000d850 0000d850 0000d850 0000d850     P...P...P...P...
    d41c:	0000d850 0000d850 ffffffff ffffffff     P...P...........

0000d42c <charset>:
    d42c:	0000d970                                p...

0000d430 <__mprec_tens>:
    d430:	3ff00000 00000000 40240000 00000000     ...?......$@....
    d440:	40590000 00000000 408f4000 00000000     ..Y@.....@.@....
    d450:	40c38800 00000000 40f86a00 00000000     ...@.....j.@....
    d460:	412e8480 00000000 416312d0 00000000     ...A......cA....
    d470:	4197d784 00000000 41cdcd65 00000000     ...A....e..A....
    d480:	4202a05f 20000000 42374876 e8000000     _..B... vH7B....
    d490:	426d1a94 a2000000 42a2309c e5400000     ..mB.....0.B..@.
    d4a0:	42d6bcc4 1e900000 430c6bf5 26340000     ...B.....k.C..4&
    d4b0:	4341c379 37e08000 43763457 85d8a000     y.AC...7W4vC....
    d4c0:	43abc16d 674ec800 43e158e4 60913d00     m..C..Ng.X.C.=.`
    d4d0:	4415af1d 78b58c40 444b1ae4 d6e2ef50     ...D@..x..KDP...
    d4e0:	4480f0cf 064dd592 44b52d02 c7e14af6     ...D..M..-.D.J..
    d4f0:	44ea7843 79d99db4                       Cx.D...y

0000d4f8 <__mprec_bigtens>:
    d4f8:	4341c379 37e08000 4693b8b5 b5056e17     y.AC...7...F.n..
    d508:	4d384f03 e93ff9f5 5a827748 f9301d32     .O8M..?.Hw.Z2.0.
    d518:	75154fdd 7f73bf3c                       .O.u<.s.

0000d520 <__mprec_tinytens>:
    d520:	3c9cd2b2 97d889bc 3949f623 d5a8a733     ...<....#.I93...
    d530:	32a50ffd 44f4a73d 255bba08 cf8c979d     ...2=..D..[%....
    d540:	0ac80628 64ac6f43                       (...Co.d

0000d548 <p05.2298>:
    d548:	00000005 00000019 0000007d              ........}...

0000d554 <npio2_hw>:
    d554:	3ff921fb 400921fb 4012d97c 401921fb     .!.?.!.@|..@.!.@
    d564:	401f6a7a 4022d97c 4025fdbb 402921fb     zj.@|."@..%@.!)@
    d574:	402c463a 402f6a7a 4031475c 4032d97c     :F,@zj/@\G1@|.2@
    d584:	40346b9c 4035fdbb 40378fdb 403921fb     .k4@..5@..7@.!9@
    d594:	403ab41b 403c463a 403dd85a 403f6a7a     ..:@:F<@Z.=@zj?@
    d5a4:	40407e4c 4041475c 4042106c 4042d97c     L~@@\GA@l.B@|.B@
    d5b4:	4043a28c 40446b9c 404534ac 4045fdbb     ..C@.kD@.4E@..E@
    d5c4:	4046c6cb 40478fdb 404858eb 404921fb     ..F@..G@.XH@.!I@

0000d5d4 <two_over_pi>:
    d5d4:	00a2f983 006e4e44 001529fc 002757d1     ....DNn..)...W'.
    d5e4:	00f534dd 00c0db62 0095993c 00439041     .4..b...<...A.C.
    d5f4:	00fe5163 00abdebb 00c561b7 00246e3a     cQ.......a..:n$.
    d604:	00424dd2 00e00649 002eea09 00d1921c     .MB.I...........
    d614:	00fe1deb 001cb129 00a73ee8 008235f5     ....)....>...5..
    d624:	002ebb44 0084e99c 007026b4 005f7e41     D........&p.A~_.
    d634:	003991d6 00398353 0039f49c 00845f8b     ..9.S.9...9.._..
    d644:	00bdf928 003b1ff8 0097ffde 0005980f     (.....;.........
    d654:	00ef2f11 008b5a0a 006d1f6d 00367ecf     ./...Z..m.m..~6.
    d664:	0027cb09 00b74f46 003f669e 005fea2d     ..'.FO...f?.-._.
    d674:	007527ba 00c7ebe5 00f17b3d 000739f7     .'u.....={...9..
    d684:	008a5292 00ea6bfb 005fb11f 008d5d08     .R...k...._..]..
    d694:	00560330 0046fc7b 006babf0 00cfbc20     0.V.{.F...k. ...
    d6a4:	009af436 001da9e3 0091615e 00e61b08     6.......^a......
    d6b4:	00659985 005f14a0 0068408d 00ffd880     ..e..._..@h.....
    d6c4:	004d7327 00310606 001556ca 0073a8c9     'sM...1..V....s.
    d6d4:	0060e27b 00c08c6b                       {.`.k...

0000d6dc <init_jk>:
    d6dc:	00000002 00000003 00000004 00000006     ................

0000d6ec <PIo2>:
    d6ec:	3ff921fb 40000000 3e74442d 00000000     .!.?...@-Dt>....
    d6fc:	3cf84698 80000000 3b78cc51 60000000     .F.<....Q.x;...`
    d70c:	39f01b83 80000000 387a2520 40000000     ...9.... %z8...@
    d71c:	36e38222 80000000 3569f31d 00000000     "..6......i5....

0000d72c <__clz_tab>:
    d72c:	02020100 03030303 04040404 04040404     ................
    d73c:	05050505 05050505 05050505 05050505     ................
    d74c:	06060606 06060606 06060606 06060606     ................
    d75c:	06060606 06060606 06060606 06060606     ................
    d76c:	07070707 07070707 07070707 07070707     ................
    d77c:	07070707 07070707 07070707 07070707     ................
    d78c:	07070707 07070707 07070707 07070707     ................
    d79c:	07070707 07070707 07070707 07070707     ................
    d7ac:	08080808 08080808 08080808 08080808     ................
    d7bc:	08080808 08080808 08080808 08080808     ................
    d7cc:	08080808 08080808 08080808 08080808     ................
    d7dc:	08080808 08080808 08080808 08080808     ................
    d7ec:	08080808 08080808 08080808 08080808     ................
    d7fc:	08080808 08080808 08080808 08080808     ................
    d80c:	08080808 08080808 08080808 08080808     ................
    d81c:	08080808 08080808 08080808 08080808     ................
    d82c:	445f4352 20415441 000d0a2d 63746950     RC_DATA -...Pitc
    d83c:	43280968 6e6e6168 31206c65 203d2029     h.(Channel 1) = 
    d84c:	0d0a6425 00000000 6c6c6f52 68432809     %d......Roll.(Ch
    d85c:	656e6e61 2932206c 25203d20 000d0a64     annel 2) = %d...
    d86c:	75726854 28097473 6e616843 206c656e     Thrust.(Channel 
    d87c:	3d202933 0a642520 0000000d 09776159     3) = %d.....Yaw.
    d88c:	61684328 6c656e6e 20293420 6425203d     (Channel 4) = %d
    d89c:	00000d0a 69726553 28096c61 6e616843     ....Serial.(Chan
    d8ac:	206c656e 3d202935 0a642520 0000000d     nel 5) = %d.....
    d8bc:	6f747541 68432809 656e6e61 2936206c     Auto.(Channel 6)
    d8cc:	25203d20 000d0a64 0000000a 33323130      = %d.......0123
    d8dc:	37363534 62613938 66656463 00000000     456789abcdef....
    d8ec:	00666e69 00464e49 004e414e 006e616e     inf.INF.NAN.nan.
    d8fc:	33323130 37363534 42413938 46454443     0123456789ABCDEF
    d90c:	00000000 20677562 76206e69 69727066     ....bug in vfpri
    d91c:	3a66746e 64616220 73616220 00000065     ntf: bad base...
    d92c:	00000030 0000002e 6c756e28 0000296c     0.......(null)..
    d93c:	54552d43 00382d46 4a532d43 00005349     C-UTF-8.C-SJIS..
    d94c:	55452d43 00504a43 494a2d43 00000053     C-EUCJP.C-JIS...
    d95c:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
    d96c:	00000043 2d4f5349 39353838 0000312d     C...ISO-8859-1..
